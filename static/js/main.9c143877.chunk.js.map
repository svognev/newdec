{"version":3,"sources":["components/NewDecDialog/sections/NamesSection.js","components/NewDecDialog/sections/WordExportSection.js","components/common/CustomInput.js","components/common/CustomInputShort.js","constants.js","components/NewDecDialog/sections/PositioningSection.js","components/NewDecDialog/sections/ListSection.js","components/NewDecDialog/sections/ReferencingSection.js","utils.js","components/NewDecDialog/sections/TypographySection.js","components/NewDecDialog/sections/DistancesSection.js","components/NewDecDialog/sections/FramesSection.js","components/NewDecDialog/sections/FillingSection.js","components/NewDecDialog/sections/TocSection.js","components/NewDecDialog/sections/ShortCutsSection.js","components/NewDecDialog/sections/QuickSelectSection.js","components/NewDecDialog/index.js","App.js","serviceWorker.js","index.js"],"names":["NamesSection","props","className","TextField","variant","margin","Checkbox","color","WordExportSection","CustomInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","width","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","listStyleType","name","value","backSpaceActions","key","returnOnEmptySectionActions","decoratorsList","NativeSelect","CustomInputShort","map","action","dec","ListSection","isList","listType","changeIsList","changeListType","bulletField","setBulletField","console","log","Fragment","checked","onChange","InputAdornment","charCodeAt","toString","style","ReferencingSection","Button","getCorrectColor","hex","length","TypographySection","verticalAlign","textTransform","changeVerticalAlign","changeTextTransform","fontColor","changeFontColor","correctColor","colorSampleStyle","InputProps","startAdornment","FormControlLabel","control","label","labelPlacement","RadioGroup","aria-label","row","Radio","DistancesSection","FramesSection","leftBorder","rightBorder","topBorder","bottomBorder","changeLeftBorder","changeRightBorder","changeTopBorder","changeBottomBorder","changeBorderColor","previewBorderColor","previewStyle","borderLeft","borderRight","borderTop","borderBottom","FillingSection","fillingColor","changeFillingColor","TocSection","ShortCutSection","QuickSelectSection","Link","createMuiTheme","primary","blue","secondary","pink","NewDecDialog","state","openedTab","toggleStateProperty","propName","e","setState","target","setStateProperty","newValue","undefined","setColor","filteredInput","replace","trim","match","slice","this","isOpen","onClose","changeOpenedTab","listSectionProps","typographySectionProps","framesSectionProps","fillingSectionProps","ThemeProvider","Dialog","open","aria-labelledby","scroll","maxWidth","DialogTitle","onClick","DialogContent","Tabs","orientation","indicatorColor","Tab","PositioningSection","ShortCutsSection","React","Component","App","handleClick","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c143877.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst NamesSection = (props) => {\r\n    return (\r\n        <form className=\"paragraphDecorators-dialog__form\">\r\n            <ul className=\"paragraphDecorators-dialog__field-list\">\r\n                <div className=\"paragraphDecorators-dialog__col paragraphDecorators-dialog__col_right-aligned\">\r\n                    <li><span>Key</span></li>\r\n                    <li><span>Active</span></li>\r\n                    <li>\r\n                    </li>\r\n                    <li><span>Language 1 (English)</span></li>\r\n                    <li><span>Language 2 (German)</span></li>\r\n                    <li><span>Language 3 (Russian)</span></li>\r\n                    <li><span>Language 4 (French)</span></li>\r\n\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                    <li><Checkbox color=\"primary\" /></li>\r\n                    <li className=\"paragraphDecorators-dialog__subtitle\"><h4>Style name</h4></li>\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col \">\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li className=\"paragraphDecorators-dialog__subtitle\"><h4>Group name</h4></li>\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                </div>\r\n            </ul>\r\n                \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NamesSection;","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst WordExportSection = (props) => {\r\n    return (\r\n        <form className=\"paragraphDecorators-dialog__form\">\r\n            <ul className=\"paragraphDecorators-dialog__field-list\">\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><span>Style name in WORD</span></li>\r\n                    <li><span>Soft return</span></li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                    <li><Checkbox color=\"primary\" /></li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col \">\r\n                </div>\r\n            </ul>\r\n                \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default WordExportSection;","import { withStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst CustomInput = withStyles(theme => ({\r\n    root: {\r\n      'label + &': {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      width: '183px',\r\n      position: 'relative',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '1px solid #ced4da',\r\n      fontSize: 16,\r\n      padding: '10px 26px 10px 12px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      fontFamily: [\r\n        'Roboto',\r\n        '\"Helvetica Neue\"',\r\n        'Arial',\r\n        'sans-serif',\r\n      ].join(','),\r\n      '&:hover': {\r\n        borderRadius: 4,\r\n        borderColor: '#212121',\r\n      },\r\n      '&:focus': {\r\n        borderRadius: 4,\r\n        borderColor: '#2f9aef',\r\n        boxShadow: '0 0 0 0.5px #2f9aef',\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInput;","import { withStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst CustomInput = withStyles(theme => ({\r\n    root: {\r\n      'label + &': {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: 'relative',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '1px solid #ced4da',\r\n      fontSize: 16,\r\n      padding: '10px 26px 10px 12px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      fontFamily: [\r\n        'Roboto',\r\n        '\"Helvetica Neue\"',\r\n        'Arial',\r\n        'sans-serif',\r\n      ].join(','),\r\n      '&:hover': {\r\n        borderRadius: 4,\r\n        borderColor: '#212121',\r\n      },\r\n      '&:focus': {\r\n        borderRadius: 4,\r\n        borderColor: '#2f9aef',\r\n        boxShadow: '0 0 0 0.5px #2f9aef',\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInput;","export const listStyleType = [\r\n    {\r\n      name: 'Decimal',\r\n      value: 'decimal',\r\n    },\r\n    {\r\n      name: 'Decimal leading zero',\r\n      value: 'decimal-leading-zero',\r\n    },\r\n    {\r\n      name: 'Lower alpha',\r\n      value: 'lower-alpha',\r\n    },\r\n    {\r\n      name: 'Lower greek',\r\n      value: 'lower-greek',\r\n    },\r\n    {\r\n      name: 'Lower latin',\r\n      value: 'lower-latin',\r\n    },\r\n    {\r\n      name: 'Lower roman',\r\n      value: 'lower-roman',\r\n    },\r\n    {\r\n      name: 'Upper alpha',\r\n      value: 'upper-alpha',\r\n    },\r\n    {\r\n      name: 'Upper greek',\r\n      value: 'upper-greek',\r\n    },\r\n    {\r\n      name: 'Upper latin',\r\n      value: 'upper-latin',\r\n    },\r\n    {\r\n      name: 'Upper roman',\r\n      value: 'upper-roman',\r\n    },\r\n  ];\r\n\r\nexport const backSpaceActions = [\r\n    { key: 'merge', value: 'Merge' },\r\n    { key: 'apply_other_pd', value: 'Apply other PD' },\r\n    { key: 'remove_pd', value: 'Remove PD' },\r\n    { key: 'nothing', value: 'Nothing' }\r\n];\r\n\r\nexport const returnOnEmptySectionActions = [\r\n    { key: 'apply_other_pd', value: 'Apply other PD' },\r\n    { key: 'create_new_section', value: 'Create new section' },\r\n    { key: 'apply_default_pd', value: 'Apply default PD' },\r\n    { key: 'nothing', value: 'Nothing' }\r\n  ];\r\n\r\nexport const decoratorsList = [\r\n    { name: \"...\", value: null },\r\n    { name: \"Text 0\", value: \"quick_text_0\" },\r\n    { name: \"Text 1\", value: \"quick_text_1\" },\r\n    { name: \"Text 2\", value: \"quick_text_2\" },\r\n    { name: \"Text 3\", value: \"quick_text_3\" },\r\n    { name: \"Text 4\", value: \"quick_text_4\" },\r\n    { name: \"Text 5\", value: \"quick_text_5\" },\r\n]","import React from 'react';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport CustomInput from '../../common/CustomInput';\r\nimport CustomInputShort from '../../common/CustomInputShort';\r\n\r\nimport { backSpaceActions, returnOnEmptySectionActions, decoratorsList } from '../../../constants'\r\n\r\nconst WordExportSection = (props) => {\r\n\r\n    return (\r\n        <form className=\"paragraphDecorators-dialog__form\">\r\n            <ul className=\"paragraphDecorators-dialog__field-list\">\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><span>Identational level</span></li>\r\n                    <li className=\"paragraphDecorators-dialog__fraction-title\"><h4>BACKSPACE</h4></li>\r\n                    <li><span>At the beginning of a section with content</span></li>\r\n                    <li><span>At the beginning of a section WITHOUT content</span></li>\r\n                    <li className=\"paragraphDecorators-dialog__fraction-title\"><h4>RETURN</h4></li>\r\n                    <li><span>Create new section below</span></li>\r\n                    <li><span>Style of next section</span></li>\r\n                    <li><span>In empty section change current style to</span></li>\r\n                    <li className=\"paragraphDecorators-dialog__fraction-title\"><h4>TAB / SHIFT+TAB</h4></li>\r\n                    <li><span>TAB – change current style to</span></li>\r\n                    <li><span>SHIFT+TAB – change current style to</span></li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li>                    \r\n                        <NativeSelect input={ <CustomInputShort /> }>\r\n                            <option value={null}>...</option>\r\n                            <option value=\"0\">0</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                        </NativeSelect>\r\n                    </li>\r\n                    <li className=\"paragraphDecorators-dialog__fraction-title\"></li>\r\n                    <li>\r\n                        <NativeSelect input={ <CustomInput /> }>\r\n                            {backSpaceActions.map(action => (\r\n                                <option value={action.key} key={`backSpace ${action.key}`}>{action.value}</option>\r\n                            ))}\r\n                        </NativeSelect>\r\n                    </li>\r\n                    <li>\r\n                        <NativeSelect input={ <CustomInput /> }>\r\n                            {returnOnEmptySectionActions.map(action => (\r\n                                <option value={action.key} key={`backSpace ${action.key}`}>{action.value}</option>\r\n                            ))}\r\n                        </NativeSelect>\r\n                    </li>\r\n                    <li className=\"paragraphDecorators-dialog__fraction-title\"></li>\r\n                    <li><Checkbox color=\"primary\" /></li>\r\n                    <li>\r\n                        <NativeSelect input={ <CustomInput /> }>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                        </NativeSelect>\r\n                    </li>                    \r\n                    <li>\r\n                        <NativeSelect input={ <CustomInput /> }>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                        </NativeSelect>\r\n                    </li>\r\n                    <li className=\"paragraphDecorators-dialog__fraction-title\"></li>\r\n                    <li>\r\n                        <NativeSelect input={ <CustomInput /> }>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                        </NativeSelect>\r\n                    </li>\r\n                    <li>\r\n                        <NativeSelect input={ <CustomInput /> }>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                        </NativeSelect>\r\n                    </li>\r\n                </div>\r\n            </ul>\r\n                \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default WordExportSection;","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport CustomInput from '../../common/CustomInput';\r\nimport CustomInputShort from '../../common/CustomInputShort';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport { listStyleType } from '../../../constants'\r\n\r\nconst ListSection = ({ isList, listType, changeIsList, changeListType, bulletField, setBulletField }) => {\r\n    console.log(bulletField, 55);\r\n\r\n    return (\r\n        <form className=\"paragraphDecorators-dialog__form\">\r\n            <ul className=\"paragraphDecorators-dialog__field-list\">\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><span>Is it a list?</span></li>\r\n                    { isList && (\r\n                        <React.Fragment>\r\n                            <li><span>List name</span></li>\r\n                            <li><span>Order level</span></li>\r\n                            <li><span>Prefix</span></li>\r\n                            <li><span>Suffix</span></li>\r\n                            <li><span>Suffix distance</span></li>\r\n                            <li><span>Magic Tabs</span></li>\r\n                            <li><span>Type of list</span></li>\r\n                        </React.Fragment>\r\n                    ) }\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><Checkbox color=\"primary\" checked={isList} onChange={changeIsList} /></li>\r\n                    { isList && (\r\n                        <React.Fragment>\r\n                            <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                            <li>\r\n                                <NativeSelect input={ <CustomInputShort /> }>\r\n                                    <option value={null}>...</option>\r\n                                    <option value=\"0\">0</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                </NativeSelect>\r\n                            </li>\r\n                            <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                            <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                            <li>\r\n                                <NativeSelect input={ <CustomInputShort /> }>\r\n                                    <option value=\"0.5\">0.25</option>\r\n                                    <option value=\"0.5\">0.5</option>\r\n                                    <option value=\"0.75\">0.75</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"1.25\">1.25</option>\r\n                                    <option value=\"1.5\">1.5</option>\r\n                                    <option value=\"1.75\">1.75</option>\r\n                                    <option value=\"2\">2</option>\r\n                                </NativeSelect>\r\n                                <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                            </li>\r\n                            <li><Checkbox color=\"primary\" /></li>\r\n                            <li>\r\n                                <NativeSelect value={listType} onChange={changeListType} input={ <CustomInput /> }>\r\n                                    <option value={\"unordered\"}>Unordered</option>\r\n                                    <option value={\"ordered\"}>Ordered</option>\r\n                                </NativeSelect>\r\n                            </li>\r\n                            { listType === \"unordered\" ? (\r\n                                <React.Fragment>\r\n                                    <li className=\"paragraphDecorators-dialog__fraction-title\"><span>Bullet character</span></li>\r\n                                </React.Fragment>\r\n                            ) : (\r\n                                <React.Fragment>\r\n                                    <li className=\"paragraphDecorators-dialog__fraction-title\"><span>Numbering style</span></li>\r\n                                    <li><span>Continue numbering after interruption</span></li>\r\n                                    <li><span>Allow restart numbering</span></li>\r\n                                    <li><span>Include previous levels from</span></li>\r\n                                </React.Fragment>\r\n                            )}\r\n                        </React.Fragment>\r\n                    ) }\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col \">\r\n                <li></li>\r\n                    { isList && (\r\n                        <React.Fragment>\r\n                            <li></li>\r\n                            <li></li>\r\n                            <li></li>\r\n                            <li></li>\r\n                            <li></li>\r\n                            <li></li>\r\n                            <li></li>\r\n                            { listType === \"unordered\" ? (\r\n                                <React.Fragment>\r\n                                    <li className=\"paragraphDecorators-dialog__fraction-title\">\r\n                                        <TextField \r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"paragraphDecorators-dialog__bullet-input\" \r\n                                            onChange={setBulletField}\r\n                                            value={bulletField}\r\n                                         />                                            \r\n                                        <span className=\"paragraphDecorators-dialog__grey-text\">\r\n                                            { bulletField ? `Unicode: ${bulletField.charCodeAt(0).toString(16)}` : \"\"}\r\n                                        </span>\r\n                                    </li>\r\n                                </React.Fragment>\r\n                            ) : (\r\n                                <React.Fragment>\r\n                                    <li className=\"paragraphDecorators-dialog__fraction-title\">\r\n                                        <NativeSelect input={ <CustomInputShort /> }>\r\n                                            {listStyleType.map(style => (\r\n                                              <option value={style.value} key={style.value}>{style.name}</option>\r\n                                            ))}                                    \r\n                                        </NativeSelect>\r\n                                    </li>\r\n                                    <li><Checkbox color=\"primary\" /></li>\r\n                                    <li><Checkbox color=\"primary\" checked={true} /></li>\r\n                                    <li>\r\n                                        <NativeSelect input={ <CustomInputShort /> }>\r\n                                            <option value={null}>...</option>\r\n                                            <option value=\"0\">0</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                        </NativeSelect>\r\n                                        <span className=\"paragraphDecorators-dialog__grey-text\">\r\n                                            Preview: А.1.1\r\n                                        </span>\r\n                                    </li>\r\n                                </React.Fragment>\r\n                            )}\r\n                        </React.Fragment>\r\n                    ) }\r\n                </div>\r\n            </ul>\r\n                \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ListSection;","import React from 'react';\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport CustomInput from '../../common/CustomInput';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst ReferencingSection = (props) => {\r\n    return (\r\n        <form className=\"paragraphDecorators-dialog__form\">\r\n            <ul className=\"paragraphDecorators-dialog__field-list\">\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><span>Reference group</span></li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li>\r\n                        <NativeSelect input={ <CustomInput /> }>\r\n                            <option value={null}>none</option>\r\n                            <option value=\"0\">Reference group 1</option>\r\n                            <option value=\"1\">Reference group 2</option>\r\n                        </NativeSelect>\r\n                        <Button color=\"primary\" className=\"paragraphDecorators-dialog__text-button\">+New</Button>\r\n                    </li>\r\n                    <li></li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col \">\r\n                </div>\r\n            </ul>\r\n                \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ReferencingSection;","export const getCorrectColor = (hex) => {\r\n    const correctColor = typeof hex === \"string\" && (hex.length === 6 || hex.length === 3) ? hex : \"FFF\";\r\n    return correctColor;\r\n}","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport CustomInput from '../../common/CustomInput';\r\nimport CustomInputShort from '../../common/CustomInputShort';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n\r\nimport { getCorrectColor } from '../../../utils';\r\n\r\nconst TypographySection = (props) => {\r\n    const { \r\n        verticalAlign, \r\n        textTransform, \r\n        changeVerticalAlign, \r\n        changeTextTransform,\r\n        fontColor,\r\n        changeFontColor,\r\n    } = props;\r\n\r\n    const correctColor = getCorrectColor(fontColor);\r\n\r\n    const colorSampleStyle = {\r\n        backgroundColor: `#${correctColor}`,\r\n    };\r\n    \r\n    return (\r\n        <form className=\"paragraphDecorators-dialog__form\">\r\n            <ul className=\"paragraphDecorators-dialog__field-list\">\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><span>Font</span></li>\r\n                    <li><span>Alignment</span></li>\r\n                    <li><span>Font size</span></li>\r\n                    <li><span>Font color name</span></li>\r\n                    <li><span>Font color HEX</span></li>\r\n                    <li className=\"paragraphDecorators-dialog__fraction-title\">\r\n                        <span>Stylings</span>\r\n                    </li>\r\n                    <li><span>Sub/Superscript</span></li>\r\n                    <li><span>Text transform</span></li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li>\r\n                        <NativeSelect input={ <CustomInput /> }>\r\n                            <option value={\"Helvetica New\"}>Helvetica New</option>\r\n                            <option value={\"Georgia\"}>Georgia</option>\r\n                            <option value={\"Roboto\"}>Roboto</option>\r\n                            <option value={\"Open Sans\"}>Open Sans</option>\r\n                        </NativeSelect>\r\n                    </li>\r\n                    <li>\r\n                        <NativeSelect input={ <CustomInput /> }>\r\n                            <option value={\"left\"}>Left</option>\r\n                            <option value={\"center\"}>Center</option>\r\n                            <option value={\"right\"}>Right</option>\r\n                        </NativeSelect>\r\n                    </li>\r\n                    <li>\r\n                        <NativeSelect input={ <CustomInputShort /> }>\r\n                            <option value={\"12\"}>12</option>\r\n                            <option value={\"14\"}>14</option>\r\n                            <option value={\"16\"}>16</option>\r\n                        </NativeSelect>\r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </li>\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                    <li>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"paragraphDecorators-dialog__number-input\" \r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">#</InputAdornment>,\r\n                              }}\r\n                            value={fontColor}\r\n                            onChange={changeFontColor}\r\n                         />\r\n                         <div className=\"paragraphDecorators-dialog__color-sample\" style={colorSampleStyle}></div>                                            \r\n                    </li>\r\n                    <li className=\"paragraphDecorators-dialog__fraction-title\">\r\n                        <div className=\"paragraphDecorators-dialog__labeled-checkbox\">\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                label=\"Bold\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"paragraphDecorators-dialog__labeled-checkbox\">\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                label=\"Italic\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"paragraphDecorators-dialog__labeled-checkbox\">\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                label=\"Underlined\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"paragraphDecorators-dialog__labeled-checkbox\">\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                label=\"Stroke\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <RadioGroup \r\n                            aria-label=\"verticalAlign\" \r\n                            name=\"verticalAlign\" \r\n                            value={verticalAlign} \r\n                            onChange={changeVerticalAlign} \r\n                            row\r\n                        >\r\n                            <div className=\"paragraphDecorators-dialog__labeled-checkbox\">\r\n                                <FormControlLabel\r\n                                    value=\"\"\r\n                                    control={<Radio color=\"primary\" />}\r\n                                    label=\"No\"\r\n                                    labelPlacement=\"end\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"paragraphDecorators-dialog__labeled-checkbox\">\r\n                                <FormControlLabel\r\n                                    value=\"subscript\"\r\n                                    control={<Radio color=\"primary\" />}\r\n                                    label=\"Subscript\"\r\n                                    labelPlacement=\"end\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"paragraphDecorators-dialog__labeled-checkbox\">\r\n                                <FormControlLabel\r\n                                    value=\"superscript\"\r\n                                    control={<Radio color=\"primary\" />}\r\n                                    label=\"Superscript\"\r\n                                    labelPlacement=\"end\"\r\n                                />\r\n                            </div>\r\n                        </RadioGroup>\r\n                    </li>\r\n                    <li>\r\n                        <RadioGroup \r\n                            aria-label=\"textTransform\" \r\n                            name=\"textTransform\" \r\n                            value={textTransform} \r\n                            onChange={changeTextTransform} \r\n                            row\r\n                        >\r\n                            <div className=\"paragraphDecorators-dialog__labeled-checkbox\">\r\n                                <FormControlLabel\r\n                                    value=\"\"\r\n                                    control={<Radio color=\"primary\" />}\r\n                                    label=\"No\"\r\n                                    labelPlacement=\"end\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"paragraphDecorators-dialog__labeled-checkbox\">\r\n                                <FormControlLabel\r\n                                    value=\"lowercase\"\r\n                                    control={<Radio color=\"primary\" />}\r\n                                    label=\"Lowercase\"\r\n                                    labelPlacement=\"end\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"paragraphDecorators-dialog__labeled-checkbox\">\r\n                                <FormControlLabel\r\n                                    value=\"uppercase\"\r\n                                    control={<Radio color=\"primary\" />}\r\n                                    label=\"Uppercase\"\r\n                                    labelPlacement=\"end\"\r\n                                />\r\n                            </div>\r\n                        </RadioGroup>\r\n                    </li>\r\n\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col \">\r\n                </div>\r\n            </ul>\r\n                \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TypographySection;","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport CustomInputShort from '../../common/CustomInputShort';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nconst DistancesSection = (props) => {\r\n    return (\r\n        <form className=\"paragraphDecorators-dialog__form\">\r\n            <ul className=\"paragraphDecorators-dialog__field-list\">\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><span>Margin top</span></li>\r\n                    <li><span>Margin bottom</span></li>\r\n                    <li><span>1st row indent</span></li>\r\n                    <li><span>Other rows indent</span></li>\r\n                    <li><span>Line spacing</span></li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                <li>\r\n                    <NativeSelect input={ <CustomInputShort /> }>\r\n                        <option value={\"6\"}>6</option>\r\n                        <option value={\"8\"}>8</option>\r\n                        <option value={\"10\"}>10</option>\r\n                    </NativeSelect>\r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </li>\r\n                <li>\r\n                    <NativeSelect input={ <CustomInputShort /> }>\r\n                        <option value={\"6\"}>6</option>\r\n                        <option value={\"8\"}>8</option>\r\n                        <option value={\"10\"}>10</option>\r\n                    </NativeSelect>\r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </li>\r\n                <li>\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"paragraphDecorators-dialog__number-input\" \r\n                     />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </li>\r\n                <li>\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"paragraphDecorators-dialog__number-input\" \r\n                     />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </li>\r\n                <li>\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"paragraphDecorators-dialog__number-input\" \r\n                     />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col \">\r\n                </div>\r\n            </ul>\r\n                \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default DistancesSection;","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport { getCorrectColor } from '../../../utils';\r\n\r\nconst FramesSection = (props) => {\r\n    const { \r\n        leftBorder, \r\n        rightBorder, \r\n        topBorder, \r\n        bottomBorder, \r\n        changeLeftBorder,\r\n        changeRightBorder,\r\n        changeTopBorder,\r\n        changeBottomBorder,\r\n        borderColor,\r\n        changeBorderColor,\r\n     } = props;\r\n\r\n     const correctColor = getCorrectColor(borderColor);\r\n     const colorSampleStyle = {\r\n         backgroundColor: `#${correctColor}`,\r\n     };\r\n     const previewBorderColor = correctColor !== \"FFF\" ? `#${correctColor}` : \"#dc004e\";\r\n\r\n     const previewStyle = {\r\n         borderLeft: `1px solid ${leftBorder ? previewBorderColor : \"white\"}`,\r\n         borderRight: `1px solid ${rightBorder ? previewBorderColor : \"white\"}`,\r\n         borderTop: `1px solid ${topBorder ? previewBorderColor : \"white\"}`,\r\n         borderBottom: `1px solid ${bottomBorder ? previewBorderColor : \"white\"}`,\r\n     }\r\n\r\n    return (\r\n        <form className=\"paragraphDecorators-dialog__form\">\r\n            <ul className=\"paragraphDecorators-dialog__field-list\">\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <div className=\"paragraphDecorators-dialog__border-directions\">\r\n                        <div className=\"top-row\">\r\n                            <span className=\"paragraphDecorators-dialog__direction-span paragraphDecorators-dialog__top-direction-span\">Top</span>\r\n                        </div>\r\n                        <div className=\"center-row\">\r\n                            <span className=\"paragraphDecorators-dialog__direction-span paragraphDecorators-dialog__left-direction-span\">Left</span>\r\n                            <div className=\"center-square\">\r\n                                <div className=\"center-cell\">\r\n                                </div>\r\n                                <div className=\"center-cell center-cell-top\">\r\n                                    <li>\r\n                                        <Checkbox \r\n                                            className=\"checkbox-top\" \r\n                                            checked={topBorder}  \r\n                                            onChange={changeTopBorder}\r\n                                            color=\"primary\" \r\n                                        />\r\n                                    </li>\r\n                                </div>\r\n                                <div className=\"center-cell\">\r\n                                </div>\r\n                                <div className=\"center-cell center-cell-left\">\r\n                                    <li>\r\n                                        <Checkbox \r\n                                            className=\"checkbox-left\" \r\n                                            checked={leftBorder}  \r\n                                            onChange={changeLeftBorder}\r\n                                            color=\"primary\" \r\n                                        />\r\n                                    </li>\r\n                                </div>\r\n                                <div className=\"center-cell\">\r\n                                    <div className=\"preview\" style={previewStyle}>\r\n                                        <span>Text</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"center-cell center-cell-right\">\r\n                                    <li>\r\n                                        <Checkbox \r\n                                            className=\"checkbox-right\" \r\n                                            checked={rightBorder}  \r\n                                            onChange={changeRightBorder}\r\n                                            color=\"primary\" \r\n                                        />\r\n                                    </li>\r\n                                </div>\r\n                                <div className=\"center-cell\">\r\n                                </div>\r\n                                <div className=\"center-cell center-cell-bottom\">\r\n                                    <li>\r\n                                        <Checkbox \r\n                                            className=\"checkbox-bottom\" \r\n                                            checked={bottomBorder}  \r\n                                            onChange={changeBottomBorder}\r\n                                            color=\"primary\" \r\n                                        />\r\n                                    </li>\r\n                                </div>\r\n                                <div className=\"center-cell\">\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"paragraphDecorators-dialog__direction-span paragraphDecorators-dialog__right-direction-span\">Right</span>\r\n                        </div>\r\n                        <div className=\"bottom-row\">\r\n                            <span className=\"paragraphDecorators-dialog__direction-span paragraphDecorators-dialog__bottom-direction-span\">Bottom</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><span>Frame color name</span></li>\r\n                    <li><span>Frame color HEX</span></li>\r\n                    <li><span>Frame thickness</span></li>\r\n                    <li><span>Connect to previous</span></li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                    <li>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"paragraphDecorators-dialog__number-input\" \r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">#</InputAdornment>,\r\n                              }}\r\n                            value={borderColor}\r\n                            onChange={changeBorderColor}\r\n                         />\r\n                        <div className=\"paragraphDecorators-dialog__color-sample\" style={colorSampleStyle}></div>                                            \r\n                    </li>\r\n                    <li>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"paragraphDecorators-dialog__number-input\"\r\n                         />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </li>\r\n                    <li><Checkbox color=\"primary\" /></li>\r\n                </div>\r\n            </ul>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default FramesSection;","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport { getCorrectColor } from '../../../utils';\r\n\r\nconst FillingSection = ({ fillingColor, changeFillingColor }) => {\r\n\r\n    const correctColor = getCorrectColor(fillingColor);\r\n    const colorSampleStyle = {\r\n        backgroundColor: `#${correctColor}`,\r\n    };\r\n\r\n    return (\r\n        <form className=\"paragraphDecorators-dialog__form\">\r\n            <ul className=\"paragraphDecorators-dialog__field-list\">\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><span>Background color name</span></li>\r\n                    <li><span>Background color HEX</span></li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                    <li>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"paragraphDecorators-dialog__number-input\" \r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">#</InputAdornment>,\r\n                              }}\r\n                            value={fillingColor}\r\n                            onChange={changeFillingColor}\r\n                         />     \r\n                        <div className=\"paragraphDecorators-dialog__color-sample\" style={colorSampleStyle}></div>                                                                                   \r\n                    </li>                \r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col \">\r\n                </div>\r\n            </ul>\r\n                \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default FillingSection;","import React from 'react';\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport CustomInputShort from '../../common/CustomInputShort';\r\n\r\nconst TocSection = (props) => {\r\n    return (\r\n        <form className=\"paragraphDecorators-dialog__form\">\r\n            <ul className=\"paragraphDecorators-dialog__field-list\">\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                <li><span>ToC indentation</span></li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li>                    \r\n                        <NativeSelect input={ <CustomInputShort /> }>\r\n                            <option value={null}>...</option>\r\n                            <option value=\"0\">0</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                        </NativeSelect>\r\n                    </li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col \">\r\n                </div>\r\n            </ul>\r\n                \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TocSection;","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst ShortCutSection = (props) => {\r\n    return (\r\n        <form className=\"paragraphDecorators-dialog__form\">\r\n            <ul className=\"paragraphDecorators-dialog__field-list\">\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><span>Windows</span></li>\r\n                    <li><span>Mac</span></li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                    <li><TextField variant=\"outlined\" margin=\"dense\" /></li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col \">\r\n                </div>\r\n            </ul>\r\n                \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ShortCutSection;","import React from 'react';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst QuickSelectSection = (props) => {\r\n    return (\r\n        <form className=\"paragraphDecorators-dialog__form\">\r\n            <ul className=\"paragraphDecorators-dialog__field-list\">\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li>\r\n                        <span>Quick select group</span>\r\n                        <Link className=\"paragraphDecorators-dialog__link\">\r\n                            Edit\r\n                        </Link>\r\n                    </li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col\">\r\n                    <li>\r\n                        <FormControlLabel\r\n                            control={<Checkbox color=\"primary\" />}\r\n                            label=\"Headings\"\r\n                            labelPlacement=\"end\"\r\n                        />\r\n                    </li>\r\n                    <li>\r\n                        <FormControlLabel\r\n                            control={<Checkbox color=\"primary\" />}\r\n                            label=\"List 123\"\r\n                            labelPlacement=\"end\"\r\n                        />\r\n                    </li>\r\n                    <li>\r\n                        <FormControlLabel\r\n                            control={<Checkbox color=\"primary\" />}\r\n                            label=\"Other Stuff\"\r\n                            labelPlacement=\"end\"\r\n                        />\r\n                    </li>\r\n                </div>\r\n                <div className=\"paragraphDecorators-dialog__col \">\r\n                </div>\r\n            </ul>\r\n                \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default QuickSelectSection;","import React from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport \"./style.css\";\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport pink from '@material-ui/core/colors/pink';\r\n\r\nimport NamesSection from './sections/NamesSection';\r\nimport WordExportSection from './sections/WordExportSection';\r\nimport PositioningSection from './sections/PositioningSection';\r\nimport ListSection from './sections/ListSection';\r\nimport ReferencingSection from './sections/ReferencingSection';\r\nimport TypographySection from './sections/TypographySection';\r\nimport DistancesSection from './sections/DistancesSection';\r\nimport FramesSection from './sections/FramesSection';\r\nimport FillingSection from './sections/FillingSection';\r\nimport TocSection from './sections/TocSection';\r\nimport ShortCutsSection from './sections/ShortCutsSection';\r\nimport QuickSelectSection from './sections/QuickSelectSection';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: pink,\r\n    },\r\n});\r\n\r\nclass NewDecDialog extends React.Component {\r\n    state = { \r\n        openedTab: 0,\r\n        isList: true,\r\n        listType: \"unordered\",\r\n        bulletField: \"\",\r\n        verticalAlign: \"\",\r\n        textTransform: \"\",\r\n        leftBorder: true,\r\n        rightBorder: true,\r\n        topBorder: true,\r\n        bottomBorder: true,\r\n        borderColor: \"\",\r\n        fontColor: \"\",\r\n        fillingColor: \"\",\r\n    };\r\n\r\n    toggleStateProperty = (propName) => (e) => {\r\n        this.setState({ [propName]: e.target.checked });\r\n    }\r\n\r\n    setStateProperty = (propName) => (e, newValue) => {\r\n        this.setState({\r\n            [propName]: newValue === undefined ? e.target.value : newValue,\r\n        });\r\n    }\r\n\r\n    setBulletField = (e) => {\r\n        this.setState({ bulletField: e.target.value.length > 1 ? e.target.value[e.target.value.length - 1] : e.target.value });\r\n    } \r\n\r\n    setColor = (propName) => (e) => {\r\n        let input = e.target.value || \"\";\r\n        \r\n        const filteredInput = input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i) \r\n                              ? input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i)[0].slice(0, 6)\r\n                              : \"\" ;\r\n        \r\n        if (filteredInput === this.state[propName]) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [propName]: filteredInput,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isOpen, onClose } = this.props;\r\n        const { openedTab, \r\n                isList, \r\n                listType, \r\n                bulletField, \r\n                verticalAlign, \r\n                textTransform,\r\n                leftBorder, \r\n                rightBorder,\r\n                topBorder,\r\n                bottomBorder, \r\n                borderColor,\r\n                fontColor,\r\n                fillingColor,\r\n            } = this.state;\r\n\r\n        const { setBulletField } = this;\r\n        const changeOpenedTab = this.setStateProperty(\"openedTab\");\r\n        const changeIsList = this.toggleStateProperty(\"isList\");\r\n        const changeListType = this.setStateProperty(\"listType\");\r\n        const changeVerticalAlign = this.setStateProperty(\"verticalAlign\");\r\n        const changeTextTransform = this.setStateProperty(\"textTransform\");\r\n        const changeLeftBorder = this.toggleStateProperty(\"leftBorder\");\r\n        const changeRightBorder = this.toggleStateProperty(\"rightBorder\");\r\n        const changeTopBorder = this.toggleStateProperty(\"topBorder\");\r\n        const changeBottomBorder = this.toggleStateProperty(\"bottomBorder\");\r\n        const changeBorderColor = this.setColor(\"borderColor\");\r\n        const changeFontColor = this.setColor(\"fontColor\");\r\n        const changeFillingColor = this.setColor(\"fillingColor\");\r\n\r\n        const listSectionProps = { \r\n            isList, \r\n            listType, \r\n            changeIsList, \r\n            changeListType, \r\n            bulletField, \r\n            setBulletField,\r\n        };\r\n\r\n        const typographySectionProps = { \r\n            verticalAlign, \r\n            textTransform, \r\n            changeVerticalAlign, \r\n            changeTextTransform,\r\n            fontColor,\r\n            changeFontColor,\r\n        };\r\n\r\n        const framesSectionProps = { \r\n            leftBorder, \r\n            rightBorder, \r\n            topBorder, \r\n            bottomBorder, \r\n            changeLeftBorder, \r\n            changeRightBorder, \r\n            changeTopBorder, \r\n            changeBottomBorder, \r\n            borderColor,\r\n            changeBorderColor,\r\n        };\r\n\r\n        const fillingSectionProps = { fillingColor, changeFillingColor };\r\n        \r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n            <Dialog\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                scroll=\"body\"\r\n                maxWidth={false}\r\n                className=\"paragraphDecorators-dialog\"\r\n                style={{ verticalAlign: \"200px\" }}                \r\n            >\r\n                <div className=\"paragraphDecorators-dialog__header\">\r\n                    <DialogTitle className=\"paragraphDecorators-dialog__title\">\r\n                        <p>Create new paragraph decorator</p>\r\n                    </DialogTitle>\r\n                    <div className=\"paragraphDecorators-dialog__header-buttons\">\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            onClick={onClose}\r\n                            className=\"paragraphDecorators-dialog_top-button\"\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {}}\r\n                            className=\"paragraphDecorators-dialog_top-button\"\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                    \r\n                <DialogContent className=\"paragraphDecorators-dialog__content\">\r\n                    <div className=\"paragraphDecorators-dialog__left-side\">\r\n                        <Tabs \r\n                            className=\"paragraphDecorators-dialog__tabs\"\r\n                            value={openedTab} \r\n                            onChange={changeOpenedTab} \r\n                            orientation=\"vertical\"\r\n                            color=\"primary\"\r\n                            indicatorColor=\"primary\"\r\n                        >\r\n                            <Tab className=\"paragraphDecorators-dialog__tab\" label=\"Names\" />\r\n                            <Tab className=\"paragraphDecorators-dialog__tab\" label=\"WORD export\" />\r\n                            <Tab className=\"paragraphDecorators-dialog__tab\" label=\"Positioning\" />\r\n                            <Tab className=\"paragraphDecorators-dialog__tab\" label=\"List\" />\r\n                            <Tab className=\"paragraphDecorators-dialog__tab\" label=\"Referencing\" />\r\n                            <Tab className=\"paragraphDecorators-dialog__tab\" label=\"Typography\" />\r\n                            <Tab className=\"paragraphDecorators-dialog__tab\" label=\"Distances\" />\r\n                            <Tab className=\"paragraphDecorators-dialog__tab\" label=\"Frames\" />\r\n                            <Tab className=\"paragraphDecorators-dialog__tab\" label=\"Filling\" />\r\n                            <Tab className=\"paragraphDecorators-dialog__tab\" label=\"ToC\" />\r\n                            <Tab className=\"paragraphDecorators-dialog__tab\" label=\"Short cuts\" />\r\n                            <Tab className=\"paragraphDecorators-dialog__tab\" label=\"Quick select\" />\r\n                        </Tabs>\r\n                    </div>\r\n                    <div className=\"paragraphDecorators-dialog__right-side\">\r\n                        { openedTab === 0 && <NamesSection /> }\r\n                        { openedTab === 1 && <WordExportSection /> }\r\n                        { openedTab === 2 && <PositioningSection /> }\r\n                        { openedTab === 3 && <ListSection {...listSectionProps} />}\r\n                        { openedTab === 4 && <ReferencingSection /> }\r\n                        { openedTab === 5 && <TypographySection {...typographySectionProps} /> }\r\n                        { openedTab === 6 && <DistancesSection /> }\r\n                        { openedTab === 7 && <FramesSection {...framesSectionProps} /> }\r\n                        { openedTab === 8 && <FillingSection {...fillingSectionProps} /> }\r\n                        { openedTab === 9 && <TocSection /> }\r\n                        { openedTab === 10 && <ShortCutsSection /> }\r\n                        { openedTab === 11 && <QuickSelectSection /> }\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n};\r\n\r\nexport default NewDecDialog;","import React from 'react';\nimport './App.css';\n\nimport NewDecDialog from './components/NewDecDialog';\n\nclass App extends React.Component {\n  state = {\n    isOpen: true,\n  }\n\n  handleClick = () => {\n    this.setState(({ isOpen }) => {\n      return {\n        isOpen: !isOpen\n      };\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <button onClick={this.handleClick}>Open</button>\n        <NewDecDialog \n          isOpen={this.state.isOpen}\n          onClose={() => {\n            this.setState({ isOpen: false });\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}