{"version":3,"sources":["components/DecoratorDialog/common/CustomInput.js","components/DecoratorDialog/common/LabelWithAsterisk.js","components/DecoratorDialog/common/CustomInnerDialog.js","components/DecoratorDialog/constants/decoratorsList.js","components/DecoratorDialog/constants/localeConstants.js","components/DecoratorDialog/constants/constants.js","components/DecoratorDialog/constants/initialFormState.js","components/DecoratorDialog/helpers/isFontAvailable.js","components/DecoratorDialog/constants/fontsSet.js","components/DecoratorDialog/helpers/prepareColorCode.js","components/DecoratorDialog/helpers/DecDataConverter/converterUtils.js","components/DecoratorDialog/helpers/DecDataConverter/decToSendDefaultProps.js","components/DecoratorDialog/helpers/DecDataConverter/DecDataConverter.js","components/DecoratorDialog/helpers/DecDataConverter/index.js","components/DecoratorDialog/helpers/getShortCutUtils.js","components/DecoratorDialog/helpers/validationFunctions.js","components/DecoratorDialog/helpers/helpers.js","components/DecoratorDialog/common/NewGroupDialog.js","components/DecoratorDialog/hoc/withNewGroupControl.js","components/DecoratorDialog/actions/index.js","components/DecoratorDialog/sections/NamesSection.js","components/DecoratorDialog/common/CustomInputShort.js","components/DecoratorDialog/common/SectionTitle/index.js","components/DecoratorDialog/common/SectionTitle/SectionTitle.js","components/DecoratorDialog/sections/PositioningSection/BackSpaceActionInput.js","components/DecoratorDialog/sections/PositioningSection/index.js","components/DecoratorDialog/sections/PositioningSection/PositioningSection.js","components/DecoratorDialog/common/Preview/generators.js","components/DecoratorDialog/common/Preview/ListPreview.js","components/DecoratorDialog/common/ColorField/index.js","components/DecoratorDialog/common/ColorField/ColorField.js","components/DecoratorDialog/common/FontSelectFields.js","components/DecoratorDialog/sections/ListSection/ListSection.js","components/DecoratorDialog/sections/ListSection/index.js","components/DecoratorDialog/sections/ReferencingSection.js","components/DecoratorDialog/common/ContentEditable.js","components/DecoratorDialog/common/Preview/Preview.js","components/DecoratorDialog/common/Preview/index.js","components/DecoratorDialog/sections/TypographySection/index.js","components/DecoratorDialog/sections/TypographySection/TypographySection.js","components/DecoratorDialog/common/ConnectToPreviousField.js","components/DecoratorDialog/sections/DistancesSection.js","components/DecoratorDialog/sections/FramesSection/FrameTypeInput.js","components/DecoratorDialog/sections/FramesSection/generateBorderPreviewStyle.js","components/DecoratorDialog/sections/FramesSection/FramesSection.js","components/DecoratorDialog/sections/FramesSection/index.js","components/DecoratorDialog/sections/FillingSection.js","components/DecoratorDialog/sections/TocSection.js","components/DecoratorDialog/sections/ShortCutsSection.js","components/DecoratorDialog/theme.js","components/DecoratorDialog/common/CustomTab.js","components/DecoratorDialog/common/CustomErrorTab.js","components/DecoratorDialog/common/CustomTabs.js","components/DecoratorDialog/common/CustomDialog.js","components/DecoratorDialog/DecoratorDialog.js","components/DecoratorDialog/index.js","App.js","actions.js","reducers/decoratorDialogReducer/isOpenReducer.js","reducers/decoratorDialogReducer/decoratorFormReducer.js","reducers/decoratorDialogReducer/validationErrorReducer.js","reducers/decoratorDialogReducer/isEditModeReducer.js","reducers/decoratorDialogReducer/openedTabReducer.js","reducers/decoratorDialogReducer/index.js","reducers/savedFormReducer.js","reducers/rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["CustomInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","minWidth","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","LabelWithAsterisk","children","className","CustomInnerDialog","minHeight","height","container","display","width","justifyContent","marginLeft","scrollBody","paperFullWidth","maxWidth","maxHeight","flexDirection","paperScrollBody","verticalAlign","scrollPaper","alignItems","Dialog","decoratorsList","name","value","LANGS","langKey","langName","langFullName","regionName","regionFullName","ADDITIONAL_LANGS","slice","MAIN_LANG_KEY","alignmentList","center","left","right","justify","numberingSets","decimal","lineSpacings","orderedListStylesMap","Map","bulletNamesMap","sectionTypesMap","backSpaceActionsMap","sections","number","autoFillingRequiredFields","sideNumberFont","font","fontColor","marginBottom","firstRowIndent","otherRowsIndent","wordSpacing","lineSpacing","borderThickness","initialFormState","decKey","sectionTypes","Array","from","reduce","acc","i","key","group","groupToCreate","active","indentationalLevel","fixedIndentation","backspaceActionWithContent","backspaceActionWithContentStyle","returnActionNextSection","returnActionEmptySection","tabAction","shiftTabAction","isList","listName","orderLevel","suffixDistance","magicTabs","listType","listItem","unicodeNumber","unicodeChar","listItemString","numberingStyle","softReturn","continueNumbering","allowRestartNumbering","includePreviousFrom","patternMode","listPattern","prefix","suffix","sideNumber","customSideNumberFont","sideNumberAlignment","sideNumberFontSize","sideNumberFontColor","sideNumberFillingColor","sideNumberWidth","sideNumberLineHeight","sideNumberRadius","sideNumberBold","sideNumberItalic","sideNumberUnderlined","referenceGroup","referenceGroupToCreate","customFont","alignment","bold","italic","underlined","stroke","textTransform","readOnly","connectToPrevious","customLineSpacing","borderLeft","borderRight","borderTop","borderBottom","borderType","fillingColor","tocIndentation","shortCutWin","shortCutWinView","shortCutMac","shortCutMacView","body","document","createElement","innerHTML","style","cssText","getWidth","appendChild","clientWidth","removeChild","monoWidth","serifWidth","sansWidth","isFontAvailable","fontsSet","filter","prepareColorCode","color","test","trim","rgbMatch","match","length","r","g","b","toString","rgbToHex","replaceDecNameIfDefault","decName","getNumber","val","getNumberString","decToSendDefaultProps","item_type","style_properties","keyboard_shortcut","xref_target_type_group_key","is_possible_xref_target","show_in_editor_toc","editor_toc_indentation","editor_toc_filter_level","list_key","item_order","extra_hanging_indentation","extra_hanging_indentation_at_grid","numerated_list_format","numerated_list_start","numerated_list_pattern","numerated_list_style","is_auto_restart_numbering","allow_restart_numbering","bullet_list_format","movable","content_required","change_pd_on_return_if_empty","pd_for_current_section_on_return_if_empty","on_return_indentation","item_order_allow_tab","DecDataConverter","rawDec","dec","order","res","section_types","Object","entries","map","hidden","initial_indentation","is_fixed_indentation","content_in_second_line","backspace_action","backspace_action_value","create_new_section_on_return_if_empty","pd_for_new_section_on_return_if_empty","on_return_style_key","on_tab_key","on_shift_tab_key","read_only","editor_style","initialState","propName","styles","textDecoration","indentsDifference","borderStyle","getStyleString","getSideNumberStyleString","unchangingProps","console","log","cur","includes","suffixDistanceMatch","prefixAndSuffixMatch","has","bullet","unicodeNumberToChar","hasOwnProperty","getShortCutUtils","convertShortcutToString","stylesProps","stylesString","sideNumberStylesString","keyValueStringsArray","split","stylesArray","keyValueStr","margin","indent","colorCodeMatch","thicknessMatch","lineTypeMatch","sideNumberCustomFont","getStylesObject","mapDecFields","systemName","e","keyCode","preventDefault","stopPropagation","ShortcutUtils","isDeadKey","prevent","deleteKey","shortCut","ctrlKey","shiftKey","altKey","metaKey","shortCutForView","convertShortcutToMeta","indexOf","isCmdPressed","stringValue","keys","CMD_KEYS","forEach","keycode","removeDuplicateShortcuts","decorators","newPdShortcut","removed","decoratorKey","item","isEqual","childItems","child_items","itemKey","removeDuplicateShortcutsInInlineStyle","inlineStyles","styleKey","getErrorState","form","isEditMode","errorState","validationChecks","namesSection","field","check","en_EN","checkDecKey","listSection","checkListName","getValidationChecks","errorFields","getTabNumberToSwitch","tabsErrorState","getCorrectColor","hex","correctColor","selectAllOnClick","defaultValue","target","focus","select","getUnstyledText","styledText","unstyledText","replace","String","fromCharCode","parseInt","unicodeCharToNumber","charCodeAt","scrollToBottom","setTimeout","getElementsByClassName","scrollTo","top","Number","MAX_SAFE_INTEGER","behavior","changeAndScroll","changeFunction","timeOut","focusInput","inputRef","timeout","current","getPreviewFont","fillMissedFields","formState","fieldName","option","customOption","trimOnTextFieldBlur","changeFunc","NewGroupDialog","isXref","props","groupType","emptyGroup","groupKey","getInitialState","savedGroup","state","requiredFieldRef","React","createRef","onInputChange","inputName","setState","onClose","hideGroupDialogValidationError","closeGroupDialog","onGroupSave","groupToSave","saveGroup","showGroupDialogValidationError","this","isOpen","hasGroupDialogValidationError","titleText","buttonText","open","fullWidth","DialogTitle","DialogContent","TextField","onChange","onBlur","error","variant","Fragment","DialogActions","Button","onClick","PureComponent","withNewGroupControl","ViewComponent","isGroupDialogOpen","openGroupDialog","Component","updateDecoratorForm","payload","type","clearDecoratorForm","updateValidationError","openDialog","dispatch","closeDialog","setValue","secondArg","newValue","undefined","toggleValue","checked","setBullet","newBullet","setColor","filteredInput","setNumber","setShortCut","valuePropName","viewPropName","search","convertEventToShortCut","NamesSection","decKeyInputRef","decNameEnInputRef","inputRefs","onGroupChange","groupName","changeGroupToCreate","changeGroup","onNameChange","changeName","onSectionTypesChange","typeName","changeSectionTypes","onValidationError","sectionErrors","prevprops","changeDecKey","changeActive","newGroupName","disabled","FormControlLabel","control","Checkbox","label","labelPlacement","NativeSelect","connect","decoratorDialog","validationError","CustomInputShort","SectionTitle","text","BackSpaceActionInput","PositioningSection","changeIndentationalLevel","changeBackspaceActionWithContent","changeBackspaceActionWithContentStyle","changeBackspaceActionWithoutContent","changeBackspaceActionWithoutContentStyle","changeReturnActionNextSection","changeReturnActionEmptySection","changeTabAction","changeShiftTabAction","changeisFixedIndentation","backSpaceActionStyleSettingsState","generatePreviewStyle","fillingConnectToPrevious","previewFontColor","previewFillingColor","previewAdditionalFillingColor","previewMarginLeft","previewTextIndent","previewLineSpacing","offset","alignType","parseFloat","getOffset","previewMarginTop","previewMarginBottom","previewBorderLeft","previewBorderRight","previewBorderTop","previewBorderBottom","correctFontSize","textAlign","fontWeight","fontStyle","fontVariant","backgroundImage","borderImage","textIndent","lineHeight","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","previewText","isOrderedList","listChars","fill","getListChars","get","listItemBeginnings","li","previewStyle","isSideNumber","sideNumberStyle","previewSideNumberFontColor","previewSideNumberFillingColor","fontSizeNumber","previewFontSize","marginRight","generateSideNumberStyle","listItemBeginningStyle","ColorField","hideColorPicker","showColorPicker","colorPickerHandler","changeColor","colorCode","changeColorCode","defaultColorCode","required","bottomAligned","colorError","inputError","pickerColor","colorSampleStyle","colorPickerClassName","InputProps","startAdornment","InputAdornment","onChangeComplete","disableAlpha","FontSelectFields","customFontInputRef","onFontChange","changeFont","changeCustomFont","optionalFieldState","fontName","placeholder","ListSection","listNameInputRef","unicodeCharInputRef","onIsListChange","changeIsList","onListTypeChange","changeOrderLevel","changeListType","changeSuffix","onListItemChange","changeListItem","onUnicodeNumberChange","newUnicodeNumber","changeUnicodeNumber","newUnicodeChar","changeUnicodeChar","onUnicodeCharChange","onSideNumberChange","changeSideNumber","listPreviewProps","changeListName","changePatternMode","changeListPattern","changePrefix","changeSuffixDistance","changeMagicTabs","changeListItemString","changeNumberingStyle","changeContinueNumbering","changeAllowRestartNumbering","changeIncludePreviousFrom","changeSoftReturn","changeSideNumberFont","changeCustomSideNumberFont","changeSideNumberAlignment","changeSideNumberFontSize","changeSideNumberFontColor","changeSideNumberFillingColor","changeSideNumberWidth","changeSideNumberRadius","changeSideNumberBold","changeSideNumberItalic","changeSideNumberUnderlined","changeSideNumberLineHeight","mainListSettingsState","unorderedListSettingsState","customListItemSettingsState","customListItemSettingsState2","orderedListSettingsState","sideNumberSettingsState","RadioGroup","row","Radio","Switch","ReferencingSection","onXrefChange","xrefName","xref","changeReferenceGroupToCreate","changeReferenceGroup","newGroupKey","__rest","s","t","p","prototype","call","getOwnPropertySymbols","q","propertyIsEnumerable","normalizeHtml","str","replaceCaret","el","findLastTextNode","node","nodeType","Node","TEXT_NODE","childNodes","textNode","isTargetFocused","activeElement","nodeValue","sel","window","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","ContentEditable","arguments","lastHtml","html","innerRef","getEl","emitChange","originalEvt","evt","assign","_a","tagName","ref","onInput","onKeyUp","onKeyDown","contentEditable","dangerouslySetInnerHTML","__html","nextProps","deepEqual","Preview","onPreviewTextChange","changePreviewText","selectAllChildren","TypographySection","changeAlignment","changeFontSize","changeFontColor","changeBold","changeItalic","changeUnderlined","changeStroke","changeTextTransform","changeVerticalAlign","changeMarginTop","changeReadOnly","previewProps","changeConnectToPrevious","DistancesSection","customLineSpacingInputRef","onLineSpacingChange","changeLineSpacing","changeMarginBottom","changeFirstRowIndent","changeOtherRowsIndent","changeCustomLineSpacing","changeWordSpacing","customLineSpacingFieldState","marginFieldsState","FrameTypeInput","generateBorderPreviewStyle","previewBorderWidth","isNaN","FramesSection","onBorderTypeChange","changeBorderType","changeBorderThickness","changeBorderLeft","changeBorderRight","changeBorderTop","changeBorderBottom","changeBorderColor","id","Select","MenuItem","changeFillingColor","changeTocIndentation","changeShortCutWin","changeShortCutMac","createMuiTheme","primary","blue","secondary","pink","CustomTab","overflow","opacity","selected","Tab","CustomErrorTab","indicator","zIndex","Tabs","CustomDialog","DecoratorDialog","clearForm","onSaveButtonClick","switchTab","sendForm","values","some","convertToSend","onTabSwitch","tabNumber","isEmpty","openedTab","ThemeProvider","aria-labelledby","scroll","CustomTabs","orientation","indicatorColor","ShortCutsSection","switchDecDialogTab","savedForm","saveForm","saveDecoratorForm","clearSavedForm","convertToEdit","isOpenReducer","action","decoratorFormReducer","initialErrorState","validationErrorReducer","isEditModeReducer","openedTabReducer","decoratorDialogReducer","combineReducers","savedFormReducer","rootReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f163aaa5.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInput = withStyles(theme => ({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      minWidth: \"183px\",\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInput;","import React from \"react\";\r\n\r\nconst LabelWithAsterisk = ({ children }) => {\r\n    return (\r\n        <div className=\"labelWithAsterisk\">\r\n            <div className=\"labelWithAsterisk-labelBox\">\r\n                <span>{children}</span>\r\n            </div>\r\n            <div className=\"labelWithAsterisk-asteriskBox\">\r\n                <span className=\"labelWithAsterisk-asteriskMark\">*</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LabelWithAsterisk;","import { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nconst CustomInnerDialog = withStyles(theme => ({\n    root: {\n        minWidth: \"1250px\",\n        minHeight: \"1100px !important\",\n        height: \"100%\",\n    },\n    container: {\n        height: \"100vh\",\n        display: \"flex\",\n        width: \"100vw\",\n        justifyContent: \"center\",\n        minWidth: \"500px\",\n        marginLeft: \"15px\",\n        marginTop: \"75px\",\n    },\n    scrollBody: {\n        \"&:after\": {\n            height: \"100%\",\n        }\n    },\n    paperFullWidth: {\n        maxWidth: \"980px\",\n        maxHeight: \"690px\",\n        minHeight: \"350px\",\n        width: \"calc(100vw - 250px)\",\n        minWidth: \"350px\",\n        height: \"calc(100% - 250px)\",\n        display: \"inline-flex\",\n        flexDirection: \"column\",\n        border: \"none\",\n    },\n    paperScrollBody: {\n        verticalAlign: \"middle\",\n    },\n    scrollPaper: {\n        alignItems: \"flex-start\",\n    },\n  }))(Dialog);\n  \n  export default CustomInnerDialog;","const decoratorsList = [\r\n    { name: \"Text 1\", value: \"quick_text_1\" },\r\n    { name: \"Text 2\", value: \"quick_text_2\" },\r\n    { name: \"Text 3\", value: \"quick_text_3\" },\r\n    { name: \"Text 4\", value: \"quick_text_4\" },\r\n    { name: \"Text 5\", value: \"quick_text_5\" },\r\n    { name: \"Heading 1\", value: \"quick_heading_1\" },\r\n    { name: \"Heading 2\", value: \"quick_heading_2\" },\r\n    { name: \"Heading 3\", value: \"quick_heading_3\" },\r\n    { name: \"Heading 4\", value: \"quick_heading_4\" },\r\n    { name: \"Heading 5\", value: \"quick_heading_5\" },\r\n];\r\n\r\nexport default decoratorsList;","export const LANGS = [\n  { \n    langKey: \"en_EN\", \n    langName: \"EN\", \n    langFullName: \"English\", \n  },\n  { \n    langKey: \"de_DE\", \n    langName: \"DE\", \n    langFullName: \"German\", \n  },\n  { \n    langKey: \"ru_RU\", \n    langName: \"RU\", \n    langFullName: \"Russian\", \n  },\n  { \n    langKey: \"fr_FR\", \n    langName: \"FR\", \n    langFullName: \"French\", \n    regionName: \"FR\",\n    regionFullName: \"France\"\n  },\n  { \n    langKey: \"fr_CA\", \n    langName: \"FR\", \n    langFullName: \"French\", \n    regionName: \"CA\",\n    regionFullName: \"Canada\",\n  },\n  { \n    langKey: \"es_ES\", \n    langName: \"ES\", \n    langFullName: \"Spanish\", \n  },\n  { \n    langKey: \"fr_BE\", \n    langName: \"FR\", \n    langFullName: \"French\", \n    regionName: \"BE\",\n    regionFullName: \"Belgium\",\n  },\n  { \n    langKey: \"nl_BE\", \n    langName: \"NL\", \n    langFullName: \"Dutch\",\n    regionName: \"BE\",\n    regionFullName: \"Belgium\"\n  },\n];\n\nexport const ADDITIONAL_LANGS = LANGS.slice(1);\n\nexport const MAIN_LANG_KEY = LANGS[0].langKey;","export const alignmentList = {\r\n    center: \"center\",\r\n    left: \"flex-start\",\r\n    right: \"flex-end\",\r\n    justify: \"flex-start\",\r\n};\r\n\r\nexport const numberingSets = {\r\n    decimal: [\"1\", \"2\", \"3\", \"88\", \"888\"],\r\n    \"upper-alpha\": [\"A\", \"B\", \"C\", \"XX\", \"XXX\"],\r\n    \"lower-alpha\": [\"a\", \"b\", \"c\", \"xx\", \"xxx\"],\r\n    \"upper-roman\": [\"I\", \"II\", \"III\", \"XX\", \"XXX\"],\r\n    \"lower-roman\": [\"i\", \"ii\", \"iii\", \"xx\", \"xxx\"],\r\n};\r\n\r\nexport const lineSpacings = [\"1.0\", \"1.15\", \"1.5\", \"2.0\", \"2.5\", \"3.0\"];\r\n\r\nexport const orderedListStylesMap = new Map([\r\n    [\"decimal\", \"1, 2, 3\"],\r\n    [\"upper-alpha\", \"A, B, C\"],\r\n    [\"lower-alpha\", \"a, b, c\"],\r\n    [\"upper-roman\", \"I, II, III\"],\r\n    [\"lower-roman\", \"i, ii, iii\"],\r\n]);\r\n\r\nexport const bulletNamesMap = new Map([\r\n    [\"2022\", \"•\"],\r\n    [\"2014\", \"—\"],\r\n    [\"2605\", \"★\"],\r\n]);\r\n\r\nexport const sectionTypesMap = new Map([\r\n    [\"text\", \"Text\"],\r\n    [\"table\", \"Table\"],\r\n    [\"image\", \"Image\"],\r\n]);\r\n\r\nexport const backSpaceActionsMap = new Map([\r\n    [\"merge\", \"Merge\"],\r\n    [\"apply_other_pd\", \"Apply other PD\"],\r\n    [\"remove_pd\", \"Remove PD\"],\r\n    [\"nothing\", \"Nothing\"],\r\n]);\r\n\r\nexport const sampleText = `<div>Sample Text. You can change it.</div><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ornare maximus vehicula. Duis nisi velit, dictum id mauris vitae, lobortis pretium quam.</div>`;\r\n\r\n\r\nexport const sections = [\r\n    { \r\n        name: \"namesSection\", \r\n        number: 0 \r\n    },\r\n    { \r\n        name: \"positioningSection\", \r\n        number: 1 \r\n    },\r\n    { \r\n        name: \"listSection\", \r\n        number: 2 \r\n    },\r\n    { \r\n        name: \"referencingSection\", \r\n        number: 2 \r\n    },\r\n    { \r\n        name: \"typographySection\", \r\n        number: 3 \r\n    },\r\n    { \r\n        name: \"distancesSection\", \r\n        number: 4 \r\n    },\r\n    { \r\n        name: \"framesSection\", \r\n        number: 5 \r\n    },\r\n    { \r\n        name: \"fillingSection\", \r\n        number: 6 \r\n    },\r\n    { \r\n        name: \"tocSection\", \r\n        number: 7 \r\n    },\r\n    { \r\n        name: \"shortCutsSection\", \r\n        number: 8 \r\n    },\r\n];\r\n","import { LANGS } from \"./localeConstants\";\r\nimport { sectionTypesMap } from \"./constants\";\r\n\r\nexport const GLOBAL_FALLBACK_MARK = \"GLOBAL FALLBACK\";\r\nexport const DEFAULT_FONT = \"Helvetica\";\r\nexport const DEFAULT_FONT_SIZE = \"11\";\r\nexport const DEFAULT_SIDE_NUMBER_FONT_COLOR = \"FFF\";\r\nexport const DEFAULT_SIDE_NUMBER_FILLING_COLOR = \"1E88E5\";\r\nexport const DEFAULT_SIDE_NUMBER_WIDTH = \"20\";\r\nexport const DEFAULT_SIDE_NUMBER_RADIUS = \"10\";\r\nexport const DEFAULT_FONT_COLOR = \"000\";\r\nexport const DEFAULT_ROW_INDENT = \"0\";\r\nexport const DEFAULT_MARGIN = \"6\";\r\nexport const DEFAULT_WORD_SPACING = \"0\";\r\nexport const DEFAULT_LINE_SPACING = \"1.5\";\r\nexport const DEFAULT_BORDER_COLOR = \"F00\";\r\nexport const DEFAULT_BORDER_THICKNESS = \"2\";\r\n\r\nexport const autoFillingRequiredFields = {\r\n    sideNumberFont: DEFAULT_FONT,\r\n    font: DEFAULT_FONT,\r\n    fontSize: DEFAULT_FONT_SIZE,\r\n    fontColor: DEFAULT_FONT_COLOR,\r\n    marginTop: DEFAULT_MARGIN,\r\n    marginBottom: DEFAULT_MARGIN,\r\n    firstRowIndent: DEFAULT_ROW_INDENT,\r\n    otherRowsIndent: DEFAULT_ROW_INDENT,\r\n    wordSpacing: DEFAULT_WORD_SPACING,   \r\n    lineSpacing: DEFAULT_LINE_SPACING,\r\n    borderColor: DEFAULT_BORDER_COLOR,\r\n    borderThickness: DEFAULT_BORDER_THICKNESS,\r\n};\r\n\r\nexport const initialFormState = {\r\n    ...autoFillingRequiredFields,\r\n    decKey: \"\",\r\n    sectionTypes: { ...Array.from(sectionTypesMap).reduce((acc, [ key ], i) => ({ ...acc, [key]: !i }), {})},\r\n    group: \"\",\r\n    groupToCreate: \"\",\r\n    active: true,\r\n    name: { ...LANGS.reduce((acc, { langKey }) => ({ ...acc, [langKey]: \"\" }), {}) },\r\n    indentationalLevel: \"\",\r\n    fixedIndentation: true,\r\n    backspaceActionWithContent: \"merge\",\r\n    backspaceActionWithContentStyle: \"\",\r\n    returnActionNextSection: GLOBAL_FALLBACK_MARK,\r\n    returnActionEmptySection: GLOBAL_FALLBACK_MARK,\r\n    tabAction: \"\",\r\n    shiftTabAction: \"\",\r\n    isList: false,\r\n    listName: \"\",\r\n    orderLevel: \"\",\r\n    suffixDistance: \"0.5\",\r\n    magicTabs: false,\r\n    listType: \"unordered\",\r\n    listItem: \"2022\",\r\n    unicodeNumber: \"\",\r\n    unicodeChar: \"\",\r\n    listItemString: \"\",\r\n    numberingStyle: \"decimal\",\r\n    softReturn: false,\r\n    continueNumbering: false,\r\n    allowRestartNumbering: false,\r\n    includePreviousFrom: \"\",\r\n    patternMode: false,\r\n    listPattern: \"\",\r\n    prefix: \"\",\r\n    suffix: \"\",\r\n    sideNumber: false,\r\n    customSideNumberFont: \"\",\r\n    sideNumberAlignment: \"center\",\r\n    sideNumberFontSize: \"\",\r\n    sideNumberFontColor: DEFAULT_SIDE_NUMBER_FONT_COLOR,\r\n    sideNumberFillingColor: DEFAULT_SIDE_NUMBER_FILLING_COLOR,\r\n    sideNumberWidth: DEFAULT_SIDE_NUMBER_WIDTH,\r\n    sideNumberLineHeight: \"\",\r\n    sideNumberRadius: DEFAULT_SIDE_NUMBER_RADIUS,\r\n    sideNumberBold: false,\r\n    sideNumberItalic: false,\r\n    sideNumberUnderlined: false,\r\n    referenceGroup: \"\",\r\n    referenceGroupToCreate: \"\",\r\n    customFont: \"\",\r\n    alignment: \"left\",\r\n    bold: false,\r\n    italic: false,\r\n    underlined: false,\r\n    stroke: false,\r\n    textTransform: \"none\",\r\n    readOnly: false,\r\n    connectToPrevious: false,\r\n    verticalAlign: \"baseline\",\r\n    customLineSpacing: \"\",\r\n    borderLeft: false,\r\n    borderRight: false,\r\n    borderTop: false,\r\n    borderBottom: false,\r\n    borderType: \"solid\",\r\n    fillingColor: \"\",\r\n    tocIndentation: \"\",\r\n    shortCutWin: \"\",\r\n    shortCutWinView: \"\",\r\n    shortCutMac: \"\",\r\n    shortCutMacView: \"\",\r\n};","const { body } = document;\r\nlet width;\r\n\r\nconst container = document.createElement('span');\r\ncontainer.innerHTML = Array(100).join('wi');\r\ncontainer.style.cssText = [\r\n    'position:absolute',\r\n    'width:auto',\r\n    'font-size:128px',\r\n    'left:-99999px'\r\n].join(' !important;');\r\n\r\nconst getWidth = fontFamily => {\r\n    container.style.fontFamily = fontFamily;\r\n\r\n    body.appendChild(container);\r\n    width = container.clientWidth;\r\n    body.removeChild(container);\r\n\r\n    return width;\r\n};\r\n\r\nconst monoWidth  = getWidth('monospace');\r\nconst serifWidth = getWidth('serif');\r\nconst sansWidth  = getWidth('sans-serif');\r\n\r\nconst isFontAvailable = font => {\r\n    return monoWidth !== getWidth(font + ',monospace') ||\r\n    sansWidth !== getWidth(font + ',sans-serif') ||\r\n    serifWidth !== getWidth(font + ',serif');\r\n};\r\n\r\nexport default isFontAvailable;","import { DEFAULT_FONT } from \"./initialFormState\";\r\nimport isFontAvailable from \"../helpers/isFontAvailable\";\r\n\r\nconst standartFonts = [\r\n    DEFAULT_FONT,\r\n    \"Source Sans Pro\",\r\n    \"Dejavu Sans\",\r\n    \"Dejavu Serif\",\r\n    \"Open Sans\",\r\n    \"Montserrat\",\r\n    \"Arial\",\r\n    \"Georgia\",\r\n    \"Verdana\",\r\n    \"Times New Roman\",\r\n];\r\n\r\nconst fontsSet = standartFonts.filter(font => (font === DEFAULT_FONT || isFontAvailable(font)));\r\n\r\nexport default fontsSet;","const rgbToHex = (r, g, b) => {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n};\n\nconst prepareColorCode = color => {\n    if (!color || typeof color !== \"string\") {\n        return;\n    }\n\n    if (!/#/.test(color)) {\n        const rgbMatch = color.match(/(\\d{1,3}).*?(\\d{1,3}).*?(\\d{1,3})/);\n        if (rgbMatch.length === 4) {\n            const [, r, g, b] = rgbMatch;\n            return rgbToHex(+r, +g, +b).trim().slice(1);\n        }\n    } else {\n        return color.trim().slice(1);\n    }\n};\n\nexport default prepareColorCode;","import { GLOBAL_FALLBACK_MARK, fontsSet, lineSpacings } from \"../../constants\";\r\nimport prepareColorCode from \"../prepareColorCode\";\r\n\r\nconst DEFAULT_DECORATOR = \"Text 2000\";\r\n\r\nexport const replaceDecNameIfDefault = decName => {\r\n    if (decName === DEFAULT_DECORATOR) {\r\n        return GLOBAL_FALLBACK_MARK;\r\n    }\r\n    if (decName === GLOBAL_FALLBACK_MARK) {\r\n        return DEFAULT_DECORATOR;\r\n    }\r\n    return decName;\r\n};\r\n\r\nexport const getNumber = val => val ? +val : null;\r\n\r\nexport const getNumberString = val => typeof val === \"number\" ? `${val}` : \"\";\r\n\r\nexport const getNumeratedListPattern = (order, prefix, suffix) => {\r\n    return `${prefix || \"\"}{${order || 0}}${suffix || \"\"}`;\r\n};\r\n\r\nexport const getStyleString = (rawDec, initialState) => {\r\n    const dec = {};\r\n    // eslint-disable-next-line\r\n    for (let propName in rawDec) {\r\n        if (rawDec[propName] !== initialState[propName]) {\r\n            dec[propName] = rawDec[propName];\r\n        }\r\n    }\r\n    const styles = {};\r\n    \r\n    dec.font && (styles[\"font-family\"] = dec.customFont || dec.font);\r\n    dec.fontSize && (styles[\"font-size\"] = `${dec.fontSize}pt`);\r\n    dec.fontColor && dec.fontColor !== \"000000\" && (styles.color = `#${dec.fontColor}`);\r\n    dec.verticalAlign && (styles[\"vertical-align\"] = dec.verticalAlign);\r\n    dec.bold && (styles[\"font-weight\"] = \"bold\");\r\n    dec.italic && (styles[\"font-style\"] = \"italic\");\r\n\r\n    const textDecoration = `${dec.underlined ? \"underline\" : \"\"} ${dec.stroke ? \"line-through\" : \"\"}`.trim()\r\n    textDecoration && (styles[\"text-decoration\"] = textDecoration);\r\n\r\n    if (dec.textTransform) {\r\n        if (dec.textTransform === \"small-caps\") {\r\n            styles[\"font-variant\"] = \"small-caps\";\r\n        } else {\r\n            styles[\"text-transform\"] = dec.textTransform;\r\n        }\r\n    }\r\n\r\n    if (dec.connectToPrevious) {\r\n        styles[\"margin-top\"] = \"-1px\";\r\n        styles[\"margin-bottom\"] = \"-1px\";\r\n        styles[\"padding-top\"] = \"1px\";\r\n        styles[\"padding-bottom\"] = \"1px\";\r\n    } else {\r\n        dec.marginTop && (styles[\"margin-top\"] = `${dec.marginTop}pt`);\r\n        dec.marginBottom && (styles[\"margin-bottom\"] = `${dec.marginBottom}pt`);\r\n    }\r\n\r\n    if (dec.firstRowIndent || dec.otherRowsIndent) {\r\n        const indentsDifference = +(dec.firstRowIndent || 0) - +(dec.otherRowsIndent || 0);\r\n        if (!indentsDifference) {\r\n            styles[\"margin-left\"] = `${dec.otherRowsIndent}cm`;\r\n        } else {\r\n            styles[\"text-indent\"] = `${indentsDifference}cm`;\r\n            dec.otherRowsIndent && (styles[\"margin-left\"] = `${dec.otherRowsIndent}cm`);\r\n        }\r\n    }\r\n\r\n    if (dec.customLineSpacing !== \"1.4em\") {\r\n        styles[\"line-height\"] = dec.customLineSpacing || rawDec.lineSpacing;\r\n    }\r\n\r\n    if (dec.borderLeft || dec.borderRight || dec.borderTop || dec.borderBottom) {\r\n        const borderThickness = dec.borderThickness || initialState.borderThickness;\r\n        const borderType = dec.borderType || initialState.borderType;\r\n        const borderColor = dec.borderColor || initialState.borderColor;\r\n        const borderStyle = ` ${borderThickness}pt ${borderType} #${borderColor}`;\r\n\r\n        dec.borderLeft && (styles[\"border-left\"] = borderStyle);\r\n        dec.borderRight && (styles[\"border-right\"] = borderStyle);\r\n        dec.borderTop && (styles[\"border-top\"] = borderStyle);\r\n        dec.borderBottom && (styles[\"border-bottom\"] = borderStyle);\r\n    }\r\n    \r\n    dec.wordSpacing && (styles[\"word-spacing\"] = `${dec.wordSpacing}pt`);\r\n\r\n    dec.fillingColor && (styles[\"background-color\"] = `#${dec.fillingColor}`);\r\n\r\n    return Object.entries(styles).reduce((acc, [key, value]) => (`${acc} ${key}:${value};`), \"\").trim();\r\n};\r\n\r\nexport const getSideNumberStyleString = dec => {\r\n    const styles = {};\r\n\r\n    if (dec.font !== dec.sideNumberFont || dec.customFont !== dec.customSideNumberFont) {\r\n        styles[\"font-family\"] = dec.customSideNumberFont || dec.sideNumberFont;\r\n    }\r\n\r\n    styles[\"text-align\"] = dec.sideNumberAlignment || \"center\";\r\n    if (dec.sideNumberFontSize && dec.fontSize !== dec.sideNumberFontSize) {\r\n        styles[\"font-size\"] = `${dec.sideNumberFontSize}pt`;\r\n    }\r\n    \r\n    dec.sideNumberFontColor && (styles.color = `#${dec.sideNumberFontColor}`);\r\n    dec.sideNumberFillingColor && (styles[\"background-color\"] = `#${dec.sideNumberFillingColor}`);\r\n    dec.sideNumberWidth && (styles[\"min-width\"] = `${dec.sideNumberWidth}pt`);\r\n    dec.sideNumberLineHeight && (styles[\"line-height\"] = `${dec.sideNumberLineHeight}pt`);\r\n    dec.sideNumberRadius && (styles[\"border-radius\"] = `${dec.sideNumberRadius}pt`);\r\n    dec.sideNumberBold && (styles[\"font-weight\"] = \"bold\");\r\n    dec.sideNumberItalic && (styles[\"font-style\"] = \"italic\");\r\n    dec.sideNumberUnderlined && (styles[\"text-decoration\"] = \"underline\");\r\n\r\n    return Object.entries(styles).reduce((acc, [key, value]) => (`${acc} ${key}:${value};`), \"\").trim();\r\n};\r\n\r\nexport const getStylesObject = (stylesString = \"\", sideNumberStylesString = \"\") => {\r\n    const res = {};\r\n    if (stylesString) {\r\n        const keyValueStringsArray = stylesString.split(\";\");\r\n        if (keyValueStringsArray.length) {\r\n            const stylesArray = keyValueStringsArray.map(keyValueStr => keyValueStr.split(\":\"))\r\n                .map(([key, value]) => [(key || \"\").trim(), (value || \"\").trim()])\r\n                .filter(([key, value]) => key && value);\r\n            \r\n            if (stylesArray.length) {\r\n                const styles = stylesArray.reduce((acc, [key, value]) => ({...acc, [key]: value }), {});\r\n                \r\n                if (styles[\"font-family\"]) {\r\n                    if (fontsSet.includes(styles[\"font-family\"])) {\r\n                        res.font = styles[\"font-family\"];\r\n                    } else {\r\n                        res.font = \"custom\";\r\n                        res.customFont = styles[\"font-family\"];\r\n                    }\r\n                }\r\n\r\n                styles[\"font-size\"] && (res.fontSize = styles[\"font-size\"].slice(0, -2));\r\n                styles.color && (res.fontColor = styles.color.slice(1));\r\n                styles[\"vertical-align\"] && (res.verticalAlign = styles[\"vertical-align\"]);\r\n                \r\n                if (styles[\"font-weight\"] === \"bold\" || +styles[\"font-weight\"] >= 700) {\r\n                    res.bold = true;\r\n                }\r\n\r\n                styles[\"font-style\"] === \"italic\" && (res.italic = true);\r\n\r\n                if (styles[\"text-decoration\"]) {\r\n                    styles[\"text-decoration\"].includes(\"underline\") && (res.underlined = true);\r\n                    styles[\"text-decoration\"].includes(\"line-through\") && (res.stroke = true);\r\n                }\r\n\r\n                if (styles[\"text-transform\"] === \"lowercase\" || styles[\"text-transform\"] ===  \"uppercase\") {\r\n                    res.textTransform = styles[\"text-transform\"];\r\n                }\r\n                \r\n                styles[\"font-variant\"] === \"small-caps\" && (res.textTransform = styles[\"font-variant\"]);\r\n                \r\n                if (\r\n                    styles[\"margin-top\"] === \"-1px\" && \r\n                    styles[\"margin-bottom\"] === \"-1px\" && \r\n                    styles[\"padding-top\"] === \"1px\" && \r\n                    styles[\"padding-bottom\"] === \"1px\"\r\n                ) {\r\n                    res.connectToPrevious = true;\r\n                } else {\r\n                    styles[\"margin-top\"] && (res.marginTop = styles[\"margin-top\"].slice(0, -2));\r\n                    styles[\"margin-bottom\"] && (res.marginBottom = styles[\"margin-bottom\"].slice(0, -2));\r\n                }\r\n\r\n                if (styles[\"margin-left\"] && !styles[\"text-indent\"]) {\r\n                    res.firstRowIndent = styles[\"margin-left\"].slice(0, -2);\r\n                    res.otherRowsIndent = res.firstRowIndent;\r\n                } else if (styles[\"text-indent\"] && !styles[\"margin-left\"]) {\r\n                    res.firstRowIndent = styles[\"text-indent\"].slice(0, -2); \r\n                } else if (styles[\"margin-left\"] && styles[\"text-indent\"]) {\r\n                    const margin = +(styles[\"margin-left\"].slice(0, -2));\r\n                    const indent = +(styles[\"text-indent\"].slice(0, -2));\r\n                    res.otherRowsIndent = `${margin}`;\r\n                    res.firstRowIndent = `${margin + indent}`;\r\n                }\r\n\r\n                if (styles[\"line-height\"]) {\r\n                    if (lineSpacings.includes(styles[\"line-height\"])) {\r\n                        res.lineSpacing = styles[\"line-height\"];\r\n                    } else {\r\n                        res.lineSpacing = \"custom\";\r\n                        res.customLineSpacing = styles[\"line-height\"];\r\n                    }\r\n                }\r\n\r\n                const borderStyle = styles[\"border-top\"] \r\n                    || styles[\"border-bottom\"] \r\n                    || styles[\"border-left\"] \r\n                    || styles[\"border-right\"];\r\n\r\n                if (borderStyle) {\r\n                    const colorCodeMatch = borderStyle.match(/#[\\da-f]{6}|#[\\da-f]{3}|\\(.*?\\)/i);\r\n                    const thicknessMatch = borderStyle.match(/\\d+(?:\\.\\d+)?(?:px|pt)/i);\r\n                    const lineTypeMatch = borderStyle.match(/solid|dotted|dashed|double|groove|ridge|inset|outset/);\r\n\r\n                    if (colorCodeMatch && thicknessMatch && lineTypeMatch) {\r\n                        res.borderColor = prepareColorCode(colorCodeMatch[0]);\r\n                        res.borderThickness = thicknessMatch[0].slice(0, -2);\r\n                        res.borderType = lineTypeMatch[0];\r\n                    }\r\n\r\n                    styles[\"border-top\"] && (res.borderTop = true);\r\n                    styles[\"border-bottom\"] && (res.borderBottom = true);\r\n                    styles[\"border-left\"] && (res.borderLeft = true);\r\n                    styles[\"border-right\"] && (res.borderRight = true);\r\n                }\r\n\r\n                styles[\"word-spacing\"] && (res.wordSpacing = styles[\"word-spacing\"].slice(0, -2));\r\n                styles[\"background-color\"] && (res.fillingColor = styles[\"background-color\"].slice(1));\r\n            }\r\n        }\r\n    }\r\n\r\n    if (sideNumberStylesString) {\r\n        const keyValueStringsArray = sideNumberStylesString.split(\";\");\r\n        if (keyValueStringsArray.length) {\r\n            const stylesArray = keyValueStringsArray.map(keyValueStr => keyValueStr.split(\":\"))\r\n                .map(([key, value]) => [(key || \"\").trim(), (value || \"\").trim()])\r\n                .filter(([key, value]) => key && value);\r\n            \r\n            if (stylesArray.length) {\r\n                res.sideNumber = true;\r\n\r\n                const styles = stylesArray.reduce((acc, [key, value]) => ({...acc, [key]: value }), {});\r\n                \r\n                if (styles[\"font-family\"]) {\r\n                    if (fontsSet.includes(styles[\"font-family\"])) {\r\n                        res.sideNumberFont = styles[\"font-family\"];\r\n                    } else {\r\n                        res.sideNumberFont = \"custom\";\r\n                        res.sideNumberCustomFont = styles[\"font-family\"];\r\n                    }\r\n                } else if (res.font) {\r\n                    res.sideNumberFont = res.font;\r\n                    res.sideNumberCustomFont = res.customFont;\r\n                }\r\n\r\n                res.sideNumberAlignment = styles[\"text-align\"] || \"center\";\r\n                res.sideNumberFontSize = styles[\"font-size\"] ? styles[\"font-size\"].slice(0, -2) : \"\";\r\n                res.sideNumberFontColor = styles.color ? styles.color.slice(1) : \"\";\r\n                res.sideNumberFillingColor = styles[\"background-color\"] ? styles[\"background-color\"].slice(1) : \"\";\r\n                res.sideNumberWidth = styles[\"min-width\"] ? styles[\"min-width\"].slice(0, -2) : \"\";\r\n\r\n                styles[\"line-height\"] && (res.sideNumberLineHeight = styles[\"line-height\"].slice(0, -2));\r\n\r\n                res.sideNumberRadius = styles[\"border-radius\"] ? styles[\"border-radius\"].slice(0, -2) : \"\";\r\n\r\n                if (styles[\"font-weight\"] === \"bold\" || +styles[\"font-weight\"] >= 700) {\r\n                    res.sideNumberBold = true;\r\n                }\r\n\r\n                styles[\"font-style\"] === \"italic\" && (res.sideNumberItalic = true);\r\n                styles[\"text-decoration\"] && styles[\"text-decoration\"].includes(\"underline\") && (res.sideNumberUnderlined = true);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!res.lineSpacing && !res.customLineSpacing) {\r\n        res.lineSpacing = \"custom\";\r\n        res.customLineSpacing = \"1.4em\";\r\n    }\r\n\r\n    return res;\r\n};","const decToSendDefaultProps = {\r\n    item_type: \"style\",\r\n    style_properties: {},\r\n    keyboard_shortcut: {},\r\n    xref_target_type_group_key: null,\r\n    is_possible_xref_target: false,\r\n    show_in_editor_toc: false,\r\n    editor_toc_indentation: null,\r\n    editor_toc_filter_level: null,\r\n    list_key: null,\r\n    item_order: null,\r\n    extra_hanging_indentation: null,\r\n    extra_hanging_indentation_at_grid: false,\r\n    numerated_list_format: null,\r\n    numerated_list_start: null,\r\n    numerated_list_pattern: null,\r\n    numerated_list_style: \"\",\r\n    is_auto_restart_numbering: false,\r\n    allow_restart_numbering: false,\r\n    bullet_list_format: null,\r\n    movable: true,\r\n    content_required: false,\r\n    change_pd_on_return_if_empty: false,\r\n    pd_for_current_section_on_return_if_empty: null,\r\n    on_return_indentation: null,\r\n    item_order_allow_tab: false,\r\n};\r\n\r\nexport default decToSendDefaultProps;","import { \r\n    sectionTypesMap, \r\n    bulletNamesMap, \r\n    orderedListStylesMap,\r\n    initialFormState,\r\n} from \"../../constants\";\r\nimport {\r\n    replaceDecNameIfDefault,\r\n    getNumber,\r\n    getNumberString,\r\n    getNumeratedListPattern,\r\n    getStyleString,\r\n    getSideNumberStyleString,\r\n    getStylesObject,\r\n} from \"./converterUtils\";\r\nimport decToSendDefaultProps from \"./decToSendDefaultProps\";\r\nimport { unicodeNumberToChar, getShortCutUtils } from \"../index\";\r\n\r\nclass DecDataConverter {\r\n    static convertToSend(rawDec) {\r\n        const dec = {};\r\n        // eslint-disable-next-line\r\n        for (let key in rawDec) {\r\n            dec[key] = rawDec[key] !== \"\" ? rawDec[key] : null;\r\n        }\r\n\r\n        const res = {};\r\n        res.key = dec.decKey;\r\n        res.section_types = Object.entries(dec.sectionTypes).filter(([, value]) => value).map(([key]) => key);\r\n        res.hidden = !dec.active;\r\n        res.name = dec.name;\r\n\r\n        res.initial_indentation = getNumber(dec.indentationalLevel);\r\n        res.is_fixed_indentation = dec.fixedIndentation;\r\n        res.content_in_second_line = dec.softReturn;\r\n        res.backspace_action = dec.backspaceActionWithContent;\r\n        res.backspace_action_value = replaceDecNameIfDefault(dec.backspaceActionWithContentStyle);\r\n        res.create_new_section_on_return_if_empty = !!dec.returnActionEmptySection;\r\n        res.pd_for_new_section_on_return_if_empty = replaceDecNameIfDefault(dec.returnActionEmptySection);\r\n        res.on_return_style_key = replaceDecNameIfDefault(dec.returnActionNextSection);\r\n        res.on_tab_key = dec.tabAction;\r\n        res.on_shift_tab_key = dec.shiftTabAction;\r\n\r\n        if (dec.isList) {\r\n            res.list_key = dec.listName;\r\n            res.item_order = dec.orderLevel ? getNumber(dec.orderLevel) : null;\r\n            res.extra_hanging_indentation = dec.suffixDistance === \"0.5\" ? null : `${dec.suffixDistance}cm`;\r\n            res.extra_hanging_indentation_at_grid = dec.magicTabs;\r\n            if (dec.listType === \"ordered\") {\r\n                // for ordered list\r\n                res.numerated_list_format = dec.numberingStyle;\r\n                if (dec.patternMode) {\r\n                    // for composite numbering\r\n                    res.numerated_list_pattern = dec.listPattern;\r\n                } else {\r\n                    // for simple numbering\r\n                    res.numerated_list_pattern = getNumeratedListPattern(dec.orderLevel, dec.prefix, dec.suffix);\r\n                }\r\n                res.is_auto_restart_numbering = !dec.continueNumbering;\r\n                res.allow_restart_numbering = dec.allowRestartNumbering;\r\n                res.numerated_list_start = dec.includePreviousFrom;\r\n                res.numerated_list_style = \"styles settings\";\r\n            } else {\r\n                // for unordered list\r\n                if ((dec.listItem === \"custom\" && !dec.unicodeNumber)) {\r\n                    res.bullet_list_format = null;\r\n                } else if (dec.listItem === \"string\") {\r\n                    res.bullet_list_format = dec.listItemString;\r\n                } else {\r\n                    res.bullet_list_format = `\\\\${dec.unicodeNumber || dec.listItem}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (dec.referenceGroup) {\r\n            res.xref_target_type_group_key = dec.referenceGroup;\r\n            res.is_possible_xref_target = true;\r\n        }\r\n\r\n        if (dec.alignment && dec.alignment !== \"left\") {\r\n            res.style_properties = { alignment: dec.alignment };\r\n        }\r\n        res.read_only = dec.readOnly;\r\n\r\n        if (dec.tocIndentation) {\r\n            res.show_in_editor_toc = true;\r\n            res.editor_toc_indentation = +dec.tocIndentation;\r\n            res.editor_toc_filter_level = +dec.tocIndentation;\r\n        }\r\n\r\n        if (dec.shortCutMac) {\r\n            res.keyboard_shortcut = dec.shortCutMac;\r\n        }\r\n\r\n        res.editor_style = getStyleString(rawDec, initialFormState);\r\n        res.numerated_list_style = dec.sideNumber ? getSideNumberStyleString(rawDec) : \"\";\r\n\r\n        const unchangingProps = {\r\n            group: rawDec.group,\r\n            groupToCreate: rawDec.groupToCreate,\r\n            referenceGroup: rawDec.referenceGroup,\r\n            referenceGroupToCreate: rawDec.referenceGroupToCreate,\r\n            shortCutWin: rawDec.shortCutWin,\r\n            shortCutWinView: rawDec.shortCutWinView,\r\n        };\r\n                \r\n        console.log(\"send\", {...decToSendDefaultProps, ...res});\r\n\r\n        return { ...rawDec, ...decToSendDefaultProps, ...res,  ...unchangingProps };\r\n    }\r\n\r\n    static convertToEdit(rawDec) {\r\n        const dec = {};\r\n        // eslint-disable-next-line\r\n        for (let key in rawDec) {\r\n            dec[key] = rawDec[key] !== null ? rawDec[key] : \"\";\r\n        }\r\n\r\n        const res = {};\r\n        res.decKey = dec.key;\r\n        res.sectionTypes = Array.from(sectionTypesMap).map(([ key ]) => key).reduce((acc, cur) => ({\r\n            ...acc,\r\n            [cur]: dec.section_types.includes(cur),\r\n        }), {});\r\n        res.active = !dec.hidden;\r\n        res.name = dec.name;\r\n\r\n        res.indentationalLevel = getNumberString(dec.initial_indentation);\r\n        res.fixedIndentation = dec.is_fixed_indentation;\r\n        res.softReturn = dec.content_in_second_line;\r\n        res.backspaceActionWithContent = dec.backspace_action;\r\n        res.backspaceActionWithContentStyle = replaceDecNameIfDefault(dec.backspace_action_value);\r\n        res.returnActionNextSection = replaceDecNameIfDefault(dec.on_return_style_key);\r\n        res.returnActionEmptySection = replaceDecNameIfDefault(dec.pd_for_new_section_on_return_if_empty);\r\n        res.tabAction = dec.on_tab_key;\r\n        res.shiftTabAction = dec.on_shift_tab_key;\r\n\r\n        // res.numerated_list_format, dec.prefix, dec.suffix, dec.OrderLevel\r\n        if (dec.list_key || dec.bullet_list_format) {\r\n            res.isList = true;\r\n            res.listName = dec.list_key;\r\n            res.orderLevel = dec.item_order ? getNumberString(dec.item_order) : \"0\";\r\n            const suffixDistanceMatch = `${(dec.extra_hanging_indentation||\"0.5cm\")}`.match(/[\\d.]*/);\r\n            res.suffixDistance = suffixDistanceMatch ? suffixDistanceMatch[0] : \"0.5\";\r\n            res.magicTabs = dec.extra_hanging_indentation_at_grid;\r\n            if (dec.numerated_list_pattern) {\r\n                // for ordered list\r\n                res.listType = \"ordered\";\r\n                if (/{.*?{/.test(dec.numerated_list_pattern)) {\r\n                    // for composite numbering\r\n                    res.patternMode = true;\r\n                    res.listPattern = dec.numerated_list_pattern;\r\n                } else {\r\n                    // for simple numbering\r\n                    const prefixAndSuffixMatch = dec.numerated_list_pattern.match(/(.*?){.*}(.*)/);\r\n                    if (prefixAndSuffixMatch) {\r\n                        res.prefix = prefixAndSuffixMatch[1] || \"\";\r\n                        res.suffix = prefixAndSuffixMatch[2] || \"\";\r\n                    }\r\n                }\r\n                res.numberingStyle = orderedListStylesMap.has(dec.numerated_list_format) ? dec.numerated_list_format : \"decimal\";\r\n                res.continueNumbering = !dec.is_auto_restart_numbering;\r\n                res.allowRestartNumbering = dec.allow_restart_numbering;\r\n                res.includePreviousFrom = dec.numerated_list_start;\r\n            } else {\r\n                // for unordered list\r\n                res.listType = \"unordered\";\r\n                if ((dec.bullet_list_format || \"\").match(/^\\\\[\\da-f]+/i)) {\r\n                    const bullet = dec.bullet_list_format.slice(1);\r\n                    if (bulletNamesMap.has(bullet)) {\r\n                        res.listItem = bullet;\r\n                    } else {\r\n                        res.listItem = \"custom\";\r\n                        res.unicodeNumber = bullet;\r\n                        res.unicodeChar = unicodeNumberToChar(bullet);\r\n                    }\r\n                } else {\r\n                    // strings or empty bullets\r\n                    res.listItem = dec.bullet_list_format ? \"string\" : \"custom\";\r\n                    res.listItemString = dec.bullet_list_format;\r\n                }\r\n            }\r\n        }\r\n\r\n        res.referenceGroup = dec.xref_target_type_group_key || \"\";\r\n\r\n        if (dec.style_properties.alignment) {\r\n            res.alignment = dec.style_properties.alignment;\r\n        }\r\n        res.readOnly = !!dec.read_only;\r\n        res.tocIndentation = getNumberString(dec.editor_toc_indentation);\r\n\r\n        if ((dec.keyboard_shortcut||{}).hasOwnProperty(\"keyCode\")) {\r\n            res.shortCutMac = dec.keyboard_shortcut;\r\n            res.shortCutMacView = getShortCutUtils(\"MacOS\").convertShortcutToString(dec.keyboard_shortcut);\r\n        }\r\n\r\n        const stylesProps = getStylesObject(dec.editor_style, dec.numerated_list_style);\r\n\r\n        const unchangingProps = {\r\n            group: rawDec.group,\r\n            groupToCreate: rawDec.groupToCreate,\r\n            referenceGroup: rawDec.referenceGroup,\r\n            referenceGroupToCreate: rawDec.referenceGroupToCreate,\r\n            shortCutWin: rawDec.shortCutWin,\r\n            shortCutWinView: rawDec.shortCutWinView,\r\n        };\r\n\r\n        console.log(\"recieve\", { ...initialFormState, ...res, ...stylesProps });\r\n\r\n        return { ...rawDec, ...initialFormState, ...res, ...stylesProps, ...unchangingProps };\r\n    }\r\n\r\n    static mapDecFields = {};\r\n}\r\n\r\nexport default DecDataConverter;","import DecDataConverter from \"./DecDataConverter\";\r\nexport default DecDataConverter;","import keycode from \"keycode\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nconst getShortCutUtils = systemName => {\r\n  return class ShortcutUtils {  \r\n    static CMD_KEYS = {\r\n      altKey: systemName === \"MacOS\" ? \"Option\" : \"Alt\",\r\n      ctrlKey: systemName === \"MacOS\" ? \"Control\" : \"Ctrl\",\r\n      shiftKey: \"Shift\",\r\n      metaKey: \"Command\",\r\n    };\r\n  \r\n    static isDeadKey(e) {\r\n      return e.keyCode === 229;\r\n    }\r\n  \r\n    static prevent(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  \r\n    static convertEventToShortCut(e) {\r\n      if (ShortcutUtils.isDeadKey(e)) {\r\n        ShortcutUtils.prevent(e);\r\n        return { deleteKey: true };\r\n      }\r\n      ShortcutUtils.prevent(e);\r\n      const shortCut = {\r\n        keyCode: e.keyCode,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n        altKey: e.altKey,\r\n        metaKey: false,\r\n      };\r\n      if (systemName === \"MacOS\") {\r\n        shortCut.metaKey = e.metaKey;\r\n      }\r\n      const deleteKeys = [8, 46];\r\n      const cmdKeysCodes = [16, 91, 18, 17];\r\n      const shortCutForView = ShortcutUtils.convertShortcutToMeta(shortCut);\r\n      if (deleteKeys.indexOf(e.keyCode) > -1) {\r\n        return { deleteKey: true };\r\n      } else if (shortCutForView.isCmdPressed && cmdKeysCodes.indexOf(e.keyCode) === -1) {\r\n        return {\r\n          value: shortCut,\r\n          stringValue: shortCutForView.stringValue,\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n  \r\n    static convertShortcutToString(shortCut = {}) {\r\n      return ShortcutUtils.convertShortcutToMeta(shortCut).stringValue;\r\n    }\r\n  \r\n    static convertShortcutToMeta(shortCut = {}) {\r\n      let shortCutForView = \"\";\r\n      let isCmdPressed = false;\r\n      Object.keys(ShortcutUtils.CMD_KEYS).forEach((key) => {\r\n        if (shortCut && shortCut[key]) {\r\n          isCmdPressed = true;\r\n          shortCutForView += `${ShortcutUtils.CMD_KEYS[key]} + `;\r\n        }\r\n      });\r\n      if (shortCut && shortCut.keyCode) {\r\n        shortCutForView += keycode(shortCut.keyCode);\r\n      }\r\n      return { stringValue: shortCutForView, isCmdPressed };\r\n    }\r\n  \r\n    static removeDuplicateShortcuts = function (decorators, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(decorators).forEach((decoratorKey) => {\r\n        const item = decorators[decoratorKey];\r\n        const itemType = item.item_type;\r\n        if (itemType === \"style\") {\r\n          if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n            decorators[decoratorKey].keyboard_shortcut = null;\r\n            removed = true;\r\n          }\r\n        } else {\r\n          const childItems = item.child_items;\r\n          Object.keys(childItems).forEach((itemKey) => {\r\n            const style = childItems[itemKey];\r\n            if (isEqual(style.keyboard_shortcut, newPdShortcut)) {\r\n              style.keyboard_shortcut = null;\r\n              removed = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  \r\n    static removeDuplicateShortcutsInInlineStyle = function (inlineStyles, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(inlineStyles).forEach((styleKey) => {\r\n        const item = inlineStyles[styleKey];\r\n        if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n          inlineStyles[styleKey].keyboard_shortcut = null;\r\n          removed = true;\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  }\r\n};\r\n\r\nexport default getShortCutUtils;\r\n\r\n","import { sections } from \"../constants\";\r\n\r\nexport const checkNames = ({ name }) => !!name.en_EN;\r\nexport const checkDecKey = ({ decKey }, isEditMode) => (isEditMode || !!decKey);\r\nexport const checkListName = ({ isList, listType, listName }) => {\r\n    if (!isList || (isList && listType === \"unordered\")) {\r\n        return true;\r\n    } else {\r\n        return !!listName;\r\n    }\r\n};\r\n\r\nconst getValidationChecks = (form, isEditMode) => {\r\n    return { \r\n        namesSection: [\r\n            {\r\n                field: \"name\",\r\n                check: () => checkNames(form),\r\n            },\r\n            {\r\n                field: \"decKey\",\r\n                check: () => checkDecKey(form, isEditMode),\r\n            },\r\n        ],\r\n        listSection: [\r\n            {\r\n                field: \"listName\",\r\n                check: () => checkListName(form),\r\n            },\r\n        ],\r\n    };\r\n};\r\n\r\nexport const getErrorState = (form, isEditMode) => {\r\n    const errorState = {};\r\n    const validationChecks = getValidationChecks(form, isEditMode);\r\n    \r\n    // eslint-disable-next-line\r\n    for (let propName in validationChecks) {\r\n        const errorFields = validationChecks[propName].filter(({ check }) => !check()).map(({ field }) => field);\r\n        if (errorFields.length) {\r\n            errorState[propName] = errorFields;\r\n        }\r\n    }\r\n\r\n    return errorState;\r\n};\r\n\r\nexport const getTabNumberToSwitch = tabsErrorState => {\r\n    // eslint-disable-next-line\r\n    for (const { name, number } of sections) {\r\n        if (tabsErrorState[name]) {\r\n            return number;\r\n        }\r\n    }\r\n};","import { \r\n    numberingSets, \r\n    autoFillingRequiredFields, \r\n    DEFAULT_FONT, \r\n} from \"../constants\";\r\nimport isFontAvailable from \"./isFontAvailable\";\r\n\r\nexport const getCorrectColor = (hex, backgroundColor = \"FFF\") => {\r\n    const correctColor = typeof hex === \"string\" && (hex.length === 6 || hex.length === 3) ? hex : backgroundColor;\r\n    return correctColor;\r\n};\r\n\r\nexport const selectAllOnClick = defaultValue => e => {\r\n    if (!defaultValue || e.target.value === defaultValue) {\r\n        e.target.focus();\r\n        e.target.select();\r\n    }\r\n};\r\n\r\nexport const getOffset = (alignType, fontSize) => {\r\n    if (alignType === \"baseline\") {\r\n        return 0;\r\n    }\r\n    return (parseFloat(fontSize.slice()) / 2) * (alignType === \"sub\" ? 1 : -1);\r\n};\r\n\r\nexport const getUnstyledText = styledText => {\r\n    const unstyledText = styledText.replace(/<\\/(.*?)>/gm, \"</div>\").replace(/(?!(?:<\\/(.*?)>|<br(.*?)>)$)<(.*?)>/gm, \"<div>\");\r\n    return unstyledText[0] !== \"<\" ? `<div>${unstyledText}</div>` : unstyledText;\r\n};\r\n\r\nexport const unicodeNumberToChar = unicodeNumber => {\r\n    return String.fromCharCode(parseInt(unicodeNumber, 16));\r\n};\r\n\r\nexport const unicodeCharToNumber = unicodeChar => {\r\n    return unicodeChar.charCodeAt(0).toString(16);\r\n};\r\n\r\nexport const scrollToBottom = className => {\r\n    setTimeout(() => { document.getElementsByClassName(className)[0].scrollTo({\r\n        top: Number.MAX_SAFE_INTEGER,\r\n        behavior: \"smooth\",\r\n    })}, 0);\r\n};\r\n\r\nexport const changeAndScroll = (changeFunction, timeOut) => (...args) => {\r\n    changeFunction(...args);\r\n    if (!timeOut) {\r\n        scrollToBottom(\"content-rightSide\");\r\n    } else {\r\n        setTimeout(() => {\r\n            scrollToBottom(\"content-rightSide\");\r\n        }, timeOut);\r\n    }\r\n};\r\n\r\nexport const selectAllEditableContent = className => e => {\r\n    if (e.target.className === className) {\r\n        window.getSelection().selectAllChildren(e.target.children[0]);\r\n    }\r\n};\r\n\r\nexport const getListChars = (isOrderedList, numberingStyle, bullet) => (\r\n    isOrderedList ? numberingSets[numberingStyle] : Array(4).fill(bullet)\r\n);\r\n\r\nexport const detectOS = () => {\r\n    if (navigator && navigator.appVersion) {\r\n        if (navigator.appVersion.indexOf(\"Win\") !== -1) {\r\n            return \"Windows\";\r\n        } else if (navigator.appVersion.indexOf(\"Mac\") !== -1) {\r\n            return \"MacOS\";\r\n        }\r\n    }\r\n};\r\n\r\nexport const focusInput = (inputRef, timeout = 300) => {\r\n    setTimeout(() => {\r\n        inputRef.current.focus();\r\n    }, timeout);\r\n};\r\n\r\nexport const focusOnEmptyField = refs => {\r\n    for (let i = 0; i < refs.length; i++) {\r\n        if (!refs[i].current.value) {\r\n            focusInput(refs[i]);\r\n            return;\r\n        }\r\n    }\r\n};\r\n\r\nexport const getPreviewFont = (font, customFont) => {\r\n    if (font !== \"custom\" && isFontAvailable(font)) {\r\n        return font;\r\n    } else if (font === \"custom\" && customFont && isFontAvailable(customFont)) {\r\n        return customFont;\r\n    }\r\n    return `'${DEFAULT_FONT}', 'Roboto', sans-serif`;\r\n}\r\n\r\nexport const fillMissedFields = formState => {\r\n    const res = { ...formState };\r\n    \r\n    [\r\n        [\"font\", \"customFont\"],\r\n        [\"sideNumberFont\", \"customSideNumberFont\"], \r\n        [\"lineSpacing\", \"customLineSpacing\"],\r\n    ].forEach(([option, customOption]) => {\r\n        if (formState[option] === \"custom\" && !formState[customOption]) {\r\n            res[option] = null;\r\n        }\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n    for (let fieldName in autoFillingRequiredFields) {\r\n        if (!res[fieldName]) {\r\n            res[fieldName] = autoFillingRequiredFields[fieldName];\r\n        }\r\n    }\r\n\r\n    return res;\r\n};\r\n\r\nexport const trimOnTextFieldBlur = changeFunc => e => {\r\n    if (e.target.value) {\r\n        changeFunc({ target: { value: e.target.value.trim()}});\r\n    }\r\n};","import React from \"react\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport LabelWithAsterisk from \"./LabelWithAsterisk\";\r\nimport CustomInnerDialog from \"./CustomInnerDialog\";\r\nimport { focusInput, trimOnTextFieldBlur } from \"../helpers\";\r\nimport { LANGS, MAIN_LANG_KEY, ADDITIONAL_LANGS } from \"../constants\";\r\n\r\nclass NewGroupDialog extends React.PureComponent {\r\n    isXref = this.props.groupType === \"xref\";\r\n\r\n    emptyGroup = {\r\n        ...LANGS.reduce((acc, { langKey }) => ({ ...acc, [langKey]: \"\" }), {}),\r\n        ...this.isXref && { groupKey: \"\" },\r\n    };\r\n\r\n    getInitialState = () => ({ ...this.emptyGroup, ...this.props.savedGroup });\r\n\r\n    state = this.getInitialState();\r\n\r\n    requiredFieldRef = React.createRef();\r\n\r\n    onInputChange = inputName => e => {\r\n        this.setState({ [inputName]: e.target.value });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState(this.getInitialState());\r\n        this.props.hideGroupDialogValidationError();\r\n        this.props.closeGroupDialog();\r\n    };\r\n\r\n    onGroupSave = () => {\r\n        if ((!this.isXref && this.state[MAIN_LANG_KEY].trim().length) || (this.isXref && this.state.groupKey.trim().length)) {\r\n            const groupToSave = {\r\n                ...LANGS.reduce((acc, { langKey }) => ({ ...acc, [langKey]: this.state[langKey].trim() }), {}),\r\n            };\r\n            if (this.isXref) {\r\n                groupToSave.groupKey = this.state.groupKey.trim();\r\n            }\r\n            this.props.hideGroupDialogValidationError();\r\n            this.props.saveGroup(null, (this.isXref ? groupToSave.groupKey : groupToSave[MAIN_LANG_KEY]), groupToSave);\r\n            this.props.closeGroupDialog();\r\n        } else {\r\n            this.props.showGroupDialogValidationError();\r\n            focusInput(this.requiredFieldRef);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isOpen, isEditMode, hasGroupDialogValidationError } = this.props;\r\n        const { onInputChange, onGroupSave, onClose, isXref } = this;\r\n        const titleText = `${isEditMode ? \"Edit\" : \"Create\"} new ${isXref ? \"reference \" : \"\"}group`\r\n        const buttonText = isEditMode ? \"Save\" : \"Create\";\r\n\r\n        return (\r\n            <CustomInnerDialog\r\n                className=\"decoratorDialog\"\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <DialogTitle>{titleText}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        { isXref && (\r\n                            <>\r\n                                <LabelWithAsterisk>Group Key</LabelWithAsterisk>\r\n                                <TextField\r\n                                    value={this.state.groupKey}\r\n                                    onChange={onInputChange(\"groupKey\")}\r\n                                    onBlur={trimOnTextFieldBlur(onInputChange(\"groupKey\"))}\r\n                                    inputRef={this.requiredFieldRef}\r\n                                    error={hasGroupDialogValidationError && !this.state.groupKey}\r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                />\r\n                            </>\r\n                        ) }\r\n                        { isXref ? (\r\n                            <>\r\n                                <span>Name EN</span>\r\n                                <TextField\r\n                                    value={this.state[MAIN_LANG_KEY]}\r\n                                    onChange={onInputChange(MAIN_LANG_KEY)}\r\n                                    onBlur={trimOnTextFieldBlur(onInputChange(MAIN_LANG_KEY))}\r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <LabelWithAsterisk>Name EN</LabelWithAsterisk>\r\n                                <TextField\r\n                                    value={this.state[MAIN_LANG_KEY]}\r\n                                    onChange={onInputChange(MAIN_LANG_KEY)}\r\n                                    onBlur={trimOnTextFieldBlur(onInputChange(MAIN_LANG_KEY))}\r\n                                    inputRef={this.requiredFieldRef}\r\n                                    error={hasGroupDialogValidationError && !this.state[MAIN_LANG_KEY]}\r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                />\r\n                            </>\r\n                        ) }\r\n                        { ADDITIONAL_LANGS.map(({ langKey, langName, regionFullName }) => (\r\n                            <React.Fragment key={langKey}>\r\n                                <span>Name {langName}{regionFullName && <span className=\"smallText\"><br/>{regionFullName}</span>}</span>\r\n                                <TextField\r\n                                    value={this.state[langKey]}\r\n                                    onChange={onInputChange(langKey)}\r\n                                    onBlur={trimOnTextFieldBlur(onInputChange(langKey))}\r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                />\r\n                            </React.Fragment>\r\n                        )) }                 \r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color=\"default\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={onGroupSave} color=\"primary\">\r\n                        {buttonText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </CustomInnerDialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewGroupDialog;","import React from \"react\";\r\n\r\nconst withNewGroupControl = (ViewComponent) => {\r\n    return class extends React.Component {\r\n        state = {\r\n            isGroupDialogOpen: false,\r\n            hasGroupDialogValidationError: false,\r\n        };\r\n        \r\n        openGroupDialog = () => {\r\n            this.setState({ isGroupDialogOpen: true });\r\n        };\r\n\r\n        closeGroupDialog = () => {\r\n            this.setState({ isGroupDialogOpen: false });\r\n        };\r\n\r\n        showGroupDialogValidationError = () => {\r\n            this.setState({ hasGroupDialogValidationError: true });\r\n        };\r\n\r\n        hideGroupDialogValidationError = () => {\r\n            this.setState({ hasGroupDialogValidationError: false });\r\n        };\r\n\r\n        render() {\r\n            const { \r\n                openGroupDialog, \r\n                closeGroupDialog, \r\n                showGroupDialogValidationError, \r\n                hideGroupDialogValidationError \r\n            } = this; \r\n\r\n            return ( \r\n                <ViewComponent \r\n                    {...this.props} \r\n                    {...this.state} \r\n                    {...{ openGroupDialog, closeGroupDialog, showGroupDialogValidationError, hideGroupDialogValidationError }} \r\n                /> \r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withNewGroupControl;","import { getShortCutUtils } from \"../helpers\";\r\n\r\nexport const UPDATE_DEC_FORM = \"UPDATE_DEC_FORM\";\r\nexport const CLEAR_DEC_FORM = \"CLEAR_DEC_FORM\";\r\nexport const SHOW_DEC_DIALOG = \"SHOW_DEC_DIALOG\";\r\nexport const HIDE_DEC_DIALOG = \"HIDE_DEC_DIALOG\";\r\nexport const SWITCH_DEC_DIALOG_TAB = \"SWITCH_DEC_DIALOG_TAB\";\r\nexport const RESET_DEC_DIALOG_TAB = \"RESET_DEC_DIALOG_TAB\";\r\nexport const SWITCH_ON_DEC_DIALOG_EDIT_MODE = \"SWITCH_ON_DEC_DIALOG_EDIT_MOD\";\r\nexport const SWITCH_OFF_DEC_DIALOG_EDIT_MODE = \"SWITCH_OFF_DEC_DIALOG_EDIT_MODE\";\r\nexport const UPDATE_VALIDATION_ERROR = \"UPDATE_VALIDATION_ERROR\";\r\nexport const REMOVE_VALIDATION_ERROR = \"REMOVE_VALIDATION_ERROR\";\r\n\r\nexport const updateDecoratorForm = payload => {\r\n    return {\r\n        type: UPDATE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearDecoratorForm = payload => {\r\n    return {\r\n        type: CLEAR_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const showDecoratorDialog = () => {\r\n    return {\r\n        type: SHOW_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const hideDecoratorDialog = () => {\r\n    return {\r\n        type: HIDE_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const switchDecDialogTab = payload => {\r\n    return {\r\n        type: SWITCH_DEC_DIALOG_TAB,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const resetDecDialogTab = () => {\r\n    return {\r\n        type: RESET_DEC_DIALOG_TAB,\r\n    };\r\n}\r\n\r\nexport const switchOnDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_ON_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const switchOffDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_OFF_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const updateValidationError = payload => {\r\n    return {\r\n        type: UPDATE_VALIDATION_ERROR,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const removeValidationError = () => {\r\n    return {\r\n        type: REMOVE_VALIDATION_ERROR,\r\n    };\r\n};\r\n\r\nexport const openDialog = dispatch => dec => {\r\n    if (dec) {\r\n        dispatch(updateDecoratorForm(dec));\r\n        dispatch(switchOnDecDialogEditMode());\r\n    } \r\n    dispatch(showDecoratorDialog());\r\n};\r\n\r\nexport const closeDialog = dispatch => () => {\r\n    dispatch(hideDecoratorDialog());\r\n    dispatch(switchOffDecDialogEditMode());\r\n    dispatch(removeValidationError());\r\n    dispatch(resetDecDialogTab());\r\n    dispatch(clearDecoratorForm());\r\n};\r\n\r\nexport const setValue = dispatch => propName => (e, secondArg = \"\") => {\r\n    const newValue = (e && e.target.value !== \"\" && e.target.value !== undefined) ? e.target.value : secondArg;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newValue,\r\n    }));\r\n};\r\n\r\nexport const toggleValue = dispatch => propName => (e, secondArg) => {\r\n    const newValue = e ? e.target.checked : secondArg;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newValue,\r\n    }));\r\n};\r\n\r\nexport const setBullet = dispatch => propName => (e, secondArg) => {\r\n    const input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n\r\n    const newBullet = input.length > 1 ? input[input.length - 1] : input;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newBullet,\r\n    }));\r\n    return newBullet;\r\n};\r\n\r\nexport const setColor = dispatch => propName => (e, secondArg) => {\r\n    const input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n    \r\n    const filteredInput = input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i) \r\n                          ? input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i)[0].slice(0, 6)\r\n                          : \"\" ;\r\n    \r\n    dispatch(updateDecoratorForm({\r\n        [propName]: filteredInput,\r\n    }));\r\n    return filteredInput;\r\n};\r\n\r\nexport const setNumber = dispatch => propName => (e, secondArg) => {\r\n    let input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n\r\n    const filteredInput = input.replace(\",\", \".\").trim().match(/[0-9]+/i) \r\n                          ? input.replace(\",\", \".\").trim().match(/\\d+[.,]?\\d*/)[0]\r\n                          : \"\" ;\r\n\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: filteredInput,\r\n    }));\r\n    return filteredInput;\r\n};\r\n\r\nexport const setShortCut = dispatch => (valuePropName, viewPropName) => e => {\r\n    const systemName = valuePropName.search(/mac/gi) !== -1 ? \"MacOS\" : \"Windows\";\r\n    const shortCut = getShortCutUtils(systemName).convertEventToShortCut(e);\r\n    if (shortCut && shortCut.deleteKey) {\r\n        setTimeout(() => {\r\n            dispatch(updateDecoratorForm({ \r\n                [valuePropName]: \"\" \r\n            }));\r\n            dispatch(updateDecoratorForm({ \r\n                [viewPropName]: \"\" \r\n            }));\r\n        }, 100);\r\n    } else if (shortCut) {\r\n        dispatch(updateDecoratorForm({ \r\n            [valuePropName]: shortCut.value \r\n        }));\r\n        dispatch(updateDecoratorForm({ \r\n            [viewPropName]: shortCut.stringValue \r\n        }));\r\n    }\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport LabelWithAsterisk from \"../common/LabelWithAsterisk\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\nimport { trimOnTextFieldBlur, focusInput } from \"../helpers\";\r\nimport { setValue, toggleValue, updateValidationError } from \"../actions\";\r\nimport { MAIN_LANG_KEY, ADDITIONAL_LANGS, sectionTypesMap } from \"../constants\";\r\n\r\nclass NamesSection extends React.Component {\r\n    decKeyInputRef = React.createRef();\r\n    decNameEnInputRef = React.createRef();\r\n    inputRefs = [this.decKeyInputRef, this.decNameEnInputRef];\r\n\r\n    onGroupChange = (e, groupName, group) => {\r\n        if (group) {\r\n            this.props.changeGroupToCreate(null, group);\r\n        }\r\n        this.props.changeGroup(e, groupName);\r\n    };\r\n\r\n    onNameChange = langKey => e => {\r\n        const newValue = {\r\n            ...this.props.name,\r\n            [langKey]: e.target.value,\r\n        };\r\n        this.props.changeName(null, newValue);\r\n    };\r\n\r\n    onSectionTypesChange = typeName => e => {\r\n        const newValue = {\r\n            ...this.props.sectionTypes,\r\n            [typeName]: e.target.checked,\r\n        };\r\n        this.props.changeSectionTypes(null, newValue);\r\n    };\r\n\r\n    onValidationError = () => {\r\n        const sectionErrors = this.props.sectionErrors || [];\r\n        if (sectionErrors.includes(\"decKey\")) {\r\n            focusInput(this.decKeyInputRef);\r\n        } else if (sectionErrors.includes(\"name\")) {\r\n            focusInput(this.decNameEnInputRef);\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.sectionErrors) {\r\n            this.onValidationError();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.sectionErrors && !prevprops.sectionErrors) {\r\n            this.onValidationError();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            groupToCreate, \r\n            isGroupDialogOpen,\r\n            hasGroupDialogValidationError,\r\n            openGroupDialog, \r\n            closeGroupDialog, \r\n            showGroupDialogValidationError, \r\n            hideGroupDialogValidationError,\r\n            sectionErrors,\r\n            decKey, changeDecKey,\r\n            sectionTypes,\r\n            group,\r\n            active, changeActive,\r\n            name,\r\n        } = this.props;\r\n\r\n        const newGroupName = groupToCreate[MAIN_LANG_KEY];\r\n        const isEditMode = !!newGroupName;\r\n\r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n                { isEditMode ? (\r\n                    <React.Fragment>\r\n                        <span>Key</span>\r\n                        <TextField \r\n                            value={decKey}\r\n                            inputRef={this.decKeyInputRef}\r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            disabled\r\n                        />\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <React.Fragment>\r\n                        <LabelWithAsterisk>Key</LabelWithAsterisk>\r\n                        <TextField \r\n                            value={decKey}\r\n                            onChange={changeDecKey}\r\n                            onBlur={trimOnTextFieldBlur(changeDecKey)}\r\n                            error={!!(sectionErrors && sectionErrors.includes(\"decKey\"))}\r\n                            inputRef={this.decKeyInputRef}\r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                        />\r\n                    </React.Fragment>\r\n                )}\r\n\r\n                <span>Section types</span>\r\n                <div className=\"checkBoxesSet\">\r\n                    { Array.from(sectionTypesMap).map(([ key, value ]) => (\r\n                        <div className=\"labeledCheckbox\" key={key}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                label={value}\r\n                                labelPlacement=\"end\"\r\n                                checked={sectionTypes[key]}\r\n                                onChange={this.onSectionTypesChange(key)}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <span>Group</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        value={group} \r\n                        onChange={this.onGroupChange}\r\n                        input={ <CustomInput /> }  \r\n                    >\r\n                        <option value=\"\">...</option>\r\n                        { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                        <option value=\"0\">Text</option>\r\n                        <option value=\"1\">Heading</option>\r\n                        <option value=\"2\">Heading Heading Heading Heading</option>\r\n                    </NativeSelect>\r\n                    { !(isEditMode && group !== newGroupName) && (\r\n                        <Button color=\"primary\" className=\"textButton\" onClick={openGroupDialog}>\r\n                            { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                        </Button>\r\n                    ) }\r\n                </div>\r\n\r\n                <span>Active</span>\r\n                <div className=\"unlabeledCheckbox\">\r\n                    <Checkbox\r\n                        checked={active}\r\n                        onChange={changeActive} \r\n                        color=\"primary\" \r\n                    />\r\n                </div>\r\n\r\n                <LabelWithAsterisk>Name EN</LabelWithAsterisk>\r\n                <TextField \r\n                    value={name[MAIN_LANG_KEY]}\r\n                    onChange={this.onNameChange(MAIN_LANG_KEY)}\r\n                    onBlur={trimOnTextFieldBlur(this.onNameChange(MAIN_LANG_KEY))}\r\n                    error={!!(sectionErrors && sectionErrors.includes(\"name\"))}\r\n                    inputRef={this.decNameEnInputRef}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                { ADDITIONAL_LANGS.map(({ langKey, langName, regionFullName }) => (\r\n                  <React.Fragment key={langKey}>\r\n                    <span>Name {langName}{regionFullName && <span className=\"smallText\"><br/>{regionFullName}</span>}</span>\r\n                    <TextField \r\n                        value={name[langKey]}\r\n                        onChange={this.onNameChange(langKey)}\r\n                        onBlur={trimOnTextFieldBlur(this.onNameChange(langKey))}\r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                    />\r\n                  </React.Fragment>  \r\n                )) }\r\n\r\n                <NewGroupDialog \r\n                    isOpen={isGroupDialogOpen}\r\n                    saveGroup={this.onGroupChange}\r\n                    savedGroup={groupToCreate}\r\n                    groupType=\"decorators\"\r\n                    { ...{ \r\n                        isGroupDialogOpen,\r\n                        isEditMode,\r\n                        hasGroupDialogValidationError,\r\n                        closeGroupDialog, \r\n                        showGroupDialogValidationError, \r\n                        hideGroupDialogValidationError, \r\n                    } } \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return { \r\n        sectionErrors: validationError.namesSection,\r\n        formState: form,\r\n        decKey: form.decKey,\r\n        group: form.group,\r\n        active: form.active,\r\n        name: form.name,\r\n        groupToCreate: form.groupToCreate,\r\n        sectionTypes: form.sectionTypes,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        changeDecKey: setValue(dispatch)(\"decKey\"),\r\n        changeGroup: setValue(dispatch)(\"group\"),\r\n        changeGroupToCreate: setValue(dispatch)(\"groupToCreate\"),\r\n        changeActive: toggleValue(dispatch)(\"active\"),\r\n        changeName: setValue(dispatch)(\"name\"),\r\n        changeSectionTypes: setValue(dispatch)(\"sectionTypes\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(withNewGroupControl(NamesSection)));","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInputShort = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInputShort;","import SectionTitle from \"./SectionTitle\";\r\nexport default SectionTitle;","import React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst SectionTitle = ({text, children}) => (\r\n    <>\r\n        <div className=\"sectionTitle\">\r\n            <span>{text || children}</span>\r\n        </div>\r\n        <div className=\"spaceHolder\"/>\r\n    </>\r\n);\r\n\r\nexport default SectionTitle;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst BackSpaceActionInput = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"175px\",\r\n      width: \"175px\",\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default BackSpaceActionInput;","import PositioningSection from \"./PositioningSection\";\r\nexport default PositioningSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport SectionTitle from \"../../common/SectionTitle\";\r\nimport { backSpaceActionsMap, decoratorsList, GLOBAL_FALLBACK_MARK } from \"../../constants\";\r\nimport BackSpaceActionInput from \"./BackSpaceActionInput\";\r\nimport { setValue, toggleValue } from \"../../actions\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst PositioningSection = props => {\r\n    const {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        fixedIndentation, changeisFixedIndentation,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithContentStyle, changeBackspaceActionWithContentStyle,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    } = props;\r\n\r\n    const onBackspaceActionChange = e => {\r\n        if (e.target.value === \"apply_other_pd\") {\r\n            changeBackspaceActionWithContentStyle(null, GLOBAL_FALLBACK_MARK);\r\n        } else if (backspaceActionWithContentStyle) {\r\n            changeBackspaceActionWithContentStyle(null, \"\");\r\n        }\r\n        changeBackspaceActionWithContent(e);\r\n    };\r\n\r\n    const backSpaceActionStyleSettingsState = backspaceActionWithContent === \"apply_other_pd\" ? \"shown\" : \"hidden\";\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Indentational level</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={indentationalLevel}\r\n                    onChange={changeIndentationalLevel}\r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <span>Fixed indentation</span>\r\n            <div className=\"unlabeledCheckbox\">\r\n                <Checkbox \r\n                    checked={fixedIndentation}\r\n                    onChange={changeisFixedIndentation}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n            \r\n            <SectionTitle text=\"BACKSPACE\" />\r\n\r\n            <span>At the beginning of a section with content</span>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <div>\r\n                    <NativeSelect \r\n                        value={backspaceActionWithContent}\r\n                        onChange={onBackspaceActionChange}\r\n                        input={ <BackSpaceActionInput /> }\r\n                    >\r\n                        {Array.from(backSpaceActionsMap).map(([key, value]) => (\r\n                            <option value={key} key={key}>{value}</option>\r\n                        ))}\r\n                    </NativeSelect>\r\n                </div>\r\n                <div className={`optionalSettings optionalSettings_${backSpaceActionStyleSettingsState} wideSelectBox`}>\r\n                    <NativeSelect\r\n                        value={backspaceActionWithContentStyle}\r\n                        onChange={changeBackspaceActionWithContentStyle}\r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        <option value={GLOBAL_FALLBACK_MARK}>Global Fallback Style</option>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                </div>\r\n            </div>\r\n\r\n            <SectionTitle text=\"RETURN\" />\r\n\r\n\r\n            <span>Style of next section</span>\r\n            <div className=\"wideSelectBox\">\r\n                <NativeSelect\r\n                    value={returnActionNextSection}\r\n                    onChange={changeReturnActionNextSection}\r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"\">Nothing</option>\r\n                    <option value={GLOBAL_FALLBACK_MARK}>Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n\r\n            <span>PD for new section on return if empty</span>\r\n            <div className=\"wideSelectBox\">\r\n                <NativeSelect \r\n                    value={returnActionEmptySection}\r\n                    onChange={changeReturnActionEmptySection}\r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"\">Nothing</option>\r\n                    <option value={GLOBAL_FALLBACK_MARK}>Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <SectionTitle text=\"TAB / SHIFT+TAB\" />\r\n\r\n            <span>TAB – change current style to</span>\r\n            <div className=\"wideSelectBox\">\r\n                <NativeSelect\r\n                    value={tabAction}\r\n                    onChange={changeTabAction}\r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"\">Nothing</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <span>SHIFT+TAB – change current style to</span>\r\n            <div className=\"wideSelectBox\">\r\n                <NativeSelect\r\n                    value={shiftTabAction}\r\n                    onChange={changeShiftTabAction} \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"\">Nothing</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        indentationalLevel: form.indentationalLevel,\r\n        backspaceActionWithContent: form.backspaceActionWithContent,\r\n        backspaceActionWithContentStyle: form.backspaceActionWithContentStyle,\r\n        returnActionNextSection: form.returnActionNextSection,\r\n        returnActionEmptySection: form.returnActionEmptySection,\r\n        tabAction: form.tabAction,\r\n        shiftTabAction: form.shiftTabAction,\r\n        fixedIndentation: form.fixedIndentation,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeIndentationalLevel: setValue(dispatch)(\"indentationalLevel\"),\r\n        changeBackspaceActionWithContent: setValue(dispatch)(\"backspaceActionWithContent\"),\r\n        changeBackspaceActionWithContentStyle: setValue(dispatch)(\"backspaceActionWithContentStyle\"),\r\n        changeBackspaceActionWithoutContent: setValue(dispatch)(\"backspaceActionWithoutContent\"),\r\n        changeBackspaceActionWithoutContentStyle: setValue(dispatch)(\"backspaceActionWithoutContentStyle\"),\r\n        changeReturnActionNextSection: setValue(dispatch)(\"returnActionNextSection\"),\r\n        changeReturnActionEmptySection: setValue(dispatch)(\"returnActionEmptySection\"),\r\n        changeTabAction: setValue(dispatch)(\"tabAction\"),\r\n        changeShiftTabAction: setValue(dispatch)(\"shiftTabAction\"),\r\n        changeisFixedIndentation: toggleValue(dispatch)(\"fixedIndentation\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(PositioningSection));","import { getOffset, getCorrectColor, getPreviewFont } from \"../../helpers\";\r\nimport { alignmentList, DEFAULT_FONT_SIZE, DEFAULT_LINE_SPACING } from \"../../constants\";\r\n\r\nexport const generatePreviewStyle = formState => {\r\n    const {\r\n        font,\r\n        customFont,\r\n        alignment,\r\n        fontSize,\r\n        fontColor,\r\n        bold,\r\n        italic,\r\n        underlined,\r\n        stroke,\r\n        textTransform,\r\n        verticalAlign,\r\n        marginTop,\r\n        marginBottom,\r\n        firstRowIndent,\r\n        otherRowsIndent,\r\n        lineSpacing,\r\n        customLineSpacing,\r\n        wordSpacing,\r\n        borderLeft,\r\n        borderRight,\r\n        borderTop,\r\n        borderBottom,\r\n        borderType,\r\n        borderColor,\r\n        borderThickness,\r\n        fillingColor,\r\n        fillingConnectToPrevious,\r\n        connectToPrevious,\r\n    } = formState;\r\n    \r\n    const previewFontColor = getCorrectColor(fontColor, \"f5f5f5\");\r\n    const previewFillingColor = getCorrectColor(fillingColor, \"f5f5f5\");\r\n    const previewAdditionalFillingColor = fillingConnectToPrevious ? previewFillingColor : \"f5f5f5\";\r\n    const indentsDifference = (firstRowIndent || 0) - (otherRowsIndent || 0);\r\n    const previewMarginLeft = `${!otherRowsIndent ? 0 : (otherRowsIndent >= 6 ? 6 : otherRowsIndent)}cm`;\r\n    const previewTextIndent = `${!indentsDifference ? 0 : (indentsDifference >= 6 ? 6 : indentsDifference)}cm`;\r\n    const previewLineSpacing = lineSpacing !== \"custom\" ? lineSpacing : (customLineSpacing || DEFAULT_LINE_SPACING);\r\n    const offset = getOffset(verticalAlign, fontSize);\r\n    const previewMarginTop = `${(!connectToPrevious ? parseFloat(marginTop) : 0) + offset}pt`;\r\n    const previewMarginBottom = `${(!connectToPrevious ? parseFloat(marginBottom) : 0) - offset}pt`;\r\n    const previewBorderLeft = borderLeft ? `${borderThickness}pt ${borderType} #${borderColor}` : \"none\";\r\n    const previewBorderRight = borderRight ? `${borderThickness}pt ${borderType} #${borderColor}` : \"none\";\r\n    const previewBorderTop = borderTop ? `${borderThickness}pt ${borderType} #${borderColor}` : \"none\";\r\n    const previewBorderBottom = borderBottom ? `${borderThickness}pt ${borderType} #${borderColor}` : \"none\";\r\n    const correctFontSize = fontSize <= 120 ? fontSize : 120;\r\n    const previewStyle = {\r\n        fontSize: !fontSize ? `${DEFAULT_FONT_SIZE}pt` : `${correctFontSize}pt`,\r\n        color: `#${previewFontColor}`,\r\n        fontFamily: getPreviewFont(font, customFont),\r\n        alignItems: alignmentList[alignment],\r\n        textAlign: alignment,\r\n        fontWeight: bold ? \"bold\" : \"normal\",\r\n        fontStyle: italic ? \"italic\" : \"normal\",\r\n        textDecoration: `${underlined ? \"underline\" : \"\"}${stroke ? \" line-through\" : \"\"}`.trim() || \"none\",\r\n        verticalAlign,\r\n        textTransform: textTransform !== \"small-caps\" ? textTransform : \"none\",\r\n        fontVariant: textTransform === \"small-caps\" ? textTransform : \"normal\",\r\n        backgroundColor: `#${previewFillingColor}`,\r\n        backgroundImage:  `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        borderImage: `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        marginLeft: previewMarginLeft,\r\n        textIndent: previewTextIndent,\r\n        wordSpacing: `${wordSpacing || 0}pt`,\r\n        lineHeight: previewLineSpacing,\r\n        marginTop: previewMarginTop,\r\n        marginBottom: previewMarginBottom,\r\n        borderLeft: previewBorderLeft,\r\n        borderRight: previewBorderRight,\r\n        borderTop: previewBorderTop,\r\n        borderBottom: previewBorderBottom,\r\n        outline: \"none\",\r\n        ...borderLeft && { paddingLeft: `${correctFontSize / 3}pt`},\r\n        ...borderRight && { paddingRight: `${correctFontSize / 3}pt`},\r\n        ...borderTop && { paddingTop: `${correctFontSize / 3}pt`},\r\n        ...borderBottom && { paddingBottom: `${correctFontSize / 3}pt`},\r\n    };\r\n\r\n    return previewStyle;\r\n};\r\n\r\nexport const generateSideNumberStyle = formState => {\r\n    const { \r\n        listType,\r\n        suffixDistance,\r\n        sideNumber,\r\n        sideNumberFont,\r\n        customSideNumberFont,\r\n        sideNumberAlignment,\r\n        sideNumberFontSize,\r\n        sideNumberFontColor,\r\n        sideNumberFillingColor,\r\n        sideNumberWidth,\r\n        sideNumberRadius,\r\n        sideNumberBold,\r\n        sideNumberItalic,\r\n        sideNumberUnderlined,\r\n        sideNumberLineHeight,\r\n        fontSize,\r\n        fontColor,\r\n        fillingColor,\r\n    } = formState;\r\n\r\n    const previewSideNumberFontColor = getCorrectColor(sideNumberFontColor, getCorrectColor(fontColor ,\"000\"));\r\n    const previewSideNumberFillingColor = getCorrectColor(sideNumberFillingColor, getCorrectColor(fillingColor ,\"f5f5f5\"));\r\n    const fontSizeNumber = +(sideNumberFontSize || fontSize || DEFAULT_FONT_SIZE);\r\n    const previewFontSize = `${fontSizeNumber <= 120 ? fontSizeNumber : 120}pt`;\r\n\r\n\r\n    const sideNumberStyle = (!sideNumber || listType === \"unordered\") ? {} : {\r\n        fontFamily: getPreviewFont(sideNumberFont, customSideNumberFont),\r\n        textAlign: sideNumberAlignment,\r\n        fontSize: previewFontSize,\r\n        color: `#${previewSideNumberFontColor}`,\r\n        backgroundColor: `#${previewSideNumberFillingColor}`,\r\n        minWidth: `${!sideNumberWidth ? 0 : (+sideNumberWidth < 150 ? sideNumberWidth : 150)}pt`,\r\n        borderRadius: `${sideNumberRadius || 0}pt`,\r\n        fontWeight: sideNumberBold ? \"bold\" : \"normal\",\r\n        fontStyle: sideNumberItalic ? \"italic\" : \"normal\",\r\n        textDecoration: sideNumberUnderlined ? \"underline\" : \"none\",\r\n        ...sideNumberLineHeight && { lineHeight: `${sideNumberLineHeight}pt`},\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n    };\r\n\r\n    return sideNumberStyle;\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { generatePreviewStyle, generateSideNumberStyle } from \"./generators\";\r\nimport { getListChars } from \"../../helpers\";\r\nimport { bulletNamesMap } from \"../../constants\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst ListPreview = props => {\r\n    const { \r\n        formState,\r\n        prefix, \r\n        suffix, \r\n        suffixDistance,\r\n        listType,\r\n        listItem, \r\n        unicodeChar,\r\n        listItemString,\r\n        numberingStyle,\r\n        sideNumber,\r\n        patternMode,\r\n    } = props;\r\n\r\n    const isOrderedList = listType === \"ordered\";\r\n\r\n    let currentBullet;\r\n\r\n    if (listItem === \"custom\") {\r\n        currentBullet = unicodeChar;\r\n    } else if (listItem === \"string\") {\r\n        currentBullet = listItemString;\r\n    } else {\r\n        currentBullet = bulletNamesMap.get(listItem);\r\n    }\r\n\r\n    const listChars = getListChars(isOrderedList, numberingStyle, currentBullet);\r\n\r\n    let listItemBeginnings = (listType === \"ordered\" && patternMode) ? listChars : listChars.map(li => (`${prefix}${li}${suffix}`));\r\n\r\n    const previewStyle = generatePreviewStyle(formState);\r\n    const isSideNumber = isOrderedList && sideNumber;\r\n    const sideNumberStyle = isSideNumber ? generateSideNumberStyle(formState) : {};\r\n    const listItemBeginningStyle = {\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n        ...sideNumberStyle,\r\n    };\r\n\r\n    return (\r\n        <div className=\"preview preview_list\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div className=\"preview-content\">\r\n                <div className=\"demonstrationElement\">\r\n                    <div\r\n                        className=\"demonstrationElement-text\"\r\n                        style={previewStyle}\r\n                    >\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginningStyle}\r\n                            >{`${listItemBeginnings[0]}`}</span><span>The first list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginningStyle}\r\n                            >{`${listItemBeginnings[1]}`}</span><span>The second list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginningStyle}\r\n                            >{`${listItemBeginnings[2]}`}</span><span>The third list item</span>\r\n                        </div>\r\n                        { isSideNumber && (\r\n                            <>\r\n                                <div>\r\n                                    <span \r\n                                        className=\"listItemBeginning\"\r\n                                        style={listItemBeginningStyle}\r\n                                    >{`${listItemBeginnings[3]}`}</span><span>One more list item</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span \r\n                                        className=\"listItemBeginning\"\r\n                                        style={listItemBeginningStyle}\r\n                                    >{`${listItemBeginnings[4]}`}</span><span>And one more</span>\r\n                                </div>\r\n                            </>\r\n                        ) }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        formState: form,\r\n        previewText: form.previewText,\r\n        prefix: form.prefix, \r\n        suffix: form.suffix,\r\n        patternMode: form.patternMode,\r\n        suffixDistance: form.suffixDistance,\r\n        listType: form.listType,\r\n        listItem: form.listItem, \r\n        unicodeChar: form.unicodeChar,\r\n        numberingStyle: form.numberingStyle,\r\n        sideNumber: form.sideNumber,\r\n        listItemString: form.listItemString,\r\n    };\r\n};\r\n\r\nexport default (connect(mapStateToProps)(ListPreview));","import ColorField from \"./ColorField\";\r\nexport default ColorField;","import React from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport { getCorrectColor, selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ColorField extends React.PureComponent {\r\n    state = {\r\n        isOpen: this.props.isOpen,\r\n    };\r\n\r\n    hideColorPicker = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    showColorPicker = () => {\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    colorPickerHandler = changeColor => ({ hex }) => {\r\n        changeColor(null, hex);\r\n    };\r\n\r\n    render() {\r\n        const { colorCode, changeColorCode, defaultColorCode, required, bottomAligned } = this.props;\r\n        const correctColor = getCorrectColor(colorCode);\r\n        const colorError = correctColor !== colorCode;\r\n        const inputError = colorError && (required || !!colorCode);\r\n        const pickerColor = colorError ? \"\" : `#${correctColor}`;\r\n        const colorSampleStyle = {\r\n            backgroundColor: `#${correctColor}`,\r\n        };\r\n        const colorPickerClassName = `colorPicker${ bottomAligned ? \" colorPicker_bottomAligned\" : \"\"}`;\r\n\r\n        return (\r\n            <div className=\"colorField\">\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    className=\"numberInput\" \r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                    }}\r\n                    value={colorCode}\r\n                    onChange={changeColorCode}\r\n                    onClick={e => { \r\n                        if (defaultColorCode) {\r\n                            selectAllOnClick(defaultColorCode)(e);\r\n                        }\r\n                        // this.showColorPicker(); \r\n                    }}\r\n                    error={inputError}\r\n                />\r\n                <div\r\n                    onClick={this.showColorPicker}\r\n                    className=\"colorSample\" \r\n                    style={colorSampleStyle}\r\n                />\r\n                {this.state.isOpen && (\r\n                    <div className={colorPickerClassName}>\r\n                        <div className=\"colorPicker-chromeBox\">\r\n                            <ChromePicker\r\n                                onChangeComplete={this.colorPickerHandler(changeColorCode)}\r\n                                color={pickerColor}\r\n                                disableAlpha\r\n                            />\r\n                        </div>\r\n                        <div className=\"colorPicker-popOver\"  onClick={this.hideColorPicker}></div>\r\n                    </div>\r\n                ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorField;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport CustomInput from \"./CustomInput\";\r\nimport { focusInput, changeAndScroll } from \"../helpers\";\r\nimport fontsSet from \"../constants/fontsSet\";\r\n\r\nclass FontSelectFields extends React.PureComponent {\r\n    customFontInputRef = React.createRef();\r\n\r\n    onFontChange = e => {\r\n        this.props.changeFont(e);\r\n        if (e.target.value === \"custom\") {\r\n            focusInput(this.customFontInputRef);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { font, customFont, changeCustomFont } = this.props;\r\n        const optionalFieldState = font === \"custom\" ? \"optionalField_shown\" : \"optionalField_hidden\";\r\n        return (\r\n            <>\r\n                <span >Font</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={font}\r\n                    onChange={changeAndScroll(this.onFontChange, 500)}\r\n                >\r\n                    { fontsSet.map(fontName => <option value={fontName} key={fontName}>{fontName}</option>) }\r\n                    <option value=\"custom\" className=\"highlightedOption\">Custom</option>\r\n                </NativeSelect>\r\n    \r\n                <div className={`optionalField ${optionalFieldState}`}>\r\n                    <span></span>\r\n                </div>\r\n                <div className={`optionalField ${optionalFieldState}`}>\r\n                    <TextField \r\n                        value={customFont}\r\n                        onChange={changeCustomFont}\r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        placeholder=\"Enter the font name\"\r\n                        inputRef={this.customFontInputRef}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FontSelectFields;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport ListPreview from \"../../common/Preview/ListPreview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport LabelWithAsterisk from \"../../common/LabelWithAsterisk\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport { \r\n    orderedListStylesMap, \r\n    bulletNamesMap, \r\n    DEFAULT_FONT_SIZE,\r\n    DEFAULT_SIDE_NUMBER_FONT_COLOR,\r\n    DEFAULT_SIDE_NUMBER_FILLING_COLOR,\r\n    DEFAULT_SIDE_NUMBER_WIDTH,\r\n    DEFAULT_SIDE_NUMBER_RADIUS,\r\n } from \"../../constants\";\r\nimport { \r\n    updateValidationError,\r\n    setValue,\r\n    toggleValue,\r\n    setNumber,\r\n    setColor,\r\n    setBullet,\r\n} from \"../../actions\";\r\nimport { \r\n    selectAllOnClick, \r\n    changeAndScroll,\r\n    scrollToBottom,\r\n    focusInput,\r\n    unicodeNumberToChar, \r\n    unicodeCharToNumber,\r\n    trimOnTextFieldBlur,\r\n} from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ListSection extends React.Component {\r\n    listNameInputRef = React.createRef();\r\n    unicodeCharInputRef = React.createRef();\r\n\r\n    onIsListChange = e => {\r\n        const { listName } = this.props;\r\n        this.props.changeIsList(e);\r\n\r\n        if (e.target.checked && !listName) {\r\n            focusInput(this.listNameInputRef);\r\n        }       \r\n    };\r\n\r\n    onListTypeChange = e => {\r\n        const { suffix, listName, orderLevel } = this.props;\r\n        const { value } = e.target;\r\n\r\n        if (value === \"ordered\" && !orderLevel) {\r\n            this.props.changeOrderLevel(null, \"0\")\r\n        }\r\n\r\n        this.props.changeListType(null, value);\r\n\r\n        if (value === \"ordered\" && !listName) {\r\n            focusInput(this.listNameInputRef);\r\n        } else {\r\n            scrollToBottom(\"content-rightSide\");\r\n        }\r\n        if (value === \"ordered\" && suffix === \"\") {\r\n            this.props.changeSuffix(null, \".\");\r\n        } else if (value === \"unordered\" && suffix === \".\") {\r\n            this.props.changeSuffix(null, \"\");\r\n        }\r\n    };\r\n\r\n    onListItemChange = e => {\r\n        this.props.changeListItem(e);\r\n        if (e.target.value === \"custom\" && !this.props.unicodeChar) {\r\n            focusInput(this.unicodeCharInputRef);\r\n        }\r\n    };\r\n\r\n    onUnicodeNumberChange = e => {\r\n        const newUnicodeNumber = this.props.changeUnicodeNumber(e);\r\n        const newUnicodeChar = newUnicodeNumber !== \"\" ? unicodeNumberToChar(newUnicodeNumber) : \"\";\r\n        this.props.changeUnicodeChar(null, newUnicodeChar);\r\n    };\r\n    \r\n    onUnicodeCharChange = e => {\r\n        const newUnicodeChar = this.props.changeUnicodeChar(e);\r\n        const newUnicodeNumber = newUnicodeChar !== \"\" ? unicodeCharToNumber(newUnicodeChar) : \"\";\r\n        this.props.changeUnicodeNumber(null, newUnicodeNumber);\r\n    };\r\n\r\n    onSideNumberChange = e => {\r\n        const { suffix } = this.props;\r\n        this.props.changeSideNumber(e);\r\n        if (e.target.checked && suffix === \".\") {\r\n            this.props.changeSuffix(null, \"\");\r\n        } else if (!e.target.checked && suffix === \"\") {\r\n            this.props.changeSuffix(null, \".\");\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.sectionErrors) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.sectionErrors && !prevprops.sectionErrors) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            sectionErrors,\r\n            listPreviewProps,\r\n            isList,\r\n            listName, changeListName,\r\n            orderLevel, changeOrderLevel,\r\n            patternMode, changePatternMode,\r\n            listPattern, changeListPattern,\r\n            prefix, changePrefix,\r\n            suffix, changeSuffix,\r\n            suffixDistance, changeSuffixDistance,\r\n            magicTabs, changeMagicTabs,\r\n            listType,\r\n            listItem,\r\n            unicodeNumber,\r\n            unicodeChar,\r\n            listItemString, changeListItemString,\r\n            numberingStyle, changeNumberingStyle,\r\n            continueNumbering, changeContinueNumbering,\r\n            allowRestartNumbering, changeAllowRestartNumbering,\r\n            includePreviousFrom, changeIncludePreviousFrom,\r\n            softReturn, changeSoftReturn,\r\n            sideNumber,\r\n            sideNumberFont, changeSideNumberFont,\r\n            customSideNumberFont, changeCustomSideNumberFont,\r\n            sideNumberAlignment, changeSideNumberAlignment,\r\n            sideNumberFontSize, changeSideNumberFontSize,\r\n            sideNumberFontColor, changeSideNumberFontColor,\r\n            sideNumberFillingColor, changeSideNumberFillingColor,\r\n            sideNumberWidth, changeSideNumberWidth,\r\n            sideNumberRadius, changeSideNumberRadius,\r\n            sideNumberBold, changeSideNumberBold,\r\n            sideNumberItalic, changeSideNumberItalic,\r\n            sideNumberUnderlined, changeSideNumberUnderlined,\r\n            sideNumberLineHeight, changeSideNumberLineHeight,\r\n        } = this.props;\r\n        \r\n        const mainListSettingsState = isList ? \"shown\" : \"hidden\";\r\n        const unorderedListSettingsState = (isList && listType === \"unordered\") ? \"shown\" : \"hidden\";\r\n        const customListItemSettingsState = (isList && listType === \"unordered\" && listItem === \"custom\") ? \"shown\" : \"hidden\";\r\n        const customListItemSettingsState2 = (isList && listType === \"unordered\" && listItem === \"string\") ? \"shown\" : \"hidden\";\r\n        const orderedListSettingsState = (isList && listType === \"ordered\") ? \"shown\" : \"hidden\";\r\n        const sideNumberSettingsState = (isList && listType === \"ordered\" && sideNumber) ? \"shown\" : \"hidden\";\r\n    \r\n        return (\r\n            <>\r\n                <div className=\"dialogGrid dialogGrid_2cols\">\r\n                    <div>\r\n                        <div>\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth\">\r\n                                <div className=\"listItemSpan\">\r\n                                    <span>Is it a list?</span>\r\n                                </div>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox \r\n                                        color=\"primary\" \r\n                                        checked={isList} \r\n                                        onChange={this.onIsListChange} \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${mainListSettingsState}`}>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth optionalSettings\">\r\n                                    { listType === \"unordered\" ? (\r\n                                        <span>List name</span>\r\n                                    ) : (\r\n                                        <LabelWithAsterisk>List name</LabelWithAsterisk>\r\n                                    )}\r\n                                    <TextField\r\n                                        value={listName}\r\n                                        onChange={changeListName}\r\n                                        onBlur={trimOnTextFieldBlur(changeListName)}\r\n                                        error={!!(sectionErrors && sectionErrors.includes(\"listName\"))}\r\n                                        inputRef={this.listNameInputRef}\r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                    />\r\n    \r\n                                    <span>Order level</span>\r\n                                    <div>\r\n                                        <NativeSelect\r\n                                            value={orderLevel}\r\n                                            onChange={changeOrderLevel}\r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            { listType !== \"ordered\" && (<option value=\"\">...</option>)}\r\n                                            <option value=\"0\">0</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                        </NativeSelect>\r\n                                    </div>\r\n\r\n                                    <span>Suffix distance</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <NativeSelect\r\n                                            value={suffixDistance}\r\n                                            onChange={changeSuffixDistance} \r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            <option value=\"0.25\">0.25</option>\r\n                                            <option value=\"0.5\">0.5</option>\r\n                                            <option value=\"0.75\">0.75</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"1.25\">1.25</option>\r\n                                            <option value=\"1.5\">1.5</option>\r\n                                            <option value=\"1.75\">1.75</option>\r\n                                            <option value=\"2\">2</option>\r\n                                        </NativeSelect>\r\n                                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                                    </div>\r\n    \r\n                                    <span>Magic Tabs</span>\r\n                                    <div className=\"unlabeledCheckbox\">\r\n                                        <Checkbox \r\n                                            color=\"primary\" \r\n                                            checked={magicTabs} \r\n                                            onChange={changeMagicTabs} \r\n                                        />\r\n                                    </div>\r\n    \r\n                                    <span>Type of list</span>\r\n                                    <RadioGroup \r\n                                        value={listType} \r\n                                        onChange={this.onListTypeChange}\r\n                                        row\r\n                                    >\r\n                                        <div className=\"labeledCheckbox\">\r\n                                            <FormControlLabel\r\n                                                value=\"unordered\"\r\n                                                control={<Radio color=\"primary\" />}\r\n                                                label=\"Unordered\"\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"labeledCheckbox\">\r\n                                            <FormControlLabel\r\n                                                value=\"ordered\"\r\n                                                control={<Radio color=\"primary\" />}\r\n                                                label=\"Ordered\"\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                    </RadioGroup>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`optionalSettings optionalSettings_${orderedListSettingsState}`}>\r\n                            <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                                <span>Numbering style</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={numberingStyle}\r\n                                        onChange={changeNumberingStyle}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        {Array.from(orderedListStylesMap).map(([key, value]) => (\r\n                                            <option value={key} key={key}>{value}</option>\r\n                                        ))}                                    \r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Continue numbering after interruption</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox\r\n                                        checked={continueNumbering}\r\n                                        onChange={changeContinueNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Allow restart numbering</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox\r\n                                        checked={allowRestartNumbering} \r\n                                        onChange={changeAllowRestartNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Include previous levels from</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={includePreviousFrom} \r\n                                        onChange={changeIncludePreviousFrom}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        <option value=\"\">...</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </NativeSelect>\r\n                                </div>\r\n                                \r\n                                <span>Advanced list pattern settings</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Switch\r\n                                        checked={patternMode}\r\n                                        onChange={changePatternMode}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                { !patternMode ? (\r\n                                    <>\r\n                                        <span>Prefix</span>\r\n                                        <TextField\r\n                                            value={prefix}\r\n                                            onChange={changePrefix} \r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                        />\r\n        \r\n                                        <span>Suffix</span>\r\n                                        <TextField\r\n                                            value={suffix}\r\n                                            onChange={changeSuffix} \r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            onClick={selectAllOnClick(\".\")}\r\n                                        />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <span>Ordered list pattern</span>\r\n                                        <TextField\r\n                                            value={listPattern}\r\n                                            onChange={changeListPattern} \r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            onClick={selectAllOnClick(\".\")}\r\n                                        />\r\n                                    </>\r\n                                )}\r\n                                \r\n                                <span>Soft return</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox \r\n                                        checked={softReturn}\r\n                                        onChange={changeSoftReturn}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Side number</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox\r\n                                        checked={sideNumber}\r\n                                        onChange={changeAndScroll(this.onSideNumberChange)}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                { (patternMode && !sideNumber) && (<div />)}\r\n                            </div> \r\n    \r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${sideNumberSettingsState}`}>\r\n                                <div className=\"flexibleGrid listTypeSettings\">\r\n                                    <FontSelectFields \r\n                                        font={sideNumberFont}\r\n                                        changeFont={changeSideNumberFont}\r\n                                        customFont={customSideNumberFont}\r\n                                        changeCustomFont={changeCustomSideNumberFont}\r\n                                    />\r\n                            \r\n                                    <span>Alignment</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberAlignment}\r\n                                        onChange={changeSideNumberAlignment}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"left\"}>Left</option>\r\n                                        <option value={\"center\"}>Center</option>\r\n                                        <option value={\"right\"}>Right</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Font size</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberFontSize}\r\n                                            onChange={changeSideNumberFontSize}\r\n                                            onClick={selectAllOnClick(DEFAULT_FONT_SIZE)}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>      \r\n                            \r\n                                    <span>Font color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFontColor} \r\n                                        changeColorCode={changeSideNumberFontColor}\r\n                                        defaultColorCode={DEFAULT_SIDE_NUMBER_FONT_COLOR}\r\n                                        bottomAligned\r\n                                    />\r\n                                        \r\n                                    <span>Filling color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFillingColor} \r\n                                        changeColorCode={changeSideNumberFillingColor}\r\n                                        defaultColorCode={DEFAULT_SIDE_NUMBER_FILLING_COLOR}\r\n                                        bottomAligned\r\n                                    />\r\n    \r\n                                    <span>Width</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberWidth}\r\n                                            onChange={changeSideNumberWidth}\r\n                                            onClick={selectAllOnClick(DEFAULT_SIDE_NUMBER_WIDTH)}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>\r\n\r\n                                    <span>Line height</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberLineHeight}\r\n                                            onChange={changeSideNumberLineHeight}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>  \r\n                                        \r\n                                    <span>Radius</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberRadius}\r\n                                            onChange={changeSideNumberRadius}\r\n                                            onClick={selectAllOnClick(DEFAULT_SIDE_NUMBER_RADIUS)}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>\r\n\r\n                                    <span className=\"stylingsSpan\">Stylings</span>\r\n                                    <div className=\"checkBoxesSet\">\r\n                                        <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                                            <FormControlLabel\r\n                                                checked={sideNumberBold}\r\n                                                onChange={changeSideNumberBold}\r\n                                                label=\"Bold\"\r\n                                                control={<Checkbox color=\"primary\" />}\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                                            <FormControlLabel\r\n                                                checked={sideNumberItalic}\r\n                                                onChange={changeSideNumberItalic}\r\n                                                label=\"Italic\"\r\n                                                control={<Checkbox color=\"primary\" />}\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox color=\"primary\" />}\r\n                                                label=\"Underlined\"\r\n                                                labelPlacement=\"end\"\r\n                                                checked={sideNumberUnderlined}\r\n                                                onChange={changeSideNumberUnderlined}\r\n                                            />\r\n                                        </div>\r\n                                    </div>  \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className={`listPreviewBox optionalSettings optionalSettings_${mainListSettingsState}`}>\r\n                        <ListPreview {...listPreviewProps} />\r\n                    </div>\r\n                </div>\r\n                <div className={`optionalSettings optionalSettings_${unorderedListSettingsState}`}>\r\n                    <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                        <div className=\"dialogGrid dialogGrid_2cols\">\r\n                            <span className=\"listItemSpan\">List item</span>\r\n                            <div className=\"listItemSelect\">\r\n                                <NativeSelect \r\n                                    value={listItem} \r\n                                    onChange={this.onListItemChange} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    { \r\n                                        Array.from(bulletNamesMap).map(([key, value]) => {\r\n                                            return (<option key={key} value={key}>{value}</option>) \r\n                                        })\r\n                                    }\r\n                                    <option value={\"custom\"} className=\"highlightedOption\">Custom bullet</option>\r\n                                    <option value={\"string\"} className=\"highlightedOption\">Custom string</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className={`optionalSettings optionalSettings_${customListItemSettingsState}`}>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                        <span>Unicode number</span>\r\n                                        <div>\r\n                                            <TextField  \r\n                                                value={unicodeNumber}\r\n                                                onChange={this.onUnicodeNumberChange}\r\n                                                variant=\"outlined\" \r\n                                                margin=\"dense\" \r\n                                                className=\"unicodeInput\" \r\n                                                InputProps={{\r\n                                                    startAdornment: <InputAdornment position=\"start\">u+</InputAdornment>\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                        <span>Symbol</span>\r\n                                        <div>\r\n                                            <TextField \r\n                                                value={unicodeChar}\r\n                                                onChange={this.onUnicodeCharChange}\r\n                                                onClick={selectAllOnClick()}\r\n                                                inputRef={this.unicodeCharInputRef}\r\n                                                variant=\"outlined\" \r\n                                                margin=\"dense\" \r\n                                                className=\"bulletInput\" \r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                            <div className={`optionalSettings optionalSettings_${customListItemSettingsState2}`}>\r\n                                <div className=\"listItemCustomString\">\r\n                                    <div className=\"dialogGrid dialogGrid_1col dialogGrid_leftIndented\">\r\n                                        <TextField\r\n                                            value={listItemString}\r\n                                            onChange={changeListItemString}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return {\r\n        sectionErrors: validationError.listSection,\r\n        formState: form,\r\n        isList: form.isList,\r\n        listName: form.listName, \r\n        orderLevel: form.orderLevel,\r\n        suffixDistance: form.suffixDistance,\r\n        magicTabs: form.magicTabs,\r\n        listType: form.listType,\r\n        listItem: form.listItem,\r\n        unicodeNumber: form.unicodeNumber,\r\n        unicodeChar: form.unicodeChar,\r\n        listItemString: form.listItemString,\r\n        numberingStyle: form.numberingStyle,\r\n        continueNumbering: form.continueNumbering,\r\n        allowRestartNumbering: form.allowRestartNumbering,\r\n        includePreviousFrom: form.includePreviousFrom,\r\n        patternMode: form.patternMode,\r\n        listPattern: form.listPattern,\r\n        prefix: form.prefix,\r\n        suffix: form.suffix,\r\n        softReturn: form.softReturn,\r\n        sideNumber: form.sideNumber,\r\n        sideNumberFont: form.sideNumberFont,\r\n        customSideNumberFont: form.customSideNumberFont,\r\n        sideNumberAlignment: form.sideNumberAlignment,\r\n        sideNumberFontSize: form.sideNumberFontSize,\r\n        sideNumberFontColor: form.sideNumberFontColor,\r\n        sideNumberFillingColor: form.sideNumberFillingColor,\r\n        sideNumberWidth: form.sideNumberWidth,\r\n        sideNumberRadius: form.sideNumberRadius,\r\n        sideNumberBold: form.sideNumberBold,\r\n        sideNumberItalic: form.sideNumberItalic,\r\n        sideNumberUnderlined: form.sideNumberUnderlined,\r\n        sideNumberLineHeight: form.sideNumberLineHeight,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        changeListName: setValue(dispatch)(\"listName\"),\r\n        changeIsList: toggleValue(dispatch)(\"isList\"),\r\n        changeOrderLevel: setValue(dispatch)(\"orderLevel\"),\r\n        changeSuffixDistance: setValue(dispatch)(\"suffixDistance\"),\r\n        changeMagicTabs: toggleValue(dispatch)(\"magicTabs\"),\r\n        changeListType: setValue(dispatch)(\"listType\"),\r\n        changeListItem: setValue(dispatch)(\"listItem\"),\r\n        changeUnicodeNumber: setColor(dispatch)(\"unicodeNumber\"),\r\n        changeUnicodeChar: setBullet(dispatch)(\"unicodeChar\"),\r\n        changeListItemString: setValue(dispatch)(\"listItemString\"),\r\n        changeNumberingStyle: setValue(dispatch)(\"numberingStyle\"),\r\n        changeContinueNumbering: toggleValue(dispatch)(\"continueNumbering\"),\r\n        changeAllowRestartNumbering: toggleValue(dispatch)(\"allowRestartNumbering\"),\r\n        changeIncludePreviousFrom: setValue(dispatch)(\"includePreviousFrom\"),\r\n        changeListPattern: setValue(dispatch)(\"listPattern\"),\r\n        changePrefix: setValue(dispatch)(\"prefix\"),\r\n        changeSuffix: setValue(dispatch)(\"suffix\"),\r\n        changePatternMode: toggleValue(dispatch)(\"patternMode\"),\r\n        changeSoftReturn: toggleValue(dispatch)(\"softReturn\"),\r\n        changeSideNumber: toggleValue(dispatch)(\"sideNumber\"),\r\n        changeSideNumberFont: setValue(dispatch)(\"sideNumberFont\"),\r\n        changeCustomSideNumberFont: setValue(dispatch)(\"customSideNumberFont\"),\r\n        changeSideNumberAlignment: setValue(dispatch)(\"sideNumberAlignment\"),\r\n        changeSideNumberFontSize: setNumber(dispatch)(\"sideNumberFontSize\"),\r\n        changeSideNumberFontColor: setColor(dispatch)(\"sideNumberFontColor\"),\r\n        changeSideNumberFillingColor: setColor(dispatch)(\"sideNumberFillingColor\"),\r\n        changeSideNumberWidth: setNumber(dispatch)(\"sideNumberWidth\"),\r\n        changeSideNumberRadius: setNumber(dispatch)(\"sideNumberRadius\"),\r\n        changeSideNumberBold: toggleValue(dispatch)(\"sideNumberBold\"),\r\n        changeSideNumberItalic: toggleValue(dispatch)(\"sideNumberItalic\"),\r\n        changeSideNumberUnderlined: toggleValue(dispatch)(\"sideNumberUnderlined\"),\r\n        changeSideNumberLineHeight: setNumber(dispatch)(\"sideNumberLineHeight\"),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListSection);","import ListSection from \"./ListSection\";\r\nexport default ListSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\nimport { setValue } from \"../actions\";\r\nimport { MAIN_LANG_KEY } from \"../constants\";\r\n\r\nclass ReferencingSection extends React.Component {\r\n    onXrefChange = (e, xrefName, xref) => {\r\n        if (xref) {\r\n            this.props.changeReferenceGroupToCreate(null, xref);\r\n        }\r\n        this.props.changeReferenceGroup(e, xrefName);\r\n    };\r\n\r\n    render() {\r\n        const { \r\n            referenceGroupToCreate, \r\n            isGroupDialogOpen,\r\n            hasGroupDialogValidationError,  \r\n            openGroupDialog, \r\n            closeGroupDialog, \r\n            showGroupDialogValidationError, \r\n            hideGroupDialogValidationError,\r\n            referenceGroup,\r\n        } = this.props;\r\n\r\n        const newGroupKey = referenceGroupToCreate.groupKey;\r\n        const newGroupName = referenceGroupToCreate[MAIN_LANG_KEY];\r\n        const isEditMode = !!newGroupKey;\r\n    \r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <span>Reference group</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        input={ <CustomInput /> } \r\n                        value={referenceGroup} \r\n                        onChange={this.onXrefChange} \r\n                    >\r\n                        { isEditMode && <option className=\"highlightedOption\" value={newGroupKey}>{newGroupName || newGroupKey}</option> }\r\n                        <option value=\"\">none</option>\r\n                        <option value=\"0\">Reference group 1</option>\r\n                        <option value=\"1\">Reference group 2</option>\r\n                    </NativeSelect>\r\n                    {\r\n                        !(isEditMode && referenceGroup !== newGroupKey) &&\r\n                        <Button color=\"primary\" className=\"textButton\" onClick={openGroupDialog}>\r\n                            { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                        </Button>\r\n                     }\r\n                </div>\r\n                <NewGroupDialog\r\n                    isOpen={isGroupDialogOpen}\r\n                    saveGroup={this.onXrefChange}\r\n                    savedGroup={referenceGroupToCreate}\r\n                    groupType=\"xref\" \r\n                    { ...{ \r\n                        isEditMode,\r\n                        hasGroupDialogValidationError,\r\n                        closeGroupDialog, \r\n                        showGroupDialogValidationError, \r\n                        hideGroupDialogValidationError, \r\n                    } }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        referenceGroup: form.referenceGroup,\r\n        referenceGroupToCreate: form.referenceGroupToCreate,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeReferenceGroup: setValue(dispatch)(\"referenceGroup\"),\r\n        changeReferenceGroupToCreate: setValue(dispatch)(\"referenceGroupToCreate\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(withNewGroupControl(ReferencingSection)));","import * as React from \"react\";\r\nimport deepEqual from \"fast-deep-equal\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, q = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(q[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, q[i]))\r\n              t[q[i]] = s[q[i]];\r\n      }\r\n  return t;\r\n};\r\n\r\nfunction normalizeHtml(str) {\r\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, \" \");\r\n}\r\nfunction findLastTextNode(node) {\r\n  if (node.nodeType === Node.TEXT_NODE)\r\n      return node;\r\n  let children = node.childNodes;\r\n  for (let i = children.length - 1; i >= 0; i--) {\r\n      let textNode = findLastTextNode(children[i]);\r\n      if (textNode !== null)\r\n          return textNode;\r\n  }\r\n  return null;\r\n}\r\nfunction replaceCaret(el) {\r\n  // Place the caret at the end of the element\r\n  const target = findLastTextNode(el);\r\n  // do not move caret if element was not focused\r\n  const isTargetFocused = document.activeElement === el;\r\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\r\n      var sel = window.getSelection();\r\n      if (sel !== null) {\r\n          var range = document.createRange();\r\n          range.setStart(target, target.nodeValue.length);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n      }\r\n      if (el instanceof HTMLElement)\r\n          el.focus();\r\n  }\r\n}\r\n/**\r\n* A simple component for an html element with editable contents.\r\n*/\r\nexport default class ContentEditable extends React.Component {\r\n  constructor() {\r\n      super(...arguments);\r\n      this.lastHtml = this.props.html;\r\n      this.el = typeof this.props.innerRef === \"function\" ? { current: null } : React.createRef();\r\n      this.getEl = () => (this.props.innerRef && typeof this.props.innerRef !== \"function\" ? this.props.innerRef : this.el).current;\r\n      this.emitChange = (originalEvt) => {\r\n          const el = this.getEl();\r\n          if (!el)\r\n              return;\r\n          const html = el.innerHTML;\r\n          if (this.props.onChange && html !== this.lastHtml) {\r\n              // Clone event with Object.assign to avoid\r\n              // \"Cannot assign to read only property 'target' of object\"\r\n              const evt = Object.assign({}, originalEvt, {\r\n                  target: {\r\n                      value: html\r\n                  }\r\n              });\r\n              this.props.onChange(evt);\r\n          }\r\n          this.lastHtml = html;\r\n      };\r\n  }\r\n  render() {\r\n      const _a = this.props, { tagName, html, innerRef } = _a, props = __rest(_a, [\"tagName\", \"html\", \"innerRef\"]);\r\n      return React.createElement(tagName || \"table\", Object.assign({}, props, { ref: typeof innerRef === \"function\" ? (current) => {\r\n              innerRef(current);\r\n              this.el.current = current;\r\n          } : innerRef || this.el, onInput: this.emitChange, onBlur: this.props.onBlur || this.emitChange, onKeyUp: this.props.onKeyUp || this.emitChange, onKeyDown: this.props.onKeyDown || this.emitChange, contentEditable: !this.props.disabled, dangerouslySetInnerHTML: { __html: html } }), this.props.children);\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n      const { props } = this;\r\n      const el = this.getEl();\r\n      // We need not rerender if the change of props simply reflects the user's edits.\r\n      // Rerendering in this case would make the cursor/caret jump\r\n      // Rerender if there is no element yet... (somehow?)\r\n      if (!el)\r\n          return true;\r\n      // ...or if html really changed... (programmatically, not by user edit)\r\n      if (normalizeHtml(nextProps.html) !== normalizeHtml(el.innerHTML)) {\r\n          return true;\r\n      }\r\n      // Handle additional properties\r\n      return props.disabled !== nextProps.disabled ||\r\n          props.tagName !== nextProps.tagName ||\r\n          props.className !== nextProps.className ||\r\n          props.innerRef !== nextProps.innerRef ||\r\n          !deepEqual(props.style, nextProps.style);\r\n  }\r\n  componentDidUpdate() {\r\n      const el = this.getEl();\r\n      if (!el)\r\n          return;\r\n      // Perhaps React (whose VDOM gets outdated because we often prevent\r\n      // rerendering) did not update the DOM. So we update it manually now.(?!(?:<br \\/>|<br>|<br\\/>)$)<(.*?)>\r\n      if (this.props.html !== el.innerHTML) {\r\n          el.innerHTML = this.lastHtml = this.props.html;\r\n      }\r\n      replaceCaret(el);\r\n  }\r\n}\r\nContentEditable.propTypes = {\r\n  html: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  tagName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n  ])\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ContentEditable from \"../ContentEditable\";\r\nimport { generatePreviewStyle } from \"./generators\";\r\nimport { setValue } from \"../../actions\";\r\nimport { selectAllEditableContent, getUnstyledText } from \"../../helpers\"\r\n\r\nimport \"./style.css\";\r\n\r\nclass Preview extends React.Component {\r\n    onPreviewTextChange = e => {\r\n        const { value } = e.target;\r\n        if (value && value !== \"<div></div>\" && value !== \"<br>\") {\r\n            this.props.changePreviewText(null, getUnstyledText(value));\r\n        } else {\r\n            this.props.changePreviewText(null, `<div><br></div>`);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const previewStyle = generatePreviewStyle(this.props.formState);\r\n        const { previewText } = this.props;\r\n    \r\n        return (\r\n            <div className=\"preview\">\r\n                <span className=\"preview-title\">Preview</span>\r\n                <div \r\n                    className=\"preview-content preview-content_withPointer\" \r\n                    onClick={selectAllEditableContent(\"demonstrationElement\")}\r\n                >\r\n                    <div className=\"demonstrationElement\">\r\n                        <ContentEditable\r\n                            className=\"demonstrationElement-text\"\r\n                            onChange={this.onPreviewTextChange} \r\n                            html={previewText}\r\n                            style={previewStyle}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        formState: form,\r\n        previewText: form.previewText,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changePreviewText: setValue(dispatch)(\"previewText\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(Preview));","import Preview from \"./Preview.js\";\r\nexport default Preview;","import TypographySection from \"./TypographySection\";\r\nexport default TypographySection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport Preview from \"../../common/Preview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport {  setValue, toggleValue, setNumber, setColor } from \"../../actions\";\r\nimport { DEFAULT_FONT_SIZE, DEFAULT_FONT_COLOR } from \"../../constants\";\r\nimport { selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst TypographySection = props => {\r\n    const { \r\n        previewProps,\r\n        font, changeFont,\r\n        customFont, changeCustomFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign,\r\n        readOnly, changeReadOnly,\r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"flexibleGrid\">\r\n                <FontSelectFields { ...{ font, changeFont, customFont, changeCustomFont }} />\r\n                \r\n                <span>Alignment</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={alignment}\r\n                    onChange={changeAlignment}\r\n                >\r\n                    <option value={\"left\"}>Left</option>\r\n                    <option value={\"center\"}>Center</option>\r\n                    <option value={\"right\"}>Right</option>\r\n                    <option value={\"justify\"}>Justified</option>\r\n                </NativeSelect>\r\n\r\n                <span>Font size</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={fontSize}\r\n                        onChange={changeFontSize}\r\n                        onClick={selectAllOnClick(DEFAULT_FONT_SIZE)}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>      \r\n\r\n                <span>Font color</span>\r\n                <ColorField \r\n                    colorCode={fontColor} \r\n                    changeColorCode={changeFontColor}\r\n                    defaultColorCode={DEFAULT_FONT_COLOR}\r\n                    required\r\n                />\r\n\r\n                <span>Sub/Superscript</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        value={verticalAlign} \r\n                        onChange={changeVerticalAlign}\r\n                        input={ <CustomInput /> } \r\n                    >\r\n                        <option value=\"baseline\">None</option>\r\n                        <option value=\"sub\">Subscript</option>\r\n                        <option value=\"super\">Superscript</option>\r\n                    </NativeSelect>\r\n                </div>\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_topIndented\">\r\n            <span className=\"stylingsSpan\">Stylings</span>\r\n            <div className=\"checkBoxesSet\">\r\n                <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Bold\"\r\n                        labelPlacement=\"end\"\r\n                        checked={bold}\r\n                        onChange={changeBold}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Italic\"\r\n                        labelPlacement=\"end\"\r\n                        checked={italic}\r\n                        onChange={changeItalic}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Underlined\"\r\n                        labelPlacement=\"end\"\r\n                        checked={underlined}\r\n                        onChange={changeUnderlined}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_stroke\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Stroke\"\r\n                        labelPlacement=\"end\"\r\n                        checked={stroke}\r\n                        onChange={changeStroke}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <span>Text transform</span>\r\n            <RadioGroup \r\n                value={textTransform} \r\n                onChange={changeTextTransform} \r\n                row\r\n            >\r\n                <div className=\"labeledCheckbox\">\r\n                    <FormControlLabel\r\n                        value=\"none\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"None\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_uppercase\">\r\n                    <FormControlLabel\r\n                        value=\"uppercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Uppercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_lowercase\">\r\n                    <FormControlLabel\r\n                        value=\"lowercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Lowercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_smallCaps\">\r\n                    <FormControlLabel\r\n                        value=\"small-caps\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Small caps\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n            </RadioGroup>\r\n\r\n            <span>Read only</span>\r\n            <div className=\"unlabeledCheckbox\">\r\n                <Checkbox \r\n                    checked={readOnly}\r\n                    onChange={changeReadOnly}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        font: form.font,\r\n        customFont: form.customFont,\r\n        alignment: form.alignment,\r\n        fontSize: form.fontSize,\r\n        fontColor: form.fontColor,\r\n        bold: form.bold,\r\n        italic: form.italic,\r\n        underlined: form.underlined,\r\n        stroke: form.stroke,\r\n        textTransform: form.textTransform,\r\n        verticalAlign: form.verticalAlign,\r\n        readOnly: form.readOnly,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeFont: setValue(dispatch)(\"font\"),\r\n        changeCustomFont: setValue(dispatch)(\"customFont\"),\r\n        changeAlignment: setValue(dispatch)(\"alignment\"),\r\n        changeFontSize: setNumber(dispatch)(\"fontSize\"),\r\n        changeFontColor: setColor(dispatch)(\"fontColor\"),\r\n        changeBold: toggleValue(dispatch)(\"bold\"),\r\n        changeItalic: toggleValue(dispatch)(\"italic\"),\r\n        changeUnderlined: toggleValue(dispatch)(\"underlined\"),\r\n        changeStroke: toggleValue(dispatch)(\"stroke\"),\r\n        changeTextTransform: setValue(dispatch)(\"textTransform\"),\r\n        changeVerticalAlign: setValue(dispatch)(\"verticalAlign\"),\r\n        changeMarginTop: setNumber(dispatch)(\"marginTop\"),\r\n        changeReadOnly: toggleValue(dispatch)(\"readOnly\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(TypographySection));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport { toggleValue } from \"../actions\";\r\n\r\nconst ConnectToPreviousField = ({ connectToPrevious, changeConnectToPrevious }) => (\r\n    <>\r\n        <span>Merge sections</span>\r\n        <div className=\"unlabeledCheckbox\">\r\n            <Checkbox \r\n                checked={connectToPrevious}\r\n                onChange={changeConnectToPrevious}\r\n                color=\"primary\" \r\n            />\r\n        </div>\r\n    </>\r\n);\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        connectToPrevious: form.connectToPrevious,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeConnectToPrevious: toggleValue(dispatch)(\"connectToPrevious\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(ConnectToPreviousField));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport Preview from \"../common/Preview\";\r\nimport { setValue, setNumber } from \"../actions\";\r\nimport { DEFAULT_MARGIN, DEFAULT_WORD_SPACING, lineSpacings } from \"../constants\";\r\nimport { selectAllOnClick, focusInput, changeAndScroll } from \"../helpers\";\r\nimport ConnectToPreviousField from \"../common/ConnectToPreviousField\";\r\n\r\nclass DistancesSection extends React.Component {\r\n    customLineSpacingInputRef = React.createRef();\r\n\r\n    onLineSpacingChange = e => {\r\n        this.props.changeLineSpacing(e);\r\n        if (e.target.value === \"custom\") {\r\n            focusInput(this.customLineSpacingInputRef);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            previewProps,\r\n            connectToPrevious,\r\n            marginTop, changeMarginTop,\r\n            marginBottom, changeMarginBottom,\r\n            firstRowIndent, changeFirstRowIndent,\r\n            otherRowsIndent, changeOtherRowsIndent,\r\n            lineSpacing,\r\n            customLineSpacing, changeCustomLineSpacing,\r\n            wordSpacing, changeWordSpacing,\r\n        } = this.props;\r\n\r\n        const customLineSpacingFieldState = lineSpacing === \"custom\" ? \"optionalField_shown\" : \"optionalField_hidden\";\r\n        const marginFieldsState = !connectToPrevious ? \"optionalField_shown\" : \"optionalField_hidden\";\r\n\r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n                <div className=\"flexibleGrid\">\r\n                    <ConnectToPreviousField />\r\n                    <div className={`optionalField optionalField ${marginFieldsState}`}>\r\n                      <span>Margin top</span>\r\n                    </div>\r\n                    <div className={`inputWithAdornment optionalField ${marginFieldsState}`}>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={marginTop}\r\n                            onChange={changeMarginTop}\r\n                            onClick={selectAllOnClick(DEFAULT_MARGIN)}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </div> \r\n    \r\n                    <div className={`optionalField ${marginFieldsState}`}>\r\n                        <span>Margin bottom</span>\r\n                    </div>\r\n\r\n                    <div className={`inputWithAdornment optionalField ${marginFieldsState}`}>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={marginBottom}\r\n                            onChange={changeMarginBottom}\r\n                            onClick={selectAllOnClick(DEFAULT_MARGIN)}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </div> \r\n    \r\n                    <span>1st row indent</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={firstRowIndent}\r\n                            onChange={changeFirstRowIndent}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                    </div>\r\n    \r\n                    <span>Other rows indent</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={otherRowsIndent}\r\n                            onChange={changeOtherRowsIndent}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                    </div>\r\n    \r\n                    <span>Line spacing</span>\r\n                    <div>\r\n                        <NativeSelect \r\n                            input={ <CustomInputShort /> } \r\n                            value={lineSpacing} \r\n                            onChange={changeAndScroll(this.onLineSpacingChange, 500)} \r\n                        >   \r\n                            { lineSpacings.map(value => (\r\n                                <option value={value} key={value}>{value}</option>\r\n                            ))}\r\n                            <option value=\"custom\" className=\"highlightedOption\">Custom</option>\r\n                        </NativeSelect> \r\n                    </div>\r\n\r\n                    <div className={`optionalField ${customLineSpacingFieldState}`}>\r\n                    </div>\r\n                    <div className={`optionalField ${customLineSpacingFieldState}`}>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={customLineSpacing}\r\n                            onChange={changeCustomLineSpacing}\r\n                            placeholder=\"Your value\"\r\n                            inputRef={this.customLineSpacingInputRef}\r\n                        />                                            \r\n                    </div>\r\n                        \r\n                    <span>Word spacing</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={wordSpacing}\r\n                            onChange={changeWordSpacing}\r\n                            onClick={selectAllOnClick(DEFAULT_WORD_SPACING)}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </div> \r\n                </div>\r\n                <div className=\"previewSide\">\r\n                    <Preview {...previewProps} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        connectToPrevious: form.connectToPrevious,\r\n        marginTop: form.marginTop,\r\n        marginBottom: form.marginBottom,\r\n        firstRowIndent: form.firstRowIndent,\r\n        otherRowsIndent: form.otherRowsIndent,\r\n        lineSpacing: form.lineSpacing,\r\n        customLineSpacing: form.customLineSpacing,\r\n        wordSpacing: form.wordSpacing,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeMarginTop: setNumber(dispatch)(\"marginTop\"),\r\n        changeMarginBottom: setNumber(dispatch)(\"marginBottom\"),\r\n        changeFirstRowIndent: setNumber(dispatch)(\"firstRowIndent\"),\r\n        changeOtherRowsIndent: setNumber(dispatch)(\"otherRowsIndent\"),\r\n        changeLineSpacing: setValue(dispatch)(\"lineSpacing\"),\r\n        changeCustomLineSpacing: setValue(dispatch)(\"customLineSpacing\"),\r\n        changeWordSpacing: setNumber(dispatch)(\"wordSpacing\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(DistancesSection));","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst FrameTypeInput = withStyles(theme => ({\r\n    root: {\r\n      width: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      fontFamily: [\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default FrameTypeInput;","import { getCorrectColor } from \"../../helpers\";\r\n\r\nconst generateBorderPreviewStyle = formState => {\r\n    const { \r\n        borderLeft,\r\n        borderRight,\r\n        borderTop,\r\n        borderBottom,\r\n        borderColor,\r\n        borderThickness,\r\n        borderType,\r\n    } = formState;\r\n\r\n    const correctColor = getCorrectColor(borderColor);\r\n    const previewBorderWidth = borderThickness && !isNaN(parseFloat(borderThickness))\r\n                                ? `${borderThickness <= 15 ? borderThickness : 15}pt`\r\n                                : \"0\";\r\n\r\n    const previewStyle = {\r\n        borderLeft: borderLeft ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginLeft: borderLeft ? \"0\" : previewBorderWidth, \r\n        borderRight: borderRight ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginRight: borderRight ? \"0\" : previewBorderWidth, \r\n        borderTop: borderTop ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginTop: borderTop ? \"0\" : previewBorderWidth, \r\n        borderBottom: borderBottom ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginBottom: borderBottom ? \"0\" : previewBorderWidth, \r\n    };\r\n\r\n    return previewStyle;\r\n};\r\n\r\nexport default generateBorderPreviewStyle;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport FrameTypeInput from \"../../sections/FramesSection/FrameTypeInput\";\r\nimport Preview from \"../../common/Preview\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport ConnectToPreviousField from \"../../common/ConnectToPreviousField\";\r\nimport generateBorderPreviewStyle from \"./generateBorderPreviewStyle\";\r\nimport { setValue, toggleValue, setNumber, setColor } from \"../../actions\";\r\nimport { selectAllOnClick } from \"../../helpers\";\r\nimport { DEFAULT_BORDER_COLOR, DEFAULT_BORDER_THICKNESS } from \"../../constants\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass FramesSection extends React.Component {\r\n    onBorderTypeChange = e => {\r\n        this.props.changeBorderType(e);\r\n        if (e.target.value === \"double\" && this.props.borderThickness === \"2\") {\r\n            this.props.changeBorderThickness(null, \"3\");\r\n        } else if (e.target.value !== \"double\" && this.props.borderThickness === \"3\") {\r\n            this.props.changeBorderThickness(null, \"2\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { \r\n            previewProps,\r\n            formState,\r\n            borderLeft, changeBorderLeft, \r\n            borderRight, changeBorderRight,\r\n            borderTop, changeBorderTop, \r\n            borderBottom, changeBorderBottom, \r\n            borderColor, changeBorderColor,\r\n            borderThickness, changeBorderThickness,\r\n            borderType,\r\n         } = this.props;\r\n\r\n        const previewStyle = generateBorderPreviewStyle(formState)\r\n    \r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n                <div>\r\n                    <div className=\"directionControlsContainer\">\r\n                        <div className=\"directionsControls\" style={previewStyle}>\r\n                            <span className=\"directionLabel\">Left</span>\r\n                            <div className=\"centralColumn\">\r\n                                <span className=\"directionLabel\">Top</span>\r\n                                <div className=\"checkboxesKit crossGrid\">\r\n                                    <div id=\"r1\" className=\"gridCell\">\r\n                                        <Checkbox \r\n                                            color=\"primary\"\r\n                                            checked={borderTop}  \r\n                                            onChange={changeBorderTop}\r\n                                        />\r\n                                    </div>\r\n                                    <div id=\"r2c1\" className=\"gridCell\">\r\n                                        <Checkbox \r\n                                            color=\"primary\" \r\n                                            checked={borderLeft}  \r\n                                            onChange={changeBorderLeft}\r\n                                        />\r\n                                    </div>\r\n                                    <div id=\"r2c2\" className=\"gridCell\">\r\n                                    </div>\r\n                                    <div id=\"r2c3\" className=\"gridCell\">\r\n                                        <Checkbox \r\n                                            color=\"primary\" \r\n                                            checked={borderRight}  \r\n                                            onChange={changeBorderRight}\r\n                                        />\r\n                                    </div>\r\n                                    <div id=\"r3\" className=\"gridCell\">\r\n                                        <Checkbox \r\n                                            color=\"primary\"\r\n                                            checked={borderBottom}  \r\n                                            onChange={changeBorderBottom}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"directionLabel\">Bottom</span>\r\n                            </div>\r\n                            <span className=\"directionLabel\">Right</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        <span>Frame color</span>\r\n                        <ColorField \r\n                            colorCode={borderColor} \r\n                            changeColorCode={changeBorderColor}\r\n                            defaultColorCode={DEFAULT_BORDER_COLOR}\r\n                            required\r\n                        />\r\n        \r\n                        <span>Frame thickness</span>\r\n                        <div className=\"inputWithAdornment\">\r\n                            <TextField \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                                className=\"numberInput\"\r\n                                value={borderThickness}\r\n                                onChange={changeBorderThickness}\r\n                                onClick={selectAllOnClick(DEFAULT_BORDER_THICKNESS)}\r\n                            />                                            \r\n                            <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                        </div>                        \r\n        \r\n                        <span>Type of frame</span>\r\n                        <div >\r\n                            <Select\r\n                            input={<FrameTypeInput />}\r\n                            value={borderType}\r\n                            onChange={this.onBorderTypeChange}\r\n                            >\r\n                                <MenuItem value=\"solid\"><b>━━━━</b></MenuItem>\r\n                                <MenuItem value=\"dotted\">• • • • • • •</MenuItem>\r\n                                <MenuItem value=\"dashed\"><b>– – – – –</b></MenuItem>\r\n                                <MenuItem value=\"double\">══════</MenuItem>              \r\n                            </Select>\r\n                        </div>\r\n\r\n                        <ConnectToPreviousField />\r\n                    </div>\r\n                </div>\r\n                <div className=\"previewSide\">\r\n                    <Preview {...previewProps} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        formState: form,\r\n        borderLeft: form.borderLeft,\r\n        borderRight: form.borderRight,\r\n        borderTop: form.borderTop,\r\n        borderBottom: form.borderBottom,\r\n        borderColor: form.borderColor,\r\n        borderThickness: form.borderThickness,\r\n        borderType: form.borderType,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeBorderLeft: toggleValue(dispatch)(\"borderLeft\"),\r\n        changeBorderRight: toggleValue(dispatch)(\"borderRight\"),\r\n        changeBorderTop: toggleValue(dispatch)(\"borderTop\"),\r\n        changeBorderBottom: toggleValue(dispatch)(\"borderBottom\"),\r\n        changeBorderColor: setColor(dispatch)(\"borderColor\"),\r\n        changeBorderThickness: setNumber(dispatch)(\"borderThickness\"),\r\n        changeBorderType: setValue(dispatch)(\"borderType\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(FramesSection));","import FramesSection from \"./FramesSection\";\r\nexport default FramesSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Preview from \"../common/Preview\";\r\nimport ColorField from \"../common/ColorField\";\r\nimport ConnectToPreviousField from \"../common/ConnectToPreviousField\";\r\nimport { setColor } from \"../actions\";\r\n\r\nconst  FillingSection = ({ previewProps, fillingColor, changeFillingColor }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Filling color</span>\r\n                <ColorField \r\n                    colorCode={fillingColor} \r\n                    changeColorCode={changeFillingColor}\r\n                />\r\n                <ConnectToPreviousField />\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        fillingColor: form.fillingColor,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changeFillingColor: setColor(dispatch)(\"fillingColor\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(FillingSection));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport { setValue } from \"../actions\";\r\n\r\nconst TocSection = ({ tocIndentation, changeTocIndentation }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>ToC indentation</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={tocIndentation}\r\n                    onChange={changeTocIndentation} \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>                    \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        tocIndentation: form.tocIndentation,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changeTocIndentation: setValue(dispatch)(\"tocIndentation\"),\r\n    };\r\n};\r\n\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(TocSection));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { setShortCut } from \"../actions\";\r\n\r\nconst ShortCutSection = ({ shortCutWinView, shortCutMacView, changeShortCutWin, changeShortCutMac }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n            <span>Mac</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField\r\n                    value={shortCutMacView}\r\n                    onKeyDown={changeShortCutMac}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n\r\n            <span>Windows</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField\r\n                    value={shortCutWinView}\r\n                    onKeyDown={changeShortCutWin}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        shortCutWinView: form.shortCutWinView,\r\n        shortCutMacView: form.shortCutMacView,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changeShortCutWin: setShortCut(dispatch)(\"shortCutWin\", \"shortCutWinView\"),\r\n        changeShortCutMac: setShortCut(dispatch)(\"shortCutMac\", \"shortCutMacView\"),\r\n    };\r\n};\r\n\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(ShortCutSection));","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: pink,\r\n    },\r\n});\r\n\r\nexport default theme;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomTab;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomErrorTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n      textDecoration: \"red underline\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n        textDecoration: \"indianred underline\",\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomErrorTab;","import Tabs from \"@material-ui/core/Tabs\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n    indicator: {\r\n        backgroundColor: \"#1890ff\",\r\n        opacity: 0.5,\r\n        width: \"190px\",\r\n        zIndex: 5,\r\n        display: \"none\",\r\n    }\r\n};\r\n\r\nexport default withStyles(styles)(Tabs);","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst CustomDialog = withStyles(theme => ({\r\n    root: {\r\n        minWidth: \"1250px\",\r\n        minHeight: \"1100px !important\",\r\n        height: \"100%\",\r\n    },\r\n    container: {\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        width: \"100vw\",\r\n        justifyContent: \"center\",\r\n        minWidth: \"700px\",\r\n    },\r\n    scrollBody: {\r\n        \"&:after\": {\r\n            height: \"100%\",\r\n        }\r\n    },\r\n    paperFullWidth: {\r\n        maxWidth: \"1280px\",\r\n        maxHeight: \"850px\",\r\n        minHeight: \"550px\",\r\n        width: \"calc(100vw - 150px)\",\r\n        minWidth: \"600px\",\r\n        height: \"calc(100% - 96px)\",\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        border: \"none\",\r\n    },\r\n    paperScrollBody: {\r\n        verticalAlign: \"middle\",\r\n    },\r\n  }))(Dialog);\r\n  \r\n  export default CustomDialog;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { isEmpty, isEqual } from \"lodash\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport NamesSection from \"./sections/NamesSection\";\r\nimport PositioningSection from \"./sections/PositioningSection\";\r\nimport ListSection from \"./sections/ListSection\";\r\nimport ReferencingSection from \"./sections/ReferencingSection\";\r\nimport TypographySection from \"./sections/TypographySection\";\r\nimport DistancesSection from \"./sections/DistancesSection\";\r\nimport FramesSection from \"./sections/FramesSection\";\r\nimport FillingSection from \"./sections/FillingSection\";\r\nimport TocSection from \"./sections/TocSection\";\r\nimport ShortCutsSection from \"./sections/ShortCutsSection\";\r\n// import TestSection from \"./sections/TestSection\";\r\n\r\nimport theme from \"./theme\";\r\nimport CustomTab from \"./common/CustomTab\";\r\nimport CustomErrorTab from \"./common/CustomErrorTab\";\r\nimport CustomTabs from \"./common/CustomTabs\";\r\nimport CustomDialog from \"./common/CustomDialog\";\r\nimport { \r\n    closeDialog, \r\n    clearDecoratorForm, \r\n    switchDecDialogTab, \r\n    updateValidationError \r\n} from \"./actions\";\r\nimport { \r\n    fillMissedFields, \r\n    DecDataConverter, \r\n    getErrorState,\r\n    getTabNumberToSwitch,\r\n} from \"./helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass DecoratorDialog extends React.Component {\r\n    onClose = () => {\r\n        this.props.closeDialog();\r\n        this.props.clearForm();\r\n    };\r\n\r\n    onSaveButtonClick = () => {\r\n        const { formState, updateValidationError, switchTab, sendForm } = this.props;\r\n        const errorState = getErrorState(formState);\r\n        if (Object.values(errorState).some(item => item.length)) {\r\n            updateValidationError(errorState);\r\n            switchTab(getTabNumberToSwitch(errorState));\r\n        } else {\r\n            const formToSend = DecDataConverter.convertToSend(fillMissedFields(formState));\r\n            sendForm(formToSend);\r\n            this.onClose();\r\n        }\r\n    };\r\n\r\n    onTabSwitch = (e, tabNumber) => {\r\n        this.props.switchTab(tabNumber);\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (!isEmpty(this.props.validationError)) {\r\n            const { formState, updateValidationError, isEditMode } = this.props;\r\n            const errorState = getErrorState(formState, isEditMode);\r\n            if (!isEqual(errorState, this.props.validationError)) {\r\n                updateValidationError(errorState);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { \r\n            isOpen, \r\n            openedTab,\r\n            validationError, \r\n            isEditMode,\r\n        } = this.props;\r\n    \r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <CustomDialog\r\n                    open={isOpen}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    scroll=\"body\"\r\n                    className=\"decoratorDialog\"\r\n                    fullWidth={true}\r\n                    maxWidth={false}\r\n                    id=\"dialog\"\r\n                >\r\n                    <div className=\"header\">\r\n                        <DialogTitle className=\"header-title\">\r\n                            <p>Create new paragraph decorator</p>\r\n                        </DialogTitle>\r\n                        <div className=\"header-buttons\">\r\n                            <Button \r\n                                variant=\"contained\"\r\n                                color=\"default\"\r\n                                onClick={this.onClose}\r\n                                className=\"topNavButton\"\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                            <Button \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={this.onSaveButtonClick}\r\n                                className=\"topNavButton\"\r\n                            >\r\n                                {isEditMode ? \"Save\" : \"Create\"}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <DialogContent className=\"content\">\r\n                        <div className=\"content-leftSide\">\r\n                            <CustomTabs \r\n                                className=\"dialogTabs\"\r\n                                value={openedTab} \r\n                                onChange={this.onTabSwitch} \r\n                                orientation=\"vertical\"\r\n                                color=\"primary\"\r\n                                indicatorColor=\"primary\"\r\n                            >\r\n                                { validationError.namesSection \r\n                                    ? ( <CustomErrorTab className=\"dialogTab\" label=\"Decorator's name\" /> )\r\n                                    :  ( <CustomTab className=\"dialogTab\" label=\"Decorator's name\" /> ) }\r\n    \r\n                                <CustomTab className=\"dialogTab\" label=\"Positioning\" />\r\n    \r\n                                { validationError.listSection \r\n                                    ? ( <CustomErrorTab className=\"dialogTab\" label=\"List\" /> ) \r\n                                    : ( <CustomTab className=\"dialogTab\" label=\"List\" /> ) }\r\n    \r\n                                <CustomTab className=\"dialogTab\" label=\"Referencing\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Typography\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Distances\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Frames\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Filling\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"ToC\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Short cuts\" />\r\n                                {/* <CustomTab className=\"dialogTab\" label=\"Test\" /> */}\r\n                            </CustomTabs>\r\n                        </div>\r\n                        <div className=\"content-rightSide\">\r\n                            { openedTab === 0 && <NamesSection /> }\r\n                            { openedTab === 1 && <PositioningSection /> }\r\n                            { openedTab === 2 && <ListSection /> }\r\n                            { openedTab === 3 && <ReferencingSection /> }\r\n                            { openedTab === 4 && <TypographySection /> }\r\n                            { openedTab === 5 && <DistancesSection /> }\r\n                            { openedTab === 6 && <FramesSection /> }\r\n                            { openedTab === 7 && <FillingSection /> }\r\n                            { openedTab === 8 && <TocSection /> }\r\n                            { openedTab === 9 && <ShortCutsSection /> }\r\n                            {/* openedTab === 10 && <TestSection /> */}\r\n                        </div>\r\n                    </DialogContent>\r\n                </CustomDialog>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, isOpen, openedTab, validationError, isEditMode }}) => {\r\n    return { \r\n        formState: form,\r\n        isOpen,\r\n        openedTab,\r\n        validationError, \r\n        isEditMode,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        closeDialog: closeDialog(dispatch),\r\n        clearForm: () => dispatch(clearDecoratorForm()),\r\n        switchTab: payload => dispatch(switchDecDialogTab(payload)),\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(DecoratorDialog);","import DecoratorDialog from \"./DecoratorDialog\";\r\nexport default DecoratorDialog;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport DecoratorDialog from \"./components/DecoratorDialog\";\nimport { openDialog } from \"./components/DecoratorDialog/actions\";\nimport { clearSavedDecoratorForm,  saveDecoratorForm } from \"./actions\";\nimport { DecDataConverter } from \"./components/DecoratorDialog/helpers\";\nimport theme from \"./components/DecoratorDialog/theme\";\n\nimport \"./App.css\";\n\nconst App = props => {\n    const { openDialog, saveForm, clearSavedForm, savedForm } = props;\n\n    const openEditDialog = () => {\n        openDialog(DecDataConverter.convertToEdit(savedForm || {}));\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"App\">\n                <div className=\"startButtons\">\n                    { !savedForm ? (\n                        <Button \n                            onClick={() => openDialog()}\n                            color=\"primary\"\n                        >Create new</Button>\n                    ) : (\n                        <>\n                            <Button \n                                onClick={openEditDialog}\n                            >Edit saved</Button>\n                            <Button \n                                onClick={clearSavedForm}\n                                color=\"secondary\"\n                            >Delete saved</Button>\n                        </>\n                    )}\n                </div>\n                <DecoratorDialog sendForm={saveForm} />\n            </div>\n        </ThemeProvider>\n    );\n};\n\nconst mapStateToProps = ({ savedForm }) => {\n    return { savedForm };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        openDialog: openDialog(dispatch),\n        saveForm: payload => dispatch(saveDecoratorForm(payload)),\n        clearSavedForm: () => dispatch(clearSavedDecoratorForm()),\n    };\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(App);","export const SAVE_DEC_FORM = \"SAVE_DEC_FORM\";\r\nexport const CLEAR_SAVED_DEC_FORM = \"CLEAR_SAVED_DEC_FORM\";\r\n\r\nexport const saveDecoratorForm = payload => {\r\n    return {\r\n        type: SAVE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearSavedDecoratorForm = () => {\r\n    return {\r\n        type: CLEAR_SAVED_DEC_FORM,\r\n    };\r\n};","import { SHOW_DEC_DIALOG, HIDE_DEC_DIALOG } from \"../../components/DecoratorDialog/actions\";\r\n\r\nconst isOpenReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case SHOW_DEC_DIALOG:\r\n            return true;\r\n        case HIDE_DEC_DIALOG:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isOpenReducer;","import { UPDATE_DEC_FORM, CLEAR_DEC_FORM } from \"../../components/DecoratorDialog/actions\";\r\nimport { sampleText, initialFormState } from \"../../components/DecoratorDialog/constants\";\r\n\r\nconst initialState = { \r\n    previewText: sampleText,\r\n    ...initialFormState,\r\n};\r\n\r\nconst decoratorFormReducer = (state = initialState, action) =>  {\r\n    switch (action.type) {\r\n        case UPDATE_DEC_FORM:\r\n            return { ...state, ...action.payload };\r\n        case CLEAR_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default decoratorFormReducer;","import { \r\n    UPDATE_VALIDATION_ERROR, \r\n    REMOVE_VALIDATION_ERROR, \r\n} from \"../../components/DecoratorDialog/actions\";\r\n\r\nconst initialErrorState = {};\r\n\r\nconst validationErrorReducer = (state = initialErrorState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_VALIDATION_ERROR:\r\n            return action.payload;\r\n        case REMOVE_VALIDATION_ERROR:\r\n            return initialErrorState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default validationErrorReducer;","import { \r\n    SWITCH_ON_DEC_DIALOG_EDIT_MODE, \r\n    SWITCH_OFF_DEC_DIALOG_EDIT_MODE, \r\n} from \"../../components/DecoratorDialog/actions\";\r\n\r\nconst isEditModeReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_ON_DEC_DIALOG_EDIT_MODE:\r\n            return true;\r\n        case SWITCH_OFF_DEC_DIALOG_EDIT_MODE:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isEditModeReducer;","import { \r\n    SWITCH_DEC_DIALOG_TAB,\r\n    RESET_DEC_DIALOG_TAB, \r\n} from \"../../components/DecoratorDialog/actions\";\r\n\r\nconst initialState = 0;\r\n\r\nconst openedTabReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_DEC_DIALOG_TAB:\r\n            return action.payload;\r\n        case RESET_DEC_DIALOG_TAB:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default openedTabReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport isOpenReducer from \"./isOpenReducer\";\r\nimport decoratorFormReducer from \"./decoratorFormReducer\";\r\nimport validationErrorReducer from \"./validationErrorReducer\";\r\nimport isEditModeReducer from \"./isEditModeReducer\";\r\nimport openedTabReducer from \"./openedTabReducer\";\r\n\r\nconst decoratorDialogReducer = combineReducers({\r\n    isOpen: isOpenReducer,\r\n    openedTab: openedTabReducer,\r\n    validationError: validationErrorReducer,\r\n    isEditMode: isEditModeReducer,\r\n    form: decoratorFormReducer,\r\n});\r\n\r\nexport default decoratorDialogReducer;","import { SAVE_DEC_FORM, CLEAR_SAVED_DEC_FORM } from \"../actions\";\r\n\r\nconst initialState = null;\r\n\r\nexport const savedFormReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SAVE_DEC_FORM:\r\n            return action.payload;\r\n        case CLEAR_SAVED_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default savedFormReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport decoratorDialogReducer from \"./decoratorDialogReducer\";\r\nimport savedFormReducer from \"./savedFormReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    decoratorDialog: decoratorDialogReducer,\r\n    savedForm: savedFormReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}