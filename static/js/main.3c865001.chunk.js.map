{"version":3,"sources":["components/NewDecDialog/common/CustomInput.js","components/NewDecDialog/common/NewGroupDialog.js","components/NewDecDialog/hoc/withNewGroupControl.js","components/NewDecDialog/sections/NamesSection.js","components/NewDecDialog/sections/WordExportSection.js","components/NewDecDialog/common/CustomInputShort.js","components/NewDecDialog/constants.js","components/NewDecDialog/sections/PositioningSection/BackSpaceActionInput.js","components/NewDecDialog/sections/PositioningSection/index.js","components/NewDecDialog/sections/PositioningSection/PositioningSection.js","components/NewDecDialog/common/Preview/ListPreview.js","components/NewDecDialog/helpers/helpers.js","components/NewDecDialog/common/ColorField/index.js","components/NewDecDialog/common/ColorField/ColorField.js","components/NewDecDialog/sections/ListSection.js","components/NewDecDialog/sections/ReferencingSection.js","components/NewDecDialog/common/ContentEditable.js","components/NewDecDialog/common/Preview/Preview.js","components/NewDecDialog/common/Preview/index.js","components/NewDecDialog/sections/TypographySection/index.js","components/NewDecDialog/sections/TypographySection/TypographySection.js","components/NewDecDialog/sections/DistancesSection.js","components/NewDecDialog/sections/FramesSection/FrameTypeInput.js","components/NewDecDialog/sections/FramesSection/index.js","components/NewDecDialog/sections/FramesSection/FramesSection.js","components/NewDecDialog/sections/FillingSection.js","components/NewDecDialog/sections/TocSection.js","components/NewDecDialog/sections/ShortCutsSection.js","components/NewDecDialog/sections/TestSection.js","components/NewDecDialog/helpers/isFormValid.js","components/NewDecDialog/hoc/withDialogControl.js","components/NewDecDialog/theme.js","components/NewDecDialog/actions/index.js","components/NewDecDialog/helpers/getShortCutUtils.js","components/NewDecDialog/Handlers.js","components/NewDecDialog/common/CustomTab.js","components/NewDecDialog/common/CustomErrorTab.js","components/NewDecDialog/common/CustomTabs.js","components/NewDecDialog/common/CustomDialog.js","components/NewDecDialog/index.js","components/NewDecDialog/helpers/DecDataParser.js","App.js","reducers/decoratorDialogReducer/isOpenReducer.js","components/NewDecDialog/getInitialState.js","reducers/decoratorDialogReducer/decoratorFormReducer.js","reducers/decoratorDialogReducer/index.js","store.js","serviceWorker.js","index.js"],"names":["CustomInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","minWidth","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","NewGroupDialog","state","props","currentGroup","groupType","nameEn","nameDe","nameRu","nameFr","nameFrCa","nameEs","groupKey","onInputChange","inputName","e","setState","target","value","onClose","hideDialog","onGroupSave","onSave","changeGroupSelect","trim","length","groupToSave","this","isOpen","isEditMode","titleText","buttonText","Dialog","className","open","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","variant","margin","onChange","DialogActions","Button","onClick","color","React","Component","withNewGroupControl","ViewComponent","groupSelect","newGroup","handleClick","newValue","decKey","changeDecKey","group","changeGroup","active","changeActive","decNameEn","changeDecNameEn","decNameDe","changeDecNameDe","decNameRu","changeDecNameRu","decNameFr","changeDecNameFr","decNameFrCa","changeDecNameFrCa","decNameEs","changeDecNameEs","changeGroupToCreate","validationError","newGroupName","onGroupChange","args","error","NativeSelect","Checkbox","checked","WordExportSection","wordStyleName","changeWordStyleName","softReturn","changeSoftReturn","CustomInputShort","listStyleType","name","backSpaceActions","key","decoratorsList","alignmentsMap","center","left","right","justify","numberingSets","decimal","bulletNamesMap","bulletpoint","dash","star","sampleText","requiredFields","HOLDER","BackSpaceActionInput","width","PositioningSection","indentationalLevel","changeIndentationalLevel","backspaceActionWithContent","changeBackspaceActionWithContent","backspaceActionWithContentStyle","changeBackspaceActionWithContentStyle","returnActionNextSection","backspaceActionWithoutContent","changeBackspaceActionWithoutContent","backspaceActionWithoutContentStyle","changeBackspaceActionWithoutContentStyle","changeReturnActionNextSection","returnActionEmptySection","changeReturnActionEmptySection","tabAction","changeTabAction","shiftTabAction","changeShiftTabAction","id","map","action","dec","ListPreview","listPreviewStyle","listChars","prefix","suffix","suffixDistance","sideNumberStyle","listItemsBeginnings","listChar","listItemBeginingStyle","marginRight","style","getCorrectColor","hex","correctColor","selectAllOnClick","defaultValue","focus","select","getOffset","alignType","parseFloat","slice","scrollToBottom","setTimeout","document","getElementsByClassName","scrollTo","top","Number","MAX_SAFE_INTEGER","behavior","getListChars","isOrderedList","numberingStyle","listItem","unicodeChar","newBullet","Array","fill","ColorField","hideColorPicker","showColorPicker","colorPickerHandler","changeColor","colorCode","changeColorCode","defaultColorCode","required","bottomAligned","colorError","inputError","pickerColor","colorSampleStyle","colorPickerClassName","InputProps","startAdornment","InputAdornment","onChangeComplete","disableAlpha","ListSection","listPreviewProps","isList","changeIsList","listName","changeListName","orderLevel","changeOrderLevel","changePrefix","changeSuffix","changeSuffixDistance","magicTabs","changeMagicTabs","listType","changeListType","changeListItem","unicodeNumber","changeUnicodeNumber","changeUnicodeChar","changeNumberingStyle","continueNumbering","changeContinueNumbering","allowRestartNumbering","changeAllowRestartNumbering","includePreviousFrom","changeIncludePreviousFrom","sideNumber","changeSideNumber","sideNumberFont","changeSideNumberFont","sideNumberAlignment","changeSideNumberAlignment","sideNumberFontSize","changeSideNumberFontSize","sideNumberFontColor","changeSideNumberFontColor","sideNumberFillingColor","changeSideNumberFillingColor","sideNumberWidth","changeSideNumberWidth","sideNumberRadius","changeSideNumberRadius","Object","entries","referenceGroup","changeReferenceGroup","changeReferenceGroupToCreate","onXrefChange","xref","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","q","propertyIsEnumerable","normalizeHtml","str","replace","replaceCaret","el","findLastTextNode","node","nodeType","Node","TEXT_NODE","children","childNodes","textNode","isTargetFocused","activeElement","nodeValue","sel","window","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","ContentEditable","arguments","lastHtml","html","innerRef","current","getEl","emitChange","originalEvt","innerHTML","evt","assign","_a","tagName","ref","onInput","onBlur","onKeyUp","onKeyDown","contentEditable","disabled","dangerouslySetInnerHTML","__html","nextProps","deepEqual","Preview","previewText","changePreviewText","previewStyle","verticalAlign","editableContentStyle","outline","marginBottom","selectAllChildren","TypographySection","previewProps","font","changeFont","alignment","changeAlignment","changeFontSize","fontColorName","changeFontColorName","fontColor","changeFontColor","bold","changeBold","italic","changeItalic","underlined","changeUnderlined","stroke","changeStroke","textTransform","changeTextTransform","changeVerticalAlign","FormControlLabel","control","label","labelPlacement","RadioGroup","row","Radio","DistancesSection","changeMarginTop","changeMarginBottom","firstRowIndent","changeFirstRowIndent","otherRowsIndent","changeOtherRowsIndent","lineSpacing","changeLineSpacing","customLineSpacing","changeCustomLineSpacing","wordSpacing","changeWordSpacing","FrameTypeInput","FramesSection","leftBorder","changeLeftBorder","rightBorder","changeRightBorder","topBorder","changeTopBorder","bottomBorder","changeBottomBorder","borderColorName","changeBorderColorName","changeBorderColor","borderThickness","changeBorderThickness","borderType","changeBorderType","previewBorderWidth","isNaN","borderLeft","marginLeft","borderRight","borderTop","borderBottom","Select","MenuItem","FillingSection","fillingColorName","changeFillingColorName","fillingColor","changeFillingColor","connectToPrevious","changeConnectToPrevious","TocSection","tocIndentation","changeTocIndentation","ShortCutSection","shortCutWinView","changeShortCutWin","shortCutMacView","changeShortCutMac","isFormValid","form","every","fieldName","withDialogControl","Wrapped","closeDialog","clearForm","formState","updateForm","otherProps","onSaveButtonClick","console","log","createMuiTheme","primary","blue","secondary","pink","changeDecoratorForm","payload","type","clearDecoratorForm","openDialog","dispatch","getShortCutUtils","systemName","keyCode","preventDefault","stopPropagation","ShortcutUtils","isDeadKey","prevent","deleteKey","shortCut","ctrlKey","shiftKey","altKey","metaKey","shortCutForView","convertShortcutToMeta","isCmdPressed","stringValue","keys","CMD_KEYS","forEach","keycode","removeDuplicateShortcuts","decorators","newPdShortcut","removed","decoratorKey","item","item_type","isEqual","keyboard_shortcut","childItems","child_items","itemKey","removeDuplicateShortcutsInInlineStyle","inlineStyles","styleKey","Handlers","update","toggleStateProperty","propName","setStateProperty","secondArg","undefined","setBullet","setColor","filteredInput","match","setNumber","setShortCut","valuePropName","viewPropName","isMac","convertEventToShortCut","CustomTab","overflow","opacity","selected","Tab","CustomErrorTab","textDecoration","CustomTabs","indicator","zIndex","display","Tabs","CustomDialog","minHeight","height","container","scrollBody","paperFullWidth","maxHeight","flexDirection","paperScrollBody","connect","openedTab","groupToCreate","referenceGroupToCreate","changeOpenedTab","previewFontColor","previewFillingColor","previewAdditionalFillingColor","indentsDifference","previewMarginLeft","previewTextIndent","alignItems","textAlign","fontWeight","fontStyle","fontVariant","backgroundImage","textIndent","lineHeight","styledText","unstyledText","getUnstyledText","previewSideNumberFontColor","previewSideNumberFillingColor","namesSectionProps","wordExportSectionProps","positioningSectionProps","listSectionProps","field","newUnicodeNumber","newUnicodeChar","String","fromCharCode","parseInt","unicodeNumberToChar","charCodeAt","toString","unicodeCharToNumber","referencingSectionProps","typographySectionProps","distancesSectionProps","framesSectionProps","fillingSectionProps","tocSectionProps","shortCutsSectionProps","sectionPropsSets","sectionProps","some","getErrorSections","isErrorInNames","isErrorInWordExport","isErrorInList","ThemeProvider","aria-labelledby","scroll","orientation","indicatorColor","ShortCutsSection","TestSection","DecDataParser","mapDecFields","parseToEdit","isOpenReducer","emptyDecProps","shortCutWin","shortCutMac","initialState","decProps","getInitialState","decoratorFormReducer","decoratorDialogReducer","combineReducers","createStore","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c865001.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInput = withStyles(theme => ({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      minWidth: \"183px\",\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInput;","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass NewGroupDialog extends React.Component {\r\n\r\n    state = this.props.currentGroup \r\n          ? this.props.currentGroup \r\n          : this.props.groupType !== \"xref\" \r\n          ? { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", }\r\n          : { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", groupKey: \"\", };\r\n    \r\n    onInputChange = inputName => e => {\r\n        this.setState({ \r\n            [inputName]: e.target.value \r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        const {currentGroup, hideDialog } = this.props;\r\n        this.setState({ ...currentGroup });\r\n        hideDialog()\r\n    };\r\n\r\n    onGroupSave = () => {\r\n        const { onSave, changeGroupSelect, hideDialog, groupType } = this.props;\r\n        if (this.state.nameEn.trim().length && (groupType !== \"xref\" || this.state.groupKey.trim().length)) {\r\n            const groupToSave = {\r\n                nameEn: this.state.nameEn.trim(),\r\n                nameDe: this.state.nameDe.trim(),\r\n                nameRu: this.state.nameRu.trim(),\r\n                nameFr: this.state.nameFr.trim(),\r\n                nameFrCa: this.state.nameFrCa.trim(),\r\n                nameEs: this.state.nameEs.trim(),\r\n            };\r\n            if (groupType === \"xref\") {\r\n                groupToSave.groupKey = this.state.groupKey.trim();\r\n            }\r\n            onSave(groupToSave);\r\n            changeGroupSelect(groupToSave)(null, this.state.nameEn.trim());\r\n            hideDialog();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isOpen, isEditMode } = this.props;\r\n        const { onInputChange, onGroupSave, onClose } = this;\r\n        const titleText = `${isEditMode ? \"Edit\" : \"Create\"} new ${this.props.groupType === \"xref\" ? \"reference \" : \"\"}group`\r\n        const buttonText = isEditMode ? \"Save\" : \"Create\";\r\n        return (\r\n            <Dialog\r\n                className=\"paragraphDecorators-dialog\"\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <DialogTitle>{titleText}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        {\r\n                            this.props.groupType === \"xref\" \r\n                            &&\r\n                            <>\r\n                                <span>Group Key</span>\r\n                                <TextField \r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                    onChange={onInputChange(\"groupKey\")}\r\n                                    value={this.state.groupKey}\r\n                                />\r\n                            </>\r\n                        }\r\n                        <span>Name EN</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEn\")}\r\n                            value={this.state.nameEn}\r\n                        />\r\n                        <span>Name DE</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameDe\")} \r\n                            value={this.state.nameDe}\r\n                        />                        \r\n                        <span>Name RU</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameRu\")} \r\n                            value={this.state.nameRu}\r\n                        />                        \r\n                        <span>Name FR<br/><span className=\"span_smallText\">France</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFr\")} \r\n                            value={this.state.nameFr}\r\n                        />\r\n                        <span>Name FR<br/><span className=\"span_smallText\">Canada</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFrCa\")} \r\n                            value={this.state.nameFrCa}\r\n                        />\r\n                        <span>Name ES</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEs\")} \r\n                            value={this.state.nameEs}\r\n                        />                  \r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color=\"default\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={onGroupSave} color=\"primary\">\r\n                        {buttonText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n};\r\n\r\nexport default NewGroupDialog;","import React from \"react\";\r\n\r\nconst withNewGroupControl = (ViewComponent) => {\r\n    return class extends React.Component {\r\n        state = {\r\n            isOpen: false,\r\n            groupSelect: \"\",\r\n            newGroup: this.props.newGroup || \"\",\r\n        }\r\n        \r\n        handleClick = () => {\r\n            this.setState(({ isOpen }) => {\r\n                return {\r\n                    isOpen: !isOpen\r\n                };\r\n            });\r\n        }\r\n    \r\n        onSave = newGroup => {\r\n            this.setState({ newGroup });\r\n        }\r\n    \r\n        changeGroupSelect = (newValue) => {\r\n            this.setState({\r\n                groupSelect: newValue,\r\n            });\r\n        }\r\n\r\n        hideDialog = () => {\r\n            this.setState({ isOpen: false });\r\n        }\r\n        \r\n        render() {\r\n            const { handleClick, onSave, changeGroupSelect, hideDialog } = this; \r\n            return ( <ViewComponent {...this.props} {...this.state} {...{ handleClick, onSave, changeGroupSelect, hideDialog }} /> );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withNewGroupControl;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\n\r\nconst NamesSection = (props) => {\r\n    const { \r\n        newGroup, \r\n        isOpen, \r\n        hideDialog, \r\n        handleClick, \r\n        onSave, \r\n        decKey, changeDecKey,\r\n        group, changeGroup,\r\n        active, changeActive,\r\n        decNameEn, changeDecNameEn,\r\n        decNameDe, changeDecNameDe,\r\n        decNameRu, changeDecNameRu,\r\n        decNameFr, changeDecNameFr,\r\n        decNameFrCa, changeDecNameFrCa,\r\n        decNameEs, changeDecNameEs,\r\n        changeGroupToCreate,\r\n        validationError,\r\n    } = props;\r\n    \r\n    const newGroupName = newGroup.nameEn;\r\n    const isEditMode = !!newGroupName;\r\n\r\n    const onGroupChange = group => (...args) => {\r\n        const value = args[0] ? args[0].target.value : args[1];\r\n        if (group.nameEn && value === group.nameEn) {\r\n            changeGroupToCreate(null, group);\r\n        } else {\r\n            changeGroupToCreate(null, \"\");\r\n        }\r\n        changeGroup(...args);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n            <span>Key</span>\r\n            <TextField \r\n                value={decKey}\r\n                onChange={changeDecKey}\r\n                error={validationError && !decKey}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Group</span>\r\n            <div>\r\n                <NativeSelect \r\n                    value={group} \r\n                    onChange={onGroupChange(newGroup)}\r\n                    input={ <CustomInput /> }  \r\n                >\r\n                    <option value=\"\">...</option>\r\n                    { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                    <option value=\"0\">Text</option>\r\n                    <option value=\"1\">Heading</option>\r\n                    <option value=\"2\">Heading Heading Heading Heading</option>\r\n                </NativeSelect>\r\n                { !(isEditMode && group !== newGroupName) && (\r\n                    <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                        { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                    </Button>\r\n                ) }\r\n            </div>\r\n\r\n            <span>Active</span>\r\n            <div>\r\n                <Checkbox\r\n                    checked={active}\r\n                    onChange={changeActive} \r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n\r\n            <span>Name EN</span>\r\n            <TextField \r\n                value={decNameEn}\r\n                onChange={changeDecNameEn}\r\n                error={validationError && !decNameEn}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name DE</span>\r\n            <TextField \r\n                value={decNameDe}\r\n                onChange={changeDecNameDe}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name RU</span>\r\n            <TextField \r\n                value={decNameRu}\r\n                onChange={changeDecNameRu}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name FR<br/><span className=\"span_smallText\">France</span></span>\r\n            <TextField \r\n                value={decNameFr}\r\n                onChange={changeDecNameFr}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name FR<br/><span className=\"span_smallText\">Canada</span></span>\r\n            <TextField \r\n                value={decNameFrCa}\r\n                onChange={changeDecNameFrCa}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name ES</span>\r\n            <TextField \r\n                value={decNameEs}\r\n                onChange={changeDecNameEs}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n\r\n            <NewGroupDialog \r\n                isOpen={isOpen}\r\n                hideDialog={hideDialog}\r\n                onSave={onSave}\r\n                isEditMode={isEditMode}\r\n                currentGroup={newGroup}\r\n                changeGroupSelect={onGroupChange}\r\n                groupType=\"decorators\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withNewGroupControl(NamesSection);","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst WordExportSection = ({ wordStyleName, changeWordStyleName, softReturn, changeSoftReturn, validationError, }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Style name in WORD</span>\r\n            <TextField \r\n                value={wordStyleName}\r\n                onChange={changeWordStyleName}\r\n                error={validationError && !wordStyleName}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n            \r\n            <span>Soft return</span>\r\n            <div>\r\n                <Checkbox \r\n                    checked={softReturn}\r\n                    onChange={changeSoftReturn}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WordExportSection;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInputShort = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInputShort;","export const listStyleType = [\r\n  {\r\n    name: '1, 2, 3',\r\n    value: 'decimal',\r\n  },\r\n  {\r\n    name: 'A, B, C',\r\n    value: 'upper-alpha',\r\n  },\r\n  {\r\n    name: 'a, b, c',\r\n    value: 'lower-alpha',\r\n  },\r\n  {\r\n    name: 'I, II, III',\r\n    value: 'upper-roman',\r\n  },\r\n  {\r\n    name: 'i, ii, iii',\r\n    value: 'lower-roman',\r\n  },\r\n];\r\n\r\nexport const backSpaceActions = [\r\n  { key: 'merge', value: 'Merge' },\r\n  { key: 'apply_other_pd', value: 'Apply other PD' },\r\n  { key: 'remove_pd', value: 'Remove PD' },\r\n  { key: 'nothing', value: 'Nothing' }\r\n];\r\n\r\nexport const returnOnEmptySectionActions = [\r\n  { key: 'apply_other_pd', value: 'Apply other PD' },\r\n  { key: 'create_new_section', value: 'Create new section' },\r\n  { key: 'apply_default_pd', value: 'Apply default PD' },\r\n  { key: 'nothing', value: 'Nothing' }\r\n];\r\n\r\nexport const decoratorsList = [\r\n    { name: \"...\", value: \"\" },\r\n    { name: \"Text 0\", value: \"quick_text_0\" },\r\n    { name: \"Text 1\", value: \"quick_text_1\" },\r\n    { name: \"Text 2\", value: \"quick_text_2\" },\r\n    { name: \"Text 3\", value: \"quick_text_3\" },\r\n    { name: \"Text 4\", value: \"quick_text_4\" },\r\n    { name: \"Text 5\", value: \"quick_text_5\" },\r\n];\r\n\r\nexport const alignmentsMap = {\r\n  center: \"center\",\r\n  left: \"flex-start\",\r\n  right: \"flex-end\",\r\n  justify: \"flex-start\",\r\n};\r\n\r\nexport const numberingSets = {\r\n  decimal: [\"1\", \"2\", \"3\", \"4\"],\r\n  \"upper-alpha\": [\"A\", \"B\", \"C\", \"D\"],\r\n  \"lower-alpha\": [\"a\", \"b\", \"c\", \"d\"],\r\n  \"upper-roman\": [\"I\", \"II\", \"III\", \"IV\"],\r\n  \"lower-roman\": [\"i\", \"ii\", \"iii\", \"iv\"],\r\n};\r\n\r\nexport const bulletNamesMap = {\r\n  bulletpoint: \"•\",\r\n  dash: \"—\",\r\n  star: \"★\",\r\n};\r\n\r\nexport const sampleText = `<div>Sample Text. You can change it.</div><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ornare maximus vehicula. Duis nisi velit, dictum id mauris vitae, lobortis pretium quam.</div>`;\r\n\r\nexport const requiredFields = [ \"decKey\", \"decNameEn\", \"wordStyleName\", \"listName\", ];\r\n\r\nexport const HOLDER = \"HOLDER-POLDER\";","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst BackSpaceActionInput = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"175px\",\r\n      width: \"175px\",\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default BackSpaceActionInput;","import PositioningSection from \"./PositioningSection\";\r\nexport default PositioningSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport { backSpaceActions, returnOnEmptySectionActions, decoratorsList } from \"../../constants\";\r\nimport BackSpaceActionInput from \"./BackSpaceActionInput\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst PositioningSection = (props) => {\r\n    const {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithContentStyle, changeBackspaceActionWithContentStyle,\r\n        backspaceActionWithoutContent, changeBackspaceActionWithoutContent,\r\n        backspaceActionWithoutContentStyle, changeBackspaceActionWithoutContentStyle,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_positioning\">\r\n            <span id=\"r1c1\">Identational level</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={indentationalLevel}\r\n                    onChange={changeIndentationalLevel}\r\n                    id=\"r1c2\" \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n            <div id=\"r2\" className=\"sectionTitle\">\r\n                <span>BACKSPACE</span>\r\n            </div>\r\n\r\n            <span id=\"r3c1\">At the beginning of a section with content</span>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <div>\r\n                    <NativeSelect \r\n                        value={backspaceActionWithContent}\r\n                        onChange={changeBackspaceActionWithContent}\r\n                        id=\"r3c2\" \r\n                        input={ <BackSpaceActionInput /> }\r\n                    >\r\n                        {backSpaceActions.map(action => (\r\n                            <option value={action.key} key={`backSpace ${action.key}`}>{action.value}</option>\r\n                        ))}\r\n                    </NativeSelect>\r\n                </div>\r\n                {   backspaceActionWithContent === \"apply_other_pd\" && (\r\n                    <NativeSelect\r\n                        value={backspaceActionWithContentStyle}\r\n                        onChange={changeBackspaceActionWithContentStyle}\r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        <option value=\"default\">Global Fallback Style</option>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                ) }\r\n            </div>\r\n\r\n            <div id=\"r4\" className=\"sectionTitle\">\r\n                <span>RETURN</span>\r\n            </div>\r\n\r\n            <span id=\"r5c1\">Style of next section</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={returnActionNextSection}\r\n                    onChange={changeReturnActionNextSection}\r\n                    id=\"r5c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"default\">Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n\r\n            <span id=\"r6c1\">In empty section change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect \r\n                    value={returnActionEmptySection}\r\n                    onChange={changeReturnActionEmptySection}\r\n                    id=\"r6c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"default\">Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <div id=\"r7\" className=\"sectionTitle\">\r\n                <span>TAB / SHIFT+TAB</span>\r\n            </div>\r\n\r\n            <span id=\"r8c1\">TAB – change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={tabAction}\r\n                    onChange={changeTabAction}\r\n                    id=\"r8c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <span id=\"r9c1\">SHIFT+TAB – change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={shiftTabAction}\r\n                    onChange={changeShiftTabAction} \r\n                    id=\"r9c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PositioningSection;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst ListPreview = (props) => {\r\n    const { \r\n        listPreviewStyle, \r\n        listChars, \r\n        prefix, \r\n        suffix, \r\n        suffixDistance, \r\n        sideNumberStyle,\r\n    } = props;\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n    const listItemsBeginnings = listChars.map(listChar => {\r\n        return (`${prefix}${listChar}${suffix}`);\r\n    });\r\n    const listItemBeginingStyle = {\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n        ...sideNumberStyle,\r\n    };\r\n\r\n    return (\r\n        <div className=\"preview preview_list\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div className=\"preview-content\">\r\n                <div className={demonstrationElementClassName}>\r\n                    <div\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        style={listPreviewStyle}\r\n                    >\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[0]}`}</span><span>The first list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[1]}`}</span><span>The second list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[2]}`}</span><span>The third list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[3]}`}</span><span>The fourth list item</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListPreview;","import { numberingSets, bulletNamesMap } from \"../constants\";\r\n\r\nexport const getCorrectColor = (hex, backgroundColor = \"FFF\") => {\r\n    const correctColor = typeof hex === \"string\" && (hex.length === 6 || hex.length === 3) ? hex : backgroundColor;\r\n    return correctColor;\r\n};\r\n\r\nexport const selectAllOnClick = defaultValue => e => {\r\n    if (!defaultValue || e.target.value === defaultValue) {\r\n        e.target.focus();\r\n        e.target.select();\r\n    }\r\n};\r\n\r\nexport const getOffset = (alignType, fontSize) => {\r\n    if (alignType === \"baseline\") {\r\n        return 0;\r\n    }\r\n    return (parseFloat(fontSize.slice()) / 2) * (alignType === \"sub\" ? 1 : -1);\r\n};\r\n\r\nexport const getUnstyledText = styledText => {\r\n    const unstyledText = styledText.replace(/<\\/(.*?)>/gm, \"</div>\").replace(/(?!(?:<\\/(.*?)>|<br(.*?)>)$)<(.*?)>/gm, \"<div>\");\r\n    return unstyledText[0] !== \"<\" ? `<div>${unstyledText}</div>` : unstyledText;\r\n};\r\n\r\nexport const unicodeNumberToChar = unicodeNumber => {\r\n    return String.fromCharCode(parseInt(unicodeNumber, 16));\r\n};\r\n\r\nexport const unicodeCharToNumber = unicodeChar => {\r\n    return unicodeChar.charCodeAt(0).toString(16);\r\n};\r\n\r\nexport const scrollToBottom = className => {\r\n    setTimeout(() => { document.getElementsByClassName(className)[0].scrollTo({\r\n        top: Number.MAX_SAFE_INTEGER,\r\n        behavior: \"smooth\",\r\n    })}, 0);\r\n};\r\n\r\nexport const selectAllEditableContent = className => e => {\r\n    if (e.target.className === className) {\r\n        window.getSelection().selectAllChildren(e.target.children[0]);\r\n    }\r\n};\r\n\r\nexport const getListChars = ({ isOrderedList, numberingStyle, listItem, unicodeChar }) => {\r\n    if (isOrderedList) {\r\n        return numberingSets[numberingStyle];\r\n    }\r\n    const newBullet = bulletNamesMap[listItem] || unicodeChar;\r\n    return Array(4).fill(newBullet);\r\n};\r\n\r\nexport const detectOS = () => {\r\n    if (navigator && navigator.appVersion) {\r\n        if (navigator.appVersion.indexOf(\"Win\") !== -1) {\r\n            return \"Windows\";\r\n        } else if (navigator.appVersion.indexOf(\"Mac\") !== -1) {\r\n            return \"MacOS\";\r\n        }\r\n    }\r\n};\r\n\r\nexport const getErrorSections = (requiredFields = [], ...sectionPropsSets) => {\r\n    return sectionPropsSets.map(sectionProps => {\r\n        return requiredFields.some(fieldName => {\r\n            return sectionProps.hasOwnProperty(fieldName) && !sectionProps[fieldName]\r\n        });\r\n    });\r\n};","import ColorField from \"./ColorField\";\r\nexport default ColorField;","import React from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport { getCorrectColor, selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ColorField extends React.Component {\r\n    state = {\r\n        isOpen: this.props.isOpen,\r\n    };\r\n\r\n    hideColorPicker = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    showColorPicker = () => {\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    colorPickerHandler = changeColor => ({ hex }) => {\r\n        changeColor(null, hex);\r\n    };\r\n\r\n    render() {\r\n        const { colorCode, changeColorCode, defaultColorCode, required, bottomAligned } = this.props;\r\n        const { showColorPicker, hideColorPicker, colorPickerHandler } = this;\r\n        const correctColor = getCorrectColor(colorCode);\r\n        const colorError = correctColor !== colorCode;\r\n        const inputError = colorError && (required || !!colorCode);\r\n        const pickerColor = colorError ? \"\" : `#${correctColor}`;\r\n        const colorSampleStyle = {\r\n            backgroundColor: `#${correctColor}`,\r\n        };\r\n        const colorPickerClassName = `colorPicker${ bottomAligned ? \" colorPicker_bottomAligned\" : \"\"}`;\r\n\r\n        return (\r\n            <div className=\"colorField\">\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    className=\"numberInput\" \r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                    }}\r\n                    value={colorCode}\r\n                    onChange={changeColorCode}\r\n                    onClick={e => { \r\n                        selectAllOnClick(defaultColorCode || \"000\")(e); \r\n                        // this.showColorPicker(); \r\n                    }}\r\n                    error={inputError}\r\n                />\r\n                <div\r\n                    onClick={showColorPicker}\r\n                    className=\"colorSample\" \r\n                    style={colorSampleStyle}\r\n                />\r\n                {this.state.isOpen && (\r\n                    <div className={colorPickerClassName}>\r\n                        <div className=\"colorPicker-chromeBox\">\r\n                            <ChromePicker\r\n                                onChangeComplete={colorPickerHandler(changeColorCode)}\r\n                                color={pickerColor}\r\n                                disableAlpha\r\n                            />\r\n                        </div>\r\n                        <div className=\"colorPicker-popOver\"  onClick={hideColorPicker}></div>\r\n                    </div>\r\n                ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorField;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport ListPreview from \"../common/Preview/ListPreview\";\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport ColorField from \"../common/ColorField\";\r\nimport { listStyleType, bulletNamesMap } from \"../constants\"\r\nimport { selectAllOnClick, scrollToBottom } from \"../helpers\";\r\n\r\nconst ListSection = (props) => {\r\n    const {\r\n        listPreviewProps,\r\n        isList, changeIsList, \r\n        listName, changeListName,\r\n        orderLevel, changeOrderLevel,\r\n        prefix, changePrefix,\r\n        suffix, changeSuffix,\r\n        suffixDistance, changeSuffixDistance,\r\n        magicTabs, changeMagicTabs,\r\n        listType, changeListType, \r\n        listItem, changeListItem,\r\n        unicodeNumber, changeUnicodeNumber,\r\n        unicodeChar, changeUnicodeChar,\r\n        numberingStyle, changeNumberingStyle,\r\n        continueNumbering, changeContinueNumbering,\r\n        allowRestartNumbering, changeAllowRestartNumbering,\r\n        includePreviousFrom, changeIncludePreviousFrom,\r\n        sideNumber, changeSideNumber,\r\n        sideNumberFont, changeSideNumberFont,\r\n        sideNumberAlignment, changeSideNumberAlignment,\r\n        sideNumberFontSize, changeSideNumberFontSize,\r\n        sideNumberFontColor, changeSideNumberFontColor,\r\n        sideNumberFillingColor, changeSideNumberFillingColor,\r\n        sideNumberWidth, changeSideNumberWidth,\r\n        sideNumberRadius, changeSideNumberRadius,\r\n        validationError,\r\n    } = props;\r\n\r\n    const onListTypeChange = (...args) => {\r\n        changeListType(...args);\r\n        scrollToBottom(\"content-rightSide\");\r\n    };\r\n\r\n    const onSideNumberChange = (...args) => {\r\n        changeSideNumber(...args);\r\n        scrollToBottom(\"content-rightSide\");\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <div>\r\n                    <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth\">\r\n                    <div className=\"listSection-firstSpan\">\r\n                        <span>Is it a list?</span>\r\n                    </div>\r\n                    <div>\r\n                        <Checkbox \r\n                            color=\"primary\" \r\n                            checked={isList} \r\n                            onChange={changeIsList} \r\n                        />\r\n                    </div>\r\n                    { isList && (\r\n                        <>\r\n                            <span>List name</span>\r\n                            <TextField\r\n                                value={listName}\r\n                                onChange={changeListName} \r\n                                error={validationError && !listName}\r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                            />\r\n\r\n                            <span>Order level</span>\r\n                            <div>\r\n                                <NativeSelect\r\n                                    value={orderLevel}\r\n                                    onChange={changeOrderLevel}\r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    <option value=\"\">...</option>\r\n                                    <option value=\"0\">0</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n\r\n                            <span>Prefix</span>\r\n                            <TextField\r\n                                value={prefix}\r\n                                onChange={changePrefix} \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                            />\r\n\r\n                            <span>Suffix</span>\r\n                            <TextField\r\n                                value={suffix}\r\n                                onChange={changeSuffix} \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                                onClick={selectAllOnClick(\".\")}\r\n                            />\r\n\r\n                            <span>Suffix distance</span>\r\n                            <div className=\"inputWithAdornment\">\r\n                                <NativeSelect\r\n                                    value={suffixDistance}\r\n                                    onChange={changeSuffixDistance} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    <option value=\"0.25\">0.25</option>\r\n                                    <option value=\"0.5\">0.5</option>\r\n                                    <option value=\"0.75\">0.75</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"1.25\">1.25</option>\r\n                                    <option value=\"1.5\">1.5</option>\r\n                                    <option value=\"1.75\">1.75</option>\r\n                                    <option value=\"2\">2</option>\r\n                                </NativeSelect>\r\n                                <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                            </div>\r\n\r\n                            <span>Magic Tabs</span>\r\n                            <div>\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={magicTabs} \r\n                                    onChange={changeMagicTabs} \r\n                                />\r\n                            </div>\r\n\r\n                            <span>Type of list</span>\r\n                            <div>\r\n                                <NativeSelect \r\n                                    value={listType} \r\n                                    onChange={onListTypeChange} \r\n                                    input={ <CustomInput /> }\r\n                                >\r\n                                    <option value={\"unordered\"}>Unordered</option>\r\n                                    <option value={\"ordered\"}>Ordered</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </>\r\n                    ) }\r\n                </div>\r\n                    { isList && listType === \"ordered\" && (\r\n                        <div className=\"listSection-typeSettings\">\r\n                            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                                <span>Numbering style</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={numberingStyle}\r\n                                        onChange={changeNumberingStyle}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        {listStyleType.map(style => (\r\n                                          <option value={style.value} key={style.value}>{style.name}</option>\r\n                                        ))}                                    \r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Continue numbering after interruption</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={continueNumbering}\r\n                                        onChange={changeContinueNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Allow restart numbering</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={allowRestartNumbering} \r\n                                        onChange={changeAllowRestartNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Include previous levels from</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={includePreviousFrom} \r\n                                        onChange={changeIncludePreviousFrom}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        <option value=\"\">...</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Side number</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={sideNumber}\r\n                                        onChange={onSideNumberChange}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                            </div> \r\n\r\n                            { sideNumber && (\r\n                                <div className=\"dialogGrid dialogGrid_2minCols listSection-typeSettings\">\r\n                                    <span>Font</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberFont}\r\n                                        onChange={changeSideNumberFont}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"Roboto, slab-serif\"}>Roboto</option>\r\n                                        <option value={\"'Source Serif Pro', serif\"}>Source Serif</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Alignment</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberAlignment}\r\n                                        onChange={changeSideNumberAlignment}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"left\"}>Left</option>\r\n                                        <option value={\"center\"}>Center</option>\r\n                                        <option value={\"right\"}>Right</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Font size</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberFontSize}\r\n                                            onChange={changeSideNumberFontSize}\r\n                                            onClick={selectAllOnClick(\"12\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>      \r\n                            \r\n                                    <span>Font color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFontColor} \r\n                                        changeColorCode={changeSideNumberFontColor}\r\n                                        defaultColorCode={\"FFF\"}\r\n                                        bottomAligned\r\n                                    />\r\n                                        \r\n                                    <span>Filling color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFillingColor} \r\n                                        changeColorCode={changeSideNumberFillingColor}\r\n                                        defaultColorCode={\"1E88E5\"}\r\n                                        bottomAligned\r\n                                    />\r\n\r\n                                    <span>Width</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberWidth}\r\n                                            onChange={changeSideNumberWidth}\r\n                                            onClick={selectAllOnClick(\"20\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                        \r\n                                    <span>Radius</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberRadius}\r\n                                            onChange={changeSideNumberRadius}\r\n                                            onClick={selectAllOnClick(\"10\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                </div> \r\n                            ) }\r\n                        </div>\r\n                    ) }\r\n                </div>\r\n                { isList && <div className=\"listPreviewBox\"><ListPreview {...listPreviewProps} /></div> }\r\n            </div>\r\n            { isList && listType === \"unordered\" && (\r\n                <div className=\"listSection-typeSettings\">\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        <div className=\"dialogGrid dialogGrid_2cols\">\r\n                            <span className=\"listSection-firstSpan\">List item</span>\r\n                            <div className=\"listItemSelect\">\r\n                                <NativeSelect \r\n                                    value={listItem} \r\n                                    onChange={changeListItem} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    { \r\n                                        Object.entries(bulletNamesMap).map(([key, value]) => {\r\n                                            return (<option key={key} value={key}>{value}</option>) \r\n                                        })\r\n                                    }\r\n                                    <option value={\"individual\"}>Custom</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </div>\r\n                        {   listItem === \"individual\" && (\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Unicode number</span>\r\n                                    <div>\r\n                                        <TextField \r\n                                            value={unicodeNumber}\r\n                                            onChange={changeUnicodeNumber}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"unicodeInput\" \r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">u+</InputAdornment>\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Char</span>\r\n                                    <div>\r\n                                        <TextField \r\n                                            value={unicodeChar}\r\n                                            onChange={changeUnicodeChar}\r\n                                            onClick={selectAllOnClick()}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"bulletInput\" \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                        ) }\r\n                    </div> \r\n                </div> \r\n            ) }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\n\r\nconst ReferencingSection = (props) => {\r\n    const { \r\n        newGroup, \r\n        isOpen, \r\n        hideDialog, \r\n        handleClick, \r\n        onSave,\r\n        referenceGroup, changeReferenceGroup,\r\n        changeReferenceGroupToCreate,\r\n    } = props;\r\n    \r\n    const newGroupName = newGroup.nameEn;\r\n    const isEditMode = !!newGroupName;\r\n\r\n    const onXrefChange = xref => (...args) => {\r\n        const value = args[0] ? args[0].target.value : args[1];\r\n        if (xref.groupKey && xref.nameEn && value === xref.nameEn) {\r\n            changeReferenceGroupToCreate(null, xref);\r\n        } else {\r\n            changeReferenceGroupToCreate(null, \"\");\r\n        }\r\n        changeReferenceGroup(...args);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Reference group</span>\r\n            <div>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> } \r\n                    value={referenceGroup} \r\n                    onChange={onXrefChange(newGroup)} \r\n                >\r\n                    { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                    <option value=\"\">none</option>\r\n                    <option value=\"0\">Reference group 1</option>\r\n                    <option value=\"1\">Reference group 2</option>\r\n                </NativeSelect>\r\n                {\r\n                    !(isEditMode && referenceGroup !== newGroupName) &&\r\n                    <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                        { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                    </Button>\r\n                 }\r\n            </div>\r\n            <NewGroupDialog \r\n                isOpen={isOpen}\r\n                hideDialog={hideDialog}\r\n                onSave={onSave}\r\n                isEditMode={isEditMode}\r\n                currentGroup={newGroup}\r\n                changeGroupSelect={onXrefChange}\r\n                groupType=\"xref\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withNewGroupControl(ReferencingSection);","import * as React from \"react\";\r\nimport deepEqual from \"fast-deep-equal\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, q = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(q[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, q[i]))\r\n              t[q[i]] = s[q[i]];\r\n      }\r\n  return t;\r\n};\r\n\r\nfunction normalizeHtml(str) {\r\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, \" \");\r\n}\r\nfunction findLastTextNode(node) {\r\n  if (node.nodeType === Node.TEXT_NODE)\r\n      return node;\r\n  let children = node.childNodes;\r\n  for (let i = children.length - 1; i >= 0; i--) {\r\n      let textNode = findLastTextNode(children[i]);\r\n      if (textNode !== null)\r\n          return textNode;\r\n  }\r\n  return null;\r\n}\r\nfunction replaceCaret(el) {\r\n  // Place the caret at the end of the element\r\n  const target = findLastTextNode(el);\r\n  // do not move caret if element was not focused\r\n  const isTargetFocused = document.activeElement === el;\r\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\r\n      var sel = window.getSelection();\r\n      if (sel !== null) {\r\n          var range = document.createRange();\r\n          range.setStart(target, target.nodeValue.length);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n      }\r\n      if (el instanceof HTMLElement)\r\n          el.focus();\r\n  }\r\n}\r\n/**\r\n* A simple component for an html element with editable contents.\r\n*/\r\nexport default class ContentEditable extends React.Component {\r\n  constructor() {\r\n      super(...arguments);\r\n      this.lastHtml = this.props.html;\r\n      this.el = typeof this.props.innerRef === \"function\" ? { current: null } : React.createRef();\r\n      this.getEl = () => (this.props.innerRef && typeof this.props.innerRef !== \"function\" ? this.props.innerRef : this.el).current;\r\n      this.emitChange = (originalEvt) => {\r\n          const el = this.getEl();\r\n          if (!el)\r\n              return;\r\n          const html = el.innerHTML;\r\n          if (this.props.onChange && html !== this.lastHtml) {\r\n              // Clone event with Object.assign to avoid\r\n              // \"Cannot assign to read only property 'target' of object\"\r\n              const evt = Object.assign({}, originalEvt, {\r\n                  target: {\r\n                      value: html\r\n                  }\r\n              });\r\n              this.props.onChange(evt);\r\n          }\r\n          this.lastHtml = html;\r\n      };\r\n  }\r\n  render() {\r\n      const _a = this.props, { tagName, html, innerRef } = _a, props = __rest(_a, [\"tagName\", \"html\", \"innerRef\"]);\r\n      return React.createElement(tagName || \"div\", Object.assign({}, props, { ref: typeof innerRef === \"function\" ? (current) => {\r\n              innerRef(current);\r\n              this.el.current = current;\r\n          } : innerRef || this.el, onInput: this.emitChange, onBlur: this.props.onBlur || this.emitChange, onKeyUp: this.props.onKeyUp || this.emitChange, onKeyDown: this.props.onKeyDown || this.emitChange, contentEditable: !this.props.disabled, dangerouslySetInnerHTML: { __html: html } }), this.props.children);\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n      const { props } = this;\r\n      const el = this.getEl();\r\n      // We need not rerender if the change of props simply reflects the user's edits.\r\n      // Rerendering in this case would make the cursor/caret jump\r\n      // Rerender if there is no element yet... (somehow?)\r\n      if (!el)\r\n          return true;\r\n      // ...or if html really changed... (programmatically, not by user edit)\r\n      if (normalizeHtml(nextProps.html) !== normalizeHtml(el.innerHTML)) {\r\n          return true;\r\n      }\r\n      // Handle additional properties\r\n      return props.disabled !== nextProps.disabled ||\r\n          props.tagName !== nextProps.tagName ||\r\n          props.className !== nextProps.className ||\r\n          props.innerRef !== nextProps.innerRef ||\r\n          !deepEqual(props.style, nextProps.style);\r\n  }\r\n  componentDidUpdate() {\r\n      const el = this.getEl();\r\n      if (!el)\r\n          return;\r\n      // Perhaps React (whose VDOM gets outdated because we often prevent\r\n      // rerendering) did not update the DOM. So we update it manually now.(?!(?:<br \\/>|<br>|<br\\/>)$)<(.*?)>\r\n      if (this.props.html !== el.innerHTML) {\r\n          el.innerHTML = this.lastHtml = this.props.html;\r\n      }\r\n      replaceCaret(el);\r\n  }\r\n}\r\nContentEditable.propTypes = {\r\n  html: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  tagName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n  ])\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport ContentEditable from \"../ContentEditable\";\r\nimport { getOffset, selectAllEditableContent } from \"../../helpers\"\r\n\r\nconst Preview = ({previewText, changePreviewText, previewStyle}) => {\r\n    const { verticalAlign, fontSize } = previewStyle;\r\n\r\n    const editableContentStyle = {\r\n        ...previewStyle, \r\n        outline: \"none\",\r\n        marginTop: `${parseFloat(previewStyle.marginTop) + getOffset(verticalAlign, fontSize)}pt`,\r\n        marginBottom: `${parseFloat(previewStyle.marginBottom) - getOffset(verticalAlign, fontSize)}pt`,\r\n    };\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n\r\n    return (\r\n        <div className=\"preview\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div \r\n                className=\"preview-content preview-content_withPointer\" \r\n                onClick={selectAllEditableContent(demonstrationElementClassName)}\r\n            >\r\n                <div className={demonstrationElementClassName}>\r\n                    <ContentEditable\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        onChange={changePreviewText} \r\n                        html={previewText}\r\n                        style={editableContentStyle}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preview;","import Preview from \"./Preview.js\";\r\nexport default Preview;","import TypographySection from \"./TypographySection\";\r\nexport default TypographySection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport Preview from \"../../common/Preview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport { selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst TypographySection = (props) => {\r\n    const { \r\n        previewProps,\r\n        font, changeFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Font</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={font}\r\n                    onChange={changeFont}\r\n                >\r\n                    <option value={\"Roboto, slab-serif\"}>Roboto</option>\r\n                    <option value={\"'Source Serif Pro', serif\"}>Source Serif</option>\r\n                </NativeSelect>\r\n\r\n                <span>Alignment</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={alignment}\r\n                    onChange={changeAlignment}\r\n                >\r\n                    <option value={\"left\"}>Left</option>\r\n                    <option value={\"center\"}>Center</option>\r\n                    <option value={\"right\"}>Right</option>\r\n                    <option value={\"justify\"}>Justified</option>\r\n                </NativeSelect>\r\n\r\n                <span>Font size</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={fontSize}\r\n                        onChange={changeFontSize}\r\n                        onClick={selectAllOnClick(\"12\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>      \r\n\r\n                <span>Font color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                    value={fontColorName}\r\n                    onChange={changeFontColorName}\r\n                    onClick={selectAllOnClick(\"Black\")}\r\n                />\r\n\r\n                <span>Font color HEX</span>\r\n                <ColorField \r\n                    colorCode={fontColor} \r\n                    changeColorCode={changeFontColor}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_indented\">\r\n            <span>Stylings</span>\r\n            <div className=\"checkBoxesSet\">\r\n                <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Bold\"\r\n                        labelPlacement=\"end\"\r\n                        checked={bold}\r\n                        onChange={changeBold}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Italic\"\r\n                        labelPlacement=\"end\"\r\n                        checked={italic}\r\n                        onChange={changeItalic}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Underlined\"\r\n                        labelPlacement=\"end\"\r\n                        checked={underlined}\r\n                        onChange={changeUnderlined}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_stroke\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Stroke\"\r\n                        labelPlacement=\"end\"\r\n                        checked={stroke}\r\n                        onChange={changeStroke}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <span>Text transform</span>\r\n            <RadioGroup \r\n                value={textTransform} \r\n                onChange={changeTextTransform} \r\n                row\r\n            >\r\n                <div className=\"labeledCheckbox labeledCheckbox_topIndented\">\r\n                    <FormControlLabel\r\n                        value=\"none\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"None\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_uppercase\">\r\n                    <FormControlLabel\r\n                        value=\"uppercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Uppercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_lowercase\">\r\n                    <FormControlLabel\r\n                        value=\"lowercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Lowercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_smallCaps\">\r\n                    <FormControlLabel\r\n                        value=\"small-caps\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Small caps\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n            </RadioGroup>\r\n\r\n            <span>Sub/Superscript</span>\r\n            <div>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> } \r\n                    value={verticalAlign} \r\n                    onChange={changeVerticalAlign} \r\n                >\r\n                    <option value=\"baseline\">None</option>\r\n                    <option value=\"sub\">Subscript</option>\r\n                    <option value=\"super\">Superscript</option>\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport Preview from \"../common/Preview\";\r\nimport { selectAllOnClick } from \"../helpers\";\r\n\r\nconst DistancesSection = (props) => {\r\n    const {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    } = props;\r\n    \r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Margin top</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginTop}\r\n                        onChange={changeMarginTop}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>Margin bottom</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginBottom}\r\n                        onChange={changeMarginBottom}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>1st row indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={firstRowIndent}\r\n                        onChange={changeFirstRowIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Other rows indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={otherRowsIndent}\r\n                        onChange={changeOtherRowsIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Line spacing</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        input={ <CustomInputShort /> } \r\n                        value={lineSpacing} \r\n                        onChange={changeLineSpacing} \r\n                    >\r\n                        <option value=\"1.0\">1.0</option>\r\n                        <option className=\"highlightedOption\" value=\"1.15\">1.15</option>\r\n                        <option value=\"1.5\">1.5</option>\r\n                        <option value=\"2.0\">2.0</option>\r\n                        <option value=\"2.5\">2.5</option>\r\n                        <option value=\"3.0\">3.0</option>\r\n                        <option value=\"custom\">Custom</option>\r\n                    </NativeSelect> \r\n                    {\r\n                    lineSpacing === \"custom\" && \r\n                    (\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={customLineSpacing}\r\n                            onChange={changeCustomLineSpacing}\r\n                        />                                            \r\n                    )\r\n                }\r\n                </div>\r\n                   \r\n                    \r\n                <span>Word spacing</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={wordSpacing}\r\n                        onChange={changeWordSpacing}\r\n                        onClick={selectAllOnClick(\"0\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistancesSection;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst FrameTypeInput = withStyles(theme => ({\r\n    root: {\r\n      width: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      fontFamily: [\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default FrameTypeInput;","import FramesSection from \"./FramesSection\";\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport FrameTypeInput from \"../../sections/FramesSection/FrameTypeInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport { getCorrectColor, selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst FramesSection = (props) => {\r\n    const { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n     } = props;\r\n\r\n     const correctColor = getCorrectColor(borderColor);\r\n     const previewBorderWidth = borderThickness && !isNaN(parseFloat(borderThickness))\r\n                                ? `${borderThickness <= 15 ? borderThickness : 15}pt`\r\n                                : \"0\";\r\n\r\n     const previewStyle = {\r\n         borderLeft: leftBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginLeft: leftBorder ? \"0\" : previewBorderWidth, \r\n         borderRight: rightBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginRight: rightBorder ? \"0\" : previewBorderWidth, \r\n         borderTop: topBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginTop: topBorder ? \"0\" : previewBorderWidth, \r\n         borderBottom: bottomBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginBottom: bottomBorder ? \"0\" : previewBorderWidth, \r\n     };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"directionControlsContainer\">\r\n                <div className=\"directionsControls\" style={previewStyle}>\r\n                    <span className=\"directionLabel\">Left</span>\r\n                    <div className=\"centralColumn\">\r\n                        <span className=\"directionLabel\">Top</span>\r\n                        <div className=\"checkboxesKit crossGrid\">\r\n                            <div id=\"r1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={topBorder}  \r\n                                    onChange={changeTopBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={leftBorder}  \r\n                                    onChange={changeLeftBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c2\" className=\"gridCell\">\r\n                            </div>\r\n                            <div id=\"r2c3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={rightBorder}  \r\n                                    onChange={changeRightBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={bottomBorder}  \r\n                                    onChange={changeBottomBorder}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"directionLabel\">Bottom</span>\r\n                    </div>\r\n                    <span className=\"directionLabel\">Right</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <span>Frame color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    value={borderColorName}\r\n                    onChange={changeBorderColorName}\r\n                    onClick={selectAllOnClick(\"Red\")}\r\n                />\r\n\r\n                <span>Frame color HEX</span>\r\n                <ColorField \r\n                    colorCode={borderColor} \r\n                    changeColorCode={changeBorderColor}\r\n                    required\r\n                />\r\n\r\n                <span>Frame thickness</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={borderThickness}\r\n                        onChange={changeBorderThickness}\r\n                        onClick={selectAllOnClick(\"2\")}\r\n                     />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>                        \r\n\r\n                <span>Type of frame</span>\r\n                <div >\r\n                    <Select\r\n                      input={<FrameTypeInput />}\r\n                      value={borderType}\r\n                      onChange={changeBorderType}\r\n                    >\r\n                        <MenuItem value=\"solid\"><b>━━━━</b></MenuItem>\r\n                        <MenuItem value=\"dotted\">• • • • • • •</MenuItem>\r\n                        <MenuItem value=\"dashed\"><b>– – – – –</b></MenuItem>\r\n                        <MenuItem value=\"double\">══════</MenuItem>              \r\n                    </Select>\r\n                </div>\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox color=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport Preview from \"../common/Preview\";\r\nimport ColorField from \"../common/ColorField\";\r\n\r\nconst  FillingSection = (props) => {\r\n    const { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n     } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Filling color name</span>\r\n                <div>\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        className=\"mediumTextField\" \r\n                        value={fillingColorName}\r\n                        onChange={changeFillingColorName}\r\n                    />\r\n                </div>\r\n\r\n                <span>Filling color HEX</span>\r\n                <ColorField \r\n                    colorCode={fillingColor} \r\n                    changeColorCode={changeFillingColor}\r\n                />\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox \r\n                        color=\"primary\" \r\n                        checked={connectToPrevious} \r\n                        onChange={changeConnectToPrevious} \r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FillingSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\n\r\nconst TocSection = ({ tocIndentation, changeTocIndentation }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>ToC indentation</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={tocIndentation}\r\n                    onChange={changeTocIndentation} \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>                    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TocSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst ShortCutSection = (props) => {\r\n    const {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Windows</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutWinView}\r\n                    onKeyDown={changeShortCutWin} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n\r\n            <span>Mac</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutMacView}\r\n                    onKeyDown={changeShortCutMac} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />     \r\n            </div>          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShortCutSection;","import React from \"react\";\r\n\r\nconst TypographySection = () => {\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import { requiredFields } from \"../constants\";\r\n\r\nconst isFormValid = form => {\r\n    return requiredFields.every(fieldName => form[fieldName]);\r\n}\r\n\r\nexport default isFormValid;","import React from \"react\";\r\n\r\nimport isFormValid from \"../helpers/isFormValid\";\r\n\r\nconst withDialogControl = Wrapped => {\r\n    return class extends React.Component {\r\n\r\n        render() {\r\n            const { closeDialog, clearForm, formState, updateForm, ...otherProps } = this.props;\r\n\r\n            const onClose = () => {\r\n                closeDialog();\r\n                clearForm();\r\n            };\r\n\r\n            const onSaveButtonClick = () => {\r\n                if (!isFormValid(formState)) {\r\n                    console.log(0);\r\n                    updateForm({ validationError: true });\r\n                } else {\r\n                    console.log(1);  //saveForm(formState);\r\n                    onClose();\r\n                }\r\n            }\r\n            \r\n            return (\r\n                <Wrapped { ...{ onClose, onSaveButtonClick, clearForm, updateForm, formState, ...otherProps } } />\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withDialogControl;","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: pink,\r\n    },\r\n});\r\n\r\nexport default theme;","export const CHANGE_DECORATOR_FORM = \"CHANGE_DECORATOR_FORM\";\r\nexport const CLEAR_DECORATOR_FORM = \"CLEAR_DECORATOR_FORM\";\r\nexport const SHOW_NEW_DECORATOR_DIALOG = \"SHOW_NEW_DECORATOR_DIALOG\";\r\nexport const HIDE_NEW_DECORATOR_DIALOG = \"HIDE_NEW_DECORATOR_DIALOG\";\r\n\r\nexport const changeDecoratorForm = payload => {\r\n    return {\r\n        type: CHANGE_DECORATOR_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearDecoratorForm = payload => {\r\n    return {\r\n        type: CLEAR_DECORATOR_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const showNewDecoratorDialog = () => {\r\n    return {\r\n        type: SHOW_NEW_DECORATOR_DIALOG,\r\n    };\r\n};\r\n\r\nexport const hideNewDecoratorDialog = () => {\r\n    return {\r\n        type: HIDE_NEW_DECORATOR_DIALOG,\r\n    };\r\n};\r\n\r\nexport const openDialog = dispatch => dec => {\r\n    dec && dispatch(changeDecoratorForm(dec));\r\n    dispatch(showNewDecoratorDialog());\r\n};\r\n\r\nexport const closeDialog = dispatch => () => {\r\n    dispatch(clearDecoratorForm());\r\n    dispatch(hideNewDecoratorDialog());\r\n};","import keycode from \"keycode\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nconst getShortCutUtils = systemName => {\r\n  return class ShortcutUtils {  \r\n    static CMD_KEYS = {\r\n      altKey: systemName === \"MacOS\" ? \"Option\" : \"Alt\",\r\n      ctrlKey: systemName === \"MacOS\" ? \"Control\" : \"Ctrl\",\r\n      shiftKey: \"Shift\",\r\n      metaKey: \"Command\",\r\n    };\r\n  \r\n    static isDeadKey(e) {\r\n      return e.keyCode === 229;\r\n    }\r\n  \r\n    static prevent(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  \r\n    static convertEventToShortCut(e) {\r\n      if (ShortcutUtils.isDeadKey(e)) {\r\n        ShortcutUtils.prevent(e);\r\n        return { deleteKey: true };\r\n      }\r\n      ShortcutUtils.prevent(e);\r\n      const shortCut = {\r\n        keyCode: e.keyCode,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n        altKey: e.altKey,\r\n        metaKey: false,\r\n      };\r\n      if (systemName === \"MacOS\") {\r\n        shortCut.metaKey = e.metaKey;\r\n      }\r\n      const deleteKeys = [8, 46];\r\n      const cmdKeysCodes = [16, 91, 18, 17];\r\n      const shortCutForView = ShortcutUtils.convertShortcutToMeta(shortCut);\r\n      if (deleteKeys.indexOf(e.keyCode) > -1) {\r\n        return { deleteKey: true };\r\n      } else if (shortCutForView.isCmdPressed && cmdKeysCodes.indexOf(e.keyCode) === -1) {\r\n        return {\r\n          value: shortCut,\r\n          stringValue: shortCutForView.stringValue,\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n  \r\n    static convertShortcutToString(shortCut = {}) {\r\n      return ShortcutUtils.convertShortcutToMeta(shortCut).stringValue;\r\n    }\r\n  \r\n    static convertShortcutToMeta(shortCut = {}) {\r\n      let shortCutForView = \"\";\r\n      let isCmdPressed = false;\r\n      Object.keys(ShortcutUtils.CMD_KEYS).forEach((key) => {\r\n        if (shortCut && shortCut[key]) {\r\n          isCmdPressed = true;\r\n          shortCutForView += `${ShortcutUtils.CMD_KEYS[key]} + `;\r\n        }\r\n      });\r\n      if (shortCut && shortCut.keyCode) {\r\n        shortCutForView += keycode(shortCut.keyCode);\r\n      }\r\n      return { stringValue: shortCutForView, isCmdPressed };\r\n    }\r\n  \r\n    static removeDuplicateShortcuts = function (decorators, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(decorators).forEach((decoratorKey) => {\r\n        const item = decorators[decoratorKey];\r\n        const itemType = item.item_type;\r\n        if (itemType === \"style\") {\r\n          if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n            decorators[decoratorKey].keyboard_shortcut = null;\r\n            removed = true;\r\n          }\r\n        } else {\r\n          const childItems = item.child_items;\r\n          Object.keys(childItems).forEach((itemKey) => {\r\n            const style = childItems[itemKey];\r\n            if (isEqual(style.keyboard_shortcut, newPdShortcut)) {\r\n              style.keyboard_shortcut = null;\r\n              removed = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  \r\n    static removeDuplicateShortcutsInInlineStyle = function (inlineStyles, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(inlineStyles).forEach((styleKey) => {\r\n        const item = inlineStyles[styleKey];\r\n        if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n          inlineStyles[styleKey].keyboard_shortcut = null;\r\n          removed = true;\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  }\r\n};\r\n\r\nexport default getShortCutUtils;\r\n\r\n","import getShortCutUtils from \"./helpers/getShortCutUtils\";\r\n\r\nconst Handlers = (update, formState) => class {    \r\n    static toggleStateProperty = propName => e => {\r\n        update({\r\n            [propName]: e.target.checked\r\n        });\r\n    };\r\n\r\n    static setStateProperty = propName => (e, secondArg = \"\") => {\r\n        const newValue = (e && e.target.value !== \"\" && e.target.value !== undefined) ? e.target.value : secondArg;\r\n        update({\r\n            [propName]: newValue,\r\n        });\r\n    };\r\n\r\n    static setBullet = propName => e => {\r\n        const newBullet = e.target.value.length > 1 ? e.target.value[e.target.value.length - 1] : e.target.value;\r\n        update({\r\n            [propName]: newBullet,\r\n        });\r\n        return newBullet;\r\n    };\r\n\r\n    static setColor = propName => (e, secondArg) => {\r\n        let input = e ? (e.target.value || \"\") : secondArg;\r\n        \r\n        const filteredInput = input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i) \r\n                              ? input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i)[0].slice(0, 6)\r\n                              : \"\" ;\r\n        \r\n        if (filteredInput !== formState[propName]) {\r\n            update({\r\n                [propName]: filteredInput,\r\n            });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setNumber = propName => e => {\r\n        let input = e.target.value || \"\";\r\n\r\n        const filteredInput = input.replace(\",\", \".\").trim().match(/[0-9]+/i) \r\n                              ? input.replace(\",\", \".\").trim().match(/\\d+[.,]?\\d*/)[0]\r\n                              : \"\" ;\r\n\r\n        if (filteredInput !== formState[propName]) {\r\n          update({\r\n              [propName]: filteredInput,\r\n          });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setShortCut = (valuePropName, viewPropName, isMac) => e => {\r\n        const systemName = isMac ? \"MacOS\" : \"Windows\";\r\n        const shortCut = getShortCutUtils(systemName).convertEventToShortCut(e);\r\n        if (shortCut && shortCut.deleteKey) {\r\n          setTimeout(() => {\r\n            update({ [valuePropName]: \"\" });\r\n            update({ [viewPropName]: \"\" });\r\n          }, 100);\r\n        } else if (shortCut) {\r\n          update({ [valuePropName]: shortCut.value });\r\n          update({ [viewPropName]: shortCut.stringValue });\r\n        }\r\n    };\r\n};\r\n\r\nexport default Handlers;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomTab;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomErrorTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n      textDecoration: \"red underline\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n        textDecoration: \"Firebrick underline\",\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomErrorTab;","import Tabs from \"@material-ui/core/Tabs\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTabs = withStyles(theme => ({\r\n    indicator: {\r\n        backgroundColor: \"#1890ff\",\r\n        opacity: 0.5,\r\n        width: \"190px\",\r\n        zIndex: 5,\r\n        display: \"none\",\r\n      }\r\n  }))(Tabs);\r\n\r\n  export default CustomTabs;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst CustomDialog = withStyles(theme => ({\r\n    root: {\r\n        minWidth: \"1250px\",\r\n        minHeight: \"1100px !important\",\r\n        height: \"100%\",\r\n    },\r\n    container: {\r\n        height: \"100vh\",\r\n        display: \"block\",\r\n    },\r\n    scrollBody: {\r\n        \"&:after\": {\r\n            height: \"100%\",\r\n        }\r\n    },\r\n    paperFullWidth: {\r\n        maxWidth: \"1280px\",\r\n        maxHeight: \"850px\",\r\n        minHeight: \"550px\",\r\n        width: \"calc(100% - 96px)\",\r\n        height: \"calc(100% - 96px)\",\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        border: \"none\",\r\n    },\r\n    paperScrollBody: {\r\n        verticalAlign: \"middle\",\r\n    },\r\n  }))(Dialog);\r\n  \r\n  export default CustomDialog;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport NamesSection from \"./sections/NamesSection\";\r\nimport WordExportSection from \"./sections/WordExportSection\";\r\nimport PositioningSection from \"./sections/PositioningSection\";\r\nimport ListSection from \"./sections/ListSection\";\r\nimport ReferencingSection from \"./sections/ReferencingSection\";\r\nimport TypographySection from \"./sections/TypographySection\";\r\nimport DistancesSection from \"./sections/DistancesSection\";\r\nimport FramesSection from \"./sections/FramesSection\";\r\nimport FillingSection from \"./sections/FillingSection\";\r\nimport TocSection from \"./sections/TocSection\";\r\nimport ShortCutsSection from \"./sections/ShortCutsSection\";\r\nimport TestSection from \"./sections/TestSection\";\r\n\r\nimport withDialogControl from \"./hoc/withDialogControl\";\r\nimport theme from \"./theme\";\r\nimport { changeDecoratorForm, clearDecoratorForm } from \"./actions\";\r\nimport Handlers from \"./Handlers\";\r\nimport CustomTab from \"./common/CustomTab\";\r\nimport CustomErrorTab from \"./common/CustomErrorTab\";\r\nimport CustomTabs from \"./common/CustomTabs\";\r\nimport CustomDialog from \"./common/CustomDialog\";\r\nimport { alignmentsMap, HOLDER, requiredFields } from \"./constants\";\r\nimport { \r\n    getCorrectColor, \r\n    getUnstyledText, \r\n    unicodeNumberToChar, \r\n    unicodeCharToNumber, \r\n    getListChars, \r\n    getErrorSections,\r\n} from \"./helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst NewDecDialog = props => {\r\n    const { isOpen, onClose, onSaveButtonClick, updateForm, formState } = props;\r\n\r\n    const { \r\n        setStateProperty, \r\n        toggleStateProperty, \r\n        setNumber, \r\n        setColor, \r\n        setBullet, \r\n        setShortCut \r\n    } = Handlers(updateForm, formState);\r\n\r\n    const { \r\n        openedTab,\r\n        validationError,\r\n        previewText,\r\n        decKey,\r\n        group,\r\n        groupToCreate,\r\n        active,\r\n        decNameEn,\r\n        decNameDe,\r\n        decNameRu,\r\n        decNameFr,\r\n        decNameFrCa,\r\n        decNameEs,\r\n        wordStyleName,\r\n        softReturn,\r\n        indentationalLevel,\r\n        backspaceActionWithContent,\r\n        backspaceActionWithContentStyle,\r\n        backspaceActionWithoutContent,\r\n        backspaceActionWithoutContentStyle,\r\n        returnActionNextSection,\r\n        returnActionEmptySection,\r\n        tabAction,\r\n        shiftTabAction,\r\n        isList,\r\n        listName,\r\n        orderLevel,\r\n        prefix,\r\n        suffix,\r\n        suffixDistance,\r\n        magicTabs,\r\n        listType,\r\n        listItem,\r\n        unicodeNumber,\r\n        unicodeChar,\r\n        numberingStyle,\r\n        continueNumbering,\r\n        allowRestartNumbering,\r\n        includePreviousFrom,\r\n        sideNumber,\r\n        sideNumberFont,\r\n        sideNumberAlignment,\r\n        sideNumberFontSize,\r\n        sideNumberFontColor,\r\n        sideNumberFillingColor,\r\n        sideNumberWidth,\r\n        sideNumberRadius,\r\n        referenceGroup,\r\n        referenceGroupToCreate,\r\n        font,\r\n        alignment,\r\n        fontSize,\r\n        fontColorName,\r\n        fontColor,\r\n        bold,\r\n        italic,\r\n        underlined,\r\n        stroke,\r\n        textTransform,\r\n        verticalAlign,\r\n        marginTop,\r\n        marginBottom,\r\n        firstRowIndent,\r\n        otherRowsIndent,\r\n        lineSpacing,\r\n        customLineSpacing,\r\n        wordSpacing,   \r\n        leftBorder,\r\n        rightBorder,\r\n        topBorder,\r\n        bottomBorder,\r\n        borderColorName,\r\n        borderColor,\r\n        borderThickness,\r\n        borderType,\r\n        fillingColorName,\r\n        fillingColor,\r\n        connectToPrevious,\r\n        tocIndentation,\r\n        shortCutWinView,\r\n        shortCutMacView,\r\n    } = formState;\r\n\r\n    const changeOpenedTab = setStateProperty(\"openedTab\");\r\n    const changeDecKey = setStateProperty(\"decKey\");\r\n    const changeGroup = setStateProperty(\"group\");\r\n    const changeGroupToCreate = setStateProperty(\"groupToCreate\");\r\n    const changeActive = toggleStateProperty(\"active\");\r\n    const changeDecNameEn = setStateProperty(\"decNameEn\");\r\n    const changeDecNameDe = setStateProperty(\"decNameDe\");\r\n    const changeDecNameRu = setStateProperty(\"decNameRu\");\r\n    const changeDecNameFr = setStateProperty(\"decNameFr\");\r\n    const changeDecNameFrCa = setStateProperty(\"decNameFrCa\");\r\n    const changeDecNameEs = setStateProperty(\"decNameEs\");\r\n    const changeWordStyleName = setStateProperty(\"wordStyleName\");\r\n    const changeSoftReturn = toggleStateProperty(\"softReturn\");\r\n    const changeIndentationalLevel = setStateProperty(\"indentationalLevel\")\r\n    const changeBackspaceActionWithContent = setStateProperty(\"backspaceActionWithContent\");\r\n    const changeBackspaceActionWithContentStyle = setStateProperty(\"backspaceActionWithContentStyle\");\r\n    const changeBackspaceActionWithoutContent = setStateProperty(\"backspaceActionWithoutContent\");\r\n    const changeBackspaceActionWithoutContentStyle = setStateProperty(\"backspaceActionWithoutContentStyle\");\r\n    const changeReturnActionNextSection = setStateProperty(\"returnActionNextSection\");\r\n    const changeReturnActionEmptySection = setStateProperty(\"returnActionEmptySectionStyle\")\r\n    const changeTabAction = setStateProperty(\"tabAction\");\r\n    const changeShiftTabAction = setStateProperty(\"shiftTabAction\");\r\n    const changeListName = setStateProperty(\"listName\");\r\n    const changeOrderLevel = setStateProperty(\"orderLevel\");\r\n    const changePrefix = setStateProperty(\"prefix\");\r\n    const changeSuffix = setStateProperty(\"suffix\");\r\n    const changeSuffixDistance = setStateProperty(\"suffixDistance\");\r\n    const changeMagicTabs = toggleStateProperty(\"magicTabs\");\r\n    const changeListItem = setStateProperty(\"listItem\");\r\n    const changeNumberingStyle = setStateProperty(\"numberingStyle\");\r\n    const changeContinueNumbering = toggleStateProperty(\"continueNumbering\");\r\n    const changeAllowRestartNumbering = toggleStateProperty(\"allowRestartNumbering\");\r\n    const changeIncludePreviousFrom = setStateProperty(\"includePreviousFrom\");\r\n    const changeSideNumberFont = setStateProperty(\"sideNumberFont\");\r\n    const changeSideNumberAlignment = setStateProperty(\"sideNumberAlignment\");\r\n    const changeSideNumberFontSize = setNumber(\"sideNumberFontSize\");\r\n    const changeSideNumberFontColor = setColor(\"sideNumberFontColor\");\r\n    const changeSideNumberFillingColor = setColor(\"sideNumberFillingColor\");\r\n    const changeSideNumberWidth = setNumber(\"sideNumberWidth\");\r\n    const changeSideNumberRadius = setNumber(\"sideNumberRadius\");\r\n    const changeReferenceGroup = setStateProperty(\"referenceGroup\");\r\n    const changeReferenceGroupToCreate = setStateProperty(\"referenceGroupToCreate\");\r\n    const changeFont = setStateProperty(\"font\");\r\n    const changeAlignment = setStateProperty(\"alignment\");\r\n    const changeFontSize = setNumber(\"fontSize\");\r\n    const changeFontColorName = setStateProperty(\"fontColorName\");\r\n    const changeFontColor = setColor(\"fontColor\");\r\n    const changeBold = toggleStateProperty(\"bold\");\r\n    const changeItalic = toggleStateProperty(\"italic\");\r\n    const changeUnderlined = toggleStateProperty(\"underlined\");\r\n    const changeStroke = toggleStateProperty(\"stroke\");\r\n    const changeTextTransform = setStateProperty(\"textTransform\");\r\n    const changeVerticalAlign = setStateProperty(\"verticalAlign\");\r\n    const changeMarginTop = setNumber(\"marginTop\");\r\n    const changeMarginBottom = setNumber(\"marginBottom\");\r\n    const changeFirstRowIndent = setNumber(\"firstRowIndent\");\r\n    const changeOtherRowsIndent = setNumber(\"otherRowsIndent\");\r\n    const changeLineSpacing = setStateProperty(\"lineSpacing\");\r\n    const changeCustomLineSpacing = setNumber(\"customLineSpacing\");\r\n    const changeWordSpacing = setNumber(\"wordSpacing\");\r\n    const changeLeftBorder = toggleStateProperty(\"leftBorder\");\r\n    const changeRightBorder = toggleStateProperty(\"rightBorder\");\r\n    const changeTopBorder = toggleStateProperty(\"topBorder\");\r\n    const changeBottomBorder = toggleStateProperty(\"bottomBorder\");\r\n    const changeBorderColorName = setStateProperty(\"borderColorName\");\r\n    const changeBorderColor = setColor(\"borderColor\");\r\n    const changeBorderThickness = setNumber(\"borderThickness\");\r\n    const changeFillingColorName = setStateProperty(\"fillingColorName\");\r\n    const changeFillingColor = setColor(\"fillingColor\");\r\n    const changeConnectToPrevious = toggleStateProperty(\"connectToPrevious\");\r\n    const changeTocIndentation = setStateProperty(\"tocIndentation\");\r\n    const changeShortCutWin = setShortCut(\"shortCutWin\", \"shortCutWinView\");\r\n    const changeShortCutMac = setShortCut(\"shortCutMac\", \"shortCutMacView\", true);\r\n\r\n    const changePreviewText = e => {\r\n        const { value } = e.target;\r\n        if (value && value !== \"<div></div>\" && value !== \"<br>\") {\r\n            setStateProperty(\"previewText\")(null, getUnstyledText(value));\r\n        } else {\r\n            setStateProperty(\"previewText\")(null, `<div><br></div>`);\r\n        }\r\n    };\r\n\r\n    const changeIsList = e => {\r\n        if (e.target.checked) {\r\n            if (validationError && requiredFields.every(field => formState[field])) {\r\n                updateForm({ validationError: false });\r\n            }\r\n            if (listName === HOLDER) {\r\n                changeListName(null, \"\");\r\n            }\r\n        } else if (listName === \"\"){\r\n            changeListName(null, HOLDER);\r\n        }\r\n        toggleStateProperty(\"isList\")(e);\r\n    };\r\n\r\n    const changeListType = e => {\r\n        const { value } = e.target;\r\n        setStateProperty(\"listType\")(null, value);\r\n        if (value === \"ordered\" && suffix === \"\") {\r\n            setStateProperty(\"suffix\")(null, \".\");\r\n        } else if (value === \"unordered\" && suffix === \".\") {\r\n            setStateProperty(\"suffix\")(null, \"\");\r\n        }\r\n    };\r\n\r\n    const changeUnicodeNumber = e => {\r\n        const newUnicodeNumber = setColor(\"unicodeNumber\")(e);\r\n        const newUnicodeChar = newUnicodeNumber !== \"\" ? unicodeNumberToChar(newUnicodeNumber) : \"\";\r\n        setStateProperty(\"unicodeChar\")(null, newUnicodeChar);\r\n    };\r\n    \r\n    const changeUnicodeChar = e => {\r\n        const newUnicodeChar = setBullet(\"unicodeChar\")(e);\r\n        const newUnicodeNumber = newUnicodeChar !== \"\" ? unicodeCharToNumber(newUnicodeChar) : \"\";\r\n        setStateProperty(\"unicodeNumber\")(null, newUnicodeNumber);\r\n    };\r\n\r\n    const changeSideNumber = e => {\r\n        toggleStateProperty(\"sideNumber\")(e);\r\n        if (e.target.checked && suffix === \".\") {\r\n            setStateProperty(\"suffix\")(null, \"\");\r\n        } else if (!e.target.checked && suffix === \"\") {\r\n            setStateProperty(\"suffix\")(null, \".\");\r\n        }\r\n    };\r\n\r\n    const changeBorderType = e => {\r\n        setStateProperty(\"borderType\")(e);\r\n        if (e.target.value === \"double\" && borderThickness === \"2\") {\r\n            setStateProperty(\"borderThickness\")(null, \"3\");\r\n        }\r\n        if (e.target.value !== \"double\" && borderThickness === \"3\") {\r\n            setStateProperty(\"borderThickness\")(null, \"2\");\r\n        }\r\n    };\r\n\r\n    const previewFontColor = getCorrectColor(fontColor, \"f5f5f5\");\r\n    const previewFillingColor = getCorrectColor(fillingColor, \"f5f5f5\");\r\n    const previewAdditionalFillingColor = connectToPrevious ? previewFillingColor : \"f5f5f5\";\r\n    const indentsDifference = (firstRowIndent || 0) - (otherRowsIndent || 0);\r\n    const previewMarginLeft = otherRowsIndent ? `${otherRowsIndent >= 12 ? 12 : otherRowsIndent}cm` : 0;\r\n    const previewTextIndent = indentsDifference ? `${indentsDifference >= 12 ? 12 : indentsDifference}cm` : 0;\r\n\r\n    const previewStyle = {\r\n        fontSize: !fontSize ? \"0\" : `${fontSize <= 120 ? fontSize : 120}pt`,\r\n        color: `#${previewFontColor}`,\r\n        fontFamily: font,\r\n        alignItems: alignmentsMap[alignment],\r\n        textAlign: alignment,\r\n        fontWeight: bold ? \"bold\" : \"normal\",\r\n        fontStyle: italic ? \"italic\" : \"normal\",\r\n        textDecoration: `${underlined ? \"underline\" : \"\"}${stroke ? \" line-through\" : \"\"}`.trim() || \"none\",\r\n        verticalAlign,\r\n        textTransform: textTransform !== \"small-caps\" ? textTransform : \"none\",\r\n        fontVariant: textTransform === \"small-caps\" ? textTransform : \"normal\",\r\n        backgroundColor: `#${previewFillingColor}`,\r\n        backgroundImage:  `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        marginLeft: previewMarginLeft,\r\n        textIndent: previewTextIndent,\r\n        wordSpacing: `${wordSpacing || 0}pt`,\r\n        lineHeight: (lineSpacing !== \"custom\" ? lineSpacing : (!customLineSpacing ? \"1.15\" : `${customLineSpacing || 0}`)),\r\n        marginBottom: `${marginBottom || 0}pt`,\r\n        marginTop: `${marginTop || 0}pt`,\r\n    };\r\n\r\n    const previewProps = { previewText, changePreviewText, previewStyle };\r\n\r\n    const previewSideNumberFontColor = getCorrectColor(sideNumberFontColor, \"f5f5f5\");\r\n    const previewSideNumberFillingColor = getCorrectColor(sideNumberFillingColor, \"f5f5f5\");\r\n\r\n    const sideNumberStyle = (!sideNumber || listType === \"unordered\") ? {} : {\r\n        fontFamily: sideNumberFont,\r\n        textAlign: sideNumberAlignment,\r\n        fontSize: !sideNumberFontSize ? \"0\" : `${sideNumberFontSize <= 120 ? sideNumberFontSize : 120}pt`,\r\n        color: `#${previewSideNumberFontColor}`,\r\n        backgroundColor: `#${previewSideNumberFillingColor}`,\r\n        minWidth: `${sideNumberWidth || 0}pt`,\r\n        borderRadius: `${sideNumberRadius || 0}pt`,\r\n    };\r\n\r\n    const listPreviewProps = { \r\n        listChars: getListChars({\r\n                isOrderedList: listType === \"ordered\", \r\n                numberingStyle, \r\n                listItem,\r\n                unicodeChar,\r\n            }),\r\n        listPreviewStyle: previewStyle,\r\n        prefix, \r\n        suffix, \r\n        suffixDistance,\r\n        sideNumberStyle,\r\n    };\r\n\r\n    const namesSectionProps = {\r\n        decKey, changeDecKey,\r\n        group, changeGroup,\r\n        newGroup: groupToCreate, changeGroupToCreate,\r\n        active, changeActive,\r\n        decNameEn, changeDecNameEn,\r\n        decNameDe, changeDecNameDe,\r\n        decNameRu, changeDecNameRu,\r\n        decNameFr, changeDecNameFr,\r\n        decNameFrCa, changeDecNameFrCa,\r\n        decNameEs, changeDecNameEs,\r\n        validationError,\r\n    }; \r\n\r\n    const wordExportSectionProps = {\r\n        wordStyleName, changeWordStyleName,\r\n        softReturn, changeSoftReturn,\r\n        validationError,\r\n    };\r\n\r\n    const positioningSectionProps = {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithContentStyle, changeBackspaceActionWithContentStyle,\r\n        backspaceActionWithoutContent, changeBackspaceActionWithoutContent,\r\n        backspaceActionWithoutContentStyle, changeBackspaceActionWithoutContentStyle,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    };\r\n\r\n    const listSectionProps = { \r\n        listPreviewProps,\r\n        isList, changeIsList, \r\n        listName, changeListName,\r\n        orderLevel, changeOrderLevel,\r\n        prefix, changePrefix,\r\n        suffix, changeSuffix,\r\n        suffixDistance, changeSuffixDistance,\r\n        magicTabs, changeMagicTabs,\r\n        listType, changeListType, \r\n        listItem, changeListItem,\r\n        unicodeNumber, changeUnicodeNumber,\r\n        unicodeChar, changeUnicodeChar,\r\n        numberingStyle, changeNumberingStyle,\r\n        continueNumbering, changeContinueNumbering,\r\n        allowRestartNumbering, changeAllowRestartNumbering,\r\n        includePreviousFrom, changeIncludePreviousFrom,\r\n        sideNumber, changeSideNumber,\r\n        sideNumberFont, changeSideNumberFont,\r\n        sideNumberAlignment, changeSideNumberAlignment,\r\n        sideNumberFontSize, changeSideNumberFontSize,\r\n        sideNumberFontColor, changeSideNumberFontColor,\r\n        sideNumberFillingColor, changeSideNumberFillingColor,\r\n        sideNumberWidth, changeSideNumberWidth,\r\n        sideNumberRadius, changeSideNumberRadius,\r\n        validationError,\r\n    };\r\n\r\n    const referencingSectionProps = {\r\n        referenceGroup, changeReferenceGroup,\r\n        newGroup: referenceGroupToCreate, changeReferenceGroupToCreate,\r\n    };\r\n\r\n    const typographySectionProps = { \r\n        previewProps,\r\n        font, changeFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    };\r\n\r\n    const distancesSectionProps = {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    };\r\n\r\n    const framesSectionProps = { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n    };\r\n\r\n    const fillingSectionProps = { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n    };\r\n\r\n    const tocSectionProps = {\r\n        tocIndentation, changeTocIndentation,\r\n    };\r\n\r\n    const shortCutsSectionProps = {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    };\r\n\r\n    const [\r\n       isErrorInNames,\r\n       isErrorInWordExport,\r\n       isErrorInList,\r\n    ] = validationError ? getErrorSections(requiredFields, namesSectionProps, wordExportSectionProps, listSectionProps) \r\n        : [false, false, false];\r\n        \r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CustomDialog\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                scroll=\"body\"\r\n                className=\"paragraphDecorators-dialog\"\r\n                fullWidth={true}\r\n                maxWidth={false}\r\n                id=\"dialog\"\r\n            >\r\n                <div className=\"header\">\r\n                    <DialogTitle className=\"header-title\">\r\n                        <p>Create new paragraph decorator</p>\r\n                    </DialogTitle>\r\n                    <div className=\"header-buttons\">\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            onClick={onClose}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={onSaveButtonClick}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <DialogContent className=\"content\">\r\n                    <div className=\"content-leftSide\">\r\n                        <CustomTabs \r\n                            className=\"dialogTabs\"\r\n                            value={openedTab} \r\n                            onChange={changeOpenedTab} \r\n                            orientation=\"vertical\"\r\n                            color=\"primary\"\r\n                            indicatorColor=\"primary\"\r\n                        >\r\n                            { isErrorInNames ? ( <CustomErrorTab className=\"dialogTab\" label=\"Names\" /> )\r\n                                :  ( <CustomTab className=\"dialogTab\" label=\"Names\" /> ) }\r\n\r\n                            { isErrorInWordExport ? ( <CustomErrorTab className=\"dialogTab\" label=\"WORD export\" /> ) \r\n                                : ( <CustomTab className=\"dialogTab\" label=\"WORD export\" /> ) }\r\n\r\n                            <CustomTab className=\"dialogTab\" label=\"Positioning\" />\r\n\r\n                            { isErrorInList ? ( <CustomErrorTab className=\"dialogTab\" label=\"List\" /> ) \r\n                                :( <CustomTab className=\"dialogTab\" label=\"List\" /> ) }\r\n\r\n                            <CustomTab className=\"dialogTab\" label=\"Referencing\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Typography\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Distances\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Frames\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Filling\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"ToC\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Short cuts\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Test\" />\r\n                        </CustomTabs>\r\n                    </div>\r\n                    <div className=\"content-rightSide\">\r\n                        { openedTab === 0 && <NamesSection {...namesSectionProps} /> }\r\n                        { openedTab === 1 && <WordExportSection {...wordExportSectionProps} /> }\r\n                        { openedTab === 2 && <PositioningSection {...positioningSectionProps} /> }\r\n                        { openedTab === 3 && <ListSection {...listSectionProps} />}\r\n                        { openedTab === 4 && <ReferencingSection {...referencingSectionProps} /> }\r\n                        { openedTab === 5 && <TypographySection {...typographySectionProps} /> }\r\n                        { openedTab === 6 && <DistancesSection {...distancesSectionProps} /> }\r\n                        { openedTab === 7 && <FramesSection {...framesSectionProps} /> }\r\n                        { openedTab === 8 && <FillingSection {...fillingSectionProps} /> }\r\n                        { openedTab === 9 && <TocSection {...tocSectionProps} /> }\r\n                        { openedTab === 10 && <ShortCutsSection {...shortCutsSectionProps} /> }\r\n                        { openedTab === 11 && <TestSection {...typographySectionProps} /> }\r\n                    </div>\r\n                </DialogContent>\r\n            </CustomDialog>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ form }) => {\r\n    return { formState: form };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(changeDecoratorForm(payload)),\r\n        clearForm: () => dispatch(clearDecoratorForm()),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(withDialogControl(NewDecDialog));","class DecDataParser {\r\n    static parseToSend(dec) {\r\n        return dec;\r\n    }\r\n\r\n    static parseToEdit(dec) {\r\n        return dec;\r\n    }\r\n\r\n    static mapDecFields = {};\r\n}\r\n\r\nexport default DecDataParser;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport NewDecDialog from \"./components/NewDecDialog\";\nimport { openDialog, closeDialog } from \"./components/NewDecDialog/actions\";\nimport DecDataParser from \"./components/NewDecDialog/helpers/DecDataParser\";\n\nimport \"./App.css\";\n\nconst App = props => {\n    const { isOpen, openDialog, closeDialog } = props;\n\n    const openEditDialog = () => {\n        openDialog(DecDataParser.parseToEdit({ decKey: \"hello\", active: true}));\n    };\n\n    return (\n        <div className=\"App\">\n            <button onClick={() => openDialog()}>Create new</button>\n            <button onClick={() => openEditDialog()}>Edit saved</button>\n            <NewDecDialog { ...{isOpen, closeDialog}} />\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ isOpen }) => {\n    return { isOpen };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        openDialog: openDialog(dispatch),\n        closeDialog: closeDialog(dispatch),\n    };\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { SHOW_NEW_DECORATOR_DIALOG, HIDE_NEW_DECORATOR_DIALOG } from \"../../components/NewDecDialog/actions\";\r\n\r\nconst isOpenReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case SHOW_NEW_DECORATOR_DIALOG:\r\n            return true;\r\n        case HIDE_NEW_DECORATOR_DIALOG:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isOpenReducer;","import { sampleText, requiredFields, HOLDER } from \"./constants\";\r\n\r\nconst emptyDecProps = {\r\n    decKey: \"\",\r\n    group: \"\",\r\n    groupToCreate: \"\",\r\n    active: false,\r\n    decNameEn: \"\",\r\n    decNameDe: \"\",\r\n    decNameRu: \"\",\r\n    decNameFr: \"\",\r\n    decNameFrCa: \"\",\r\n    decNameEs: \"\",\r\n    wordStyleName: \"\",\r\n    softReturn: false,\r\n    indentationalLevel: \"\",\r\n    backspaceActionWithContent: \"merge\",\r\n    backspaceActionWithContentStyle: \"default\",\r\n    backspaceActionWithoutContent: \"apply_other_pd\",\r\n    backspaceActionWithoutContentStyle: \"default\",\r\n    returnActionNextSection: \"default\",\r\n    returnActionEmptySection: \"default\",\r\n    tabAction: \"\",\r\n    shiftTabAction: \"\",\r\n    isList: false,\r\n    listName: HOLDER,\r\n    orderLevel: \"\",\r\n    prefix: \"\",\r\n    suffix: \"\",\r\n    suffixDistance: \"0.25\",\r\n    magicTabs: false,\r\n    listType: \"unordered\",\r\n    listItem: \"bulletpoint\",\r\n    unicodeNumber: \"\",\r\n    unicodeChar: \"\",\r\n    numberingStyle: \"decimal\",\r\n    continueNumbering: false,\r\n    allowRestartNumbering: false,\r\n    includePreviousFrom: \"\",\r\n    sideNumber: false,\r\n    sideNumberFont: \"Roboto\",\r\n    sideNumberAlignment: \"center\",\r\n    sideNumberFontSize: \"12\",\r\n    sideNumberFontColor: \"FFF\",\r\n    sideNumberFillingColor: \"1E88E5\",\r\n    sideNumberWidth: \"20\",\r\n    sideNumberRadius: \"10\",\r\n    referenceGroup: \"\",\r\n    referenceGroupToCreate: \"\",\r\n    font: \"Roboto\",\r\n    alignment: \"left\",\r\n    fontSize: \"12\",\r\n    fontColorName: \"Black\",\r\n    fontColor: \"000\",\r\n    bold: false,\r\n    italic: false,\r\n    underlined: false,\r\n    stroke: false,\r\n    textTransform: \"none\",\r\n    verticalAlign: \"baseline\",\r\n    marginTop: \"6\",\r\n    marginBottom: \"6\",\r\n    firstRowIndent: \"0\",\r\n    otherRowsIndent: \"0\",\r\n    lineSpacing: \"1.15\",\r\n    customLineSpacing: \"\",\r\n    wordSpacing: \"0\",   \r\n    leftBorder: false,\r\n    rightBorder: false,\r\n    topBorder: false,\r\n    bottomBorder: false,\r\n    borderColorName: \"Red\",\r\n    borderColor: \"f00\",\r\n    borderThickness: \"2\",\r\n    borderType: \"solid\",\r\n    fillingColorName: \"\",\r\n    fillingColor: \"\",\r\n    connectToPrevious: false,\r\n    tocIndentation: \"\",\r\n    shortCutWin: \"\",\r\n    shortCutWinView: \"\",\r\n    shortCutMac: \"\",\r\n    shortCutMacView: \"\",\r\n};\r\n\r\nconst getInitialState = (decProps = {}) => {\r\n    return { \r\n        openedTab: 0,\r\n        previewText: sampleText,\r\n        validationError: false,\r\n        requiredFields,\r\n        ...emptyDecProps,\r\n        ...decProps,\r\n    };\r\n};\r\n\r\nexport default getInitialState;","import { CHANGE_DECORATOR_FORM, CLEAR_DECORATOR_FORM } from \"../../components/NewDecDialog/actions\";\r\nimport getInitialState from \"../../components/NewDecDialog/getInitialState\";\r\n\r\nconst initialState = getInitialState();\r\n\r\nconst decoratorFormReducer = (state = initialState, action) =>  {\r\n    switch (action.type) {\r\n        case CHANGE_DECORATOR_FORM:\r\n            return { ...state, ...action.payload };\r\n        case CLEAR_DECORATOR_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default decoratorFormReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport isOpenReducer from \"./isOpenReducer\";\r\nimport decoratorFormReducer from \"./decoratorFormReducer\";\r\n\r\nconst decoratorDialogReducer = combineReducers({\r\n    isOpen: isOpenReducer,\r\n    form: decoratorFormReducer,\r\n});\r\n\r\nexport default decoratorDialogReducer;","import { createStore } from \"redux\";\r\nimport decoratorDialogReducer from \"./reducers/decoratorDialogReducer\";\r\n\r\nexport default createStore(\r\n    decoratorDialogReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}