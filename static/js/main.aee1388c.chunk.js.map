{"version":3,"sources":["components/DecoratorDialog/common/CustomInput.js","components/DecoratorDialog/common/LabelWithAsterisk.js","components/DecoratorDialog/constants/decoratorsList.js","components/DecoratorDialog/constants/fontsSet.js","components/DecoratorDialog/constants/localeConstants.js","components/DecoratorDialog/constants/validationData.js","components/DecoratorDialog/constants/constants.js","components/DecoratorDialog/constants/initialFormState.js","components/DecoratorDialog/helpers/isFontAvailable.js","components/DecoratorDialog/helpers/DecDataConverter/converterUtils.js","components/DecoratorDialog/helpers/DecDataConverter/decToSendDefaultProps.js","components/DecoratorDialog/helpers/helpers.js","components/DecoratorDialog/helpers/DecDataConverter/DecDataConverter.js","components/DecoratorDialog/helpers/DecDataConverter/index.js","components/DecoratorDialog/helpers/getShortCutUtils.js","components/DecoratorDialog/helpers/validationFunctions.js","components/DecoratorDialog/common/NewGroupDialog.js","components/DecoratorDialog/hoc/withNewGroupControl.js","components/DecoratorDialog/actions/index.js","components/DecoratorDialog/sections/NamesSection.js","components/DecoratorDialog/common/CustomInputShort.js","components/DecoratorDialog/common/SectionTitle/index.js","components/DecoratorDialog/common/SectionTitle/SectionTitle.js","components/DecoratorDialog/sections/PositioningSection/BackSpaceActionInput.js","components/DecoratorDialog/sections/PositioningSection/index.js","components/DecoratorDialog/sections/PositioningSection/PositioningSection.js","components/DecoratorDialog/common/Preview/generators.js","components/DecoratorDialog/common/Preview/ListPreview.js","components/DecoratorDialog/common/ColorField/index.js","components/DecoratorDialog/common/ColorField/ColorField.js","components/DecoratorDialog/common/FontSelectFields.js","components/DecoratorDialog/sections/ListSection/ListSection.js","components/DecoratorDialog/sections/ListSection/index.js","components/DecoratorDialog/sections/ReferencingSection.js","components/DecoratorDialog/common/ContentEditable.js","components/DecoratorDialog/common/Preview/Preview.js","components/DecoratorDialog/common/Preview/index.js","components/DecoratorDialog/sections/TypographySection/index.js","components/DecoratorDialog/sections/TypographySection/TypographySection.js","components/DecoratorDialog/common/ConnectToPreviousField.js","components/DecoratorDialog/sections/DistancesSection.js","components/DecoratorDialog/sections/FramesSection/FrameTypeInput.js","components/DecoratorDialog/sections/FramesSection/generateBorderPreviewStyle.js","components/DecoratorDialog/sections/FramesSection/FramesSection.js","components/DecoratorDialog/sections/FramesSection/index.js","components/DecoratorDialog/sections/FillingSection.js","components/DecoratorDialog/sections/TocSection.js","components/DecoratorDialog/sections/ShortCutsSection.js","components/DecoratorDialog/theme.js","components/DecoratorDialog/common/CustomTab.js","components/DecoratorDialog/common/CustomErrorTab.js","components/DecoratorDialog/common/CustomTabs.js","components/DecoratorDialog/common/CustomDialog.js","actions.js","components/DecoratorDialog/DecoratorDialog.js","components/DecoratorDialog/index.js","App.js","reducers/decoratorDialogReducer/isOpenReducer.js","reducers/decoratorDialogReducer/decoratorFormReducer.js","reducers/decoratorDialogReducer/validationErrorReducer.js","reducers/decoratorDialogReducer/isEditModeReducer.js","reducers/decoratorDialogReducer/openedTabReducer.js","reducers/decoratorDialogReducer/index.js","reducers/savedFormReducer.js","reducers/rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["CustomInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","minWidth","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","LabelWithAsterisk","children","className","decoratorsList","name","value","fontSet","LANGS","langKey","langName","langFullName","regionName","regionFullName","ADDITIONAL_LANGS","slice","MAIN_LANG_KEY","tabsErrorInitialState","namesSection","listSection","sectionsTabNumbers","tabName","tabNumber","alignmentList","center","left","right","justify","numberingSets","decimal","orderedListStylesMap","Map","bulletNamesMap","sectionTypesMap","backSpaceActionsMap","width","autoFillingRequiredFields","sideNumberFont","sideNumberFontSize","sideNumberFontColor","sideNumberFillingColor","sideNumberWidth","sideNumberRadius","font","fontColor","marginBottom","firstRowIndent","otherRowsIndent","wordSpacing","lineSpacing","borderThickness","initialFormState","decKey","sectionTypes","Array","from","reduce","acc","i","key","group","groupToCreate","active","indentationalLevel","fixedIndentation","softReturn","backspaceActionWithContent","backspaceActionWithContentStyle","returnActionNextSection","returnActionEmptySection","tabAction","shiftTabAction","isList","listName","orderLevel","prefix","suffix","suffixDistance","magicTabs","listType","listItem","unicodeNumber","unicodeChar","listItemString","numberingStyle","continueNumbering","allowRestartNumbering","includePreviousFrom","sideNumber","customSideNumberFont","sideNumberAlignment","sideNumberBold","sideNumberItalic","sideNumberUnderlined","sideNumberLineHeight","referenceGroup","referenceGroupToCreate","customFont","alignment","bold","italic","underlined","stroke","textTransform","readOnly","connectToPrevious","verticalAlign","customLineSpacing","borderLeft","borderRight","borderTop","borderBottom","borderType","fillingColor","tocIndentation","shortCutWin","shortCutWinView","shortCutMac","shortCutMacView","replaceDecNameIfDefault","decName","getNumber","val","decToSendDefaultProps","item_type","style_properties","list_key","item_order","extra_hanging_indentation","extra_hanging_indentation_at_grid","numerated_list_format","numerated_list_start","numerated_list_pattern","numerated_list_style","is_auto_restart_numbering","bullet_list_format","movable","content_required","on_return_style_key","on_return_indentation","allow_restart_numbering","item_order_allow_tab","is_possible_xref_target","body","document","container","createElement","innerHTML","style","cssText","getWidth","appendChild","clientWidth","removeChild","monoWidth","serifWidth","sansWidth","isFontAvailable","getCorrectColor","hex","correctColor","length","selectAllOnClick","defaultValue","e","target","focus","select","getUnstyledText","styledText","unstyledText","replace","unicodeNumberToChar","String","fromCharCode","parseInt","unicodeCharToNumber","charCodeAt","toString","scrollToBottom","setTimeout","getElementsByClassName","scrollTo","top","Number","MAX_SAFE_INTEGER","behavior","changeAndScroll","changeFunction","timeOut","focusInput","inputRef","timeout","current","focusOnEmptyField","refs","console","log","getPreviewFont","fillMissedFields","currentFormState","formStateWithoutMissedFields","fieldName","forEach","option","customOption","DecDataConverter","rawDec","dec","res","section_types","Object","entries","filter","map","hidden","initial_indentation","is_fixed_indentation","content_in_second_line","backspace_action","backspace_action_value","create_new_section_on_return_if_empty","pd_for_new_section_on_return_if_empty","change_pd_on_return_if_empty","pd_for_current_section_on_return_if_empty","on_tab_key","on_shift_tab_key","order","getNumeratedListPattern","cur","includes","suffixDistanceMatch","match","prefixAndSuffixMatch","has","bullet","mapDecFields","getShortCutUtils","systemName","keyCode","preventDefault","stopPropagation","ShortcutUtils","isDeadKey","prevent","deleteKey","shortCut","ctrlKey","shiftKey","altKey","metaKey","shortCutForView","convertShortcutToMeta","indexOf","isCmdPressed","stringValue","keys","CMD_KEYS","keycode","removeDuplicateShortcuts","decorators","newPdShortcut","removed","decoratorKey","item","isEqual","keyboard_shortcut","childItems","child_items","itemKey","removeDuplicateShortcutsInInlineStyle","inlineStyles","styleKey","getTabsErrorState","form","tabsErrorState","getTabNumberToSwitch","NewGroupDialog","isXref","props","groupType","emptyGroup","groupKey","getInitialState","savedGroup","state","requiredFieldRef","React","createRef","onInputChange","inputName","setState","onClose","hideGroupDialogValidationError","closeGroupDialog","onGroupSave","trim","groupToSave","saveGroup","showGroupDialogValidationError","this","isOpen","isEditMode","hasGroupDialogValidationError","titleText","buttonText","Dialog","open","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","onChange","error","variant","margin","Fragment","DialogActions","Button","onClick","color","PureComponent","withNewGroupControl","ViewComponent","isGroupDialogOpen","openGroupDialog","Component","updateDecoratorForm","payload","type","clearDecoratorForm","updateValidationError","openDialog","dispatch","closeDialog","setValue","propName","secondArg","newValue","undefined","toggleValue","checked","setBullet","newBullet","setColor","filteredInput","setNumber","setShortCut","valuePropName","viewPropName","search","convertEventToShortCut","NamesSection","decKeyInputRef","decNameEnInputRef","inputRefs","onGroupChange","groupName","changeGroupToCreate","changeGroup","onNameChange","changeName","onSectionTypesChange","typeName","changeSectionTypes","validationErrorInSection","prevprops","every","ref","changeDecKey","changeActive","newGroupName","FormControlLabel","control","Checkbox","label","labelPlacement","NativeSelect","connect","decoratorDialog","validationError","formState","CustomInputShort","SectionTitle","text","BackSpaceActionInput","PositioningSection","changeIndentationalLevel","changeBackspaceActionWithContent","changeBackspaceActionWithContentStyle","changeBackspaceActionWithoutContent","changeBackspaceActionWithoutContentStyle","changeReturnActionNextSection","changeReturnActionEmptySection","changeTabAction","changeShiftTabAction","changeisFixedIndentation","changeSoftReturn","backSpaceActionStyleSettingsState","generatePreviewStyle","fillingConnectToPrevious","previewFontColor","previewFillingColor","previewAdditionalFillingColor","indentsDifference","previewMarginLeft","previewTextIndent","previewLineSpacing","offset","alignType","parseFloat","getOffset","previewMarginTop","previewMarginBottom","previewBorderLeft","previewBorderRight","previewBorderTop","previewBorderBottom","correctFontSize","alignItems","textAlign","fontWeight","fontStyle","textDecoration","fontVariant","backgroundImage","borderImage","marginLeft","textIndent","lineHeight","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","previewText","isOrderedList","listItemBeginnings","fill","getListChars","get","listChar","previewStyle","isSideNumber","sideNumberStyle","previewSideNumberFontColor","previewSideNumberFillingColor","marginRight","generateSideNumberStyle","listItemBeginningStyle","ColorField","hideColorPicker","showColorPicker","colorPickerHandler","changeColor","colorCode","changeColorCode","defaultColorCode","required","bottomAligned","colorError","inputError","pickerColor","colorSampleStyle","colorPickerClassName","InputProps","startAdornment","InputAdornment","onChangeComplete","disableAlpha","FontSelectFields","customFontInputRef","onFontChange","changeFont","changeCustomFont","availableFonts","fontName","optionalFieldState","placeholder","ListSection","listNameInputRef","unicodeCharInputRef","onIsListChange","changeIsList","onListTypeChange","changeListType","changeSuffix","onListItemChange","changeListItem","onUnicodeNumberChange","newUnicodeNumber","changeUnicodeNumber","newUnicodeChar","changeUnicodeChar","onUnicodeCharChange","onSideNumberChange","changeSideNumber","listPreviewProps","changeListName","changeOrderLevel","changePrefix","changeSuffixDistance","changeMagicTabs","changeListItemString","changeNumberingStyle","changeContinueNumbering","changeAllowRestartNumbering","changeIncludePreviousFrom","changeSideNumberFont","changeCustomSideNumberFont","changeSideNumberAlignment","changeSideNumberFontSize","changeSideNumberFontColor","changeSideNumberFillingColor","changeSideNumberWidth","changeSideNumberRadius","changeSideNumberBold","changeSideNumberItalic","changeSideNumberUnderlined","changeSideNumberLineHeight","mainListSettingsState","unorderedListSettingsState","customListItemSettingsState","customListItemSettingsState2","orderedListSettingsState","sideNumberSettingsState","RadioGroup","row","Radio","ReferencingSection","onXrefChange","xrefName","xref","changeReferenceGroupToCreate","changeReferenceGroup","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","q","propertyIsEnumerable","normalizeHtml","str","replaceCaret","el","findLastTextNode","node","nodeType","Node","TEXT_NODE","childNodes","textNode","isTargetFocused","activeElement","nodeValue","sel","window","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","ContentEditable","arguments","lastHtml","html","innerRef","getEl","emitChange","originalEvt","evt","assign","_a","tagName","onInput","onBlur","onKeyUp","onKeyDown","contentEditable","disabled","dangerouslySetInnerHTML","__html","nextProps","deepEqual","Preview","onPreviewTextChange","changePreviewText","selectAllChildren","TypographySection","changeAlignment","changeFontSize","changeFontColor","changeBold","changeItalic","changeUnderlined","changeStroke","changeTextTransform","changeVerticalAlign","changeMarginTop","changeReadOnly","previewProps","changeConnectToPrevious","DistancesSection","customLineSpacingInputRef","onLineSpacingChange","changeLineSpacing","changeMarginBottom","changeFirstRowIndent","changeOtherRowsIndent","changeCustomLineSpacing","changeWordSpacing","customLineSpacingFieldState","marginFieldsState","FrameTypeInput","generateBorderPreviewStyle","previewBorderWidth","isNaN","FramesSection","onBorderTypeChange","changeBorderType","changeBorderThickness","changeBorderLeft","changeBorderRight","changeBorderTop","changeBorderBottom","changeBorderColor","id","Select","MenuItem","changeFillingColor","changeTocIndentation","changeShortCutWin","changeShortCutMac","createMuiTheme","primary","blue","secondary","pink","CustomTab","overflow","opacity","selected","Tab","CustomErrorTab","indicator","zIndex","display","Tabs","CustomDialog","minHeight","height","scrollBody","paperFullWidth","maxHeight","flexDirection","paperScrollBody","saveDecoratorForm","DecoratorDialog","clearForm","onSaveButtonClick","switchTab","sendForm","convertToSend","onTabSwitch","openedTab","ThemeProvider","aria-labelledby","scroll","CustomTabs","orientation","indicatorColor","ShortCutsSection","switchDecDialogTab","saveForm","savedForm","clearSavedForm","convertToEdit","isOpenReducer","action","initialState","decoratorFormReducer","validationErrorReducer","isEditModeReducer","openedTabReducer","decoratorDialogReducer","combineReducers","savedFormReducer","rootReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aee1388c.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInput = withStyles(theme => ({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      minWidth: \"183px\",\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInput;","import React from \"react\";\r\n\r\nconst LabelWithAsterisk = ({ children }) => {\r\n    return (\r\n        <div className=\"labelWithAsterisk\">\r\n            <div className=\"labelWithAsterisk-labelBox\">\r\n                <span>{children}</span>\r\n            </div>\r\n            <div className=\"labelWithAsterisk-asteriskBox\">\r\n                <span className=\"labelWithAsterisk-asteriskMark\">*</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LabelWithAsterisk;","const decoratorsList = [\r\n    { name: \"Text 1\", value: \"quick_text_1\" },\r\n    { name: \"Text 2\", value: \"quick_text_2\" },\r\n    { name: \"Text 3\", value: \"quick_text_3\" },\r\n    { name: \"Text 4\", value: \"quick_text_4\" },\r\n    { name: \"Text 5\", value: \"quick_text_5\" },\r\n    { name: \"Heading 1\", value: \"quick_heading_1\" },\r\n    { name: \"Heading 2\", value: \"quick_heading_2\" },\r\n    { name: \"Heading 3\", value: \"quick_heading_3\" },\r\n    { name: \"Heading 4\", value: \"quick_heading_4\" },\r\n    { name: \"Heading 5\", value: \"quick_heading_5\" },\r\n];\r\n\r\nexport default decoratorsList;","const fontSet = [ \r\n    \"Source Sans Pro\",\r\n    \"Dejavu Sans\",\r\n    \"Dejavu Serif\",\r\n    \"Open Sans\",\r\n    \"Montserrat\",\r\n    \"Arial\",\r\n    \"Georgia\",\r\n    \"Verdana\",\r\n    \"Times New Roman\",\r\n];\r\n\r\nexport default fontSet;","export const LANGS = [\n  { \n    langKey: \"en_EN\", \n    langName: \"EN\", \n    langFullName: \"English\", \n  },\n  { \n    langKey: \"de_DE\", \n    langName: \"DE\", \n    langFullName: \"German\", \n  },\n  { \n    langKey: \"ru_RU\", \n    langName: \"RU\", \n    langFullName: \"Russian\", \n  },\n  { \n    langKey: \"fr_FR\", \n    langName: \"FR\", \n    langFullName: \"French\", \n    regionName: \"FR\",\n    regionFullName: \"France\"\n  },\n  { \n    langKey: \"fr_CA\", \n    langName: \"FR\", \n    langFullName: \"French\", \n    regionName: \"CA\",\n    regionFullName: \"Canada\",\n  },\n  { \n    langKey: \"es_ES\", \n    langName: \"ES\", \n    langFullName: \"Spanish\", \n  },\n  { \n    langKey: \"fr_BE\", \n    langName: \"FR\", \n    langFullName: \"French\", \n    regionName: \"BE\",\n    regionFullName: \"Belgium\",\n  },\n  { \n    langKey: \"nl_BE\", \n    langName: \"NL\", \n    langFullName: \"Dutch\",\n    regionName: \"BE\",\n    regionFullName: \"Belgium\"\n  },\n];\n\nexport const ADDITIONAL_LANGS = LANGS.slice(1);\n\nexport const MAIN_LANG_KEY = LANGS[0].langKey;","export const tabsErrorInitialState = {\r\n    namesSection: false,\r\n    listSection: false,\r\n};\r\n\r\nexport const sectionsTabNumbers = [\r\n    { tabName: \"namesSection\", tabNumber: 0 },\r\n    { tabName: \"listSection\", tabNumber: 2 },\r\n];","export const alignmentList = {\r\n    center: \"center\",\r\n    left: \"flex-start\",\r\n    right: \"flex-end\",\r\n    justify: \"flex-start\",\r\n};\r\n\r\nexport const numberingSets = {\r\n    decimal: [\"1\", \"2\", \"3\", \"88\", \"888\"],\r\n    \"upper-alpha\": [\"A\", \"B\", \"C\", \"XX\", \"XXX\"],\r\n    \"lower-alpha\": [\"a\", \"b\", \"c\", \"xx\", \"xxx\"],\r\n    \"upper-roman\": [\"I\", \"II\", \"III\", \"XX\", \"XXX\"],\r\n    \"lower-roman\": [\"i\", \"ii\", \"iii\", \"xx\", \"xxx\"],\r\n};\r\n\r\nexport const orderedListStylesMap = new Map([\r\n    [\"decimal\", \"1, 2, 3\"],\r\n    [\"upper-alpha\", \"A, B, C\"],\r\n    [\"lower-alpha\", \"a, b, c\"],\r\n    [\"upper-roman\", \"I, II, III\"],\r\n    [\"lower-roman\", \"i, ii, iii\"],\r\n]);\r\n\r\nexport const bulletNamesMap = new Map([\r\n    [\"2022\", \"•\"],\r\n    [\"2014\", \"—\"],\r\n    [\"2605\", \"★\"],\r\n]);\r\n\r\nexport const sectionTypesMap = new Map([\r\n    [\"text\", \"Text\"],\r\n    [\"table\", \"Table\"],\r\n    [\"image\", \"Image\"],\r\n]);\r\n\r\nexport const backSpaceActionsMap = new Map([\r\n    [\"merge\", \"Merge\"],\r\n    [\"apply_other_pd\", \"Apply other PD\"],\r\n    [\"remove_pd\", \"Remove PD\"],\r\n    [\"nothing\", \"Nothing\"],\r\n]);\r\n\r\nexport const sampleText = `<div>Sample Text. You can change it.</div><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ornare maximus vehicula. Duis nisi velit, dictum id mauris vitae, lobortis pretium quam.</div>`;\r\n","import { LANGS } from \"./localeConstants\";\r\nimport { sectionTypesMap } from \"./constants\";\r\n\r\nexport const GLOBAL_FALLBACK_MARK = \"GLOBAL FALLBACK\";\r\nexport const DEFAULT_FONT = \"Helvetica\";\r\nexport const DEFAULT_FONT_SIZE = \"11\";\r\nexport const DEFAULT_SIDE_NUMBER_FONT_COLOR = \"FFF\";\r\nexport const DEFAULT_SIDE_NUMBER_FILLING_COLOR = \"1E88E5\";\r\nexport const DEFAULT_SIDE_NUMBER_WIDTH = \"20\";\r\nexport const DEFAULT_SIDE_NUMBER_RADIUS = \"10\";\r\nexport const DEFAULT_FONT_COLOR = \"000\";\r\nexport const DEFAULT_ROW_INDENT = \"0\";\r\nexport const DEFAULT_MARGIN = \"6\";\r\nexport const DEFAULT_WORD_SPACING = \"0\";\r\nexport const DEFAULT_LINE_SPACING = \"1.5\";\r\nexport const DEFAULT_BORDER_COLOR = \"F00\";\r\nexport const DEFAULT_BORDER_THICKNESS = \"2\";\r\n\r\nexport const autoFillingRequiredFields = {\r\n    sideNumberFont: DEFAULT_FONT,\r\n    sideNumberFontSize: DEFAULT_FONT_SIZE,\r\n    sideNumberFontColor: DEFAULT_SIDE_NUMBER_FONT_COLOR,\r\n    sideNumberFillingColor: DEFAULT_SIDE_NUMBER_FILLING_COLOR,\r\n    sideNumberWidth: DEFAULT_SIDE_NUMBER_WIDTH,\r\n    sideNumberRadius: DEFAULT_SIDE_NUMBER_RADIUS,\r\n    font: DEFAULT_FONT,\r\n    fontSize: DEFAULT_FONT_SIZE,\r\n    fontColor: DEFAULT_FONT_COLOR,\r\n    marginTop: DEFAULT_MARGIN,\r\n    marginBottom: DEFAULT_MARGIN,\r\n    firstRowIndent: DEFAULT_ROW_INDENT,\r\n    otherRowsIndent: DEFAULT_ROW_INDENT,\r\n    wordSpacing: DEFAULT_WORD_SPACING,   \r\n    lineSpacing: DEFAULT_LINE_SPACING,\r\n    borderColor: DEFAULT_BORDER_COLOR,\r\n    borderThickness: DEFAULT_BORDER_THICKNESS,\r\n};\r\n\r\nexport const initialFormState = {\r\n    ...autoFillingRequiredFields,\r\n    decKey: \"\",\r\n    sectionTypes: { ...Array.from(sectionTypesMap).reduce((acc, [ key ], i) => ({ ...acc, [key]: !i }), {})},\r\n    group: \"\",\r\n    groupToCreate: \"\",\r\n    active: true,\r\n    name: { ...LANGS.reduce((acc, { langKey }) => ({ ...acc, [langKey]: \"\" }), {}) },\r\n    indentationalLevel: \"\",\r\n    fixedIndentation: true,\r\n    softReturn: false,\r\n    backspaceActionWithContent: \"merge\",\r\n    backspaceActionWithContentStyle: \"\",\r\n    returnActionNextSection: GLOBAL_FALLBACK_MARK,\r\n    returnActionEmptySection: GLOBAL_FALLBACK_MARK,\r\n    tabAction: \"\",\r\n    shiftTabAction: \"\",\r\n    isList: false,\r\n    listName: \"\",\r\n    orderLevel: \"\",\r\n    prefix: \"\",\r\n    suffix: \"\",\r\n    suffixDistance: \"0.5\",\r\n    magicTabs: false,\r\n    listType: \"unordered\",\r\n    listItem: \"2022\",\r\n    unicodeNumber: \"\",\r\n    unicodeChar: \"\",\r\n    listItemString: \"\",\r\n    numberingStyle: \"decimal\",\r\n    continueNumbering: false,\r\n    allowRestartNumbering: false,\r\n    includePreviousFrom: \"\",\r\n    sideNumber: false,\r\n    customSideNumberFont: \"\",\r\n    sideNumberAlignment: \"center\",\r\n    sideNumberBold: false,\r\n    sideNumberItalic: false,\r\n    sideNumberUnderlined: false,\r\n    sideNumberLineHeight: \"\",\r\n    referenceGroup: \"\",\r\n    referenceGroupToCreate: \"\",\r\n    customFont: \"\",\r\n    alignment: \"left\",\r\n    bold: false,\r\n    italic: false,\r\n    underlined: false,\r\n    stroke: false,\r\n    textTransform: \"none\",\r\n    readOnly: false,\r\n    connectToPrevious: false,\r\n    verticalAlign: \"baseline\",\r\n    customLineSpacing: \"\",\r\n    borderLeft: false,\r\n    borderRight: false,\r\n    borderTop: false,\r\n    borderBottom: false,\r\n    borderType: \"solid\",\r\n    fillingColor: \"\",\r\n    tocIndentation: \"\",\r\n    shortCutWin: \"\",\r\n    shortCutWinView: \"\",\r\n    shortCutMac: \"\",\r\n    shortCutMacView: \"\",\r\n};","const { body } = document;\r\nlet width;\r\n\r\nconst container = document.createElement('span');\r\ncontainer.innerHTML = Array(100).join('wi');\r\ncontainer.style.cssText = [\r\n    'position:absolute',\r\n    'width:auto',\r\n    'font-size:128px',\r\n    'left:-99999px'\r\n].join(' !important;');\r\n\r\nconst getWidth = fontFamily => {\r\n    container.style.fontFamily = fontFamily;\r\n\r\n    body.appendChild(container);\r\n    width = container.clientWidth;\r\n    body.removeChild(container);\r\n\r\n    return width;\r\n};\r\n\r\nconst monoWidth  = getWidth('monospace');\r\nconst serifWidth = getWidth('serif');\r\nconst sansWidth  = getWidth('sans-serif');\r\n\r\nconst isFontAvailable = font => {\r\n    return monoWidth !== getWidth(font + ',monospace') ||\r\n    sansWidth !== getWidth(font + ',sans-serif') ||\r\n    serifWidth !== getWidth(font + ',serif');\r\n};\r\n\r\nexport default isFontAvailable;","import { GLOBAL_FALLBACK_MARK } from \"../../constants\";\r\n\r\nconst DEFAULT_DECORATOR = \"Text 2000\";\r\n\r\nexport const replaceDecNameIfDefault = decName => {\r\n    if (decName === DEFAULT_DECORATOR) {\r\n        return GLOBAL_FALLBACK_MARK;\r\n    }\r\n    if (decName === GLOBAL_FALLBACK_MARK) {\r\n        return DEFAULT_DECORATOR;\r\n    }\r\n    return decName;\r\n};\r\n\r\nexport const getNumber = val => val ? +val : null;\r\n\r\nexport const getNumberString = val => typeof val === \"number\" ? `${val}` : \"\";\r\n\r\nexport const getNumeratedListPattern = (order = 0, prefix = \"\", suffix = \"\") => {\r\n    return `${prefix || \"\"}{${order}}${suffix || \"\"}`;\r\n};","const decToSendDefaultProps = {\r\n    item_type: \"style\",\r\n    style_properties: {},\r\n    list_key: null,\r\n    item_order: null,\r\n    extra_hanging_indentation: null,\r\n    extra_hanging_indentation_at_grid: false,\r\n    numerated_list_format: null,\r\n    numerated_list_start: null,\r\n    numerated_list_pattern: null,\r\n    numerated_list_style: \"\",\r\n    is_auto_restart_numbering: false,\r\n    bullet_list_format: null,\r\n    movable: true,\r\n    content_required: false,\r\n    on_return_style_key: null,\r\n    on_return_indentation: null,\r\n    allow_restart_numbering: false,\r\n    item_order_allow_tab: false,\r\n    is_possible_xref_target: false,\r\n};\r\n\r\nexport default decToSendDefaultProps;","import { \r\n    numberingSets, \r\n    autoFillingRequiredFields, \r\n    DEFAULT_FONT, \r\n} from \"../constants\";\r\nimport isFontAvailable from \"./isFontAvailable\";\r\n\r\nexport const getCorrectColor = (hex, backgroundColor = \"FFF\") => {\r\n    const correctColor = typeof hex === \"string\" && (hex.length === 6 || hex.length === 3) ? hex : backgroundColor;\r\n    return correctColor;\r\n};\r\n\r\nexport const selectAllOnClick = defaultValue => e => {\r\n    if (!defaultValue || e.target.value === defaultValue) {\r\n        e.target.focus();\r\n        e.target.select();\r\n    }\r\n};\r\n\r\nexport const getOffset = (alignType, fontSize) => {\r\n    if (alignType === \"baseline\") {\r\n        return 0;\r\n    }\r\n    return (parseFloat(fontSize.slice()) / 2) * (alignType === \"sub\" ? 1 : -1);\r\n};\r\n\r\nexport const getUnstyledText = styledText => {\r\n    const unstyledText = styledText.replace(/<\\/(.*?)>/gm, \"</div>\").replace(/(?!(?:<\\/(.*?)>|<br(.*?)>)$)<(.*?)>/gm, \"<div>\");\r\n    return unstyledText[0] !== \"<\" ? `<div>${unstyledText}</div>` : unstyledText;\r\n};\r\n\r\nexport const unicodeNumberToChar = unicodeNumber => {\r\n    return String.fromCharCode(parseInt(unicodeNumber, 16));\r\n};\r\n\r\nexport const unicodeCharToNumber = unicodeChar => {\r\n    return unicodeChar.charCodeAt(0).toString(16);\r\n};\r\n\r\nexport const scrollToBottom = className => {\r\n    setTimeout(() => { document.getElementsByClassName(className)[0].scrollTo({\r\n        top: Number.MAX_SAFE_INTEGER,\r\n        behavior: \"smooth\",\r\n    })}, 0);\r\n};\r\n\r\nexport const changeAndScroll = (changeFunction, timeOut) => (...args) => {\r\n    changeFunction(...args);\r\n    if (!timeOut) {\r\n        scrollToBottom(\"content-rightSide\");\r\n    } else {\r\n        setTimeout(() => {\r\n            scrollToBottom(\"content-rightSide\");\r\n        }, timeOut);\r\n    }\r\n};\r\n\r\nexport const selectAllEditableContent = className => e => {\r\n    if (e.target.className === className) {\r\n        window.getSelection().selectAllChildren(e.target.children[0]);\r\n    }\r\n};\r\n\r\nexport const getListChars = (isOrderedList, numberingStyle, bullet) => (\r\n    isOrderedList ? numberingSets[numberingStyle] : Array(4).fill(bullet)\r\n);\r\n\r\nexport const detectOS = () => {\r\n    if (navigator && navigator.appVersion) {\r\n        if (navigator.appVersion.indexOf(\"Win\") !== -1) {\r\n            return \"Windows\";\r\n        } else if (navigator.appVersion.indexOf(\"Mac\") !== -1) {\r\n            return \"MacOS\";\r\n        }\r\n    }\r\n};\r\n\r\nexport const focusInput = (inputRef, timeout = 300) => {\r\n    setTimeout(() => {\r\n        inputRef.current.focus();\r\n    }, timeout);\r\n};\r\n\r\nexport const focusOnEmptyField = refs => {\r\n    for (let i = 0; i < refs.length; i++) {\r\n        if (!refs[i].current.value) {\r\n            console.log(refs[i].current.value, i)\r\n            focusInput(refs[i]);\r\n            return;\r\n        }\r\n    }\r\n};\r\n\r\nexport const getPreviewFont = (font, customFont) => {\r\n    if (font !== \"custom\" && isFontAvailable(font)) {\r\n        return font;\r\n    } else if (font === \"custom\" && customFont && isFontAvailable(customFont)) {\r\n        return customFont;\r\n    }\r\n    return `'${DEFAULT_FONT}', 'Roboto', sans-serif`;\r\n}\r\n\r\nexport const fillMissedFields = currentFormState => {\r\n    const { \r\n        font, customFont,\r\n        sideNumberFont, customSideNumberFont,\r\n        lineSpacing, customLineSpacing,\r\n    } = currentFormState;\r\n\r\n    const formStateWithoutMissedFields = { ...currentFormState };\r\n    \r\n    [\r\n        [font, customFont],\r\n        [sideNumberFont, customSideNumberFont], \r\n        [lineSpacing, customLineSpacing],\r\n    ].forEach(([option, customOption]) => {\r\n        if (option === \"custom\" && !customOption) {\r\n            formStateWithoutMissedFields[option] = null;\r\n        }\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n    for (let fieldName in autoFillingRequiredFields) {\r\n        if (!currentFormState[fieldName] && autoFillingRequiredFields[fieldName]) {\r\n            formStateWithoutMissedFields[fieldName] = autoFillingRequiredFields[fieldName];\r\n        }\r\n    }\r\n    return formStateWithoutMissedFields;\r\n};","//const decProps = {\r\n//    key: \"decKey\",\r\n//    name: \"name\",\r\n//    initial_indentation: \"indentationalLevel\",\r\n//    backspace_action: \"backspaceActionWithContent\",\r\n//    item_order: \"orderLevel\",\r\n//    numerated_list_format: \"numberingStyle\",\r\n//};\r\n//\r\n//\r\n//\r\n//const modification = {\r\n//    hidden: \"active\",\r\n//    backspace_action_value: \"backspaceActionWithContentStyle\",\r\n//    create_new_section_on_return_if_empty: \"returnActionNextSection\", \r\n//    pd_for_new_section_on_return_if_empty: \"returnActionNextSection\",\r\n//    change_pd_on_return_if_empty: \"change_pd_on_return_if_empty\",\r\n//    pd_for_current_section_on_return_if_empty: \"pd_for_current_section_on_return_if_empty\",\r\n//    on_tab_key: \"tabAction\",\r\n//    on_shift_tab_key: \"shiftTabAction\",\r\n//    list_key: \"listName\",\r\n//\r\n//}\r\nimport { \r\n    sectionTypesMap, \r\n    bulletNamesMap, \r\n    orderedListStylesMap,\r\n    initialFormState,\r\n} from \"../../constants\";\r\nimport {\r\n    replaceDecNameIfDefault,\r\n    getNumber,\r\n    getNumberString,\r\n    getNumeratedListPattern,\r\n} from \"./converterUtils\";\r\nimport decToSendDefaultProps from \"./decToSendDefaultProps\";\r\nimport { unicodeNumberToChar } from \"../helpers\";\r\n\r\nclass DecDataConverter {\r\n    static convertToSend(rawDec) {\r\n        const dec = {};\r\n        // eslint-disable-next-line\r\n        for (let key in rawDec) {\r\n            dec[key] = rawDec[key] !== \"\" ? rawDec[key] : null;\r\n        }\r\n\r\n        const res = {};\r\n        res.key = dec.decKey;\r\n        res.section_types = Object.entries(dec.sectionTypes).filter(([, value]) => value).map(([key]) => key);\r\n        res.hidden = !dec.active;\r\n        res.name = dec.name;\r\n\r\n        res.initial_indentation = getNumber(dec.indentationalLevel);\r\n        res.is_fixed_indentation = dec.fixedIndentation;\r\n        res.content_in_second_line = dec.softReturn;\r\n        res.backspace_action = dec.backspaceActionWithContent;\r\n        res.backspace_action_value = replaceDecNameIfDefault(dec.backspaceActionWithContentStyle);\r\n        res.create_new_section_on_return_if_empty = !!dec.returnActionNextSection;\r\n        res.pd_for_new_section_on_return_if_empty = replaceDecNameIfDefault(dec.returnActionNextSection);\r\n        res.change_pd_on_return_if_empty = !!dec.returnActionEmptySection;\r\n        res.pd_for_current_section_on_return_if_empty = replaceDecNameIfDefault(dec.returnActionEmptySection);\r\n        res.on_tab_key = dec.tabAction;\r\n        res.on_shift_tab_key = dec.shiftTabAction;\r\n\r\n        if (dec.isList) {\r\n            res.list_key = dec.listName;\r\n            res.item_order = dec.orderLevel ? getNumber(dec.orderLevel) : null;\r\n            res.extra_hanging_indentation = dec.suffixDistance === \"0.5\" ? null : `${dec.suffixDistance}cm`;\r\n            res.extra_hanging_indentation_at_grid = dec.magicTabs;\r\n            if (dec.listType === \"ordered\") {\r\n                // for ordered list\r\n                res.numerated_list_format = dec.numberingStyle;\r\n                res.numerated_list_pattern = getNumeratedListPattern(dec.orderLevel, dec.prefix, dec.suffix);\r\n                res.is_auto_restart_numbering = !dec.continueNumbering;\r\n                res.allow_restart_numbering = dec.allowRestartNumbering;\r\n                res.numerated_list_start = dec.includePreviousFrom;\r\n                res.numerated_list_style = \"styles settings\";\r\n            } else {\r\n                // for unordered list\r\n                if ((dec.listItem === \"custom\" && !dec.unicodeNumber)) {\r\n                    res.bullet_list_format = null;\r\n                } else if (dec.listItem === \"string\") {\r\n                    res.bullet_list_format = dec.listItemString;\r\n                } else {\r\n                    res.bullet_list_format = `\\\\${dec.unicodeNumber || dec.listItem}`;\r\n                }\r\n            }\r\n        }\r\n                \r\n        console.log(res);\r\n\r\n        return { ...rawDec, ...decToSendDefaultProps, ...res };\r\n    }\r\n\r\n    static convertToEdit(rawDec) {\r\n        const dec = {};\r\n        // eslint-disable-next-line\r\n        for (let key in rawDec) {\r\n            dec[key] = rawDec[key] !== null ? rawDec[key] : \"\";\r\n        }\r\n\r\n        const res = {};\r\n        res.decKey = dec.key;\r\n        res.sectionTypes = Array.from(sectionTypesMap).map(([ key ]) => key).reduce((acc, cur) => ({\r\n            ...acc,\r\n            [cur]: dec.section_types.includes(cur),\r\n        }), {});\r\n        res.active = !dec.hidden;\r\n        res.name = dec.name;\r\n\r\n        res.indentationalLevel = getNumberString(dec.initial_indentation);\r\n        res.fixedIndentation = dec.is_fixed_indentation;\r\n        res.softReturn = dec.content_in_second_line;\r\n        res.backspaceActionWithContent = dec.backspace_action;\r\n        res.backspaceActionWithContentStyle = replaceDecNameIfDefault(dec.backspace_action_value);\r\n        res.returnActionNextSection = replaceDecNameIfDefault(dec.pd_for_new_section_on_return_if_empty);\r\n        res.returnActionEmptySection = replaceDecNameIfDefault(dec.pd_for_current_section_on_return_if_empty);\r\n        res.tabAction = dec.on_tab_key;\r\n        res.shiftTabAction = dec.on_shift_tab_key;\r\n\r\n        // res.numerated_list_format, dec.prefix, dec.suffix, dec.OrderLevel\r\n        if (dec.list_key) {\r\n            res.isList = true;\r\n            res.listName = dec.list_key;\r\n            res.orderLevel = dec.item_order ? getNumber(dec.orderLevel) : \"\";\r\n            const suffixDistanceMatch = `${(dec.extra_hanging_indentation||\"0.5cm\")}`.match(/[\\d.]*/);\r\n            res.suffixDistance = suffixDistanceMatch ? suffixDistanceMatch[0] : \"0.5\";\r\n            res.magicTabs = dec.extra_hanging_indentation_at_grid;\r\n            if (dec.numerated_list_pattern) {\r\n                // for ordered list\r\n                res.listType = \"ordered\";\r\n                const prefixAndSuffixMatch = dec.numerated_list_pattern.match(/(.*?){.*}(.*)/);\r\n                if (prefixAndSuffixMatch) {\r\n                    res.prefix = prefixAndSuffixMatch[1] || \"\";\r\n                    res.suffix = prefixAndSuffixMatch[2] || \"\";\r\n                }\r\n                res.numberingStyle = orderedListStylesMap.has(dec.numerated_list_format) ? dec.numerated_list_format : \"decimal\";\r\n                res.continueNumbering = !dec.is_auto_restart_numbering;\r\n                res.allowRestartNumbering = dec.allow_restart_numbering;\r\n                res.includePreviousFrom = dec.numerated_list_start;\r\n            } else {\r\n                // for unordered list\r\n                res.listType = \"unordered\";\r\n                if ((dec.bullet_list_format || \"\").match(/^\\\\[\\da-f]+/i)) {\r\n                    const bullet = dec.bullet_list_format.slice(1);\r\n                    if (bulletNamesMap.has(bullet)) {\r\n                        res.listItem = bullet;\r\n                    } else {\r\n                        res.listItem = \"custom\";\r\n                        res.unicodeNumber = bullet;\r\n                        res.unicodeChar = unicodeNumberToChar(bullet);\r\n                    }\r\n                } else {\r\n                    // strings or empty bullets\r\n                    res.listItem = dec.bullet_list_format ? \"string\" : \"custom\";\r\n                    res.listItemString = dec.bullet_list_format;\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(res);\r\n\r\n        return { ...rawDec, ...initialFormState, ...res };\r\n    }\r\n\r\n    static mapDecFields = {};\r\n}\r\n\r\nexport default DecDataConverter;","import DecDataConverter from \"./DecDataConverter\";\r\nexport default DecDataConverter;","import keycode from \"keycode\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nconst getShortCutUtils = systemName => {\r\n  return class ShortcutUtils {  \r\n    static CMD_KEYS = {\r\n      altKey: systemName === \"MacOS\" ? \"Option\" : \"Alt\",\r\n      ctrlKey: systemName === \"MacOS\" ? \"Control\" : \"Ctrl\",\r\n      shiftKey: \"Shift\",\r\n      metaKey: \"Command\",\r\n    };\r\n  \r\n    static isDeadKey(e) {\r\n      return e.keyCode === 229;\r\n    }\r\n  \r\n    static prevent(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  \r\n    static convertEventToShortCut(e) {\r\n      if (ShortcutUtils.isDeadKey(e)) {\r\n        ShortcutUtils.prevent(e);\r\n        return { deleteKey: true };\r\n      }\r\n      ShortcutUtils.prevent(e);\r\n      const shortCut = {\r\n        keyCode: e.keyCode,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n        altKey: e.altKey,\r\n        metaKey: false,\r\n      };\r\n      if (systemName === \"MacOS\") {\r\n        shortCut.metaKey = e.metaKey;\r\n      }\r\n      const deleteKeys = [8, 46];\r\n      const cmdKeysCodes = [16, 91, 18, 17];\r\n      const shortCutForView = ShortcutUtils.convertShortcutToMeta(shortCut);\r\n      if (deleteKeys.indexOf(e.keyCode) > -1) {\r\n        return { deleteKey: true };\r\n      } else if (shortCutForView.isCmdPressed && cmdKeysCodes.indexOf(e.keyCode) === -1) {\r\n        return {\r\n          value: shortCut,\r\n          stringValue: shortCutForView.stringValue,\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n  \r\n    static convertShortcutToString(shortCut = {}) {\r\n      return ShortcutUtils.convertShortcutToMeta(shortCut).stringValue;\r\n    }\r\n  \r\n    static convertShortcutToMeta(shortCut = {}) {\r\n      let shortCutForView = \"\";\r\n      let isCmdPressed = false;\r\n      Object.keys(ShortcutUtils.CMD_KEYS).forEach((key) => {\r\n        if (shortCut && shortCut[key]) {\r\n          isCmdPressed = true;\r\n          shortCutForView += `${ShortcutUtils.CMD_KEYS[key]} + `;\r\n        }\r\n      });\r\n      if (shortCut && shortCut.keyCode) {\r\n        shortCutForView += keycode(shortCut.keyCode);\r\n      }\r\n      return { stringValue: shortCutForView, isCmdPressed };\r\n    }\r\n  \r\n    static removeDuplicateShortcuts = function (decorators, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(decorators).forEach((decoratorKey) => {\r\n        const item = decorators[decoratorKey];\r\n        const itemType = item.item_type;\r\n        if (itemType === \"style\") {\r\n          if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n            decorators[decoratorKey].keyboard_shortcut = null;\r\n            removed = true;\r\n          }\r\n        } else {\r\n          const childItems = item.child_items;\r\n          Object.keys(childItems).forEach((itemKey) => {\r\n            const style = childItems[itemKey];\r\n            if (isEqual(style.keyboard_shortcut, newPdShortcut)) {\r\n              style.keyboard_shortcut = null;\r\n              removed = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  \r\n    static removeDuplicateShortcutsInInlineStyle = function (inlineStyles, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(inlineStyles).forEach((styleKey) => {\r\n        const item = inlineStyles[styleKey];\r\n        if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n          inlineStyles[styleKey].keyboard_shortcut = null;\r\n          removed = true;\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  }\r\n};\r\n\r\nexport default getShortCutUtils;\r\n\r\n","import { tabsErrorInitialState, sectionsTabNumbers, MAIN_LANG_KEY } from \"../constants\";\r\n\r\nexport const hasErrorInSection = refs => !refs.every(ref => ref.current.value);\r\n\r\nexport const getTabsErrorState = form => {\r\n    const tabsErrorState = { ...tabsErrorInitialState };\r\n    const { name, decKey, listName, isList, listType } = form;\r\n\r\n    if (!name[MAIN_LANG_KEY] || !decKey) {\r\n        tabsErrorState.namesSection = true;\r\n    }\r\n    if (isList && listType === \"ordered\" && !listName) {\r\n        tabsErrorState.listSection = true;\r\n    }\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (let tabName in tabsErrorState) {\r\n        if (tabsErrorState[tabName]) {\r\n            return tabsErrorState;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const getTabNumberToSwitch = tabsErrorState => {\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (const { tabName, tabNumber } of sectionsTabNumbers) {\r\n        if (tabsErrorState[tabName]) {\r\n            return tabNumber;\r\n        }\r\n    }\r\n};","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport LabelWithAsterisk from \"./LabelWithAsterisk\";\r\nimport { focusInput } from \"../helpers\";\r\nimport { LANGS, MAIN_LANG_KEY, ADDITIONAL_LANGS } from \"../constants\";\r\n\r\nclass NewGroupDialog extends React.PureComponent {\r\n    isXref = this.props.groupType === \"xref\";\r\n\r\n    emptyGroup = {\r\n        ...LANGS.reduce((acc, { langKey }) => ({ ...acc, [langKey]: \"\" }), {}),\r\n        ...this.isXref && { groupKey: \"\" },\r\n    };\r\n\r\n    getInitialState = () => ({ ...this.emptyGroup, ...this.props.savedGroup });\r\n\r\n    state = this.getInitialState();\r\n\r\n    requiredFieldRef = React.createRef();\r\n\r\n    onInputChange = inputName => e => {\r\n        this.setState({ [inputName]: e.target.value });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState(this.getInitialState());\r\n        this.props.hideGroupDialogValidationError();\r\n        this.props.closeGroupDialog();\r\n    };\r\n\r\n    onGroupSave = () => {\r\n        if ((!this.isXref && this.state[MAIN_LANG_KEY].trim().length) || (this.isXref && this.state.groupKey.trim().length)) {\r\n            const groupToSave = {\r\n                ...LANGS.reduce((acc, { langKey }) => ({ ...acc, [langKey]: this.state[langKey].trim() }), {}),\r\n            };\r\n            if (this.isXref) {\r\n                groupToSave.groupKey = this.state.groupKey.trim();\r\n            }\r\n            this.props.hideGroupDialogValidationError();\r\n            this.props.saveGroup(null, (groupToSave[MAIN_LANG_KEY] || groupToSave.groupKey), groupToSave);\r\n            this.props.closeGroupDialog();\r\n        } else {\r\n            this.props.showGroupDialogValidationError();\r\n            focusInput(this.requiredFieldRef);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isOpen, isEditMode, hasGroupDialogValidationError } = this.props;\r\n        const { onInputChange, onGroupSave, onClose, isXref } = this;\r\n        const titleText = `${isEditMode ? \"Edit\" : \"Create\"} new ${isXref ? \"reference \" : \"\"}group`\r\n        const buttonText = isEditMode ? \"Save\" : \"Create\";\r\n\r\n        return (\r\n            <Dialog\r\n                className=\"decoratorDialog\"\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <DialogTitle>{titleText}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        { isXref && (\r\n                            <>\r\n                                <LabelWithAsterisk>Group Key</LabelWithAsterisk>\r\n                                <TextField\r\n                                    value={this.state.groupKey}\r\n                                    onChange={onInputChange(\"groupKey\")}\r\n                                    inputRef={this.requiredFieldRef}\r\n                                    error={hasGroupDialogValidationError && !this.state.groupKey}\r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                />\r\n                            </>\r\n                        ) }\r\n                        { isXref ? (\r\n                            <>\r\n                                <span>Name EN</span>\r\n                                <TextField\r\n                                    value={this.state[MAIN_LANG_KEY]}\r\n                                    onChange={onInputChange(MAIN_LANG_KEY)}\r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <LabelWithAsterisk>Name EN</LabelWithAsterisk>\r\n                                <TextField\r\n                                    value={this.state[MAIN_LANG_KEY]}\r\n                                    onChange={onInputChange(MAIN_LANG_KEY)}\r\n                                    inputRef={this.requiredFieldRef}\r\n                                    error={hasGroupDialogValidationError && !this.state[MAIN_LANG_KEY]}\r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                />\r\n                            </>\r\n                        ) }\r\n                        { ADDITIONAL_LANGS.map(({ langKey, langName, regionFullName }) => (\r\n                            <React.Fragment key={langKey}>\r\n                                <span>Name {langName}{regionFullName && <span className=\"smallText\"><br/>{regionFullName}</span>}</span>\r\n                                <TextField\r\n                                    value={this.state[langKey]}\r\n                                    onChange={onInputChange(langKey)} \r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                />\r\n                            </React.Fragment>\r\n                        )) }                 \r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color=\"default\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={onGroupSave} color=\"primary\">\r\n                        {buttonText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewGroupDialog;","import React from \"react\";\r\n\r\nconst withNewGroupControl = (ViewComponent) => {\r\n    return class extends React.Component {\r\n        state = {\r\n            isGroupDialogOpen: false,\r\n            hasGroupDialogValidationError: false,\r\n        };\r\n        \r\n        openGroupDialog = () => {\r\n            this.setState({ isGroupDialogOpen: true });\r\n        };\r\n\r\n        closeGroupDialog = () => {\r\n            this.setState({ isGroupDialogOpen: false });\r\n        };\r\n\r\n        showGroupDialogValidationError = () => {\r\n            this.setState({ hasGroupDialogValidationError: true });\r\n        };\r\n\r\n        hideGroupDialogValidationError = () => {\r\n            this.setState({ hasGroupDialogValidationError: false });\r\n        };\r\n\r\n        render() {\r\n            const { \r\n                openGroupDialog, \r\n                closeGroupDialog, \r\n                showGroupDialogValidationError, \r\n                hideGroupDialogValidationError \r\n            } = this; \r\n\r\n            return ( \r\n                <ViewComponent \r\n                    {...this.props} \r\n                    {...this.state} \r\n                    {...{ openGroupDialog, closeGroupDialog, showGroupDialogValidationError, hideGroupDialogValidationError }} \r\n                /> \r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withNewGroupControl;","import { getShortCutUtils } from \"../helpers\";\r\n\r\nexport const UPDATE_DEC_FORM = \"UPDATE_DEC_FORM\";\r\nexport const CLEAR_DEC_FORM = \"CLEAR_DEC_FORM\";\r\nexport const SHOW_DEC_DIALOG = \"SHOW_DEC_DIALOG\";\r\nexport const HIDE_DEC_DIALOG = \"HIDE_DEC_DIALOG\";\r\nexport const SWITCH_DEC_DIALOG_TAB = \"SWITCH_DEC_DIALOG_TAB\";\r\nexport const RESET_DEC_DIALOG_TAB = \"RESET_DEC_DIALOG_TAB\";\r\nexport const SWITCH_ON_DEC_DIALOG_EDIT_MODE = \"SWITCH_ON_DEC_DIALOG_EDIT_MOD\";\r\nexport const SWITCH_OFF_DEC_DIALOG_EDIT_MODE = \"SWITCH_OFF_DEC_DIALOG_EDIT_MODE\";\r\nexport const UPDATE_VALIDATION_ERROR = \"UPDATE_VALIDATION_ERROR\";\r\nexport const REMOVE_VALIDATION_ERROR = \"REMOVE_VALIDATION_ERROR\";\r\n\r\nexport const updateDecoratorForm = payload => {\r\n    return {\r\n        type: UPDATE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearDecoratorForm = payload => {\r\n    return {\r\n        type: CLEAR_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const showDecoratorDialog = () => {\r\n    return {\r\n        type: SHOW_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const hideDecoratorDialog = () => {\r\n    return {\r\n        type: HIDE_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const switchDecDialogTab = payload => {\r\n    return {\r\n        type: SWITCH_DEC_DIALOG_TAB,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const resetDecDialogTab = () => {\r\n    return {\r\n        type: RESET_DEC_DIALOG_TAB,\r\n    };\r\n}\r\n\r\nexport const switchOnDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_ON_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const switchOffDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_OFF_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const updateValidationError = payload => {\r\n    return {\r\n        type: UPDATE_VALIDATION_ERROR,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const removeValidationError = () => {\r\n    return {\r\n        type: REMOVE_VALIDATION_ERROR,\r\n    };\r\n};\r\n\r\nexport const openDialog = dispatch => dec => {\r\n    if (dec) {\r\n        dispatch(updateDecoratorForm(dec));\r\n        dispatch(switchOnDecDialogEditMode());\r\n    } \r\n    dispatch(showDecoratorDialog());\r\n};\r\n\r\nexport const closeDialog = dispatch => () => {\r\n    dispatch(hideDecoratorDialog());\r\n    dispatch(switchOffDecDialogEditMode());\r\n    dispatch(removeValidationError());\r\n    dispatch(resetDecDialogTab());\r\n    dispatch(clearDecoratorForm());\r\n};\r\n\r\nexport const setValue = dispatch => propName => (e, secondArg = \"\") => {\r\n    const newValue = (e && e.target.value !== \"\" && e.target.value !== undefined) ? e.target.value : secondArg;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newValue,\r\n    }));\r\n};\r\n\r\nexport const toggleValue = dispatch => propName => (e, secondArg) => {\r\n    const newValue = e ? e.target.checked : secondArg;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newValue,\r\n    }));\r\n};\r\n\r\nexport const setBullet = dispatch => propName => (e, secondArg) => {\r\n    const input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n\r\n    const newBullet = input.length > 1 ? input[input.length - 1] : input;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newBullet,\r\n    }));\r\n    return newBullet;\r\n};\r\n\r\nexport const setColor = dispatch => propName => (e, secondArg) => {\r\n    const input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n    \r\n    const filteredInput = input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i) \r\n                          ? input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i)[0].slice(0, 6)\r\n                          : \"\" ;\r\n    \r\n    dispatch(updateDecoratorForm({\r\n        [propName]: filteredInput,\r\n    }));\r\n    return filteredInput;\r\n};\r\n\r\nexport const setNumber = dispatch => propName => (e, secondArg) => {\r\n    let input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n\r\n    const filteredInput = input.replace(\",\", \".\").trim().match(/[0-9]+/i) \r\n                          ? input.replace(\",\", \".\").trim().match(/\\d+[.,]?\\d*/)[0]\r\n                          : \"\" ;\r\n\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: filteredInput,\r\n    }));\r\n    return filteredInput;\r\n};\r\n\r\nexport const setShortCut = dispatch => (valuePropName, viewPropName) => e => {\r\n    const systemName = valuePropName.search(/mac/gi) !== -1 ? \"MacOS\" : \"Windows\";\r\n    const shortCut = getShortCutUtils(systemName).convertEventToShortCut(e);\r\n    if (shortCut && shortCut.deleteKey) {\r\n        setTimeout(() => {\r\n            dispatch(updateDecoratorForm({ \r\n                [valuePropName]: \"\" \r\n            }));\r\n            dispatch(updateDecoratorForm({ \r\n                [viewPropName]: \"\" \r\n            }));\r\n        }, 100);\r\n    } else if (shortCut) {\r\n        dispatch(updateDecoratorForm({ \r\n            [valuePropName]: shortCut.value \r\n        }));\r\n        dispatch(updateDecoratorForm({ \r\n            [viewPropName]: shortCut.stringValue \r\n        }));\r\n    }\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport LabelWithAsterisk from \"../common/LabelWithAsterisk\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\nimport { hasErrorInSection, focusOnEmptyField } from \"../helpers\";\r\nimport { setValue, toggleValue, updateValidationError } from \"../actions\";\r\nimport { MAIN_LANG_KEY, ADDITIONAL_LANGS, sectionTypesMap } from \"../constants\";\r\n\r\nclass NamesSection extends React.Component {\r\n    decKeyInputRef = React.createRef();\r\n    decNameEnInputRef = React.createRef();\r\n    inputRefs = [this.decKeyInputRef, this.decNameEnInputRef];\r\n\r\n    onGroupChange = (e, groupName, group) => {\r\n        if (group) {\r\n            this.props.changeGroupToCreate(null, group);\r\n        }\r\n        this.props.changeGroup(e, groupName);\r\n    };\r\n\r\n    onNameChange = langKey => e => {\r\n        const newValue = {\r\n            ...this.props.name,\r\n            [langKey]: e.target.value,\r\n        };\r\n        this.props.changeName(null, newValue);\r\n    };\r\n\r\n    onSectionTypesChange = typeName => e => {\r\n        const newValue = {\r\n            ...this.props.sectionTypes,\r\n            [typeName]: e.target.checked,\r\n        };\r\n        this.props.changeSectionTypes(null, newValue);\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.validationErrorInSection) {\r\n            focusOnEmptyField(this.inputRefs);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.validationErrorInSection && !prevprops.validationErrorInSection) {\r\n            focusOnEmptyField(this.inputRefs);\r\n        }\r\n        if (this.props.validationErrorInSection && !hasErrorInSection(this.inputRefs)) {\r\n            this.props.updateValidationError({ namesSection: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            groupToCreate, \r\n            isGroupDialogOpen,\r\n            hasGroupDialogValidationError,\r\n            openGroupDialog, \r\n            closeGroupDialog, \r\n            showGroupDialogValidationError, \r\n            hideGroupDialogValidationError,\r\n            validationErrorInSection,\r\n            decKey, changeDecKey,\r\n            sectionTypes,\r\n            group,\r\n            active, changeActive,\r\n            name,\r\n        } = this.props;\r\n\r\n        const newGroupName = groupToCreate[MAIN_LANG_KEY];\r\n        const isEditMode = !!newGroupName;\r\n\r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n                <LabelWithAsterisk>Key</LabelWithAsterisk>\r\n                <TextField \r\n                    value={decKey}\r\n                    onChange={changeDecKey}\r\n                    error={validationErrorInSection && !decKey}\r\n                    inputRef={this.decKeyInputRef}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Section types</span>\r\n                <div className=\"checkBoxesSet\">\r\n                    { Array.from(sectionTypesMap).map(([ key, value ]) => (\r\n                        <div className=\"labeledCheckbox\" key={key}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                label={value}\r\n                                labelPlacement=\"end\"\r\n                                checked={sectionTypes[key]}\r\n                                onChange={this.onSectionTypesChange(key)}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <span>Group</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        value={group} \r\n                        onChange={this.onGroupChange}\r\n                        input={ <CustomInput /> }  \r\n                    >\r\n                        <option value=\"\">...</option>\r\n                        { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                        <option value=\"0\">Text</option>\r\n                        <option value=\"1\">Heading</option>\r\n                        <option value=\"2\">Heading Heading Heading Heading</option>\r\n                    </NativeSelect>\r\n                    { !(isEditMode && group !== newGroupName) && (\r\n                        <Button color=\"primary\" className=\"textButton\" onClick={openGroupDialog}>\r\n                            { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                        </Button>\r\n                    ) }\r\n                </div>\r\n\r\n                <span>Active</span>\r\n                <div className=\"unlabeledCheckbox\">\r\n                    <Checkbox\r\n                        checked={active}\r\n                        onChange={changeActive} \r\n                        color=\"primary\" \r\n                    />\r\n                </div>\r\n\r\n                <LabelWithAsterisk>Name EN</LabelWithAsterisk>\r\n                <TextField \r\n                    value={name[MAIN_LANG_KEY]}\r\n                    onChange={this.onNameChange(MAIN_LANG_KEY)}\r\n                    error={validationErrorInSection && !name[MAIN_LANG_KEY]}\r\n                    inputRef={this.decNameEnInputRef}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                { ADDITIONAL_LANGS.map(({ langKey, langName, regionFullName }) => (\r\n                  <React.Fragment key={langKey}>\r\n                    <span>Name {langName}{regionFullName && <span className=\"smallText\"><br/>{regionFullName}</span>}</span>\r\n                    <TextField \r\n                        value={name[langKey]}\r\n                        onChange={this.onNameChange(langKey)}\r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                    />\r\n                  </React.Fragment>  \r\n                )) }\r\n\r\n                <NewGroupDialog \r\n                    isOpen={isGroupDialogOpen}\r\n                    saveGroup={this.onGroupChange}\r\n                    savedGroup={groupToCreate}\r\n                    groupType=\"decorators\"\r\n                    { ...{ \r\n                        isGroupDialogOpen,\r\n                        isEditMode,\r\n                        hasGroupDialogValidationError,\r\n                        closeGroupDialog, \r\n                        showGroupDialogValidationError, \r\n                        hideGroupDialogValidationError, \r\n                    } } \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return { \r\n        validationErrorInSection: validationError.namesSection,\r\n        formState: form,\r\n        decKey: form.decKey,\r\n        group: form.group,\r\n        active: form.active,\r\n        name: form.name,\r\n        groupToCreate: form.groupToCreate,\r\n        sectionTypes: form.sectionTypes,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        changeDecKey: setValue(dispatch)(\"decKey\"),\r\n        changeGroup: setValue(dispatch)(\"group\"),\r\n        changeGroupToCreate: setValue(dispatch)(\"groupToCreate\"),\r\n        changeActive: toggleValue(dispatch)(\"active\"),\r\n        changeName: setValue(dispatch)(\"name\"),\r\n        changeSectionTypes: setValue(dispatch)(\"sectionTypes\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(withNewGroupControl(NamesSection)));","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInputShort = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInputShort;","import SectionTitle from \"./SectionTitle\";\r\nexport default SectionTitle;","import React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst SectionTitle = ({text, children}) => (\r\n    <>\r\n        <div className=\"sectionTitle\">\r\n            <span>{text || children}</span>\r\n        </div>\r\n        <div className=\"spaceHolder\"/>\r\n    </>\r\n);\r\n\r\nexport default SectionTitle;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst BackSpaceActionInput = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"175px\",\r\n      width: \"175px\",\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default BackSpaceActionInput;","import PositioningSection from \"./PositioningSection\";\r\nexport default PositioningSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport SectionTitle from \"../../common/SectionTitle\";\r\nimport { backSpaceActionsMap, decoratorsList, GLOBAL_FALLBACK_MARK } from \"../../constants\";\r\nimport BackSpaceActionInput from \"./BackSpaceActionInput\";\r\nimport { setValue, toggleValue } from \"../../actions\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst PositioningSection = props => {\r\n    const {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        fixedIndentation, changeisFixedIndentation,\r\n        softReturn, changeSoftReturn,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithContentStyle, changeBackspaceActionWithContentStyle,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    } = props;\r\n\r\n    const onBackspaceActionChange = e => {\r\n        if (e.target.value === \"apply_other_pd\") {\r\n            changeBackspaceActionWithContentStyle(null, GLOBAL_FALLBACK_MARK);\r\n        } else if (backspaceActionWithContentStyle) {\r\n            changeBackspaceActionWithContentStyle(null, \"\");\r\n        }\r\n        changeBackspaceActionWithContent(e);\r\n    };\r\n\r\n    const backSpaceActionStyleSettingsState = backspaceActionWithContent === \"apply_other_pd\" ? \"shown\" : \"hidden\";\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Identational level</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={indentationalLevel}\r\n                    onChange={changeIndentationalLevel}\r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <span>Fixed indentation</span>\r\n            <div className=\"unlabeledCheckbox\">\r\n                <Checkbox \r\n                    checked={fixedIndentation}\r\n                    onChange={changeisFixedIndentation}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n\r\n            <span>Soft return</span>\r\n            <div className=\"unlabeledCheckbox\">\r\n                <Checkbox \r\n                    checked={softReturn}\r\n                    onChange={changeSoftReturn}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n            \r\n            <SectionTitle text=\"BACKSPACE\" />\r\n\r\n            <span>At the beginning of a section with content</span>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <div>\r\n                    <NativeSelect \r\n                        value={backspaceActionWithContent}\r\n                        onChange={onBackspaceActionChange}\r\n                        input={ <BackSpaceActionInput /> }\r\n                    >\r\n                        {Array.from(backSpaceActionsMap).map(([key, value]) => (\r\n                            <option value={key} key={key}>{value}</option>\r\n                        ))}\r\n                    </NativeSelect>\r\n                </div>\r\n                <div className={`optionalSettings optionalSettings_${backSpaceActionStyleSettingsState} wideSelectBox`}>\r\n                    <NativeSelect\r\n                        value={backspaceActionWithContentStyle}\r\n                        onChange={changeBackspaceActionWithContentStyle}\r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        <option value={GLOBAL_FALLBACK_MARK}>Global Fallback Style</option>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                </div>\r\n            </div>\r\n\r\n            <SectionTitle text=\"RETURN\" />\r\n\r\n\r\n            <span>Style of next section</span>\r\n            <div className=\"wideSelectBox\">\r\n                <NativeSelect\r\n                    value={returnActionNextSection}\r\n                    onChange={changeReturnActionNextSection}\r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"\">Nothing</option>\r\n                    <option value={GLOBAL_FALLBACK_MARK}>Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n\r\n            <span>In empty section change current style to</span>\r\n            <div className=\"wideSelectBox\">\r\n                <NativeSelect \r\n                    value={returnActionEmptySection}\r\n                    onChange={changeReturnActionEmptySection}\r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"\">Nothing</option>\r\n                    <option value={GLOBAL_FALLBACK_MARK}>Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <SectionTitle text=\"TAB / SHIFT+TAB\" />\r\n\r\n            <span>TAB – change current style to</span>\r\n            <div className=\"wideSelectBox\">\r\n                <NativeSelect\r\n                    value={tabAction}\r\n                    onChange={changeTabAction}\r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"\">Nothing</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <span>SHIFT+TAB – change current style to</span>\r\n            <div className=\"wideSelectBox\">\r\n                <NativeSelect\r\n                    value={shiftTabAction}\r\n                    onChange={changeShiftTabAction} \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"\">Nothing</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        indentationalLevel: form.indentationalLevel,\r\n        backspaceActionWithContent: form.backspaceActionWithContent,\r\n        backspaceActionWithContentStyle: form.backspaceActionWithContentStyle,\r\n        returnActionNextSection: form.returnActionNextSection,\r\n        returnActionEmptySection: form.returnActionEmptySection,\r\n        tabAction: form.tabAction,\r\n        shiftTabAction: form.shiftTabAction,\r\n        fixedIndentation: form.fixedIndentation,\r\n        softReturn: form.softReturn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeIndentationalLevel: setValue(dispatch)(\"indentationalLevel\"),\r\n        changeBackspaceActionWithContent: setValue(dispatch)(\"backspaceActionWithContent\"),\r\n        changeBackspaceActionWithContentStyle: setValue(dispatch)(\"backspaceActionWithContentStyle\"),\r\n        changeBackspaceActionWithoutContent: setValue(dispatch)(\"backspaceActionWithoutContent\"),\r\n        changeBackspaceActionWithoutContentStyle: setValue(dispatch)(\"backspaceActionWithoutContentStyle\"),\r\n        changeReturnActionNextSection: setValue(dispatch)(\"returnActionNextSection\"),\r\n        changeReturnActionEmptySection: setValue(dispatch)(\"returnActionEmptySection\"),\r\n        changeTabAction: setValue(dispatch)(\"tabAction\"),\r\n        changeShiftTabAction: setValue(dispatch)(\"shiftTabAction\"),\r\n        changeisFixedIndentation: toggleValue(dispatch)(\"fixedIndentation\"),\r\n        changeSoftReturn: toggleValue(dispatch)(\"softReturn\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(PositioningSection));","import { getOffset, getCorrectColor, getPreviewFont } from \"../../helpers\";\r\nimport { alignmentList, DEFAULT_FONT_SIZE, DEFAULT_LINE_SPACING } from \"../../constants\";\r\n\r\nexport const generatePreviewStyle = formState => {\r\n    const {\r\n        font,\r\n        customFont,\r\n        alignment,\r\n        fontSize,\r\n        fontColor,\r\n        bold,\r\n        italic,\r\n        underlined,\r\n        stroke,\r\n        textTransform,\r\n        verticalAlign,\r\n        marginTop,\r\n        marginBottom,\r\n        firstRowIndent,\r\n        otherRowsIndent,\r\n        lineSpacing,\r\n        customLineSpacing,\r\n        wordSpacing,\r\n        borderLeft,\r\n        borderRight,\r\n        borderTop,\r\n        borderBottom,\r\n        borderType,\r\n        borderColor,\r\n        borderThickness,\r\n        fillingColor,\r\n        fillingConnectToPrevious,\r\n        connectToPrevious,\r\n    } = formState;\r\n    \r\n    const previewFontColor = getCorrectColor(fontColor, \"f5f5f5\");\r\n    const previewFillingColor = getCorrectColor(fillingColor, \"f5f5f5\");\r\n    const previewAdditionalFillingColor = fillingConnectToPrevious ? previewFillingColor : \"f5f5f5\";\r\n    const indentsDifference = (firstRowIndent || 0) - (otherRowsIndent || 0);\r\n    const previewMarginLeft = `${!otherRowsIndent ? 0 : (otherRowsIndent >= 6 ? 6 : otherRowsIndent)}cm`;\r\n    const previewTextIndent = `${!indentsDifference ? 0 : (indentsDifference >= 6 ? 6 : indentsDifference)}cm`;\r\n    const previewLineSpacing = lineSpacing !== \"custom\" ? lineSpacing : (customLineSpacing || DEFAULT_LINE_SPACING);\r\n    const offset = getOffset(verticalAlign, fontSize);\r\n    const previewMarginTop = `${(!connectToPrevious ? parseFloat(marginTop) : 0) + offset}pt`;\r\n    const previewMarginBottom = `${(!connectToPrevious ? parseFloat(marginBottom) : 0) - offset}pt`;\r\n    const previewBorderLeft = borderLeft ? `${borderThickness}pt ${borderType} #${borderColor}` : \"none\";\r\n    const previewBorderRight = borderRight ? `${borderThickness}pt ${borderType} #${borderColor}` : \"none\";\r\n    const previewBorderTop = borderTop ? `${borderThickness}pt ${borderType} #${borderColor}` : \"none\";\r\n    const previewBorderBottom = borderBottom ? `${borderThickness}pt ${borderType} #${borderColor}` : \"none\";\r\n    const correctFontSize = fontSize <= 120 ? fontSize : 120;\r\n    const previewStyle = {\r\n        fontSize: !fontSize ? `${DEFAULT_FONT_SIZE}pt` : `${correctFontSize}pt`,\r\n        color: `#${previewFontColor}`,\r\n        fontFamily: getPreviewFont(font, customFont),\r\n        alignItems: alignmentList[alignment],\r\n        textAlign: alignment,\r\n        fontWeight: bold ? \"bold\" : \"normal\",\r\n        fontStyle: italic ? \"italic\" : \"normal\",\r\n        textDecoration: `${underlined ? \"underline\" : \"\"}${stroke ? \" line-through\" : \"\"}`.trim() || \"none\",\r\n        verticalAlign,\r\n        textTransform: textTransform !== \"small-caps\" ? textTransform : \"none\",\r\n        fontVariant: textTransform === \"small-caps\" ? textTransform : \"normal\",\r\n        backgroundColor: `#${previewFillingColor}`,\r\n        backgroundImage:  `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        borderImage: `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        marginLeft: previewMarginLeft,\r\n        textIndent: previewTextIndent,\r\n        wordSpacing: `${wordSpacing || 0}pt`,\r\n        lineHeight: previewLineSpacing,\r\n        marginTop: previewMarginTop,\r\n        marginBottom: previewMarginBottom,\r\n        borderLeft: previewBorderLeft,\r\n        borderRight: previewBorderRight,\r\n        borderTop: previewBorderTop,\r\n        borderBottom: previewBorderBottom,\r\n        outline: \"none\",\r\n        ...borderLeft && { paddingLeft: `${correctFontSize / 3}pt`},\r\n        ...borderRight && { paddingRight: `${correctFontSize / 3}pt`},\r\n        ...borderTop && { paddingTop: `${correctFontSize / 3}pt`},\r\n        ...borderBottom && { paddingBottom: `${correctFontSize / 3}pt`},\r\n    };\r\n\r\n    return previewStyle;\r\n};\r\n\r\nexport const generateSideNumberStyle = formState => {\r\n    const { \r\n        listType,\r\n        suffixDistance,\r\n        sideNumber,\r\n        sideNumberFont,\r\n        customSideNumberFont,\r\n        sideNumberAlignment,\r\n        sideNumberFontSize,\r\n        sideNumberFontColor,\r\n        sideNumberFillingColor,\r\n        sideNumberWidth,\r\n        sideNumberRadius,\r\n        sideNumberBold,\r\n        sideNumberItalic,\r\n        sideNumberUnderlined,\r\n        sideNumberLineHeight,\r\n    } = formState;\r\n\r\n    const previewSideNumberFontColor = getCorrectColor(sideNumberFontColor, \"f5f5f5\");\r\n    const previewSideNumberFillingColor = getCorrectColor(sideNumberFillingColor, \"f5f5f5\");\r\n\r\n    const sideNumberStyle = (!sideNumber || listType === \"unordered\") ? {} : {\r\n        fontFamily: getPreviewFont(sideNumberFont, customSideNumberFont),\r\n        textAlign: sideNumberAlignment,\r\n        fontSize: !sideNumberFontSize ? `${DEFAULT_FONT_SIZE}pt` : `${sideNumberFontSize <= 120 ? sideNumberFontSize : 120}pt`,\r\n        color: `#${previewSideNumberFontColor}`,\r\n        backgroundColor: `#${previewSideNumberFillingColor}`,\r\n        minWidth: `${!sideNumberWidth ? 0 : (sideNumberWidth < 150 ? sideNumberWidth : 150)}pt`,\r\n        borderRadius: `${sideNumberRadius || 0}pt`,\r\n        fontWeight: sideNumberBold ? \"bold\" : \"normal\",\r\n        fontStyle: sideNumberItalic ? \"italic\" : \"normal\",\r\n        textDecoration: sideNumberUnderlined ? \"underline\" : \"none\",\r\n        ...sideNumberLineHeight && { lineHeight: `${sideNumberLineHeight}pt`},\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n    };\r\n\r\n    return sideNumberStyle;\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { generatePreviewStyle, generateSideNumberStyle } from \"./generators\";\r\nimport { getListChars } from \"../../helpers\";\r\nimport { bulletNamesMap } from \"../../constants\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst ListPreview = props => {\r\n    const { \r\n        formState,\r\n        prefix, \r\n        suffix, \r\n        suffixDistance,\r\n        listType,\r\n        listItem, \r\n        unicodeChar,\r\n        listItemString,\r\n        numberingStyle,\r\n        sideNumber,\r\n    } = props;\r\n\r\n    const isOrderedList = listType === \"ordered\";\r\n\r\n    let currentBullet;\r\n\r\n    if (listItem === \"custom\") {\r\n        currentBullet = unicodeChar;\r\n    } else if (listItem === \"string\") {\r\n        currentBullet = listItemString;\r\n    } else {\r\n        currentBullet = bulletNamesMap.get(listItem);\r\n    }\r\n\r\n    const listChars = getListChars(isOrderedList, numberingStyle, currentBullet);\r\n\r\n    const listItemBeginnings = listChars.map(listChar => {\r\n        return (`${prefix}${listChar}${suffix}`);\r\n    });\r\n\r\n    const previewStyle = generatePreviewStyle(formState);\r\n    const isSideNumber = isOrderedList && sideNumber;\r\n    const sideNumberStyle = isSideNumber ? generateSideNumberStyle(formState) : {};\r\n    const listItemBeginningStyle = {\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n        ...sideNumberStyle,\r\n    };\r\n\r\n    return (\r\n        <div className=\"preview preview_list\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div className=\"preview-content\">\r\n                <div className=\"demonstrationElement\">\r\n                    <div\r\n                        className=\"demonstrationElement-text\"\r\n                        style={previewStyle}\r\n                    >\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginningStyle}\r\n                            >{`${listItemBeginnings[0]}`}</span><span>The first list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginningStyle}\r\n                            >{`${listItemBeginnings[1]}`}</span><span>The second list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginningStyle}\r\n                            >{`${listItemBeginnings[2]}`}</span><span>The third list item</span>\r\n                        </div>\r\n                        { isSideNumber && (\r\n                            <>\r\n                                <div>\r\n                                    <span \r\n                                        className=\"listItemBeginning\"\r\n                                        style={listItemBeginningStyle}\r\n                                    >{`${listItemBeginnings[3]}`}</span><span>One more list item</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span \r\n                                        className=\"listItemBeginning\"\r\n                                        style={listItemBeginningStyle}\r\n                                    >{`${listItemBeginnings[4]}`}</span><span>And one more</span>\r\n                                </div>\r\n                            </>\r\n                        ) }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        formState: form,\r\n        previewText: form.previewText,\r\n        prefix: form.prefix, \r\n        suffix: form.suffix,\r\n        suffixDistance: form.suffixDistance,\r\n        listType: form.listType,\r\n        listItem: form.listItem, \r\n        unicodeChar: form.unicodeChar,\r\n        numberingStyle: form.numberingStyle,\r\n        sideNumber: form.sideNumber,\r\n        listItemString: form.listItemString,\r\n    };\r\n};\r\n\r\nexport default (connect(mapStateToProps)(ListPreview));","import ColorField from \"./ColorField\";\r\nexport default ColorField;","import React from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport { getCorrectColor, selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ColorField extends React.PureComponent {\r\n    state = {\r\n        isOpen: this.props.isOpen,\r\n    };\r\n\r\n    hideColorPicker = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    showColorPicker = () => {\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    colorPickerHandler = changeColor => ({ hex }) => {\r\n        changeColor(null, hex);\r\n    };\r\n\r\n    render() {\r\n        const { colorCode, changeColorCode, defaultColorCode, required, bottomAligned } = this.props;\r\n        const correctColor = getCorrectColor(colorCode);\r\n        const colorError = correctColor !== colorCode;\r\n        const inputError = colorError && (required || !!colorCode);\r\n        const pickerColor = colorError ? \"\" : `#${correctColor}`;\r\n        const colorSampleStyle = {\r\n            backgroundColor: `#${correctColor}`,\r\n        };\r\n        const colorPickerClassName = `colorPicker${ bottomAligned ? \" colorPicker_bottomAligned\" : \"\"}`;\r\n\r\n        return (\r\n            <div className=\"colorField\">\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    className=\"numberInput\" \r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                    }}\r\n                    value={colorCode}\r\n                    onChange={changeColorCode}\r\n                    onClick={e => { \r\n                        if (defaultColorCode) {\r\n                            selectAllOnClick(defaultColorCode)(e);\r\n                        }\r\n                        // this.showColorPicker(); \r\n                    }}\r\n                    error={inputError}\r\n                />\r\n                <div\r\n                    onClick={this.showColorPicker}\r\n                    className=\"colorSample\" \r\n                    style={colorSampleStyle}\r\n                />\r\n                {this.state.isOpen && (\r\n                    <div className={colorPickerClassName}>\r\n                        <div className=\"colorPicker-chromeBox\">\r\n                            <ChromePicker\r\n                                onChangeComplete={this.colorPickerHandler(changeColorCode)}\r\n                                color={pickerColor}\r\n                                disableAlpha\r\n                            />\r\n                        </div>\r\n                        <div className=\"colorPicker-popOver\"  onClick={this.hideColorPicker}></div>\r\n                    </div>\r\n                ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorField;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport CustomInput from \"./CustomInput\";\r\nimport { fontSet, DEFAULT_FONT } from \"../constants\";\r\nimport { isFontAvailable, focusInput, changeAndScroll } from \"../helpers\";\r\n\r\nclass FontSelectFields extends React.PureComponent {\r\n    customFontInputRef = React.createRef();\r\n\r\n    onFontChange = e => {\r\n        this.props.changeFont(e);\r\n        if (e.target.value === \"custom\") {\r\n            focusInput(this.customFontInputRef);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { font, customFont, changeCustomFont } = this.props;\r\n        const availableFonts = fontSet.filter(fontName => fontName === font || isFontAvailable(fontName));\r\n        const optionalFieldState = font === \"custom\" ? \"optionalField_shown\" : \"optionalField_hidden\";\r\n        return (\r\n            <>\r\n                <span >Font</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={font}\r\n                    onChange={changeAndScroll(this.onFontChange, 500)}\r\n                >\r\n                    <option value={DEFAULT_FONT}>Helvetica</option>\r\n                    { availableFonts.map(fontName => <option value={fontName} key={fontName}>{fontName}</option>) }\r\n                    <option value=\"custom\" className=\"highlightedOption\">Custom</option>\r\n                </NativeSelect>\r\n    \r\n                <div className={`optionalField ${optionalFieldState}`}>\r\n                    <span></span>\r\n                </div>\r\n                <div className={`optionalField ${optionalFieldState}`}>\r\n                    <TextField \r\n                        value={customFont}\r\n                        onChange={changeCustomFont}\r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        placeholder=\"Enter the font name\"\r\n                        inputRef={this.customFontInputRef}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FontSelectFields;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport ListPreview from \"../../common/Preview/ListPreview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport LabelWithAsterisk from \"../../common/LabelWithAsterisk\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport { \r\n    orderedListStylesMap, \r\n    bulletNamesMap, \r\n    DEFAULT_FONT_SIZE,\r\n    DEFAULT_SIDE_NUMBER_FONT_COLOR,\r\n    DEFAULT_SIDE_NUMBER_FILLING_COLOR,\r\n    DEFAULT_SIDE_NUMBER_WIDTH,\r\n    DEFAULT_SIDE_NUMBER_RADIUS,\r\n } from \"../../constants\";\r\nimport { \r\n    updateValidationError,\r\n    setValue,\r\n    toggleValue,\r\n    setNumber,\r\n    setColor,\r\n    setBullet,\r\n} from \"../../actions\";\r\nimport { \r\n    selectAllOnClick, \r\n    changeAndScroll,\r\n    scrollToBottom,\r\n    focusInput,\r\n    unicodeNumberToChar, \r\n    unicodeCharToNumber, \r\n} from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ListSection extends React.Component {\r\n    listNameInputRef = React.createRef();\r\n    unicodeCharInputRef = React.createRef();\r\n\r\n    onIsListChange = e => {\r\n        const { listName } = this.props;\r\n        this.props.changeIsList(e);\r\n\r\n        if (e.target.checked && !listName) {\r\n            focusInput(this.listNameInputRef);\r\n        }       \r\n    };\r\n\r\n    onListTypeChange = e => {\r\n        const { suffix, listName } = this.props;\r\n        const { value } = e.target;\r\n        this.props.changeListType(null, value);\r\n        if (value === \"ordered\" && !listName) {\r\n            focusInput(this.listNameInputRef);\r\n        } else {\r\n            scrollToBottom(\"content-rightSide\");\r\n        }\r\n        if (value === \"ordered\" && suffix === \"\") {\r\n            this.props.changeSuffix(null, \".\");\r\n        } else if (value === \"unordered\" && suffix === \".\") {\r\n            this.props.changeSuffix(null, \"\");\r\n        }\r\n    };\r\n\r\n    onListItemChange = e => {\r\n        this.props.changeListItem(e);\r\n        if (e.target.value === \"custom\" && !this.props.unicodeChar) {\r\n            focusInput(this.unicodeCharInputRef);\r\n        }\r\n    };\r\n\r\n    onUnicodeNumberChange = e => {\r\n        const newUnicodeNumber = this.props.changeUnicodeNumber(e);\r\n        const newUnicodeChar = newUnicodeNumber !== \"\" ? unicodeNumberToChar(newUnicodeNumber) : \"\";\r\n        this.props.changeUnicodeChar(null, newUnicodeChar);\r\n    };\r\n    \r\n    onUnicodeCharChange = e => {\r\n        const newUnicodeChar = this.props.changeUnicodeChar(e);\r\n        const newUnicodeNumber = newUnicodeChar !== \"\" ? unicodeCharToNumber(newUnicodeChar) : \"\";\r\n        this.props.changeUnicodeNumber(null, newUnicodeNumber);\r\n    };\r\n\r\n    onSideNumberChange = e => {\r\n        const { suffix } = this.props;\r\n        this.props.changeSideNumber(e);\r\n        if (e.target.checked && suffix === \".\") {\r\n            this.props.changeSuffix(null, \"\");\r\n        } else if (!e.target.checked && suffix === \"\") {\r\n            this.props.changeSuffix(null, \".\");\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.validationErrorInSection) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        const { isList, listType, listName } = this.props;\r\n        if (this.props.validationErrorInSection && !prevprops.validationErrorInSection) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n        if (this.props.validationErrorInSection && (!isList || listType === \"unordered\" || listName)) {\r\n            this.props.updateValidationError({ listSection: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            validationErrorInSection,\r\n            listPreviewProps,\r\n            isList,\r\n            listName, changeListName,\r\n            orderLevel, changeOrderLevel,\r\n            prefix, changePrefix,\r\n            suffix, changeSuffix,\r\n            suffixDistance, changeSuffixDistance,\r\n            magicTabs, changeMagicTabs,\r\n            listType,\r\n            listItem,\r\n            unicodeNumber,\r\n            unicodeChar,\r\n            listItemString, changeListItemString,\r\n            numberingStyle, changeNumberingStyle,\r\n            continueNumbering, changeContinueNumbering,\r\n            allowRestartNumbering, changeAllowRestartNumbering,\r\n            includePreviousFrom, changeIncludePreviousFrom,\r\n            sideNumber,\r\n            sideNumberFont, changeSideNumberFont,\r\n            customSideNumberFont, changeCustomSideNumberFont,\r\n            sideNumberAlignment, changeSideNumberAlignment,\r\n            sideNumberFontSize, changeSideNumberFontSize,\r\n            sideNumberFontColor, changeSideNumberFontColor,\r\n            sideNumberFillingColor, changeSideNumberFillingColor,\r\n            sideNumberWidth, changeSideNumberWidth,\r\n            sideNumberRadius, changeSideNumberRadius,\r\n            sideNumberBold, changeSideNumberBold,\r\n            sideNumberItalic, changeSideNumberItalic,\r\n            sideNumberUnderlined, changeSideNumberUnderlined,\r\n            sideNumberLineHeight, changeSideNumberLineHeight,\r\n        } = this.props;\r\n        \r\n        const mainListSettingsState = isList ? \"shown\" : \"hidden\";\r\n        const unorderedListSettingsState = (isList && listType === \"unordered\") ? \"shown\" : \"hidden\";\r\n        const customListItemSettingsState = (isList && listType === \"unordered\" && listItem === \"custom\") ? \"shown\" : \"hidden\";\r\n        const customListItemSettingsState2 = (isList && listType === \"unordered\" && listItem === \"string\") ? \"shown\" : \"hidden\";\r\n        const orderedListSettingsState = (isList && listType === \"ordered\") ? \"shown\" : \"hidden\";\r\n        const sideNumberSettingsState = (isList && listType === \"ordered\" && sideNumber) ? \"shown\" : \"hidden\";\r\n    \r\n        return (\r\n            <>\r\n                <div className=\"dialogGrid dialogGrid_2cols\">\r\n                    <div>\r\n                        <div>\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth\">\r\n                                <div className=\"listItemSpan\">\r\n                                    <span>Is it a list?</span>\r\n                                </div>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox \r\n                                        color=\"primary\" \r\n                                        checked={isList} \r\n                                        onChange={changeAndScroll(this.onIsListChange)} \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${mainListSettingsState}`}>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth optionalSettings\">\r\n                                    { listType === \"unordered\" ? (\r\n                                        <span>List name</span>\r\n                                    ) : (\r\n                                        <LabelWithAsterisk>List name</LabelWithAsterisk>\r\n                                    )}\r\n                                    <TextField\r\n                                        value={listName}\r\n                                        onChange={changeListName} \r\n                                        error={validationErrorInSection && !listName}\r\n                                        inputRef={this.listNameInputRef}\r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                    />\r\n    \r\n                                    <span>Order level</span>\r\n                                    <div>\r\n                                        <NativeSelect\r\n                                            value={orderLevel}\r\n                                            onChange={changeOrderLevel}\r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            <option value=\"\">...</option>\r\n                                            <option value=\"0\">0</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                        </NativeSelect>\r\n                                    </div>\r\n\r\n                                    <span>Suffix distance</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <NativeSelect\r\n                                            value={suffixDistance}\r\n                                            onChange={changeSuffixDistance} \r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            <option value=\"0.25\">0.25</option>\r\n                                            <option value=\"0.5\">0.5</option>\r\n                                            <option value=\"0.75\">0.75</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"1.25\">1.25</option>\r\n                                            <option value=\"1.5\">1.5</option>\r\n                                            <option value=\"1.75\">1.75</option>\r\n                                            <option value=\"2\">2</option>\r\n                                        </NativeSelect>\r\n                                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                                    </div>\r\n    \r\n                                    <span>Magic Tabs</span>\r\n                                    <div className=\"unlabeledCheckbox\">\r\n                                        <Checkbox \r\n                                            color=\"primary\" \r\n                                            checked={magicTabs} \r\n                                            onChange={changeMagicTabs} \r\n                                        />\r\n                                    </div>\r\n    \r\n                                    <span>Type of list</span>\r\n                                    <RadioGroup \r\n                                        value={listType} \r\n                                        onChange={this.onListTypeChange}\r\n                                        row\r\n                                    >\r\n                                        <div className=\"labeledCheckbox\">\r\n                                            <FormControlLabel\r\n                                                value=\"unordered\"\r\n                                                control={<Radio color=\"primary\" />}\r\n                                                label=\"Unordered\"\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"labeledCheckbox\">\r\n                                            <FormControlLabel\r\n                                                value=\"ordered\"\r\n                                                control={<Radio color=\"primary\" />}\r\n                                                label=\"Ordered\"\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                    </RadioGroup>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`optionalSettings optionalSettings_${orderedListSettingsState}`}>\r\n                            <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                                <span>Numbering style</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={numberingStyle}\r\n                                        onChange={changeNumberingStyle}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        {Array.from(orderedListStylesMap).map(([key, value]) => (\r\n                                            <option value={key} key={key}>{value}</option>\r\n                                        ))}                                    \r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Continue numbering after interruption</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox\r\n                                        checked={continueNumbering}\r\n                                        onChange={changeContinueNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Allow restart numbering</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox\r\n                                        checked={allowRestartNumbering} \r\n                                        onChange={changeAllowRestartNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Include previous levels from</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={includePreviousFrom} \r\n                                        onChange={changeIncludePreviousFrom}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        <option value=\"\">...</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </NativeSelect>\r\n                                </div>\r\n\r\n                                <span>Prefix</span>\r\n                                    <TextField\r\n                                        value={prefix}\r\n                                        onChange={changePrefix} \r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                    />\r\n    \r\n                                <span>Suffix</span>\r\n                                <TextField\r\n                                    value={suffix}\r\n                                    onChange={changeSuffix} \r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                    onClick={selectAllOnClick(\".\")}\r\n                                />\r\n                                        \r\n                                <span>Side number</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox\r\n                                        checked={sideNumber}\r\n                                        onChange={changeAndScroll(this.onSideNumberChange)}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                            </div> \r\n    \r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${sideNumberSettingsState}`}>\r\n                                <div className=\"flexibleGrid listTypeSettings\">\r\n                                    <FontSelectFields \r\n                                        font={sideNumberFont}\r\n                                        changeFont={changeSideNumberFont}\r\n                                        customFont={customSideNumberFont}\r\n                                        changeCustomFont={changeCustomSideNumberFont}\r\n                                    />\r\n                            \r\n                                    <span>Alignment</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberAlignment}\r\n                                        onChange={changeSideNumberAlignment}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"left\"}>Left</option>\r\n                                        <option value={\"center\"}>Center</option>\r\n                                        <option value={\"right\"}>Right</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Font size</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberFontSize}\r\n                                            onChange={changeSideNumberFontSize}\r\n                                            onClick={selectAllOnClick(DEFAULT_FONT_SIZE)}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>      \r\n                            \r\n                                    <span>Font color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFontColor} \r\n                                        changeColorCode={changeSideNumberFontColor}\r\n                                        defaultColorCode={DEFAULT_SIDE_NUMBER_FONT_COLOR}\r\n                                        bottomAligned\r\n                                    />\r\n                                        \r\n                                    <span>Filling color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFillingColor} \r\n                                        changeColorCode={changeSideNumberFillingColor}\r\n                                        defaultColorCode={DEFAULT_SIDE_NUMBER_FILLING_COLOR}\r\n                                        bottomAligned\r\n                                    />\r\n    \r\n                                    <span>Width</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberWidth}\r\n                                            onChange={changeSideNumberWidth}\r\n                                            onClick={selectAllOnClick(DEFAULT_SIDE_NUMBER_WIDTH)}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>\r\n\r\n                                    <span>Line height</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberLineHeight}\r\n                                            onChange={changeSideNumberLineHeight}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>  \r\n                                        \r\n                                    <span>Radius</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberRadius}\r\n                                            onChange={changeSideNumberRadius}\r\n                                            onClick={selectAllOnClick(DEFAULT_SIDE_NUMBER_RADIUS)}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>\r\n\r\n                                    <span className=\"stylingsSpan\">Stylings</span>\r\n                                    <div className=\"checkBoxesSet\">\r\n                                        <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                                            <FormControlLabel\r\n                                                checked={sideNumberBold}\r\n                                                onChange={changeSideNumberBold}\r\n                                                label=\"Bold\"\r\n                                                control={<Checkbox color=\"primary\" />}\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                                            <FormControlLabel\r\n                                                checked={sideNumberItalic}\r\n                                                onChange={changeSideNumberItalic}\r\n                                                label=\"Italic\"\r\n                                                control={<Checkbox color=\"primary\" />}\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox color=\"primary\" />}\r\n                                                label=\"Underlined\"\r\n                                                labelPlacement=\"end\"\r\n                                                checked={sideNumberUnderlined}\r\n                                                onChange={changeSideNumberUnderlined}\r\n                                            />\r\n                                        </div>\r\n                                    </div>  \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className={`listPreviewBox optionalSettings optionalSettings_${mainListSettingsState}`}>\r\n                        <ListPreview {...listPreviewProps} />\r\n                    </div>\r\n                </div>\r\n                <div className={`optionalSettings optionalSettings_${unorderedListSettingsState}`}>\r\n                    <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                        <div className=\"dialogGrid dialogGrid_2cols\">\r\n                            <span className=\"listItemSpan\">List item</span>\r\n                            <div className=\"listItemSelect\">\r\n                                <NativeSelect \r\n                                    value={listItem} \r\n                                    onChange={this.onListItemChange} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    { \r\n                                        Array.from(bulletNamesMap).map(([key, value]) => {\r\n                                            return (<option key={key} value={key}>{value}</option>) \r\n                                        })\r\n                                    }\r\n                                    <option value={\"custom\"} className=\"highlightedOption\">Custom bullet</option>\r\n                                    <option value={\"string\"} className=\"highlightedOption\">Custom string</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className={`optionalSettings optionalSettings_${customListItemSettingsState}`}>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                        <span>Unicode number</span>\r\n                                        <div>\r\n                                            <TextField  \r\n                                                value={unicodeNumber}\r\n                                                onChange={this.onUnicodeNumberChange}\r\n                                                variant=\"outlined\" \r\n                                                margin=\"dense\" \r\n                                                className=\"unicodeInput\" \r\n                                                InputProps={{\r\n                                                    startAdornment: <InputAdornment position=\"start\">u+</InputAdornment>\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                        <span>Char</span>\r\n                                        <div>\r\n                                            <TextField \r\n                                                value={unicodeChar}\r\n                                                onChange={this.onUnicodeCharChange}\r\n                                                onClick={selectAllOnClick()}\r\n                                                inputRef={this.unicodeCharInputRef}\r\n                                                variant=\"outlined\" \r\n                                                margin=\"dense\" \r\n                                                className=\"bulletInput\" \r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                            <div className={`optionalSettings optionalSettings_${customListItemSettingsState2}`}>\r\n                                <div className=\"listItemCustomString\">\r\n                                    <div className=\"dialogGrid dialogGrid_1col dialogGrid_leftIndented\">\r\n                                        <TextField\r\n                                            value={listItemString}\r\n                                            onChange={changeListItemString}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return {\r\n        validationErrorInSection: validationError.listSection,\r\n        formState: form,\r\n        isList: form.isList,\r\n        listName: form.listName, \r\n        orderLevel: form.orderLevel,\r\n        prefix: form.prefix,\r\n        suffix: form.suffix,\r\n        suffixDistance: form.suffixDistance,\r\n        magicTabs: form.magicTabs,\r\n        listType: form.listType,\r\n        listItem: form.listItem,\r\n        unicodeNumber: form.unicodeNumber,\r\n        unicodeChar: form.unicodeChar,\r\n        listItemString: form.listItemString,\r\n        numberingStyle: form.numberingStyle,\r\n        continueNumbering: form.continueNumbering,\r\n        allowRestartNumbering: form.allowRestartNumbering,\r\n        includePreviousFrom: form.includePreviousFrom,\r\n        sideNumber: form.sideNumber,\r\n        sideNumberFont: form.sideNumberFont,\r\n        customSideNumberFont: form.customSideNumberFont,\r\n        sideNumberAlignment: form.sideNumberAlignment,\r\n        sideNumberFontSize: form.sideNumberFontSize,\r\n        sideNumberFontColor: form.sideNumberFontColor,\r\n        sideNumberFillingColor: form.sideNumberFillingColor,\r\n        sideNumberWidth: form.sideNumberWidth,\r\n        sideNumberRadius: form.sideNumberRadius,\r\n        sideNumberBold: form.sideNumberBold,\r\n        sideNumberItalic: form.sideNumberItalic,\r\n        sideNumberUnderlined: form.sideNumberUnderlined,\r\n        sideNumberLineHeight: form.sideNumberLineHeight,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        changeListName: setValue(dispatch)(\"listName\"),\r\n        changeIsList: toggleValue(dispatch)(\"isList\"),\r\n        changeOrderLevel: setValue(dispatch)(\"orderLevel\"),\r\n        changePrefix: setValue(dispatch)(\"prefix\"),\r\n        changeSuffix: setValue(dispatch)(\"suffix\"),\r\n        changeSuffixDistance: setValue(dispatch)(\"suffixDistance\"),\r\n        changeMagicTabs: toggleValue(dispatch)(\"magicTabs\"),\r\n        changeListType: setValue(dispatch)(\"listType\"),\r\n        changeListItem: setValue(dispatch)(\"listItem\"),\r\n        changeUnicodeNumber: setColor(dispatch)(\"unicodeNumber\"),\r\n        changeUnicodeChar: setBullet(dispatch)(\"unicodeChar\"),\r\n        changeListItemString: setValue(dispatch)(\"listItemString\"),\r\n        changeNumberingStyle: setValue(dispatch)(\"numberingStyle\"),\r\n        changeContinueNumbering: toggleValue(dispatch)(\"continueNumbering\"),\r\n        changeAllowRestartNumbering: toggleValue(dispatch)(\"allowRestartNumbering\"),\r\n        changeIncludePreviousFrom: setValue(dispatch)(\"includePreviousFrom\"),\r\n        changeSideNumber: toggleValue(dispatch)(\"sideNumber\"),\r\n        changeSideNumberFont: setValue(dispatch)(\"sideNumberFont\"),\r\n        changeCustomSideNumberFont: setValue(dispatch)(\"customSideNumberFont\"),\r\n        changeSideNumberAlignment: setValue(dispatch)(\"sideNumberAlignment\"),\r\n        changeSideNumberFontSize: setNumber(dispatch)(\"sideNumberFontSize\"),\r\n        changeSideNumberFontColor: setColor(dispatch)(\"sideNumberFontColor\"),\r\n        changeSideNumberFillingColor: setColor(dispatch)(\"sideNumberFillingColor\"),\r\n        changeSideNumberWidth: setNumber(dispatch)(\"sideNumberWidth\"),\r\n        changeSideNumberRadius: setNumber(dispatch)(\"sideNumberRadius\"),\r\n        changeSideNumberBold: toggleValue(dispatch)(\"sideNumberBold\"),\r\n        changeSideNumberItalic: toggleValue(dispatch)(\"sideNumberItalic\"),\r\n        changeSideNumberUnderlined: toggleValue(dispatch)(\"sideNumberUnderlined\"),\r\n        changeSideNumberLineHeight: setNumber(dispatch)(\"sideNumberLineHeight\"),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListSection);","import ListSection from \"./ListSection\";\r\nexport default ListSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\nimport { setValue } from \"../actions\";\r\nimport { MAIN_LANG_KEY } from \"../constants\";\r\n\r\nclass ReferencingSection extends React.Component {\r\n    onXrefChange = (e, xrefName, xref) => {\r\n        if (xref) {\r\n            this.props.changeReferenceGroupToCreate(null, xref);\r\n        }\r\n        this.props.changeReferenceGroup(e, xrefName);\r\n    };\r\n\r\n    render() {\r\n        const { \r\n            referenceGroupToCreate, \r\n            isGroupDialogOpen,\r\n            hasGroupDialogValidationError,  \r\n            openGroupDialog, \r\n            closeGroupDialog, \r\n            showGroupDialogValidationError, \r\n            hideGroupDialogValidationError,\r\n            referenceGroup,\r\n        } = this.props;\r\n        \r\n        const newGroupName = referenceGroupToCreate[MAIN_LANG_KEY] || referenceGroupToCreate.groupKey;\r\n        const isEditMode = !!newGroupName;\r\n    \r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <span>Reference group</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        input={ <CustomInput /> } \r\n                        value={referenceGroup} \r\n                        onChange={this.onXrefChange} \r\n                    >\r\n                        { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                        <option value=\"\">none</option>\r\n                        <option value=\"0\">Reference group 1</option>\r\n                        <option value=\"1\">Reference group 2</option>\r\n                    </NativeSelect>\r\n                    {\r\n                        !(isEditMode && referenceGroup !== newGroupName) &&\r\n                        <Button color=\"primary\" className=\"textButton\" onClick={openGroupDialog}>\r\n                            { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                        </Button>\r\n                     }\r\n                </div>\r\n                <NewGroupDialog\r\n                    isOpen={isGroupDialogOpen}\r\n                    saveGroup={this.onXrefChange}\r\n                    savedGroup={referenceGroupToCreate}\r\n                    groupType=\"xref\" \r\n                    { ...{ \r\n                        isEditMode,\r\n                        hasGroupDialogValidationError,\r\n                        closeGroupDialog, \r\n                        showGroupDialogValidationError, \r\n                        hideGroupDialogValidationError, \r\n                    } }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        referenceGroup: form.referenceGroup,\r\n        referenceGroupToCreate: form.referenceGroupToCreate,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeReferenceGroup: setValue(dispatch)(\"referenceGroup\"),\r\n        changeReferenceGroupToCreate: setValue(dispatch)(\"referenceGroupToCreate\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(withNewGroupControl(ReferencingSection)));","import * as React from \"react\";\r\nimport deepEqual from \"fast-deep-equal\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, q = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(q[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, q[i]))\r\n              t[q[i]] = s[q[i]];\r\n      }\r\n  return t;\r\n};\r\n\r\nfunction normalizeHtml(str) {\r\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, \" \");\r\n}\r\nfunction findLastTextNode(node) {\r\n  if (node.nodeType === Node.TEXT_NODE)\r\n      return node;\r\n  let children = node.childNodes;\r\n  for (let i = children.length - 1; i >= 0; i--) {\r\n      let textNode = findLastTextNode(children[i]);\r\n      if (textNode !== null)\r\n          return textNode;\r\n  }\r\n  return null;\r\n}\r\nfunction replaceCaret(el) {\r\n  // Place the caret at the end of the element\r\n  const target = findLastTextNode(el);\r\n  // do not move caret if element was not focused\r\n  const isTargetFocused = document.activeElement === el;\r\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\r\n      var sel = window.getSelection();\r\n      if (sel !== null) {\r\n          var range = document.createRange();\r\n          range.setStart(target, target.nodeValue.length);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n      }\r\n      if (el instanceof HTMLElement)\r\n          el.focus();\r\n  }\r\n}\r\n/**\r\n* A simple component for an html element with editable contents.\r\n*/\r\nexport default class ContentEditable extends React.Component {\r\n  constructor() {\r\n      super(...arguments);\r\n      this.lastHtml = this.props.html;\r\n      this.el = typeof this.props.innerRef === \"function\" ? { current: null } : React.createRef();\r\n      this.getEl = () => (this.props.innerRef && typeof this.props.innerRef !== \"function\" ? this.props.innerRef : this.el).current;\r\n      this.emitChange = (originalEvt) => {\r\n          const el = this.getEl();\r\n          if (!el)\r\n              return;\r\n          const html = el.innerHTML;\r\n          if (this.props.onChange && html !== this.lastHtml) {\r\n              // Clone event with Object.assign to avoid\r\n              // \"Cannot assign to read only property 'target' of object\"\r\n              const evt = Object.assign({}, originalEvt, {\r\n                  target: {\r\n                      value: html\r\n                  }\r\n              });\r\n              this.props.onChange(evt);\r\n          }\r\n          this.lastHtml = html;\r\n      };\r\n  }\r\n  render() {\r\n      const _a = this.props, { tagName, html, innerRef } = _a, props = __rest(_a, [\"tagName\", \"html\", \"innerRef\"]);\r\n      return React.createElement(tagName || \"table\", Object.assign({}, props, { ref: typeof innerRef === \"function\" ? (current) => {\r\n              innerRef(current);\r\n              this.el.current = current;\r\n          } : innerRef || this.el, onInput: this.emitChange, onBlur: this.props.onBlur || this.emitChange, onKeyUp: this.props.onKeyUp || this.emitChange, onKeyDown: this.props.onKeyDown || this.emitChange, contentEditable: !this.props.disabled, dangerouslySetInnerHTML: { __html: html } }), this.props.children);\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n      const { props } = this;\r\n      const el = this.getEl();\r\n      // We need not rerender if the change of props simply reflects the user's edits.\r\n      // Rerendering in this case would make the cursor/caret jump\r\n      // Rerender if there is no element yet... (somehow?)\r\n      if (!el)\r\n          return true;\r\n      // ...or if html really changed... (programmatically, not by user edit)\r\n      if (normalizeHtml(nextProps.html) !== normalizeHtml(el.innerHTML)) {\r\n          return true;\r\n      }\r\n      // Handle additional properties\r\n      return props.disabled !== nextProps.disabled ||\r\n          props.tagName !== nextProps.tagName ||\r\n          props.className !== nextProps.className ||\r\n          props.innerRef !== nextProps.innerRef ||\r\n          !deepEqual(props.style, nextProps.style);\r\n  }\r\n  componentDidUpdate() {\r\n      const el = this.getEl();\r\n      if (!el)\r\n          return;\r\n      // Perhaps React (whose VDOM gets outdated because we often prevent\r\n      // rerendering) did not update the DOM. So we update it manually now.(?!(?:<br \\/>|<br>|<br\\/>)$)<(.*?)>\r\n      if (this.props.html !== el.innerHTML) {\r\n          el.innerHTML = this.lastHtml = this.props.html;\r\n      }\r\n      replaceCaret(el);\r\n  }\r\n}\r\nContentEditable.propTypes = {\r\n  html: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  tagName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n  ])\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ContentEditable from \"../ContentEditable\";\r\nimport { generatePreviewStyle } from \"./generators\";\r\nimport { setValue } from \"../../actions\";\r\nimport { selectAllEditableContent, getUnstyledText } from \"../../helpers\"\r\n\r\nimport \"./style.css\";\r\n\r\nclass Preview extends React.Component {\r\n    onPreviewTextChange = e => {\r\n        const { value } = e.target;\r\n        if (value && value !== \"<div></div>\" && value !== \"<br>\") {\r\n            this.props.changePreviewText(null, getUnstyledText(value));\r\n        } else {\r\n            this.props.changePreviewText(null, `<div><br></div>`);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const previewStyle = generatePreviewStyle(this.props.formState);\r\n        const { previewText } = this.props;\r\n    \r\n        return (\r\n            <div className=\"preview\">\r\n                <span className=\"preview-title\">Preview</span>\r\n                <div \r\n                    className=\"preview-content preview-content_withPointer\" \r\n                    onClick={selectAllEditableContent(\"demonstrationElement\")}\r\n                >\r\n                    <div className=\"demonstrationElement\">\r\n                        <ContentEditable\r\n                            className=\"demonstrationElement-text\"\r\n                            onChange={this.onPreviewTextChange} \r\n                            html={previewText}\r\n                            style={previewStyle}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        formState: form,\r\n        previewText: form.previewText,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changePreviewText: setValue(dispatch)(\"previewText\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(Preview));","import Preview from \"./Preview.js\";\r\nexport default Preview;","import TypographySection from \"./TypographySection\";\r\nexport default TypographySection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport Preview from \"../../common/Preview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport {  setValue, toggleValue, setNumber, setColor } from \"../../actions\";\r\nimport { DEFAULT_FONT_SIZE, DEFAULT_FONT_COLOR } from \"../../constants\";\r\nimport { selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst TypographySection = props => {\r\n    const { \r\n        previewProps,\r\n        font, changeFont,\r\n        customFont, changeCustomFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign,\r\n        readOnly, changeReadOnly,\r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"flexibleGrid\">\r\n                <FontSelectFields { ...{ font, changeFont, customFont, changeCustomFont }} />\r\n                \r\n                <span>Alignment</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={alignment}\r\n                    onChange={changeAlignment}\r\n                >\r\n                    <option value={\"left\"}>Left</option>\r\n                    <option value={\"center\"}>Center</option>\r\n                    <option value={\"right\"}>Right</option>\r\n                    <option value={\"justify\"}>Justified</option>\r\n                </NativeSelect>\r\n\r\n                <span>Font size</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={fontSize}\r\n                        onChange={changeFontSize}\r\n                        onClick={selectAllOnClick(DEFAULT_FONT_SIZE)}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>      \r\n\r\n                <span>Font color</span>\r\n                <ColorField \r\n                    colorCode={fontColor} \r\n                    changeColorCode={changeFontColor}\r\n                    defaultColorCode={DEFAULT_FONT_COLOR}\r\n                    required\r\n                />\r\n\r\n                <span>Sub/Superscript</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        value={verticalAlign} \r\n                        onChange={changeVerticalAlign}\r\n                        input={ <CustomInput /> } \r\n                    >\r\n                        <option value=\"baseline\">None</option>\r\n                        <option value=\"sub\">Subscript</option>\r\n                        <option value=\"super\">Superscript</option>\r\n                    </NativeSelect>\r\n                </div>\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_topIndented\">\r\n            <span className=\"stylingsSpan\">Stylings</span>\r\n            <div className=\"checkBoxesSet\">\r\n                <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Bold\"\r\n                        labelPlacement=\"end\"\r\n                        checked={bold}\r\n                        onChange={changeBold}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Italic\"\r\n                        labelPlacement=\"end\"\r\n                        checked={italic}\r\n                        onChange={changeItalic}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Underlined\"\r\n                        labelPlacement=\"end\"\r\n                        checked={underlined}\r\n                        onChange={changeUnderlined}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_stroke\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Stroke\"\r\n                        labelPlacement=\"end\"\r\n                        checked={stroke}\r\n                        onChange={changeStroke}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <span>Text transform</span>\r\n            <RadioGroup \r\n                value={textTransform} \r\n                onChange={changeTextTransform} \r\n                row\r\n            >\r\n                <div className=\"labeledCheckbox\">\r\n                    <FormControlLabel\r\n                        value=\"none\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"None\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_uppercase\">\r\n                    <FormControlLabel\r\n                        value=\"uppercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Uppercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_lowercase\">\r\n                    <FormControlLabel\r\n                        value=\"lowercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Lowercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_smallCaps\">\r\n                    <FormControlLabel\r\n                        value=\"small-caps\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Small caps\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n            </RadioGroup>\r\n\r\n            <span>Read only</span>\r\n            <div className=\"unlabeledCheckbox\">\r\n                <Checkbox \r\n                    checked={readOnly}\r\n                    onChange={changeReadOnly}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        font: form.font,\r\n        customFont: form.customFont,\r\n        alignment: form.alignment,\r\n        fontSize: form.fontSize,\r\n        fontColor: form.fontColor,\r\n        bold: form.bold,\r\n        italic: form.italic,\r\n        underlined: form.underlined,\r\n        stroke: form.stroke,\r\n        textTransform: form.textTransform,\r\n        verticalAlign: form.verticalAlign,\r\n        readOnly: form.readOnly,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeFont: setValue(dispatch)(\"font\"),\r\n        changeCustomFont: setValue(dispatch)(\"customFont\"),\r\n        changeAlignment: setValue(dispatch)(\"alignment\"),\r\n        changeFontSize: setNumber(dispatch)(\"fontSize\"),\r\n        changeFontColor: setColor(dispatch)(\"fontColor\"),\r\n        changeBold: toggleValue(dispatch)(\"bold\"),\r\n        changeItalic: toggleValue(dispatch)(\"italic\"),\r\n        changeUnderlined: toggleValue(dispatch)(\"underlined\"),\r\n        changeStroke: toggleValue(dispatch)(\"stroke\"),\r\n        changeTextTransform: setValue(dispatch)(\"textTransform\"),\r\n        changeVerticalAlign: setValue(dispatch)(\"verticalAlign\"),\r\n        changeMarginTop: setNumber(dispatch)(\"marginTop\"),\r\n        changeReadOnly: toggleValue(dispatch)(\"readOnly\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(TypographySection));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport { toggleValue } from \"../actions\";\r\n\r\nconst ConnectToPreviousField = ({ connectToPrevious, changeConnectToPrevious }) => (\r\n    <>\r\n        <span>Merge sections</span>\r\n        <div className=\"unlabeledCheckbox\">\r\n            <Checkbox \r\n                checked={connectToPrevious}\r\n                onChange={changeConnectToPrevious}\r\n                color=\"primary\" \r\n            />\r\n        </div>\r\n    </>\r\n);\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        connectToPrevious: form.connectToPrevious,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeConnectToPrevious: toggleValue(dispatch)(\"connectToPrevious\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(ConnectToPreviousField));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport Preview from \"../common/Preview\";\r\nimport { setValue, setNumber } from \"../actions\";\r\nimport { DEFAULT_MARGIN, DEFAULT_WORD_SPACING } from \"../constants\";\r\nimport { selectAllOnClick, focusInput, changeAndScroll } from \"../helpers\";\r\nimport ConnectToPreviousField from \"../common/ConnectToPreviousField\";\r\n\r\nclass DistancesSection extends React.Component {\r\n    customLineSpacingInputRef = React.createRef();\r\n\r\n    onLineSpacingChange = e => {\r\n        this.props.changeLineSpacing(e);\r\n        if (e.target.value === \"custom\") {\r\n            focusInput(this.customLineSpacingInputRef);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            previewProps,\r\n            connectToPrevious,\r\n            marginTop, changeMarginTop,\r\n            marginBottom, changeMarginBottom,\r\n            firstRowIndent, changeFirstRowIndent,\r\n            otherRowsIndent, changeOtherRowsIndent,\r\n            lineSpacing,\r\n            customLineSpacing, changeCustomLineSpacing,\r\n            wordSpacing, changeWordSpacing,\r\n        } = this.props;\r\n\r\n        const customLineSpacingFieldState = lineSpacing === \"custom\" ? \"optionalField_shown\" : \"optionalField_hidden\";\r\n        const marginFieldsState = !connectToPrevious ? \"optionalField_shown\" : \"optionalField_hidden\";\r\n\r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n                <div className=\"flexibleGrid\">\r\n                    <ConnectToPreviousField />\r\n                    <div className={`optionalField optionalField ${marginFieldsState}`}>\r\n                      <span>Margin top</span>\r\n                    </div>\r\n                    <div className={`inputWithAdornment optionalField ${marginFieldsState}`}>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={marginTop}\r\n                            onChange={changeMarginTop}\r\n                            onClick={selectAllOnClick(DEFAULT_MARGIN)}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </div> \r\n    \r\n                    <div className={`optionalField ${marginFieldsState}`}>\r\n                        <span>Margin bottom</span>\r\n                    </div>\r\n\r\n                    <div className={`inputWithAdornment optionalField ${marginFieldsState}`}>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={marginBottom}\r\n                            onChange={changeMarginBottom}\r\n                            onClick={selectAllOnClick(DEFAULT_MARGIN)}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </div> \r\n    \r\n                    <span>1st row indent</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={firstRowIndent}\r\n                            onChange={changeFirstRowIndent}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                    </div>\r\n    \r\n                    <span>Other rows indent</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={otherRowsIndent}\r\n                            onChange={changeOtherRowsIndent}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                    </div>\r\n    \r\n                    <span>Line spacing</span>\r\n                    <div>\r\n                        <NativeSelect \r\n                            input={ <CustomInputShort /> } \r\n                            value={lineSpacing} \r\n                            onChange={changeAndScroll(this.onLineSpacingChange, 500)} \r\n                        >\r\n                            <option value=\"1.0\">1.0</option>\r\n                            <option value=\"1.15\">1.15</option>\r\n                            <option value=\"1.5\">1.5</option>\r\n                            <option value=\"2.0\">2.0</option>\r\n                            <option value=\"2.5\">2.5</option>\r\n                            <option value=\"3.0\">3.0</option>\r\n                            <option value=\"custom\" className=\"highlightedOption\">Custom</option>\r\n                        </NativeSelect> \r\n                    </div>\r\n\r\n                    <div className={`optionalField ${customLineSpacingFieldState}`}>\r\n                    </div>\r\n                    <div className={`optionalField ${customLineSpacingFieldState}`}>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={customLineSpacing}\r\n                            onChange={changeCustomLineSpacing}\r\n                            placeholder=\"Your value\"\r\n                            inputRef={this.customLineSpacingInputRef}\r\n                        />                                            \r\n                    </div>\r\n                        \r\n                    <span>Word spacing</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={wordSpacing}\r\n                            onChange={changeWordSpacing}\r\n                            onClick={selectAllOnClick(DEFAULT_WORD_SPACING)}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </div> \r\n                </div>\r\n                <div className=\"previewSide\">\r\n                    <Preview {...previewProps} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        connectToPrevious: form.connectToPrevious,\r\n        marginTop: form.marginTop,\r\n        marginBottom: form.marginBottom,\r\n        firstRowIndent: form.firstRowIndent,\r\n        otherRowsIndent: form.otherRowsIndent,\r\n        lineSpacing: form.lineSpacing,\r\n        customLineSpacing: form.customLineSpacing,\r\n        wordSpacing: form.wordSpacing,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeMarginTop: setNumber(dispatch)(\"marginTop\"),\r\n        changeMarginBottom: setNumber(dispatch)(\"marginBottom\"),\r\n        changeFirstRowIndent: setNumber(dispatch)(\"firstRowIndent\"),\r\n        changeOtherRowsIndent: setNumber(dispatch)(\"otherRowsIndent\"),\r\n        changeLineSpacing: setValue(dispatch)(\"lineSpacing\"),\r\n        changeCustomLineSpacing: setNumber(dispatch)(\"customLineSpacing\"),\r\n        changeWordSpacing: setNumber(dispatch)(\"wordSpacing\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(DistancesSection));","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst FrameTypeInput = withStyles(theme => ({\r\n    root: {\r\n      width: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      fontFamily: [\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default FrameTypeInput;","import { getCorrectColor } from \"../../helpers\";\r\n\r\nconst generateBorderPreviewStyle = formState => {\r\n    const { \r\n        borderLeft,\r\n        borderRight,\r\n        borderTop,\r\n        borderBottom,\r\n        borderColor,\r\n        borderThickness,\r\n        borderType,\r\n    } = formState;\r\n\r\n    const correctColor = getCorrectColor(borderColor);\r\n    const previewBorderWidth = borderThickness && !isNaN(parseFloat(borderThickness))\r\n                                ? `${borderThickness <= 15 ? borderThickness : 15}pt`\r\n                                : \"0\";\r\n\r\n    const previewStyle = {\r\n        borderLeft: borderLeft ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginLeft: borderLeft ? \"0\" : previewBorderWidth, \r\n        borderRight: borderRight ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginRight: borderRight ? \"0\" : previewBorderWidth, \r\n        borderTop: borderTop ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginTop: borderTop ? \"0\" : previewBorderWidth, \r\n        borderBottom: borderBottom ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginBottom: borderBottom ? \"0\" : previewBorderWidth, \r\n    };\r\n\r\n    return previewStyle;\r\n};\r\n\r\nexport default generateBorderPreviewStyle;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport FrameTypeInput from \"../../sections/FramesSection/FrameTypeInput\";\r\nimport Preview from \"../../common/Preview\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport ConnectToPreviousField from \"../../common/ConnectToPreviousField\";\r\nimport generateBorderPreviewStyle from \"./generateBorderPreviewStyle\";\r\nimport { setValue, toggleValue, setNumber, setColor } from \"../../actions\";\r\nimport { selectAllOnClick } from \"../../helpers\";\r\nimport { DEFAULT_BORDER_COLOR, DEFAULT_BORDER_THICKNESS } from \"../../constants\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass FramesSection extends React.Component {\r\n    onBorderTypeChange = e => {\r\n        this.props.changeBorderType(e);\r\n        if (e.target.value === \"double\" && this.props.borderThickness === \"2\") {\r\n            this.props.changeBorderThickness(null, \"3\");\r\n        } else if (e.target.value !== \"double\" && this.props.borderThickness === \"3\") {\r\n            this.props.changeBorderThickness(null, \"2\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { \r\n            previewProps,\r\n            formState,\r\n            borderLeft, changeBorderLeft, \r\n            borderRight, changeBorderRight,\r\n            borderTop, changeBorderTop, \r\n            borderBottom, changeBorderBottom, \r\n            borderColor, changeBorderColor,\r\n            borderThickness, changeBorderThickness,\r\n            borderType,\r\n         } = this.props;\r\n\r\n        const previewStyle = generateBorderPreviewStyle(formState)\r\n    \r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n                <div>\r\n                    <div className=\"directionControlsContainer\">\r\n                        <div className=\"directionsControls\" style={previewStyle}>\r\n                            <span className=\"directionLabel\">Left</span>\r\n                            <div className=\"centralColumn\">\r\n                                <span className=\"directionLabel\">Top</span>\r\n                                <div className=\"checkboxesKit crossGrid\">\r\n                                    <div id=\"r1\" className=\"gridCell\">\r\n                                        <Checkbox \r\n                                            color=\"primary\"\r\n                                            checked={borderTop}  \r\n                                            onChange={changeBorderTop}\r\n                                        />\r\n                                    </div>\r\n                                    <div id=\"r2c1\" className=\"gridCell\">\r\n                                        <Checkbox \r\n                                            color=\"primary\" \r\n                                            checked={borderLeft}  \r\n                                            onChange={changeBorderLeft}\r\n                                        />\r\n                                    </div>\r\n                                    <div id=\"r2c2\" className=\"gridCell\">\r\n                                    </div>\r\n                                    <div id=\"r2c3\" className=\"gridCell\">\r\n                                        <Checkbox \r\n                                            color=\"primary\" \r\n                                            checked={borderRight}  \r\n                                            onChange={changeBorderRight}\r\n                                        />\r\n                                    </div>\r\n                                    <div id=\"r3\" className=\"gridCell\">\r\n                                        <Checkbox \r\n                                            color=\"primary\"\r\n                                            checked={borderBottom}  \r\n                                            onChange={changeBorderBottom}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"directionLabel\">Bottom</span>\r\n                            </div>\r\n                            <span className=\"directionLabel\">Right</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        <span>Frame color</span>\r\n                        <ColorField \r\n                            colorCode={borderColor} \r\n                            changeColorCode={changeBorderColor}\r\n                            defaultColorCode={DEFAULT_BORDER_COLOR}\r\n                            required\r\n                        />\r\n        \r\n                        <span>Frame thickness</span>\r\n                        <div className=\"inputWithAdornment\">\r\n                            <TextField \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                                className=\"numberInput\"\r\n                                value={borderThickness}\r\n                                onChange={changeBorderThickness}\r\n                                onClick={selectAllOnClick(DEFAULT_BORDER_THICKNESS)}\r\n                            />                                            \r\n                            <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                        </div>                        \r\n        \r\n                        <span>Type of frame</span>\r\n                        <div >\r\n                            <Select\r\n                            input={<FrameTypeInput />}\r\n                            value={borderType}\r\n                            onChange={this.onBorderTypeChange}\r\n                            >\r\n                                <MenuItem value=\"solid\"><b>━━━━</b></MenuItem>\r\n                                <MenuItem value=\"dotted\">• • • • • • •</MenuItem>\r\n                                <MenuItem value=\"dashed\"><b>– – – – –</b></MenuItem>\r\n                                <MenuItem value=\"double\">══════</MenuItem>              \r\n                            </Select>\r\n                        </div>\r\n\r\n                        <ConnectToPreviousField />\r\n                    </div>\r\n                </div>\r\n                <div className=\"previewSide\">\r\n                    <Preview {...previewProps} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        formState: form,\r\n        borderLeft: form.borderLeft,\r\n        borderRight: form.borderRight,\r\n        borderTop: form.borderTop,\r\n        borderBottom: form.borderBottom,\r\n        borderColor: form.borderColor,\r\n        borderThickness: form.borderThickness,\r\n        borderType: form.borderType,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeBorderLeft: toggleValue(dispatch)(\"borderLeft\"),\r\n        changeBorderRight: toggleValue(dispatch)(\"borderRight\"),\r\n        changeBorderTop: toggleValue(dispatch)(\"borderTop\"),\r\n        changeBorderBottom: toggleValue(dispatch)(\"borderBottom\"),\r\n        changeBorderColor: setColor(dispatch)(\"borderColor\"),\r\n        changeBorderThickness: setNumber(dispatch)(\"borderThickness\"),\r\n        changeBorderType: setValue(dispatch)(\"borderType\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(FramesSection));","import FramesSection from \"./FramesSection\";\r\nexport default FramesSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Preview from \"../common/Preview\";\r\nimport ColorField from \"../common/ColorField\";\r\nimport ConnectToPreviousField from \"../common/ConnectToPreviousField\";\r\nimport { setColor } from \"../actions\";\r\n\r\nconst  FillingSection = ({ previewProps, fillingColor, changeFillingColor }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Filling color</span>\r\n                <ColorField \r\n                    colorCode={fillingColor} \r\n                    changeColorCode={changeFillingColor}\r\n                />\r\n                <ConnectToPreviousField />\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        fillingColor: form.fillingColor,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changeFillingColor: setColor(dispatch)(\"fillingColor\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(FillingSection));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport { setValue } from \"../actions\";\r\n\r\nconst TocSection = ({ tocIndentation, changeTocIndentation }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>ToC indentation</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={tocIndentation}\r\n                    onChange={changeTocIndentation} \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>                    \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        tocIndentation: form.tocIndentation,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changeTocIndentation: setValue(dispatch)(\"tocIndentation\"),\r\n    };\r\n};\r\n\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(TocSection));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { setShortCut } from \"../actions\";\r\n\r\nconst ShortCutSection = ({ shortCutWinView, shortCutMacView, changeShortCutWin, changeShortCutMac }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n            <span>Mac</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField\r\n                    value={shortCutMacView}\r\n                    onKeyDown={changeShortCutMac}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n\r\n            <span>Windows</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField\r\n                    value={shortCutWinView}\r\n                    onKeyDown={changeShortCutWin}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        shortCutWinView: form.shortCutWinView,\r\n        shortCutMacView: form.shortCutMacView,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changeShortCutWin: setShortCut(dispatch)(\"shortCutWin\", \"shortCutWinView\"),\r\n        changeShortCutMac: setShortCut(dispatch)(\"shortCutMac\", \"shortCutMacView\"),\r\n    };\r\n};\r\n\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(ShortCutSection));","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: pink,\r\n    },\r\n});\r\n\r\nexport default theme;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomTab;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomErrorTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n      textDecoration: \"red underline\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n        textDecoration: \"indianred underline\",\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomErrorTab;","import Tabs from \"@material-ui/core/Tabs\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n    indicator: {\r\n        backgroundColor: \"#1890ff\",\r\n        opacity: 0.5,\r\n        width: \"190px\",\r\n        zIndex: 5,\r\n        display: \"none\",\r\n    }\r\n};\r\n\r\nexport default withStyles(styles)(Tabs);","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst CustomDialog = withStyles(theme => ({\r\n    root: {\r\n        minWidth: \"1250px\",\r\n        minHeight: \"1100px !important\",\r\n        height: \"100%\",\r\n    },\r\n    container: {\r\n        height: \"100vh\",\r\n        display: \"block\",\r\n    },\r\n    scrollBody: {\r\n        \"&:after\": {\r\n            height: \"100%\",\r\n        }\r\n    },\r\n    paperFullWidth: {\r\n        maxWidth: \"1280px\",\r\n        maxHeight: \"850px\",\r\n        minHeight: \"550px\",\r\n        width: \"calc(100% - 96px)\",\r\n        height: \"calc(100% - 96px)\",\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        border: \"none\",\r\n    },\r\n    paperScrollBody: {\r\n        verticalAlign: \"middle\",\r\n    },\r\n  }))(Dialog);\r\n  \r\n  export default CustomDialog;","export const SAVE_DEC_FORM = \"SAVE_DEC_FORM\";\r\nexport const CLEAR_SAVED_DEC_FORM = \"CLEAR_SAVED_DEC_FORM\";\r\n\r\nexport const saveDecoratorForm = payload => {\r\n    return {\r\n        type: SAVE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearSavedDecoratorForm = () => {\r\n    return {\r\n        type: CLEAR_SAVED_DEC_FORM,\r\n    };\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport NamesSection from \"./sections/NamesSection\";\r\nimport PositioningSection from \"./sections/PositioningSection\";\r\nimport ListSection from \"./sections/ListSection\";\r\nimport ReferencingSection from \"./sections/ReferencingSection\";\r\nimport TypographySection from \"./sections/TypographySection\";\r\nimport DistancesSection from \"./sections/DistancesSection\";\r\nimport FramesSection from \"./sections/FramesSection\";\r\nimport FillingSection from \"./sections/FillingSection\";\r\nimport TocSection from \"./sections/TocSection\";\r\nimport ShortCutsSection from \"./sections/ShortCutsSection\";\r\n// import TestSection from \"./sections/TestSection\";\r\n\r\nimport theme from \"./theme\";\r\nimport CustomTab from \"./common/CustomTab\";\r\nimport CustomErrorTab from \"./common/CustomErrorTab\";\r\nimport CustomTabs from \"./common/CustomTabs\";\r\nimport CustomDialog from \"./common/CustomDialog\";\r\nimport { saveDecoratorForm } from \"../../actions\";\r\nimport { \r\n    closeDialog, \r\n    clearDecoratorForm, \r\n    switchDecDialogTab, \r\n    updateValidationError \r\n} from \"./actions\";\r\nimport { \r\n    fillMissedFields, \r\n    DecDataConverter, \r\n    getTabsErrorState,\r\n    getTabNumberToSwitch,\r\n} from \"./helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass DecoratorDialog extends React.Component {\r\n    onClose = () => {\r\n        this.props.closeDialog();\r\n        this.props.clearForm();\r\n    };\r\n\r\n    onSaveButtonClick = () => {\r\n        const { formState, updateValidationError, switchTab, sendForm } = this.props;\r\n        const tabsErrorState = getTabsErrorState(formState);\r\n        if (tabsErrorState) {\r\n            updateValidationError(tabsErrorState);\r\n            switchTab(getTabNumberToSwitch(tabsErrorState));\r\n        } else {\r\n            const formToSend = DecDataConverter.convertToSend(fillMissedFields(formState));\r\n            sendForm(formToSend);\r\n            this.onClose();\r\n        }\r\n    };\r\n\r\n    onTabSwitch = (e, tabNumber) => {\r\n        this.props.switchTab(tabNumber);\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            isOpen, \r\n            openedTab,\r\n            validationError, \r\n            isEditMode,\r\n        } = this.props;\r\n    \r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <CustomDialog\r\n                    open={isOpen}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    scroll=\"body\"\r\n                    className=\"decoratorDialog\"\r\n                    fullWidth={true}\r\n                    maxWidth={false}\r\n                    id=\"dialog\"\r\n                >\r\n                    <div className=\"header\">\r\n                        <DialogTitle className=\"header-title\">\r\n                            <p>Create new paragraph decorator</p>\r\n                        </DialogTitle>\r\n                        <div className=\"header-buttons\">\r\n                            <Button \r\n                                variant=\"contained\"\r\n                                color=\"default\"\r\n                                onClick={this.onClose}\r\n                                className=\"topNavButton\"\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                            <Button \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={this.onSaveButtonClick}\r\n                                className=\"topNavButton\"\r\n                            >\r\n                                {isEditMode ? \"Save\" : \"Create\"}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <DialogContent className=\"content\">\r\n                        <div className=\"content-leftSide\">\r\n                            <CustomTabs \r\n                                className=\"dialogTabs\"\r\n                                value={openedTab} \r\n                                onChange={this.onTabSwitch} \r\n                                orientation=\"vertical\"\r\n                                color=\"primary\"\r\n                                indicatorColor=\"primary\"\r\n                            >\r\n                                { validationError.namesSection \r\n                                    ? ( <CustomErrorTab className=\"dialogTab\" label=\"Decorator's name\" /> )\r\n                                    :  ( <CustomTab className=\"dialogTab\" label=\"Decorator's name\" /> ) }\r\n    \r\n                                <CustomTab className=\"dialogTab\" label=\"Positioning\" />\r\n    \r\n                                { validationError.listSection \r\n                                    ? ( <CustomErrorTab className=\"dialogTab\" label=\"List\" /> ) \r\n                                    : ( <CustomTab className=\"dialogTab\" label=\"List\" /> ) }\r\n    \r\n                                <CustomTab className=\"dialogTab\" label=\"Referencing\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Typography\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Distances\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Frames\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Filling\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"ToC\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Short cuts\" />\r\n                                {/* <CustomTab className=\"dialogTab\" label=\"Test\" /> */}\r\n                            </CustomTabs>\r\n                        </div>\r\n                        <div className=\"content-rightSide\">\r\n                            { openedTab === 0 && <NamesSection /> }\r\n                            { openedTab === 1 && <PositioningSection /> }\r\n                            { openedTab === 2 && <ListSection /> }\r\n                            { openedTab === 3 && <ReferencingSection /> }\r\n                            { openedTab === 4 && <TypographySection /> }\r\n                            { openedTab === 5 && <DistancesSection /> }\r\n                            { openedTab === 6 && <FramesSection /> }\r\n                            { openedTab === 7 && <FillingSection /> }\r\n                            { openedTab === 8 && <TocSection /> }\r\n                            { openedTab === 9 && <ShortCutsSection /> }\r\n                            {/* openedTab === 10 && <TestSection /> */}\r\n                        </div>\r\n                    </DialogContent>\r\n                </CustomDialog>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, isOpen, openedTab, validationError, isEditMode }}) => {\r\n    return { \r\n        formState: form,\r\n        isOpen,\r\n        openedTab,\r\n        validationError, \r\n        isEditMode,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        closeDialog: closeDialog(dispatch),\r\n        clearForm: () => dispatch(clearDecoratorForm()),\r\n        switchTab: payload => dispatch(switchDecDialogTab(payload)),\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        saveForm: payload => dispatch(saveDecoratorForm(payload)),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(DecoratorDialog);","import DecoratorDialog from \"./DecoratorDialog\";\r\nexport default DecoratorDialog;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport DecoratorDialog from \"./components/DecoratorDialog\";\nimport { openDialog } from \"./components/DecoratorDialog/actions\";\nimport { clearSavedDecoratorForm,  saveDecoratorForm } from \"./actions\";\nimport { DecDataConverter } from \"./components/DecoratorDialog/helpers\";\nimport theme from \"./components/DecoratorDialog/theme\";\n\nimport \"./App.css\";\n\nconst App = props => {\n    const { openDialog, saveForm, clearSavedForm, savedForm } = props;\n\n    const openEditDialog = () => {\n        openDialog(DecDataConverter.convertToEdit(savedForm || {}));\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"App\">\n                <div className=\"startButtons\">\n                    { !savedForm ? (\n                        <Button \n                            onClick={() => openDialog()}\n                            color=\"primary\"\n                        >Create new</Button>\n                    ) : (\n                        <>\n                            <Button \n                                onClick={() => openEditDialog()}\n                            >Edit saved</Button>\n                            <Button \n                                onClick={clearSavedForm}\n                                color=\"secondary\"\n                            >Delete saved</Button>\n                        </>\n                    )}\n                </div>\n                <DecoratorDialog sendForm={saveForm} />\n            </div>\n        </ThemeProvider>\n    );\n};\n\nconst mapStateToProps = ({ savedForm }) => {\n    return { savedForm };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        openDialog: openDialog(dispatch),\n        saveForm: payload => dispatch(saveDecoratorForm(payload)),\n        clearSavedForm: () => dispatch(clearSavedDecoratorForm()),\n    };\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { SHOW_DEC_DIALOG, HIDE_DEC_DIALOG } from \"../../components/DecoratorDialog/actions\";\r\n\r\nconst isOpenReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case SHOW_DEC_DIALOG:\r\n            return true;\r\n        case HIDE_DEC_DIALOG:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isOpenReducer;","import { UPDATE_DEC_FORM, CLEAR_DEC_FORM } from \"../../components/DecoratorDialog/actions\";\r\nimport { sampleText, initialFormState } from \"../../components/DecoratorDialog/constants\";\r\n\r\nconst initialState = { \r\n    previewText: sampleText,\r\n    ...initialFormState,\r\n};\r\n\r\nconst decoratorFormReducer = (state = initialState, action) =>  {\r\n    switch (action.type) {\r\n        case UPDATE_DEC_FORM:\r\n            return { ...state, ...action.payload };\r\n        case CLEAR_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default decoratorFormReducer;","import { \r\n    UPDATE_VALIDATION_ERROR, \r\n    REMOVE_VALIDATION_ERROR, \r\n} from \"../../components/DecoratorDialog/actions\";\r\n\r\nimport { tabsErrorInitialState } from \"../../components/DecoratorDialog/constants\";\r\n\r\nconst validationErrorReducer = (state = tabsErrorInitialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_VALIDATION_ERROR:\r\n            return { ...state, ...action.payload };\r\n        case REMOVE_VALIDATION_ERROR:\r\n            return tabsErrorInitialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default validationErrorReducer;","import { \r\n    SWITCH_ON_DEC_DIALOG_EDIT_MODE, \r\n    SWITCH_OFF_DEC_DIALOG_EDIT_MODE, \r\n} from \"../../components/DecoratorDialog/actions\";\r\n\r\nconst isEditModeReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_ON_DEC_DIALOG_EDIT_MODE:\r\n            return true;\r\n        case SWITCH_OFF_DEC_DIALOG_EDIT_MODE:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isEditModeReducer;","import { \r\n    SWITCH_DEC_DIALOG_TAB,\r\n    RESET_DEC_DIALOG_TAB, \r\n} from \"../../components/DecoratorDialog/actions\";\r\n\r\nconst initialState = 0;\r\n\r\nconst openedTabReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_DEC_DIALOG_TAB:\r\n            return action.payload;\r\n        case RESET_DEC_DIALOG_TAB:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default openedTabReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport isOpenReducer from \"./isOpenReducer\";\r\nimport decoratorFormReducer from \"./decoratorFormReducer\";\r\nimport validationErrorReducer from \"./validationErrorReducer\";\r\nimport isEditModeReducer from \"./isEditModeReducer\";\r\nimport openedTabReducer from \"./openedTabReducer\";\r\n\r\nconst decoratorDialogReducer = combineReducers({\r\n    isOpen: isOpenReducer,\r\n    openedTab: openedTabReducer,\r\n    validationError: validationErrorReducer,\r\n    isEditMode: isEditModeReducer,\r\n    form: decoratorFormReducer,\r\n});\r\n\r\nexport default decoratorDialogReducer;","import { SAVE_DEC_FORM, CLEAR_SAVED_DEC_FORM } from \"../actions\";\r\n\r\nconst initialState = null;\r\n\r\nexport const savedFormReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SAVE_DEC_FORM:\r\n            return action.payload;\r\n        case CLEAR_SAVED_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default savedFormReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport decoratorDialogReducer from \"./decoratorDialogReducer\";\r\nimport savedFormReducer from \"./savedFormReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    decoratorDialog: decoratorDialogReducer,\r\n    savedForm: savedFormReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}