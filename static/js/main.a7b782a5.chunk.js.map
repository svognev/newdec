{"version":3,"sources":["components/DecoratorDialog/common/CustomInput.js","components/DecoratorDialog/common/LabelWithAsterisk.js","components/DecoratorDialog/constants/decoratorsList.js","components/DecoratorDialog/constants/fontsSet.js","components/DecoratorDialog/constants/localeConstants.js","components/DecoratorDialog/constants/validationData.js","components/DecoratorDialog/constants/constants.js","components/DecoratorDialog/constants/initialFormState.js","components/DecoratorDialog/helpers/isFontAvailable.js","components/DecoratorDialog/helpers/helpers.js","components/DecoratorDialog/helpers/DecDataConverter.js","components/DecoratorDialog/helpers/getShortCutUtils.js","components/DecoratorDialog/helpers/validationFunctions.js","components/DecoratorDialog/common/NewGroupDialog.js","components/DecoratorDialog/hoc/withNewGroupControl.js","components/DecoratorDialog/actions/index.js","components/DecoratorDialog/sections/NamesSection.js","components/DecoratorDialog/common/CustomInputShort.js","components/DecoratorDialog/common/SectionTitle/index.js","components/DecoratorDialog/common/SectionTitle/SectionTitle.js","components/DecoratorDialog/sections/PositioningSection/BackSpaceActionInput.js","components/DecoratorDialog/sections/PositioningSection/index.js","components/DecoratorDialog/sections/PositioningSection/PositioningSection.js","components/DecoratorDialog/common/Preview/generators.js","components/DecoratorDialog/common/Preview/ListPreview.js","components/DecoratorDialog/common/ColorField/index.js","components/DecoratorDialog/common/ColorField/ColorField.js","components/DecoratorDialog/common/FontSelectFields.js","components/DecoratorDialog/sections/ListSection/ListSection.js","components/DecoratorDialog/sections/ListSection/index.js","components/DecoratorDialog/sections/ReferencingSection.js","components/DecoratorDialog/common/ContentEditable.js","components/DecoratorDialog/common/Preview/Preview.js","components/DecoratorDialog/common/Preview/index.js","components/DecoratorDialog/sections/TypographySection/index.js","components/DecoratorDialog/sections/TypographySection/TypographySection.js","components/DecoratorDialog/common/ConnectToPreviousField.js","components/DecoratorDialog/sections/DistancesSection.js","components/DecoratorDialog/sections/FramesSection/FrameTypeInput.js","components/DecoratorDialog/sections/FramesSection/generateBorderPreviewStyle.js","components/DecoratorDialog/sections/FramesSection/FramesSection.js","components/DecoratorDialog/sections/FramesSection/index.js","components/DecoratorDialog/sections/FillingSection.js","components/DecoratorDialog/sections/TocSection.js","components/DecoratorDialog/sections/ShortCutsSection.js","components/DecoratorDialog/theme.js","components/DecoratorDialog/common/CustomTab.js","components/DecoratorDialog/common/CustomErrorTab.js","components/DecoratorDialog/common/CustomTabs.js","components/DecoratorDialog/common/CustomDialog.js","actions.js","components/DecoratorDialog/DecoratorDialog.js","components/DecoratorDialog/index.js","App.js","reducers/decoratorDialogReducer/isOpenReducer.js","reducers/decoratorDialogReducer/decoratorFormReducer.js","reducers/decoratorDialogReducer/validationErrorReducer.js","reducers/decoratorDialogReducer/isEditModeReducer.js","reducers/decoratorDialogReducer/openedTabReducer.js","reducers/decoratorDialogReducer/index.js","reducers/savedFormReducer.js","reducers/rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["CustomInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","minWidth","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","LabelWithAsterisk","children","className","decoratorsList","name","value","fontSet","LANGS","langKey","langName","langFullName","regionName","regionFullName","ADDITIONAL_LANGS","slice","MAIN_LANG_KEY","tabsErrorInitialState","namesSection","listSection","sectionsTabNumbers","tabName","tabNumber","alignmentList","center","left","right","justify","numberingSets","decimal","orderedListStylesMap","Map","bulletNamesMap","sectionTypesMap","backSpaceActionsMap","width","HOLDER","autoFillingRequiredFields","sideNumberFont","sideNumberFontSize","sideNumberFontColor","sideNumberFillingColor","sideNumberWidth","sideNumberRadius","font","fontColor","marginBottom","firstRowIndent","otherRowsIndent","wordSpacing","lineSpacing","borderThickness","initialFormState","decKey","sectionTypes","Array","from","reduce","acc","i","key","group","groupToCreate","active","indentationalLevel","fixedIndentation","softReturn","backspaceActionWithContent","backspaceActionWithContentStyle","returnActionNextSection","returnActionEmptySection","tabAction","shiftTabAction","isList","listName","orderLevel","prefix","suffix","suffixDistance","magicTabs","listType","listItem","unicodeNumber","unicodeChar","numberingStyle","continueNumbering","allowRestartNumbering","includePreviousFrom","sideNumber","customSideNumberFont","sideNumberAlignment","sideNumberBold","sideNumberItalic","sideNumberUnderlined","sideNumberLineHeight","referenceGroup","referenceGroupToCreate","customFont","alignment","bold","italic","underlined","stroke","textTransform","readOnly","connectToPrevious","verticalAlign","customLineSpacing","borderLeft","borderRight","borderTop","borderBottom","borderType","fillingColor","tocIndentation","shortCutWin","shortCutWinView","shortCutMac","shortCutMacView","body","document","container","createElement","innerHTML","style","cssText","getWidth","appendChild","clientWidth","removeChild","monoWidth","serifWidth","sansWidth","isFontAvailable","getCorrectColor","hex","correctColor","length","selectAllOnClick","defaultValue","e","target","focus","select","getUnstyledText","styledText","unstyledText","replace","unicodeNumberToChar","String","fromCharCode","parseInt","unicodeCharToNumber","charCodeAt","toString","scrollToBottom","setTimeout","getElementsByClassName","scrollTo","top","Number","MAX_SAFE_INTEGER","behavior","changeAndScroll","changeFunction","timeOut","focusInput","inputRef","timeout","current","focusOnEmptyField","refs","getPreviewFont","fillMissedFields","currentFormState","formStateWithoutMissedFields","fieldName","forEach","option","customOption","replaceDecNameIfDefault","decName","DEFAULT_DECORATOR","getNumber","val","DecDataConverter","rawDec","dec","res","section_types","Object","entries","filter","map","hidden","initial_indentation","is_fixed_indentation","content_in_second_line","backspace_action","backspace_action_value","create_new_section_on_return_if_empty","pd_for_new_section_on_return_if_empty","change_pd_on_return_if_empty","pd_for_current_section_on_return_if_empty","on_tab_key","on_shift_tab_key","list_key","listKey","item_order","extra_hanging_indentation","extra_hanging_indentation_at_grid","hasCustomBulletButEmpty","bullet_list_format","console","log","cur","includes","suffixDistanceMatch","match","bullet","isCustomBullet","has","mapDecFields","getShortCutUtils","systemName","keyCode","preventDefault","stopPropagation","ShortcutUtils","isDeadKey","prevent","deleteKey","shortCut","ctrlKey","shiftKey","altKey","metaKey","shortCutForView","convertShortcutToMeta","indexOf","isCmdPressed","stringValue","keys","CMD_KEYS","keycode","removeDuplicateShortcuts","decorators","newPdShortcut","removed","decoratorKey","item","item_type","isEqual","keyboard_shortcut","childItems","child_items","itemKey","removeDuplicateShortcutsInInlineStyle","inlineStyles","styleKey","getTabsErrorState","form","tabsErrorState","getTabNumberToSwitch","NewGroupDialog","isXref","props","groupType","emptyGroup","groupKey","getInitialState","savedGroup","state","requiredFieldRef","React","createRef","onInputChange","inputName","setState","onClose","hideGroupDialogValidationError","closeGroupDialog","onGroupSave","trim","groupToSave","saveGroup","showGroupDialogValidationError","this","isOpen","isEditMode","hasGroupDialogValidationError","titleText","buttonText","Dialog","open","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","onChange","error","variant","margin","Fragment","DialogActions","Button","onClick","color","PureComponent","withNewGroupControl","ViewComponent","isGroupDialogOpen","openGroupDialog","Component","updateDecoratorForm","payload","type","clearDecoratorForm","updateValidationError","openDialog","dispatch","closeDialog","setValue","propName","secondArg","newValue","undefined","toggleValue","checked","setBullet","newBullet","setColor","filteredInput","setNumber","setShortCut","valuePropName","viewPropName","search","convertEventToShortCut","NamesSection","decKeyInputRef","decNameEnInputRef","inputRefs","onGroupChange","groupName","changeGroupToCreate","changeGroup","onNameChange","changeName","onSectionTypesChange","typeName","changeSectionTypes","validationErrorInSection","prevprops","every","ref","changeDecKey","changeActive","newGroupName","FormControlLabel","control","Checkbox","label","labelPlacement","NativeSelect","connect","decoratorDialog","validationError","formState","CustomInputShort","SectionTitle","text","BackSpaceActionInput","PositioningSection","changeIndentationalLevel","changeBackspaceActionWithContent","changeBackspaceActionWithContentStyle","changeBackspaceActionWithoutContent","changeBackspaceActionWithoutContentStyle","changeReturnActionNextSection","changeReturnActionEmptySection","changeTabAction","changeShiftTabAction","changeisFixedIndentation","changeSoftReturn","backSpaceActionStyleSettingsState","generatePreviewStyle","fillingConnectToPrevious","previewFontColor","previewFillingColor","previewAdditionalFillingColor","indentsDifference","previewMarginLeft","previewTextIndent","previewLineSpacing","offset","alignType","parseFloat","getOffset","previewMarginTop","previewMarginBottom","previewBorderLeft","previewBorderRight","previewBorderTop","previewBorderBottom","correctFontSize","alignItems","textAlign","fontWeight","fontStyle","textDecoration","fontVariant","backgroundImage","borderImage","marginLeft","textIndent","lineHeight","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","previewText","isOrderedList","listItemBeginnings","get","fill","getListChars","listChar","previewStyle","isSideNumber","sideNumberStyle","previewSideNumberFontColor","previewSideNumberFillingColor","marginRight","generateSideNumberStyle","listItemBeginningStyle","ColorField","hideColorPicker","showColorPicker","colorPickerHandler","changeColor","colorCode","changeColorCode","defaultColorCode","required","bottomAligned","colorError","inputError","pickerColor","colorSampleStyle","colorPickerClassName","InputProps","startAdornment","InputAdornment","onChangeComplete","disableAlpha","FontSelectFields","customFontInputRef","onFontChange","changeFont","changeCustomFont","availableFonts","fontName","optionalFieldState","placeholder","ListSection","listNameInputRef","unicodeCharInputRef","onIsListChange","changeListName","changeIsList","onListTypeChange","changeListType","changeSuffix","onListItemChange","changeListItem","onUnicodeNumberChange","newUnicodeNumber","changeUnicodeNumber","newUnicodeChar","changeUnicodeChar","onUnicodeCharChange","onSideNumberChange","changeSideNumber","listPreviewProps","changeOrderLevel","changePrefix","changeSuffixDistance","changeMagicTabs","changeNumberingStyle","changeContinueNumbering","changeAllowRestartNumbering","changeIncludePreviousFrom","changeSideNumberFont","changeCustomSideNumberFont","changeSideNumberAlignment","changeSideNumberFontSize","changeSideNumberFontColor","changeSideNumberFillingColor","changeSideNumberWidth","changeSideNumberRadius","changeSideNumberBold","changeSideNumberItalic","changeSideNumberUnderlined","changeSideNumberLineHeight","mainListSettingsState","unorderedListSettingsState","customListItemSettingsState","orderedListSettingsState","sideNumberSettingsState","RadioGroup","row","Radio","ReferencingSection","onXrefChange","xrefName","xref","changeReferenceGroupToCreate","changeReferenceGroup","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","q","propertyIsEnumerable","normalizeHtml","str","replaceCaret","el","findLastTextNode","node","nodeType","Node","TEXT_NODE","childNodes","textNode","isTargetFocused","activeElement","nodeValue","sel","window","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","ContentEditable","arguments","lastHtml","html","innerRef","getEl","emitChange","originalEvt","evt","assign","_a","tagName","onInput","onBlur","onKeyUp","onKeyDown","contentEditable","disabled","dangerouslySetInnerHTML","__html","nextProps","deepEqual","Preview","onPreviewTextChange","changePreviewText","selectAllChildren","TypographySection","changeAlignment","changeFontSize","changeFontColor","changeBold","changeItalic","changeUnderlined","changeStroke","changeTextTransform","changeVerticalAlign","changeMarginTop","changeReadOnly","previewProps","changeConnectToPrevious","DistancesSection","customLineSpacingInputRef","onLineSpacingChange","changeLineSpacing","changeMarginBottom","changeFirstRowIndent","changeOtherRowsIndent","changeCustomLineSpacing","changeWordSpacing","customLineSpacingFieldState","marginFieldsState","FrameTypeInput","generateBorderPreviewStyle","previewBorderWidth","isNaN","FramesSection","onBorderTypeChange","changeBorderType","changeBorderThickness","changeBorderLeft","changeBorderRight","changeBorderTop","changeBorderBottom","changeBorderColor","id","Select","MenuItem","changeFillingColor","changeTocIndentation","changeShortCutWin","changeShortCutMac","createMuiTheme","primary","blue","secondary","pink","CustomTab","overflow","opacity","selected","Tab","CustomErrorTab","indicator","zIndex","display","Tabs","CustomDialog","minHeight","height","scrollBody","paperFullWidth","maxHeight","flexDirection","paperScrollBody","saveDecoratorForm","DecoratorDialog","clearForm","onSaveButtonClick","switchTab","sendForm","convertToSend","onTabSwitch","openedTab","ThemeProvider","aria-labelledby","scroll","CustomTabs","orientation","indicatorColor","ShortCutsSection","switchDecDialogTab","saveForm","savedForm","clearSavedForm","convertToEdit","isOpenReducer","action","initialState","decoratorFormReducer","validationErrorReducer","isEditModeReducer","openedTabReducer","decoratorDialogReducer","combineReducers","savedFormReducer","rootReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7b782a5.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInput = withStyles(theme => ({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      minWidth: \"183px\",\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInput;","import React from \"react\";\r\n\r\nconst LabelWithAsterisk = ({ children }) => {\r\n    return (\r\n        <div className=\"labelWithAsterisk\">\r\n            <div className=\"labelWithAsterisk-labelBox\">\r\n                <span>{children}</span>\r\n            </div>\r\n            <div className=\"labelWithAsterisk-asteriskBox\">\r\n                <span className=\"labelWithAsterisk-asteriskMark\">*</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LabelWithAsterisk;","const decoratorsList = [\r\n    { name: \"Text 1\", value: \"quick_text_1\" },\r\n    { name: \"Text 2\", value: \"quick_text_2\" },\r\n    { name: \"Text 3\", value: \"quick_text_3\" },\r\n    { name: \"Text 4\", value: \"quick_text_4\" },\r\n    { name: \"Text 5\", value: \"quick_text_5\" },\r\n    { name: \"Heading 1\", value: \"quick_heading_1\" },\r\n    { name: \"Heading 2\", value: \"quick_heading_2\" },\r\n    { name: \"Heading 3\", value: \"quick_heading_3\" },\r\n    { name: \"Heading 4\", value: \"quick_heading_4\" },\r\n    { name: \"Heading 5\", value: \"quick_heading_5\" },\r\n];\r\n\r\nexport default decoratorsList;","const fontSet = [ \r\n    \"Source Sans Pro\",\r\n    \"Dejavu Sans\",\r\n    \"Dejavu Serif\",\r\n    \"Open Sans\",\r\n    \"Montserrat\",\r\n    \"Arial\",\r\n    \"Georgia\",\r\n    \"Verdana\",\r\n    \"Times New Roman\",\r\n];\r\n\r\nexport default fontSet;","export const LANGS = [\n  { \n    langKey: \"en_EN\", \n    langName: \"EN\", \n    langFullName: \"English\", \n  },\n  { \n    langKey: \"de_DE\", \n    langName: \"DE\", \n    langFullName: \"German\", \n  },\n  { \n    langKey: \"ru_RU\", \n    langName: \"RU\", \n    langFullName: \"Russian\", \n  },\n  { \n    langKey: \"fr_FR\", \n    langName: \"FR\", \n    langFullName: \"French\", \n    regionName: \"FR\",\n    regionFullName: \"France\"\n  },\n  { \n    langKey: \"fr_CA\", \n    langName: \"FR\", \n    langFullName: \"French\", \n    regionName: \"CA\",\n    regionFullName: \"Canada\",\n  },\n  { \n    langKey: \"es_ES\", \n    langName: \"ES\", \n    langFullName: \"Spanish\", \n  },\n  { \n    langKey: \"fr_BE\", \n    langName: \"FR\", \n    langFullName: \"French\", \n    regionName: \"BE\",\n    regionFullName: \"Belgium\",\n  },\n  { \n    langKey: \"nl_BE\", \n    langName: \"NL\", \n    langFullName: \"Dutch\",\n    regionName: \"BE\",\n    regionFullName: \"Belgium\"\n  },\n];\n\nexport const ADDITIONAL_LANGS = LANGS.slice(1);\n\nexport const MAIN_LANG_KEY = LANGS[0].langKey;","export const tabsErrorInitialState = {\r\n    namesSection: false,\r\n    listSection: false,\r\n};\r\n\r\nexport const sectionsTabNumbers = [\r\n    { tabName: \"namesSection\", tabNumber: 0 },\r\n    { tabName: \"listSection\", tabNumber: 2 },\r\n];","export const alignmentList = {\r\n    center: \"center\",\r\n    left: \"flex-start\",\r\n    right: \"flex-end\",\r\n    justify: \"flex-start\",\r\n};\r\n\r\nexport const numberingSets = {\r\n    decimal: [\"1\", \"2\", \"3\", \"88\", \"888\"],\r\n    \"upper-alpha\": [\"A\", \"B\", \"C\", \"XX\", \"XXX\"],\r\n    \"lower-alpha\": [\"a\", \"b\", \"c\", \"xx\", \"xxx\"],\r\n    \"upper-roman\": [\"I\", \"II\", \"III\", \"XX\", \"XXX\"],\r\n    \"lower-roman\": [\"i\", \"ii\", \"iii\", \"xx\", \"xxx\"],\r\n};\r\n\r\nexport const orderedListStylesMap = new Map([\r\n    [\"decimal\", \"1, 2, 3\"],\r\n    [\"upper-alpha\", \"A, B, C\"],\r\n    [\"lower-alpha\", \"a, b, c\"],\r\n    [\"upper-roman\", \"I, II, III\"],\r\n    [\"lower-roman\", \"i, ii, iii\"],\r\n]);\r\n\r\nexport const bulletNamesMap = new Map([\r\n    [\"2022\", \"•\"],\r\n    [\"2014\", \"—\"],\r\n    [\"2605\", \"★\"],\r\n]);\r\n\r\nexport const sectionTypesMap = new Map([\r\n    [\"text\", \"Text\"],\r\n    [\"table\", \"Table\"],\r\n    [\"image\", \"Image\"],\r\n]);\r\n\r\nexport const backSpaceActionsMap = new Map([\r\n    [\"merge\", \"Merge\"],\r\n    [\"apply_other_pd\", \"Apply other PD\"],\r\n    [\"remove_pd\", \"Remove PD\"],\r\n    [\"nothing\", \"Nothing\"],\r\n]);\r\n\r\nexport const sampleText = `<div>Sample Text. You can change it.</div><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ornare maximus vehicula. Duis nisi velit, dictum id mauris vitae, lobortis pretium quam.</div>`;\r\n","import { LANGS } from \"./localeConstants\";\r\nimport { sectionTypesMap } from \"./constants\";\r\n\r\nexport const HOLDER = \"HOLDER-POLDER\";\r\nexport const GLOBAL_FALLBACK_MARK = \"GLOBAL FALLBACK\";\r\nexport const DEFAULT_FONT = \"Helvetica\";\r\nexport const DEFAULT_FONT_SIZE = \"11\";\r\nexport const DEFAULT_SIDE_NUMBER_FONT_COLOR = \"FFF\";\r\nexport const DEFAULT_SIDE_NUMBER_FILLING_COLOR = \"1E88E5\";\r\nexport const DEFAULT_SIDE_NUMBER_WIDTH = \"20\";\r\nexport const DEFAULT_SIDE_NUMBER_RADIUS = \"10\";\r\nexport const DEFAULT_FONT_COLOR = \"000\";\r\nexport const DEFAULT_ROW_INDENT = \"0\";\r\nexport const DEFAULT_MARGIN = \"6\";\r\nexport const DEFAULT_WORD_SPACING = \"0\";\r\nexport const DEFAULT_LINE_SPACING = \"1.5\";\r\nexport const DEFAULT_BORDER_COLOR = \"F00\";\r\nexport const DEFAULT_BORDER_THICKNESS = \"2\";\r\n\r\nexport const autoFillingRequiredFields = {\r\n    sideNumberFont: DEFAULT_FONT,\r\n    sideNumberFontSize: DEFAULT_FONT_SIZE,\r\n    sideNumberFontColor: DEFAULT_SIDE_NUMBER_FONT_COLOR,\r\n    sideNumberFillingColor: DEFAULT_SIDE_NUMBER_FILLING_COLOR,\r\n    sideNumberWidth: DEFAULT_SIDE_NUMBER_WIDTH,\r\n    sideNumberRadius: DEFAULT_SIDE_NUMBER_RADIUS,\r\n    font: DEFAULT_FONT,\r\n    fontSize: DEFAULT_FONT_SIZE,\r\n    fontColor: DEFAULT_FONT_COLOR,\r\n    marginTop: DEFAULT_MARGIN,\r\n    marginBottom: DEFAULT_MARGIN,\r\n    firstRowIndent: DEFAULT_ROW_INDENT,\r\n    otherRowsIndent: DEFAULT_ROW_INDENT,\r\n    wordSpacing: DEFAULT_WORD_SPACING,   \r\n    lineSpacing: DEFAULT_LINE_SPACING,\r\n    borderColor: DEFAULT_BORDER_COLOR,\r\n    borderThickness: DEFAULT_BORDER_THICKNESS,\r\n};\r\n\r\nexport const initialFormState = {\r\n    ...autoFillingRequiredFields,\r\n    decKey: \"\",\r\n    sectionTypes: { ...Array.from(sectionTypesMap).reduce((acc, [ key ], i) => ({ ...acc, [key]: !i }), {})},\r\n    group: \"\",\r\n    groupToCreate: \"\",\r\n    active: true,\r\n    name: { ...LANGS.reduce((acc, { langKey }) => ({ ...acc, [langKey]: \"\" }), {}) },\r\n    indentationalLevel: \"\",\r\n    fixedIndentation: true,\r\n    softReturn: false,\r\n    backspaceActionWithContent: \"merge\",\r\n    backspaceActionWithContentStyle: \"\",\r\n    returnActionNextSection: GLOBAL_FALLBACK_MARK,\r\n    returnActionEmptySection: GLOBAL_FALLBACK_MARK,\r\n    tabAction: \"\",\r\n    shiftTabAction: \"\",\r\n    isList: false,\r\n    listName: HOLDER,\r\n    orderLevel: \"\",\r\n    prefix: \"\",\r\n    suffix: \"\",\r\n    suffixDistance: \"0.25\",\r\n    magicTabs: false,\r\n    listType: \"unordered\",\r\n    listItem: \"2022\",\r\n    unicodeNumber: \"\",\r\n    unicodeChar: \"\",\r\n    numberingStyle: \"decimal\",\r\n    continueNumbering: false,\r\n    allowRestartNumbering: false,\r\n    includePreviousFrom: \"\",\r\n    sideNumber: false,\r\n    customSideNumberFont: \"\",\r\n    sideNumberAlignment: \"center\",\r\n    sideNumberBold: false,\r\n    sideNumberItalic: false,\r\n    sideNumberUnderlined: false,\r\n    sideNumberLineHeight: \"\",\r\n    referenceGroup: \"\",\r\n    referenceGroupToCreate: \"\",\r\n    customFont: \"\",\r\n    alignment: \"left\",\r\n    bold: false,\r\n    italic: false,\r\n    underlined: false,\r\n    stroke: false,\r\n    textTransform: \"none\",\r\n    readOnly: false,\r\n    connectToPrevious: false,\r\n    verticalAlign: \"baseline\",\r\n    customLineSpacing: \"\",\r\n    borderLeft: false,\r\n    borderRight: false,\r\n    borderTop: false,\r\n    borderBottom: false,\r\n    borderType: \"solid\",\r\n    fillingColor: \"\",\r\n    tocIndentation: \"\",\r\n    shortCutWin: \"\",\r\n    shortCutWinView: \"\",\r\n    shortCutMac: \"\",\r\n    shortCutMacView: \"\",\r\n};","const { body } = document;\r\nlet width;\r\n\r\nconst container = document.createElement('span');\r\ncontainer.innerHTML = Array(100).join('wi');\r\ncontainer.style.cssText = [\r\n    'position:absolute',\r\n    'width:auto',\r\n    'font-size:128px',\r\n    'left:-99999px'\r\n].join(' !important;');\r\n\r\nconst getWidth = fontFamily => {\r\n    container.style.fontFamily = fontFamily;\r\n\r\n    body.appendChild(container);\r\n    width = container.clientWidth;\r\n    body.removeChild(container);\r\n\r\n    return width;\r\n};\r\n\r\nconst monoWidth  = getWidth('monospace');\r\nconst serifWidth = getWidth('serif');\r\nconst sansWidth  = getWidth('sans-serif');\r\n\r\nconst isFontAvailable = font => {\r\n    return monoWidth !== getWidth(font + ',monospace') ||\r\n    sansWidth !== getWidth(font + ',sans-serif') ||\r\n    serifWidth !== getWidth(font + ',serif');\r\n};\r\n\r\nexport default isFontAvailable;","import { \r\n    numberingSets, \r\n    bulletNamesMap, \r\n    autoFillingRequiredFields, \r\n    DEFAULT_FONT, \r\n} from \"../constants\";\r\nimport isFontAvailable from \"./isFontAvailable\";\r\n\r\nexport const getCorrectColor = (hex, backgroundColor = \"FFF\") => {\r\n    const correctColor = typeof hex === \"string\" && (hex.length === 6 || hex.length === 3) ? hex : backgroundColor;\r\n    return correctColor;\r\n};\r\n\r\nexport const selectAllOnClick = defaultValue => e => {\r\n    if (!defaultValue || e.target.value === defaultValue) {\r\n        e.target.focus();\r\n        e.target.select();\r\n    }\r\n};\r\n\r\nexport const getOffset = (alignType, fontSize) => {\r\n    if (alignType === \"baseline\") {\r\n        return 0;\r\n    }\r\n    return (parseFloat(fontSize.slice()) / 2) * (alignType === \"sub\" ? 1 : -1);\r\n};\r\n\r\nexport const getUnstyledText = styledText => {\r\n    const unstyledText = styledText.replace(/<\\/(.*?)>/gm, \"</div>\").replace(/(?!(?:<\\/(.*?)>|<br(.*?)>)$)<(.*?)>/gm, \"<div>\");\r\n    return unstyledText[0] !== \"<\" ? `<div>${unstyledText}</div>` : unstyledText;\r\n};\r\n\r\nexport const unicodeNumberToChar = unicodeNumber => {\r\n    return String.fromCharCode(parseInt(unicodeNumber, 16));\r\n};\r\n\r\nexport const unicodeCharToNumber = unicodeChar => {\r\n    return unicodeChar.charCodeAt(0).toString(16);\r\n};\r\n\r\nexport const scrollToBottom = className => {\r\n    setTimeout(() => { document.getElementsByClassName(className)[0].scrollTo({\r\n        top: Number.MAX_SAFE_INTEGER,\r\n        behavior: \"smooth\",\r\n    })}, 0);\r\n};\r\n\r\nexport const changeAndScroll = (changeFunction, timeOut) => (...args) => {\r\n    changeFunction(...args);\r\n    if (!timeOut) {\r\n        scrollToBottom(\"content-rightSide\");\r\n    } else {\r\n        setTimeout(() => {\r\n            scrollToBottom(\"content-rightSide\");\r\n        }, timeOut);\r\n    }\r\n};\r\n\r\nexport const selectAllEditableContent = className => e => {\r\n    if (e.target.className === className) {\r\n        window.getSelection().selectAllChildren(e.target.children[0]);\r\n    }\r\n};\r\n\r\nexport const getListChars = ({ isOrderedList, numberingStyle, listItem, unicodeChar }) => {\r\n    if (isOrderedList) {\r\n        return numberingSets[numberingStyle];\r\n    }\r\n    const newBullet = bulletNamesMap.get(listItem) || unicodeChar;\r\n    return Array(4).fill(newBullet);\r\n};\r\n\r\nexport const detectOS = () => {\r\n    if (navigator && navigator.appVersion) {\r\n        if (navigator.appVersion.indexOf(\"Win\") !== -1) {\r\n            return \"Windows\";\r\n        } else if (navigator.appVersion.indexOf(\"Mac\") !== -1) {\r\n            return \"MacOS\";\r\n        }\r\n    }\r\n};\r\n\r\nexport const focusInput = (inputRef, timeout = 300) => {\r\n    setTimeout(() => {\r\n        inputRef.current.focus();\r\n    }, timeout);\r\n};\r\n\r\nexport const focusOnEmptyField = refs => {\r\n    for (let i = 0; i < refs.length; i++) {\r\n        if (!refs[i].current.value) {\r\n            focusInput(refs[i]);\r\n            return;\r\n        }\r\n    }\r\n};\r\n\r\nexport const getPreviewFont = (font, customFont) => {\r\n    if (font !== \"custom\" && isFontAvailable(font)) {\r\n        return font;\r\n    } else if (font === \"custom\" && customFont && isFontAvailable(customFont)) {\r\n        return customFont;\r\n    }\r\n    return `'${DEFAULT_FONT}', 'Roboto', sans-serif`;\r\n}\r\n\r\nexport const fillMissedFields = currentFormState => {\r\n    const { \r\n        font, customFont,\r\n        sideNumberFont, customSideNumberFont,\r\n        lineSpacing, customLineSpacing,\r\n    } = currentFormState;\r\n\r\n    const formStateWithoutMissedFields = { ...currentFormState };\r\n    \r\n    [\r\n        [font, customFont],\r\n        [sideNumberFont, customSideNumberFont], \r\n        [lineSpacing, customLineSpacing],\r\n    ].forEach(([option, customOption]) => {\r\n        if (option === \"custom\" && !customOption) {\r\n            formStateWithoutMissedFields[option] = null;\r\n        }\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n    for (let fieldName in autoFillingRequiredFields) {\r\n        if (!currentFormState[fieldName] && autoFillingRequiredFields[fieldName]) {\r\n            formStateWithoutMissedFields[fieldName] = autoFillingRequiredFields[fieldName];\r\n        }\r\n    }\r\n    return formStateWithoutMissedFields;\r\n};","//const decProps = {\r\n//    key: \"decKey\",\r\n//    name: \"name\",\r\n//    initial_indentation: \"indentationalLevel\",\r\n//    backspace_action: \"backspaceActionWithContent\",\r\n//    item_order: \"orderLevel\",\r\n//    numerated_list_format: \"numberingStyle\",\r\n//};\r\n//\r\n//\r\n//\r\n//const modification = {\r\n//    hidden: \"active\",\r\n//    backspace_action_value: \"backspaceActionWithContentStyle\",\r\n//    create_new_section_on_return_if_empty: \"returnActionNextSection\", \r\n//    pd_for_new_section_on_return_if_empty: \"returnActionNextSection\",\r\n//    change_pd_on_return_if_empty: \"change_pd_on_return_if_empty\",\r\n//    pd_for_current_section_on_return_if_empty: \"pd_for_current_section_on_return_if_empty\",\r\n//    on_tab_key: \"tabAction\",\r\n//    on_shift_tab_key: \"shiftTabAction\",\r\n//    list_key: \"listName\",\r\n//\r\n//}\r\nimport { sectionTypesMap, bulletNamesMap, GLOBAL_FALLBACK_MARK } from \"../constants\";\r\nimport { unicodeNumberToChar } from \"./helpers\";\r\n\r\nconst replaceDecNameIfDefault = decName => {\r\n    if (decName === DEFAULT_DECORATOR) {\r\n        return GLOBAL_FALLBACK_MARK;\r\n    }\r\n    if (decName === GLOBAL_FALLBACK_MARK) {\r\n        return DEFAULT_DECORATOR;\r\n    }\r\n    return decName;\r\n};\r\nconst getNumber = val => val ? +val : null;\r\nconst getNumberString = val => typeof val === \"number\" ? `${val}` : \"\";\r\nconst DEFAULT_DECORATOR = \"Text 2000\";\r\n\r\nclass DecDataConverter {\r\n    static convertToSend(rawDec) {\r\n        const dec = {};\r\n        // eslint-disable-next-line\r\n        for (let key in rawDec) {\r\n            dec[key] = rawDec[key] !== \"\" ? rawDec[key] : null;\r\n        }\r\n\r\n        const res = {};\r\n        res.key = dec.decKey;\r\n        res.section_types = Object.entries(dec.sectionTypes).filter(([, value]) => value).map(([key]) => key);\r\n        res.hidden = !dec.active;\r\n        res.name = dec.name;\r\n\r\n        res.initial_indentation = getNumber(dec.indentationalLevel);\r\n        res.is_fixed_indentation = dec.fixedIndentation;\r\n        res.content_in_second_line = dec.softReturn;\r\n        res.backspace_action = dec.backspaceActionWithContent;\r\n        res.backspace_action_value = replaceDecNameIfDefault(dec.backspaceActionWithContentStyle);\r\n        res.create_new_section_on_return_if_empty = !!dec.returnActionNextSection;\r\n        res.pd_for_new_section_on_return_if_empty = replaceDecNameIfDefault(dec.returnActionNextSection);\r\n        res.change_pd_on_return_if_empty = !!dec.returnActionEmptySection;\r\n        res.pd_for_current_section_on_return_if_empty = replaceDecNameIfDefault(dec.returnActionEmptySection);\r\n        res.on_tab_key = dec.tabAction;\r\n        res.on_shift_tab_key = dec.shiftTabAction;\r\n        \r\n        res.list_key = dec.listKey;\r\n        res.item_order = getNumber(dec.orderLevel);\r\n        // res.numerated_list_format, dec.prefix, dec.suffix, dec.OrderLevel\r\n        res.extra_hanging_indentation = dec.suffixDistance === \"0.5\" ? null : `${dec.suffixDistance}cm`;\r\n        res.extra_hanging_indentation_at_grid = dec.magicTabs;\r\n        \r\n        const hasCustomBulletButEmpty = dec.listItem === \"custom\" && !dec.unicodeNumber;\r\n        res.bullet_list_format = hasCustomBulletButEmpty ? null : `\\\\${dec.unicodeNumber || dec.listItem}`;\r\n\r\n        console.log(res);\r\n\r\n        return { ...rawDec, ...res };\r\n    }\r\n\r\n    static convertToEdit(rawDec) {\r\n        const dec = {};\r\n        // eslint-disable-next-line\r\n        for (let key in rawDec) {\r\n            dec[key] = rawDec[key] !== null ? rawDec[key] : \"\";\r\n        }\r\n\r\n        const res = {};\r\n        res.decKey = dec.key;\r\n        res.sectionTypes = Array.from(sectionTypesMap).map(([ key ]) => key).reduce((acc, cur) => ({\r\n            ...acc,\r\n            [cur]: dec.section_types.includes(cur),\r\n        }), {});\r\n        res.active = !dec.hidden;\r\n        res.name = dec.name;\r\n\r\n        res.indentationalLevel = getNumberString(dec.initial_indentation);\r\n        res.fixedIndentation = dec.is_fixed_indentation;\r\n        res.softReturn = dec.content_in_second_line;\r\n        res.backspaceActionWithContent = dec.backspace_action;\r\n        res.backspaceActionWithContentStyle = replaceDecNameIfDefault(dec.backspace_action_value);\r\n        res.returnActionNextSection = replaceDecNameIfDefault(dec.pd_for_new_section_on_return_if_empty);\r\n        res.returnActionEmptySection = replaceDecNameIfDefault(dec.pd_for_current_section_on_return_if_empty);\r\n        res.tabAction = dec.on_tab_key;\r\n        res.shiftTabAction = dec.on_shift_tab_key;\r\n        // res.numerated_list_format, dec.prefix, dec.suffix, dec.OrderLevel\r\n        const suffixDistanceMatch = `${(dec.extra_hanging_indentation||\"0.5cm\")}`.match(/[\\d.]*/);\r\n        res.suffixDistance = suffixDistanceMatch ? suffixDistanceMatch[0] : \"0.5\";\r\n        \r\n        const hasBullet = !!(dec.bullet_list_format || \"\").match(/^\\\\/);\r\n        const bullet = (hasBullet ? dec.bullet_list_format.slice(1) : \"\");\r\n        const isCustomBullet = !bullet || !bulletNamesMap.has(bullet);\r\n        res.listItem = isCustomBullet ? \"custom\" : bullet;\r\n        res.unicodeNumber = isCustomBullet ? bullet : \"\";\r\n        res.unicodeChar = isCustomBullet && bullet ? unicodeNumberToChar(bullet) : \"\";\r\n\r\n        console.log(res);\r\n\r\n        return { ...rawDec, ...res };\r\n    }\r\n\r\n    static mapDecFields = {};\r\n}\r\n\r\nexport default DecDataConverter;","import keycode from \"keycode\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nconst getShortCutUtils = systemName => {\r\n  return class ShortcutUtils {  \r\n    static CMD_KEYS = {\r\n      altKey: systemName === \"MacOS\" ? \"Option\" : \"Alt\",\r\n      ctrlKey: systemName === \"MacOS\" ? \"Control\" : \"Ctrl\",\r\n      shiftKey: \"Shift\",\r\n      metaKey: \"Command\",\r\n    };\r\n  \r\n    static isDeadKey(e) {\r\n      return e.keyCode === 229;\r\n    }\r\n  \r\n    static prevent(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  \r\n    static convertEventToShortCut(e) {\r\n      if (ShortcutUtils.isDeadKey(e)) {\r\n        ShortcutUtils.prevent(e);\r\n        return { deleteKey: true };\r\n      }\r\n      ShortcutUtils.prevent(e);\r\n      const shortCut = {\r\n        keyCode: e.keyCode,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n        altKey: e.altKey,\r\n        metaKey: false,\r\n      };\r\n      if (systemName === \"MacOS\") {\r\n        shortCut.metaKey = e.metaKey;\r\n      }\r\n      const deleteKeys = [8, 46];\r\n      const cmdKeysCodes = [16, 91, 18, 17];\r\n      const shortCutForView = ShortcutUtils.convertShortcutToMeta(shortCut);\r\n      if (deleteKeys.indexOf(e.keyCode) > -1) {\r\n        return { deleteKey: true };\r\n      } else if (shortCutForView.isCmdPressed && cmdKeysCodes.indexOf(e.keyCode) === -1) {\r\n        return {\r\n          value: shortCut,\r\n          stringValue: shortCutForView.stringValue,\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n  \r\n    static convertShortcutToString(shortCut = {}) {\r\n      return ShortcutUtils.convertShortcutToMeta(shortCut).stringValue;\r\n    }\r\n  \r\n    static convertShortcutToMeta(shortCut = {}) {\r\n      let shortCutForView = \"\";\r\n      let isCmdPressed = false;\r\n      Object.keys(ShortcutUtils.CMD_KEYS).forEach((key) => {\r\n        if (shortCut && shortCut[key]) {\r\n          isCmdPressed = true;\r\n          shortCutForView += `${ShortcutUtils.CMD_KEYS[key]} + `;\r\n        }\r\n      });\r\n      if (shortCut && shortCut.keyCode) {\r\n        shortCutForView += keycode(shortCut.keyCode);\r\n      }\r\n      return { stringValue: shortCutForView, isCmdPressed };\r\n    }\r\n  \r\n    static removeDuplicateShortcuts = function (decorators, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(decorators).forEach((decoratorKey) => {\r\n        const item = decorators[decoratorKey];\r\n        const itemType = item.item_type;\r\n        if (itemType === \"style\") {\r\n          if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n            decorators[decoratorKey].keyboard_shortcut = null;\r\n            removed = true;\r\n          }\r\n        } else {\r\n          const childItems = item.child_items;\r\n          Object.keys(childItems).forEach((itemKey) => {\r\n            const style = childItems[itemKey];\r\n            if (isEqual(style.keyboard_shortcut, newPdShortcut)) {\r\n              style.keyboard_shortcut = null;\r\n              removed = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  \r\n    static removeDuplicateShortcutsInInlineStyle = function (inlineStyles, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(inlineStyles).forEach((styleKey) => {\r\n        const item = inlineStyles[styleKey];\r\n        if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n          inlineStyles[styleKey].keyboard_shortcut = null;\r\n          removed = true;\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  }\r\n};\r\n\r\nexport default getShortCutUtils;\r\n\r\n","import { tabsErrorInitialState, sectionsTabNumbers, MAIN_LANG_KEY } from \"../constants\";\r\n\r\nexport const hasErrorInSection = refs => !refs.every(ref => ref.current.value);\r\n\r\nexport const getTabsErrorState = form => {\r\n    const tabsErrorState = { ...tabsErrorInitialState };\r\n    const { name, decKey, listName } = form;\r\n\r\n    if (!name[MAIN_LANG_KEY] || !decKey) {\r\n        tabsErrorState.namesSection = true;\r\n    }\r\n    if (!listName) {\r\n        tabsErrorState.listSection = true;\r\n    }\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (let tabName in tabsErrorState) {\r\n        if (tabsErrorState[tabName]) {\r\n            return tabsErrorState;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const getTabNumberToSwitch = tabsErrorState => {\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (const { tabName, tabNumber } of sectionsTabNumbers) {\r\n        if (tabsErrorState[tabName]) {\r\n            return tabNumber;\r\n        }\r\n    }\r\n};","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport LabelWithAsterisk from \"./LabelWithAsterisk\";\r\nimport { focusInput } from \"../helpers\";\r\nimport { LANGS, MAIN_LANG_KEY, ADDITIONAL_LANGS } from \"../constants\";\r\n\r\nclass NewGroupDialog extends React.PureComponent {\r\n    isXref = this.props.groupType === \"xref\";\r\n\r\n    emptyGroup = {\r\n        ...LANGS.reduce((acc, { langKey }) => ({ ...acc, [langKey]: \"\" }), {}),\r\n        ...this.isXref && { groupKey: \"\" },\r\n    };\r\n\r\n    getInitialState = () => ({ ...this.emptyGroup, ...this.props.savedGroup });\r\n\r\n    state = this.getInitialState();\r\n\r\n    requiredFieldRef = React.createRef();\r\n\r\n    onInputChange = inputName => e => {\r\n        this.setState({ [inputName]: e.target.value });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState(this.getInitialState());\r\n        this.props.hideGroupDialogValidationError();\r\n        this.props.closeGroupDialog();\r\n    };\r\n\r\n    onGroupSave = () => {\r\n        if ((!this.isXref && this.state[MAIN_LANG_KEY].trim().length) || (this.isXref && this.state.groupKey.trim().length)) {\r\n            const groupToSave = {\r\n                ...LANGS.reduce((acc, { langKey }) => ({ ...acc, [langKey]: this.state[langKey].trim() }), {}),\r\n            };\r\n            if (this.isXref) {\r\n                groupToSave.groupKey = this.state.groupKey.trim();\r\n            }\r\n            this.props.hideGroupDialogValidationError();\r\n            this.props.saveGroup(null, (groupToSave[MAIN_LANG_KEY] || groupToSave.groupKey), groupToSave);\r\n            this.props.closeGroupDialog();\r\n        } else {\r\n            this.props.showGroupDialogValidationError();\r\n            focusInput(this.requiredFieldRef);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isOpen, isEditMode, hasGroupDialogValidationError } = this.props;\r\n        const { onInputChange, onGroupSave, onClose, isXref } = this;\r\n        const titleText = `${isEditMode ? \"Edit\" : \"Create\"} new ${isXref ? \"reference \" : \"\"}group`\r\n        const buttonText = isEditMode ? \"Save\" : \"Create\";\r\n\r\n        return (\r\n            <Dialog\r\n                className=\"decoratorDialog\"\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <DialogTitle>{titleText}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        { isXref && (\r\n                            <>\r\n                                <LabelWithAsterisk>Group Key</LabelWithAsterisk>\r\n                                <TextField\r\n                                    value={this.state.groupKey}\r\n                                    onChange={onInputChange(\"groupKey\")}\r\n                                    inputRef={this.requiredFieldRef}\r\n                                    error={hasGroupDialogValidationError && !this.state.groupKey}\r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                />\r\n                            </>\r\n                        ) }\r\n                        { isXref ? (\r\n                            <>\r\n                                <span>Name EN</span>\r\n                                <TextField\r\n                                    value={this.state[MAIN_LANG_KEY]}\r\n                                    onChange={onInputChange(MAIN_LANG_KEY)}\r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <LabelWithAsterisk>Name EN</LabelWithAsterisk>\r\n                                <TextField\r\n                                    value={this.state[MAIN_LANG_KEY]}\r\n                                    onChange={onInputChange(MAIN_LANG_KEY)}\r\n                                    inputRef={this.requiredFieldRef}\r\n                                    error={hasGroupDialogValidationError && !this.state[MAIN_LANG_KEY]}\r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                />\r\n                            </>\r\n                        ) }\r\n                        { ADDITIONAL_LANGS.map(({ langKey, langName, regionFullName }) => (\r\n                            <React.Fragment key={langKey}>\r\n                                <span>Name {langName}{regionFullName && <span className=\"smallText\"><br/>{regionFullName}</span>}</span>\r\n                                <TextField\r\n                                    value={this.state[langKey]}\r\n                                    onChange={onInputChange(langKey)} \r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                />\r\n                            </React.Fragment>\r\n                        )) }                 \r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color=\"default\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={onGroupSave} color=\"primary\">\r\n                        {buttonText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewGroupDialog;","import React from \"react\";\r\n\r\nconst withNewGroupControl = (ViewComponent) => {\r\n    return class extends React.Component {\r\n        state = {\r\n            isGroupDialogOpen: false,\r\n            hasGroupDialogValidationError: false,\r\n        };\r\n        \r\n        openGroupDialog = () => {\r\n            this.setState({ isGroupDialogOpen: true });\r\n        };\r\n\r\n        closeGroupDialog = () => {\r\n            this.setState({ isGroupDialogOpen: false });\r\n        };\r\n\r\n        showGroupDialogValidationError = () => {\r\n            this.setState({ hasGroupDialogValidationError: true });\r\n        };\r\n\r\n        hideGroupDialogValidationError = () => {\r\n            this.setState({ hasGroupDialogValidationError: false });\r\n        };\r\n\r\n        render() {\r\n            const { \r\n                openGroupDialog, \r\n                closeGroupDialog, \r\n                showGroupDialogValidationError, \r\n                hideGroupDialogValidationError \r\n            } = this; \r\n\r\n            return ( \r\n                <ViewComponent \r\n                    {...this.props} \r\n                    {...this.state} \r\n                    {...{ openGroupDialog, closeGroupDialog, showGroupDialogValidationError, hideGroupDialogValidationError }} \r\n                /> \r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withNewGroupControl;","import { getShortCutUtils } from \"../helpers\";\r\n\r\nexport const UPDATE_DEC_FORM = \"UPDATE_DEC_FORM\";\r\nexport const CLEAR_DEC_FORM = \"CLEAR_DEC_FORM\";\r\nexport const SHOW_DEC_DIALOG = \"SHOW_DEC_DIALOG\";\r\nexport const HIDE_DEC_DIALOG = \"HIDE_DEC_DIALOG\";\r\nexport const SWITCH_DEC_DIALOG_TAB = \"SWITCH_DEC_DIALOG_TAB\";\r\nexport const RESET_DEC_DIALOG_TAB = \"RESET_DEC_DIALOG_TAB\";\r\nexport const SWITCH_ON_DEC_DIALOG_EDIT_MODE = \"SWITCH_ON_DEC_DIALOG_EDIT_MOD\";\r\nexport const SWITCH_OFF_DEC_DIALOG_EDIT_MODE = \"SWITCH_OFF_DEC_DIALOG_EDIT_MODE\";\r\nexport const UPDATE_VALIDATION_ERROR = \"UPDATE_VALIDATION_ERROR\";\r\nexport const REMOVE_VALIDATION_ERROR = \"REMOVE_VALIDATION_ERROR\";\r\n\r\nexport const updateDecoratorForm = payload => {\r\n    return {\r\n        type: UPDATE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearDecoratorForm = payload => {\r\n    return {\r\n        type: CLEAR_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const showDecoratorDialog = () => {\r\n    return {\r\n        type: SHOW_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const hideDecoratorDialog = () => {\r\n    return {\r\n        type: HIDE_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const switchDecDialogTab = payload => {\r\n    return {\r\n        type: SWITCH_DEC_DIALOG_TAB,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const resetDecDialogTab = () => {\r\n    return {\r\n        type: RESET_DEC_DIALOG_TAB,\r\n    };\r\n}\r\n\r\nexport const switchOnDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_ON_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const switchOffDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_OFF_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const updateValidationError = payload => {\r\n    return {\r\n        type: UPDATE_VALIDATION_ERROR,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const removeValidationError = () => {\r\n    return {\r\n        type: REMOVE_VALIDATION_ERROR,\r\n    };\r\n};\r\n\r\nexport const openDialog = dispatch => dec => {\r\n    if (dec) {\r\n        dispatch(updateDecoratorForm(dec));\r\n        dispatch(switchOnDecDialogEditMode());\r\n    } \r\n    dispatch(showDecoratorDialog());\r\n};\r\n\r\nexport const closeDialog = dispatch => () => {\r\n    dispatch(hideDecoratorDialog());\r\n    dispatch(switchOffDecDialogEditMode());\r\n    dispatch(removeValidationError());\r\n    dispatch(resetDecDialogTab());\r\n    dispatch(clearDecoratorForm());\r\n};\r\n\r\nexport const setValue = dispatch => propName => (e, secondArg = \"\") => {\r\n    const newValue = (e && e.target.value !== \"\" && e.target.value !== undefined) ? e.target.value : secondArg;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newValue,\r\n    }));\r\n};\r\n\r\nexport const toggleValue = dispatch => propName => (e, secondArg) => {\r\n    const newValue = e ? e.target.checked : secondArg;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newValue,\r\n    }));\r\n};\r\n\r\nexport const setBullet = dispatch => propName => (e, secondArg) => {\r\n    const input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n\r\n    const newBullet = input.length > 1 ? input[input.length - 1] : input;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newBullet,\r\n    }));\r\n    return newBullet;\r\n};\r\n\r\nexport const setColor = dispatch => propName => (e, secondArg) => {\r\n    const input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n    \r\n    const filteredInput = input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i) \r\n                          ? input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i)[0].slice(0, 6)\r\n                          : \"\" ;\r\n    \r\n    dispatch(updateDecoratorForm({\r\n        [propName]: filteredInput,\r\n    }));\r\n    return filteredInput;\r\n};\r\n\r\nexport const setNumber = dispatch => propName => (e, secondArg) => {\r\n    let input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n\r\n    const filteredInput = input.replace(\",\", \".\").trim().match(/[0-9]+/i) \r\n                          ? input.replace(\",\", \".\").trim().match(/\\d+[.,]?\\d*/)[0]\r\n                          : \"\" ;\r\n\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: filteredInput,\r\n    }));\r\n    return filteredInput;\r\n};\r\n\r\nexport const setShortCut = dispatch => (valuePropName, viewPropName) => e => {\r\n    const systemName = valuePropName.search(/mac/gi) !== -1 ? \"MacOS\" : \"Windows\";\r\n    const shortCut = getShortCutUtils(systemName).convertEventToShortCut(e);\r\n    if (shortCut && shortCut.deleteKey) {\r\n        setTimeout(() => {\r\n            dispatch(updateDecoratorForm({ \r\n                [valuePropName]: \"\" \r\n            }));\r\n            dispatch(updateDecoratorForm({ \r\n                [viewPropName]: \"\" \r\n            }));\r\n        }, 100);\r\n    } else if (shortCut) {\r\n        dispatch(updateDecoratorForm({ \r\n            [valuePropName]: shortCut.value \r\n        }));\r\n        dispatch(updateDecoratorForm({ \r\n            [viewPropName]: shortCut.stringValue \r\n        }));\r\n    }\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport LabelWithAsterisk from \"../common/LabelWithAsterisk\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\nimport { hasErrorInSection, focusOnEmptyField } from \"../helpers\";\r\nimport { setValue, toggleValue, updateValidationError } from \"../actions\";\r\nimport { MAIN_LANG_KEY, ADDITIONAL_LANGS, sectionTypesMap } from \"../constants\";\r\n\r\nclass NamesSection extends React.Component {\r\n    decKeyInputRef = React.createRef();\r\n    decNameEnInputRef = React.createRef();\r\n    inputRefs = [this.decKeyInputRef, this.decNameEnInputRef];\r\n\r\n    onGroupChange = (e, groupName, group) => {\r\n        if (group) {\r\n            this.props.changeGroupToCreate(null, group);\r\n        }\r\n        this.props.changeGroup(e, groupName);\r\n    };\r\n\r\n    onNameChange = langKey => e => {\r\n        const newValue = {\r\n            ...this.props.name,\r\n            [langKey]: e.target.value,\r\n        };\r\n        this.props.changeName(null, newValue);\r\n    };\r\n\r\n    onSectionTypesChange = typeName => e => {\r\n        const newValue = {\r\n            ...this.props.sectionTypes,\r\n            [typeName]: e.target.checked,\r\n        };\r\n        this.props.changeSectionTypes(null, newValue);\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.validationErrorInSection) {\r\n            focusOnEmptyField(this.inputRefs);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.validationErrorInSection && !prevprops.validationErrorInSection) {\r\n            focusOnEmptyField(this.inputRefs);\r\n        }\r\n        if (this.props.validationErrorInSection && !hasErrorInSection(this.inputRefs)) {\r\n            this.props.updateValidationError({ namesSection: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            groupToCreate, \r\n            isGroupDialogOpen,\r\n            hasGroupDialogValidationError,\r\n            openGroupDialog, \r\n            closeGroupDialog, \r\n            showGroupDialogValidationError, \r\n            hideGroupDialogValidationError,\r\n            validationErrorInSection,\r\n            decKey, changeDecKey,\r\n            sectionTypes,\r\n            group,\r\n            active, changeActive,\r\n            name,\r\n        } = this.props;\r\n\r\n        const newGroupName = groupToCreate[MAIN_LANG_KEY];\r\n        const isEditMode = !!newGroupName;\r\n\r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n                <LabelWithAsterisk>Key</LabelWithAsterisk>\r\n                <TextField \r\n                    value={decKey}\r\n                    onChange={changeDecKey}\r\n                    error={validationErrorInSection && !decKey}\r\n                    inputRef={this.decKeyInputRef}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Section types</span>\r\n                <div className=\"checkBoxesSet\">\r\n                    { Array.from(sectionTypesMap).map(([ key, value ]) => (\r\n                        <div className=\"labeledCheckbox\" key={key}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" />}\r\n                                label={value}\r\n                                labelPlacement=\"end\"\r\n                                checked={sectionTypes[key]}\r\n                                onChange={this.onSectionTypesChange(key)}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <span>Group</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        value={group} \r\n                        onChange={this.onGroupChange}\r\n                        input={ <CustomInput /> }  \r\n                    >\r\n                        <option value=\"\">...</option>\r\n                        { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                        <option value=\"0\">Text</option>\r\n                        <option value=\"1\">Heading</option>\r\n                        <option value=\"2\">Heading Heading Heading Heading</option>\r\n                    </NativeSelect>\r\n                    { !(isEditMode && group !== newGroupName) && (\r\n                        <Button color=\"primary\" className=\"textButton\" onClick={openGroupDialog}>\r\n                            { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                        </Button>\r\n                    ) }\r\n                </div>\r\n\r\n                <span>Active</span>\r\n                <div className=\"unlabeledCheckbox\">\r\n                    <Checkbox\r\n                        checked={active}\r\n                        onChange={changeActive} \r\n                        color=\"primary\" \r\n                    />\r\n                </div>\r\n\r\n                <LabelWithAsterisk>Name EN</LabelWithAsterisk>\r\n                <TextField \r\n                    value={name[MAIN_LANG_KEY]}\r\n                    onChange={this.onNameChange(MAIN_LANG_KEY)}\r\n                    error={validationErrorInSection && !name[MAIN_LANG_KEY]}\r\n                    inputRef={this.decNameEnInputRef}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                { ADDITIONAL_LANGS.map(({ langKey, langName, regionFullName }) => (\r\n                  <React.Fragment key={langKey}>\r\n                    <span>Name {langName}{regionFullName && <span className=\"smallText\"><br/>{regionFullName}</span>}</span>\r\n                    <TextField \r\n                        value={name[langKey]}\r\n                        onChange={this.onNameChange(langKey)}\r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                    />\r\n                  </React.Fragment>  \r\n                )) }\r\n\r\n                <NewGroupDialog \r\n                    isOpen={isGroupDialogOpen}\r\n                    saveGroup={this.onGroupChange}\r\n                    savedGroup={groupToCreate}\r\n                    groupType=\"decorators\"\r\n                    { ...{ \r\n                        isGroupDialogOpen,\r\n                        isEditMode,\r\n                        hasGroupDialogValidationError,\r\n                        closeGroupDialog, \r\n                        showGroupDialogValidationError, \r\n                        hideGroupDialogValidationError, \r\n                    } } \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return { \r\n        validationErrorInSection: validationError.namesSection,\r\n        formState: form,\r\n        decKey: form.decKey,\r\n        group: form.group,\r\n        active: form.active,\r\n        name: form.name,\r\n        groupToCreate: form.groupToCreate,\r\n        sectionTypes: form.sectionTypes,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        changeDecKey: setValue(dispatch)(\"decKey\"),\r\n        changeGroup: setValue(dispatch)(\"group\"),\r\n        changeGroupToCreate: setValue(dispatch)(\"groupToCreate\"),\r\n        changeActive: toggleValue(dispatch)(\"active\"),\r\n        changeName: setValue(dispatch)(\"name\"),\r\n        changeSectionTypes: setValue(dispatch)(\"sectionTypes\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(withNewGroupControl(NamesSection)));","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInputShort = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInputShort;","import SectionTitle from \"./SectionTitle\";\r\nexport default SectionTitle;","import React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst SectionTitle = ({text, children}) => (\r\n    <>\r\n        <div className=\"sectionTitle\">\r\n            <span>{text || children}</span>\r\n        </div>\r\n        <div className=\"spaceHolder\"/>\r\n    </>\r\n);\r\n\r\nexport default SectionTitle;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst BackSpaceActionInput = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"175px\",\r\n      width: \"175px\",\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default BackSpaceActionInput;","import PositioningSection from \"./PositioningSection\";\r\nexport default PositioningSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport SectionTitle from \"../../common/SectionTitle\";\r\nimport { backSpaceActionsMap, decoratorsList, GLOBAL_FALLBACK_MARK } from \"../../constants\";\r\nimport BackSpaceActionInput from \"./BackSpaceActionInput\";\r\nimport { setValue, toggleValue } from \"../../actions\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst PositioningSection = props => {\r\n    const {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        fixedIndentation, changeisFixedIndentation,\r\n        softReturn, changeSoftReturn,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithContentStyle, changeBackspaceActionWithContentStyle,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    } = props;\r\n\r\n    const onBackspaceActionChange = e => {\r\n        if (e.target.value === \"apply_other_pd\") {\r\n            changeBackspaceActionWithContentStyle(null, GLOBAL_FALLBACK_MARK);\r\n        } else if (backspaceActionWithContentStyle) {\r\n            changeBackspaceActionWithContentStyle(null, \"\");\r\n        }\r\n        changeBackspaceActionWithContent(e);\r\n    };\r\n\r\n    const backSpaceActionStyleSettingsState = backspaceActionWithContent === \"apply_other_pd\" ? \"shown\" : \"hidden\";\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Identational level</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={indentationalLevel}\r\n                    onChange={changeIndentationalLevel}\r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <span>Fixed indentation</span>\r\n            <div className=\"unlabeledCheckbox\">\r\n                <Checkbox \r\n                    checked={fixedIndentation}\r\n                    onChange={changeisFixedIndentation}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n\r\n            <span>Soft return</span>\r\n            <div className=\"unlabeledCheckbox\">\r\n                <Checkbox \r\n                    checked={softReturn}\r\n                    onChange={changeSoftReturn}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n            \r\n            <SectionTitle text=\"BACKSPACE\" />\r\n\r\n            <span>At the beginning of a section with content</span>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <div>\r\n                    <NativeSelect \r\n                        value={backspaceActionWithContent}\r\n                        onChange={onBackspaceActionChange}\r\n                        input={ <BackSpaceActionInput /> }\r\n                    >\r\n                        {Array.from(backSpaceActionsMap).map(([key, value]) => (\r\n                            <option value={key} key={key}>{value}</option>\r\n                        ))}\r\n                    </NativeSelect>\r\n                </div>\r\n                <div className={`optionalSettings optionalSettings_${backSpaceActionStyleSettingsState} wideSelectBox`}>\r\n                    <NativeSelect\r\n                        value={backspaceActionWithContentStyle}\r\n                        onChange={changeBackspaceActionWithContentStyle}\r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        <option value={GLOBAL_FALLBACK_MARK}>Global Fallback Style</option>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                </div>\r\n            </div>\r\n\r\n            <SectionTitle text=\"RETURN\" />\r\n\r\n\r\n            <span>Style of next section</span>\r\n            <div className=\"wideSelectBox\">\r\n                <NativeSelect\r\n                    value={returnActionNextSection}\r\n                    onChange={changeReturnActionNextSection}\r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"\">Nothing</option>\r\n                    <option value={GLOBAL_FALLBACK_MARK}>Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n\r\n            <span>In empty section change current style to</span>\r\n            <div className=\"wideSelectBox\">\r\n                <NativeSelect \r\n                    value={returnActionEmptySection}\r\n                    onChange={changeReturnActionEmptySection}\r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"\">Nothing</option>\r\n                    <option value={GLOBAL_FALLBACK_MARK}>Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <SectionTitle text=\"TAB / SHIFT+TAB\" />\r\n\r\n            <span>TAB – change current style to</span>\r\n            <div className=\"wideSelectBox\">\r\n                <NativeSelect\r\n                    value={tabAction}\r\n                    onChange={changeTabAction}\r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"\">Nothing</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <span>SHIFT+TAB – change current style to</span>\r\n            <div className=\"wideSelectBox\">\r\n                <NativeSelect\r\n                    value={shiftTabAction}\r\n                    onChange={changeShiftTabAction} \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"\">Nothing</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        indentationalLevel: form.indentationalLevel,\r\n        backspaceActionWithContent: form.backspaceActionWithContent,\r\n        backspaceActionWithContentStyle: form.backspaceActionWithContentStyle,\r\n        returnActionNextSection: form.returnActionNextSection,\r\n        returnActionEmptySection: form.returnActionEmptySection,\r\n        tabAction: form.tabAction,\r\n        shiftTabAction: form.shiftTabAction,\r\n        fixedIndentation: form.fixedIndentation,\r\n        softReturn: form.softReturn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeIndentationalLevel: setValue(dispatch)(\"indentationalLevel\"),\r\n        changeBackspaceActionWithContent: setValue(dispatch)(\"backspaceActionWithContent\"),\r\n        changeBackspaceActionWithContentStyle: setValue(dispatch)(\"backspaceActionWithContentStyle\"),\r\n        changeBackspaceActionWithoutContent: setValue(dispatch)(\"backspaceActionWithoutContent\"),\r\n        changeBackspaceActionWithoutContentStyle: setValue(dispatch)(\"backspaceActionWithoutContentStyle\"),\r\n        changeReturnActionNextSection: setValue(dispatch)(\"returnActionNextSection\"),\r\n        changeReturnActionEmptySection: setValue(dispatch)(\"returnActionEmptySection\"),\r\n        changeTabAction: setValue(dispatch)(\"tabAction\"),\r\n        changeShiftTabAction: setValue(dispatch)(\"shiftTabAction\"),\r\n        changeisFixedIndentation: toggleValue(dispatch)(\"fixedIndentation\"),\r\n        changeSoftReturn: toggleValue(dispatch)(\"softReturn\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(PositioningSection));","import { getOffset, getCorrectColor, getPreviewFont } from \"../../helpers\";\r\nimport { alignmentList, DEFAULT_FONT_SIZE, DEFAULT_LINE_SPACING } from \"../../constants\";\r\n\r\nexport const generatePreviewStyle = formState => {\r\n    const {\r\n        font,\r\n        customFont,\r\n        alignment,\r\n        fontSize,\r\n        fontColor,\r\n        bold,\r\n        italic,\r\n        underlined,\r\n        stroke,\r\n        textTransform,\r\n        verticalAlign,\r\n        marginTop,\r\n        marginBottom,\r\n        firstRowIndent,\r\n        otherRowsIndent,\r\n        lineSpacing,\r\n        customLineSpacing,\r\n        wordSpacing,\r\n        borderLeft,\r\n        borderRight,\r\n        borderTop,\r\n        borderBottom,\r\n        borderType,\r\n        borderColor,\r\n        borderThickness,\r\n        fillingColor,\r\n        fillingConnectToPrevious,\r\n        connectToPrevious,\r\n    } = formState;\r\n    \r\n    const previewFontColor = getCorrectColor(fontColor, \"f5f5f5\");\r\n    const previewFillingColor = getCorrectColor(fillingColor, \"f5f5f5\");\r\n    const previewAdditionalFillingColor = fillingConnectToPrevious ? previewFillingColor : \"f5f5f5\";\r\n    const indentsDifference = (firstRowIndent || 0) - (otherRowsIndent || 0);\r\n    const previewMarginLeft = `${!otherRowsIndent ? 0 : (otherRowsIndent >= 6 ? 6 : otherRowsIndent)}cm`;\r\n    const previewTextIndent = `${!indentsDifference ? 0 : (indentsDifference >= 6 ? 6 : indentsDifference)}cm`;\r\n    const previewLineSpacing = lineSpacing !== \"custom\" ? lineSpacing : (customLineSpacing || DEFAULT_LINE_SPACING);\r\n    const offset = getOffset(verticalAlign, fontSize);\r\n    const previewMarginTop = `${(!connectToPrevious ? parseFloat(marginTop) : 0) + offset}pt`;\r\n    const previewMarginBottom = `${(!connectToPrevious ? parseFloat(marginBottom) : 0) - offset}pt`;\r\n    const previewBorderLeft = borderLeft ? `${borderThickness}pt ${borderType} #${borderColor}` : \"none\";\r\n    const previewBorderRight = borderRight ? `${borderThickness}pt ${borderType} #${borderColor}` : \"none\";\r\n    const previewBorderTop = borderTop ? `${borderThickness}pt ${borderType} #${borderColor}` : \"none\";\r\n    const previewBorderBottom = borderBottom ? `${borderThickness}pt ${borderType} #${borderColor}` : \"none\";\r\n    const correctFontSize = fontSize <= 120 ? fontSize : 120;\r\n    const previewStyle = {\r\n        fontSize: !fontSize ? `${DEFAULT_FONT_SIZE}pt` : `${correctFontSize}pt`,\r\n        color: `#${previewFontColor}`,\r\n        fontFamily: getPreviewFont(font, customFont),\r\n        alignItems: alignmentList[alignment],\r\n        textAlign: alignment,\r\n        fontWeight: bold ? \"bold\" : \"normal\",\r\n        fontStyle: italic ? \"italic\" : \"normal\",\r\n        textDecoration: `${underlined ? \"underline\" : \"\"}${stroke ? \" line-through\" : \"\"}`.trim() || \"none\",\r\n        verticalAlign,\r\n        textTransform: textTransform !== \"small-caps\" ? textTransform : \"none\",\r\n        fontVariant: textTransform === \"small-caps\" ? textTransform : \"normal\",\r\n        backgroundColor: `#${previewFillingColor}`,\r\n        backgroundImage:  `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        borderImage: `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        marginLeft: previewMarginLeft,\r\n        textIndent: previewTextIndent,\r\n        wordSpacing: `${wordSpacing || 0}pt`,\r\n        lineHeight: previewLineSpacing,\r\n        marginTop: previewMarginTop,\r\n        marginBottom: previewMarginBottom,\r\n        borderLeft: previewBorderLeft,\r\n        borderRight: previewBorderRight,\r\n        borderTop: previewBorderTop,\r\n        borderBottom: previewBorderBottom,\r\n        outline: \"none\",\r\n        ...borderLeft && { paddingLeft: `${correctFontSize / 3}pt`},\r\n        ...borderRight && { paddingRight: `${correctFontSize / 3}pt`},\r\n        ...borderTop && { paddingTop: `${correctFontSize / 3}pt`},\r\n        ...borderBottom && { paddingBottom: `${correctFontSize / 3}pt`},\r\n    };\r\n\r\n    return previewStyle;\r\n};\r\n\r\nexport const generateSideNumberStyle = formState => {\r\n    const { \r\n        listType,\r\n        suffixDistance,\r\n        sideNumber,\r\n        sideNumberFont,\r\n        customSideNumberFont,\r\n        sideNumberAlignment,\r\n        sideNumberFontSize,\r\n        sideNumberFontColor,\r\n        sideNumberFillingColor,\r\n        sideNumberWidth,\r\n        sideNumberRadius,\r\n        sideNumberBold,\r\n        sideNumberItalic,\r\n        sideNumberUnderlined,\r\n        sideNumberLineHeight,\r\n    } = formState;\r\n\r\n    const previewSideNumberFontColor = getCorrectColor(sideNumberFontColor, \"f5f5f5\");\r\n    const previewSideNumberFillingColor = getCorrectColor(sideNumberFillingColor, \"f5f5f5\");\r\n\r\n    const sideNumberStyle = (!sideNumber || listType === \"unordered\") ? {} : {\r\n        fontFamily: getPreviewFont(sideNumberFont, customSideNumberFont),\r\n        textAlign: sideNumberAlignment,\r\n        fontSize: !sideNumberFontSize ? `${DEFAULT_FONT_SIZE}pt` : `${sideNumberFontSize <= 120 ? sideNumberFontSize : 120}pt`,\r\n        color: `#${previewSideNumberFontColor}`,\r\n        backgroundColor: `#${previewSideNumberFillingColor}`,\r\n        minWidth: `${!sideNumberWidth ? 0 : (sideNumberWidth < 150 ? sideNumberWidth : 150)}pt`,\r\n        borderRadius: `${sideNumberRadius || 0}pt`,\r\n        fontWeight: sideNumberBold ? \"bold\" : \"normal\",\r\n        fontStyle: sideNumberItalic ? \"italic\" : \"normal\",\r\n        textDecoration: sideNumberUnderlined ? \"underline\" : \"none\",\r\n        ...sideNumberLineHeight && { lineHeight: `${sideNumberLineHeight}pt`},\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n    };\r\n\r\n    return sideNumberStyle;\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { generatePreviewStyle, generateSideNumberStyle } from \"./generators\";\r\nimport { getListChars } from \"../../helpers\"\r\n\r\nimport \"./style.css\";\r\n\r\nconst ListPreview = props => {\r\n    const { \r\n        formState,\r\n        prefix, \r\n        suffix, \r\n        suffixDistance,\r\n        listType,\r\n        listItem, \r\n        unicodeChar,\r\n        numberingStyle,\r\n        sideNumber,\r\n    } = props;\r\n\r\n    const isOrderedList = listType === \"ordered\";\r\n\r\n    const listChars = getListChars({ \r\n        isOrderedList, \r\n        numberingStyle, \r\n        listItem, \r\n        unicodeChar \r\n    });\r\n\r\n    const listItemBeginnings = listChars.map(listChar => {\r\n        return (`${prefix}${listChar}${suffix}`);\r\n    });\r\n\r\n    const previewStyle = generatePreviewStyle(formState);\r\n    const isSideNumber = isOrderedList && sideNumber;\r\n    const sideNumberStyle = isSideNumber ? generateSideNumberStyle(formState) : {};\r\n    const listItemBeginningStyle = {\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n        ...sideNumberStyle,\r\n    };\r\n\r\n    return (\r\n        <div className=\"preview preview_list\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div className=\"preview-content\">\r\n                <div className=\"demonstrationElement\">\r\n                    <div\r\n                        className=\"demonstrationElement-text\"\r\n                        style={previewStyle}\r\n                    >\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginningStyle}\r\n                            >{`${listItemBeginnings[0]}`}</span><span>The first list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginningStyle}\r\n                            >{`${listItemBeginnings[1]}`}</span><span>The second list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginningStyle}\r\n                            >{`${listItemBeginnings[2]}`}</span><span>The third list item</span>\r\n                        </div>\r\n                        { isSideNumber && (\r\n                            <>\r\n                                <div>\r\n                                    <span \r\n                                        className=\"listItemBeginning\"\r\n                                        style={listItemBeginningStyle}\r\n                                    >{`${listItemBeginnings[3]}`}</span><span>One more list item</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span \r\n                                        className=\"listItemBeginning\"\r\n                                        style={listItemBeginningStyle}\r\n                                    >{`${listItemBeginnings[4]}`}</span><span>And one more</span>\r\n                                </div>\r\n                            </>\r\n                        ) }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        formState: form,\r\n        previewText: form.previewText,\r\n        prefix: form.prefix, \r\n        suffix: form.suffix,\r\n        suffixDistance: form.suffixDistance,\r\n        listType: form.listType,\r\n        listItem: form.listItem, \r\n        unicodeChar: form.unicodeChar,\r\n        numberingStyle: form.numberingStyle,\r\n        sideNumber: form.sideNumber,\r\n    };\r\n};\r\n\r\nexport default (connect(mapStateToProps)(ListPreview));","import ColorField from \"./ColorField\";\r\nexport default ColorField;","import React from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport { getCorrectColor, selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ColorField extends React.PureComponent {\r\n    state = {\r\n        isOpen: this.props.isOpen,\r\n    };\r\n\r\n    hideColorPicker = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    showColorPicker = () => {\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    colorPickerHandler = changeColor => ({ hex }) => {\r\n        changeColor(null, hex);\r\n    };\r\n\r\n    render() {\r\n        const { colorCode, changeColorCode, defaultColorCode, required, bottomAligned } = this.props;\r\n        const correctColor = getCorrectColor(colorCode);\r\n        const colorError = correctColor !== colorCode;\r\n        const inputError = colorError && (required || !!colorCode);\r\n        const pickerColor = colorError ? \"\" : `#${correctColor}`;\r\n        const colorSampleStyle = {\r\n            backgroundColor: `#${correctColor}`,\r\n        };\r\n        const colorPickerClassName = `colorPicker${ bottomAligned ? \" colorPicker_bottomAligned\" : \"\"}`;\r\n\r\n        return (\r\n            <div className=\"colorField\">\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    className=\"numberInput\" \r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                    }}\r\n                    value={colorCode}\r\n                    onChange={changeColorCode}\r\n                    onClick={e => { \r\n                        if (defaultColorCode) {\r\n                            selectAllOnClick(defaultColorCode)(e);\r\n                        }\r\n                        // this.showColorPicker(); \r\n                    }}\r\n                    error={inputError}\r\n                />\r\n                <div\r\n                    onClick={this.showColorPicker}\r\n                    className=\"colorSample\" \r\n                    style={colorSampleStyle}\r\n                />\r\n                {this.state.isOpen && (\r\n                    <div className={colorPickerClassName}>\r\n                        <div className=\"colorPicker-chromeBox\">\r\n                            <ChromePicker\r\n                                onChangeComplete={this.colorPickerHandler(changeColorCode)}\r\n                                color={pickerColor}\r\n                                disableAlpha\r\n                            />\r\n                        </div>\r\n                        <div className=\"colorPicker-popOver\"  onClick={this.hideColorPicker}></div>\r\n                    </div>\r\n                ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorField;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport CustomInput from \"./CustomInput\";\r\nimport { fontSet, DEFAULT_FONT } from \"../constants\";\r\nimport { isFontAvailable, focusInput, changeAndScroll } from \"../helpers\";\r\n\r\nclass FontSelectFields extends React.PureComponent {\r\n    customFontInputRef = React.createRef();\r\n\r\n    onFontChange = e => {\r\n        this.props.changeFont(e);\r\n        if (e.target.value === \"custom\") {\r\n            focusInput(this.customFontInputRef);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { font, customFont, changeCustomFont } = this.props;\r\n        const availableFonts = fontSet.filter(fontName => fontName === font || isFontAvailable(fontName));\r\n        const optionalFieldState = font === \"custom\" ? \"optionalField_shown\" : \"optionalField_hidden\";\r\n        return (\r\n            <>\r\n                <span >Font</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={font}\r\n                    onChange={changeAndScroll(this.onFontChange, 500)}\r\n                >\r\n                    <option value={DEFAULT_FONT}>Helvetica</option>\r\n                    { availableFonts.map(fontName => <option value={fontName} key={fontName}>{fontName}</option>) }\r\n                    <option value=\"custom\" className=\"highlightedOption\">Custom</option>\r\n                </NativeSelect>\r\n    \r\n                <div className={`optionalField ${optionalFieldState}`}>\r\n                    <span></span>\r\n                </div>\r\n                <div className={`optionalField ${optionalFieldState}`}>\r\n                    <TextField \r\n                        value={customFont}\r\n                        onChange={changeCustomFont}\r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        placeholder=\"Enter the font name\"\r\n                        inputRef={this.customFontInputRef}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FontSelectFields;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport ListPreview from \"../../common/Preview/ListPreview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport LabelWithAsterisk from \"../../common/LabelWithAsterisk\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport { \r\n    orderedListStylesMap, \r\n    bulletNamesMap, \r\n    HOLDER, \r\n    DEFAULT_FONT_SIZE,\r\n    DEFAULT_SIDE_NUMBER_FONT_COLOR,\r\n    DEFAULT_SIDE_NUMBER_FILLING_COLOR,\r\n    DEFAULT_SIDE_NUMBER_WIDTH,\r\n    DEFAULT_SIDE_NUMBER_RADIUS,\r\n } from \"../../constants\";\r\nimport { \r\n    updateValidationError,\r\n    setValue,\r\n    toggleValue,\r\n    setNumber,\r\n    setColor,\r\n    setBullet,\r\n} from \"../../actions\";\r\nimport { \r\n    selectAllOnClick, \r\n    changeAndScroll, \r\n    focusInput,\r\n    unicodeNumberToChar, \r\n    unicodeCharToNumber, \r\n} from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ListSection extends React.Component {\r\n    listNameInputRef = React.createRef();\r\n    unicodeCharInputRef = React.createRef();\r\n\r\n    onIsListChange = e => {\r\n        const { listName } = this.props;\r\n        if (e.target.checked) {\r\n            if (listName === HOLDER) {\r\n                this.props.changeListName(null, \"\");\r\n            }\r\n        } else if (listName === \"\") {\r\n            setTimeout(() => this.props.changeListName(null, HOLDER), 200);\r\n        }\r\n        this.props.changeIsList(e);\r\n\r\n        if (e.target.checked && listName === HOLDER) {\r\n            focusInput(this.listNameInputRef);\r\n        }       \r\n    };\r\n\r\n    onListTypeChange = e => {\r\n        const { suffix } = this.props;\r\n        const { value } = e.target;\r\n        this.props.changeListType(null, value);\r\n        if (value === \"ordered\" && suffix === \"\") {\r\n            this.props.changeSuffix(null, \".\");\r\n        } else if (value === \"unordered\" && suffix === \".\") {\r\n            this.props.changeSuffix(null, \"\");\r\n        }\r\n    };\r\n\r\n    onListItemChange = e => {\r\n        this.props.changeListItem(e);\r\n        if (e.target.value === \"custom\" && !this.props.unicodeChar) {\r\n            focusInput(this.unicodeCharInputRef);\r\n        }\r\n    };\r\n\r\n    onUnicodeNumberChange = e => {\r\n        const newUnicodeNumber = this.props.changeUnicodeNumber(e);\r\n        const newUnicodeChar = newUnicodeNumber !== \"\" ? unicodeNumberToChar(newUnicodeNumber) : \"\";\r\n        this.props.changeUnicodeChar(null, newUnicodeChar);\r\n    };\r\n    \r\n    onUnicodeCharChange = e => {\r\n        const newUnicodeChar = this.props.changeUnicodeChar(e);\r\n        const newUnicodeNumber = newUnicodeChar !== \"\" ? unicodeCharToNumber(newUnicodeChar) : \"\";\r\n        this.props.changeUnicodeNumber(null, newUnicodeNumber);\r\n    };\r\n\r\n    onSideNumberChange = e => {\r\n        const { suffix } = this.props;\r\n        this.props.changeSideNumber(e);\r\n        if (e.target.checked && suffix === \".\") {\r\n            this.props.changeSuffix(null, \"\");\r\n        } else if (!e.target.checked && suffix === \"\") {\r\n            this.props.changeSuffix(null, \".\");\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.validationErrorInSection) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.validationErrorInSection && !prevprops.validationErrorInSection) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n        if (this.props.validationErrorInSection && this.props.listName) {\r\n            this.props.updateValidationError({ listSection: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            validationErrorInSection,\r\n            listPreviewProps,\r\n            isList,\r\n            listName, changeListName,\r\n            orderLevel, changeOrderLevel,\r\n            prefix, changePrefix,\r\n            suffix, changeSuffix,\r\n            suffixDistance, changeSuffixDistance,\r\n            magicTabs, changeMagicTabs,\r\n            listType,\r\n            listItem,\r\n            unicodeNumber,\r\n            unicodeChar,\r\n            numberingStyle, changeNumberingStyle,\r\n            continueNumbering, changeContinueNumbering,\r\n            allowRestartNumbering, changeAllowRestartNumbering,\r\n            includePreviousFrom, changeIncludePreviousFrom,\r\n            sideNumber,\r\n            sideNumberFont, changeSideNumberFont,\r\n            customSideNumberFont, changeCustomSideNumberFont,\r\n            sideNumberAlignment, changeSideNumberAlignment,\r\n            sideNumberFontSize, changeSideNumberFontSize,\r\n            sideNumberFontColor, changeSideNumberFontColor,\r\n            sideNumberFillingColor, changeSideNumberFillingColor,\r\n            sideNumberWidth, changeSideNumberWidth,\r\n            sideNumberRadius, changeSideNumberRadius,\r\n            sideNumberBold, changeSideNumberBold,\r\n            sideNumberItalic, changeSideNumberItalic,\r\n            sideNumberUnderlined, changeSideNumberUnderlined,\r\n            sideNumberLineHeight, changeSideNumberLineHeight,\r\n        } = this.props;\r\n        \r\n        const mainListSettingsState = isList ? \"shown\" : \"hidden\";\r\n        const unorderedListSettingsState = (isList && listType === \"unordered\") ? \"shown\" : \"hidden\";\r\n        const customListItemSettingsState = (isList && listType === \"unordered\" && listItem === \"custom\") ? \"shown\" : \"hidden\";\r\n        const orderedListSettingsState = (isList && listType === \"ordered\") ? \"shown\" : \"hidden\";\r\n        const sideNumberSettingsState = (isList && listType === \"ordered\" && sideNumber) ? \"shown\" : \"hidden\";\r\n    \r\n        return (\r\n            <>\r\n                <div className=\"dialogGrid dialogGrid_2cols\">\r\n                    <div>\r\n                        <div>\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth\">\r\n                                <div className=\"listItemSpan\">\r\n                                    <span>Is it a list?</span>\r\n                                </div>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox \r\n                                        color=\"primary\" \r\n                                        checked={isList} \r\n                                        onChange={changeAndScroll(this.onIsListChange)} \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${mainListSettingsState}`}>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth optionalSettings\">\r\n                                    <LabelWithAsterisk>List name</LabelWithAsterisk>\r\n                                    <TextField\r\n                                        value={listName}\r\n                                        onChange={changeListName} \r\n                                        error={validationErrorInSection && !listName}\r\n                                        inputRef={this.listNameInputRef}\r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                    />\r\n    \r\n                                    <span>Order level</span>\r\n                                    <div>\r\n                                        <NativeSelect\r\n                                            value={orderLevel}\r\n                                            onChange={changeOrderLevel}\r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            <option value=\"\">...</option>\r\n                                            <option value=\"0\">0</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                        </NativeSelect>\r\n                                    </div>\r\n    \r\n                                    <span>Prefix</span>\r\n                                    <TextField\r\n                                        value={prefix}\r\n                                        onChange={changePrefix} \r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                    />\r\n    \r\n                                    <span>Suffix</span>\r\n                                    <TextField\r\n                                        value={suffix}\r\n                                        onChange={changeSuffix} \r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                        onClick={selectAllOnClick(\".\")}\r\n                                    />\r\n    \r\n                                    <span>Suffix distance</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <NativeSelect\r\n                                            value={suffixDistance}\r\n                                            onChange={changeSuffixDistance} \r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            <option value=\"0.25\">0.25</option>\r\n                                            <option value=\"0.5\">0.5</option>\r\n                                            <option value=\"0.75\">0.75</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"1.25\">1.25</option>\r\n                                            <option value=\"1.5\">1.5</option>\r\n                                            <option value=\"1.75\">1.75</option>\r\n                                            <option value=\"2\">2</option>\r\n                                        </NativeSelect>\r\n                                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                                    </div>\r\n    \r\n                                    <span>Magic Tabs</span>\r\n                                    <div className=\"unlabeledCheckbox\">\r\n                                        <Checkbox \r\n                                            color=\"primary\" \r\n                                            checked={magicTabs} \r\n                                            onChange={changeMagicTabs} \r\n                                        />\r\n                                    </div>\r\n    \r\n                                    <span>Type of list</span>\r\n                                    <RadioGroup \r\n                                        value={listType} \r\n                                        onChange={changeAndScroll(this.onListTypeChange)}\r\n                                        row\r\n                                    >\r\n                                        <div className=\"labeledCheckbox\">\r\n                                            <FormControlLabel\r\n                                                value=\"unordered\"\r\n                                                control={<Radio color=\"primary\" />}\r\n                                                label=\"Unordered\"\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"labeledCheckbox\">\r\n                                            <FormControlLabel\r\n                                                value=\"ordered\"\r\n                                                control={<Radio color=\"primary\" />}\r\n                                                label=\"Ordered\"\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                    </RadioGroup>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`optionalSettings optionalSettings_${orderedListSettingsState}`}>\r\n                            <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                                <span>Numbering style</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={numberingStyle}\r\n                                        onChange={changeNumberingStyle}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        {Array.from(orderedListStylesMap).map(([key, value]) => (\r\n                                            <option value={key} key={key}>{value}</option>\r\n                                        ))}                                    \r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Continue numbering after interruption</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox\r\n                                        checked={continueNumbering}\r\n                                        onChange={changeContinueNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Allow restart numbering</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox\r\n                                        checked={allowRestartNumbering} \r\n                                        onChange={changeAllowRestartNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Include previous levels from</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={includePreviousFrom} \r\n                                        onChange={changeIncludePreviousFrom}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        <option value=\"\">...</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Side number</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox\r\n                                        checked={sideNumber}\r\n                                        onChange={changeAndScroll(this.onSideNumberChange)}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                            </div> \r\n    \r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${sideNumberSettingsState}`}>\r\n                                <div className=\"flexibleGrid listTypeSettings\">\r\n                                    <FontSelectFields \r\n                                        font={sideNumberFont}\r\n                                        changeFont={changeSideNumberFont}\r\n                                        customFont={customSideNumberFont}\r\n                                        changeCustomFont={changeCustomSideNumberFont}\r\n                                    />\r\n                            \r\n                                    <span>Alignment</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberAlignment}\r\n                                        onChange={changeSideNumberAlignment}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"left\"}>Left</option>\r\n                                        <option value={\"center\"}>Center</option>\r\n                                        <option value={\"right\"}>Right</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Font size</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberFontSize}\r\n                                            onChange={changeSideNumberFontSize}\r\n                                            onClick={selectAllOnClick(DEFAULT_FONT_SIZE)}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>      \r\n                            \r\n                                    <span>Font color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFontColor} \r\n                                        changeColorCode={changeSideNumberFontColor}\r\n                                        defaultColorCode={DEFAULT_SIDE_NUMBER_FONT_COLOR}\r\n                                        bottomAligned\r\n                                    />\r\n                                        \r\n                                    <span>Filling color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFillingColor} \r\n                                        changeColorCode={changeSideNumberFillingColor}\r\n                                        defaultColorCode={DEFAULT_SIDE_NUMBER_FILLING_COLOR}\r\n                                        bottomAligned\r\n                                    />\r\n    \r\n                                    <span>Width</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberWidth}\r\n                                            onChange={changeSideNumberWidth}\r\n                                            onClick={selectAllOnClick(DEFAULT_SIDE_NUMBER_WIDTH)}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>\r\n\r\n                                    <span>Line height</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberLineHeight}\r\n                                            onChange={changeSideNumberLineHeight}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>  \r\n                                        \r\n                                    <span>Radius</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberRadius}\r\n                                            onChange={changeSideNumberRadius}\r\n                                            onClick={selectAllOnClick(DEFAULT_SIDE_NUMBER_RADIUS)}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>\r\n\r\n                                    <span className=\"stylingsSpan\">Stylings</span>\r\n                                    <div className=\"checkBoxesSet\">\r\n                                        <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                                            <FormControlLabel\r\n                                                checked={sideNumberBold}\r\n                                                onChange={changeSideNumberBold}\r\n                                                label=\"Bold\"\r\n                                                control={<Checkbox color=\"primary\" />}\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                                            <FormControlLabel\r\n                                                checked={sideNumberItalic}\r\n                                                onChange={changeSideNumberItalic}\r\n                                                label=\"Italic\"\r\n                                                control={<Checkbox color=\"primary\" />}\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox color=\"primary\" />}\r\n                                                label=\"Underlined\"\r\n                                                labelPlacement=\"end\"\r\n                                                checked={sideNumberUnderlined}\r\n                                                onChange={changeSideNumberUnderlined}\r\n                                            />\r\n                                        </div>\r\n                                    </div>  \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className={`listPreviewBox optionalSettings optionalSettings_${mainListSettingsState}`}>\r\n                        <ListPreview {...listPreviewProps} />\r\n                    </div>\r\n                </div>\r\n                <div className={`optionalSettings optionalSettings_${unorderedListSettingsState}`}>\r\n                    <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                        <div className=\"dialogGrid dialogGrid_2cols\">\r\n                            <span className=\"listItemSpan\">List item</span>\r\n                            <div className=\"listItemSelect\">\r\n                                <NativeSelect \r\n                                    value={listItem} \r\n                                    onChange={this.onListItemChange} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    { \r\n                                        Array.from(bulletNamesMap).map(([key, value]) => {\r\n                                            return (<option key={key} value={key}>{value}</option>) \r\n                                        })\r\n                                    }\r\n                                    <option value={\"custom\"} className=\"highlightedOption\">Custom</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`optionalSettings optionalSettings_${customListItemSettingsState}`}>\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Unicode number</span>\r\n                                    <div>\r\n                                        <TextField  \r\n                                            value={unicodeNumber}\r\n                                            onChange={this.onUnicodeNumberChange}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"unicodeInput\" \r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">u+</InputAdornment>\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Char</span>\r\n                                    <div>\r\n                                        <TextField \r\n                                            value={unicodeChar}\r\n                                            onChange={this.onUnicodeCharChange}\r\n                                            onClick={selectAllOnClick()}\r\n                                            inputRef={this.unicodeCharInputRef}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"bulletInput\" \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return {\r\n        validationErrorInSection: validationError.listSection,\r\n        formState: form,\r\n        isList: form.isList,\r\n        listName: form.listName, \r\n        orderLevel: form.orderLevel,\r\n        prefix: form.prefix,\r\n        suffix: form.suffix,\r\n        suffixDistance: form.suffixDistance,\r\n        magicTabs: form.magicTabs,\r\n        listType: form.listType,\r\n        listItem: form.listItem,\r\n        unicodeNumber: form.unicodeNumber,\r\n        unicodeChar: form.unicodeChar,\r\n        numberingStyle: form.numberingStyle,\r\n        continueNumbering: form.continueNumbering,\r\n        allowRestartNumbering: form.allowRestartNumbering,\r\n        includePreviousFrom: form.includePreviousFrom,\r\n        sideNumber: form.sideNumber,\r\n        sideNumberFont: form.sideNumberFont,\r\n        customSideNumberFont: form.customSideNumberFont,\r\n        sideNumberAlignment: form.sideNumberAlignment,\r\n        sideNumberFontSize: form.sideNumberFontSize,\r\n        sideNumberFontColor: form.sideNumberFontColor,\r\n        sideNumberFillingColor: form.sideNumberFillingColor,\r\n        sideNumberWidth: form.sideNumberWidth,\r\n        sideNumberRadius: form.sideNumberRadius,\r\n        sideNumberBold: form.sideNumberBold,\r\n        sideNumberItalic: form.sideNumberItalic,\r\n        sideNumberUnderlined: form.sideNumberUnderlined,\r\n        sideNumberLineHeight: form.sideNumberLineHeight,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        changeListName: setValue(dispatch)(\"listName\"),\r\n        changeIsList: toggleValue(dispatch)(\"isList\"),\r\n        changeOrderLevel: setValue(dispatch)(\"orderLevel\"),\r\n        changePrefix: setValue(dispatch)(\"prefix\"),\r\n        changeSuffix: setValue(dispatch)(\"suffix\"),\r\n        changeSuffixDistance: setValue(dispatch)(\"suffixDistance\"),\r\n        changeMagicTabs: toggleValue(dispatch)(\"magicTabs\"),\r\n        changeListType: setValue(dispatch)(\"listType\"),\r\n        changeListItem: setValue(dispatch)(\"listItem\"),\r\n        changeUnicodeNumber: setColor(dispatch)(\"unicodeNumber\"),\r\n        changeUnicodeChar: setBullet(dispatch)(\"unicodeChar\"),\r\n        changeNumberingStyle: setValue(dispatch)(\"numberingStyle\"),\r\n        changeContinueNumbering: toggleValue(dispatch)(\"continueNumbering\"),\r\n        changeAllowRestartNumbering: toggleValue(dispatch)(\"allowRestartNumbering\"),\r\n        changeIncludePreviousFrom: setValue(dispatch)(\"includePreviousFrom\"),\r\n        changeSideNumber: toggleValue(dispatch)(\"sideNumber\"),\r\n        changeSideNumberFont: setValue(dispatch)(\"sideNumberFont\"),\r\n        changeCustomSideNumberFont: setValue(dispatch)(\"customSideNumberFont\"),\r\n        changeSideNumberAlignment: setValue(dispatch)(\"sideNumberAlignment\"),\r\n        changeSideNumberFontSize: setNumber(dispatch)(\"sideNumberFontSize\"),\r\n        changeSideNumberFontColor: setColor(dispatch)(\"sideNumberFontColor\"),\r\n        changeSideNumberFillingColor: setColor(dispatch)(\"sideNumberFillingColor\"),\r\n        changeSideNumberWidth: setNumber(dispatch)(\"sideNumberWidth\"),\r\n        changeSideNumberRadius: setNumber(dispatch)(\"sideNumberRadius\"),\r\n        changeSideNumberBold: toggleValue(dispatch)(\"sideNumberBold\"),\r\n        changeSideNumberItalic: toggleValue(dispatch)(\"sideNumberItalic\"),\r\n        changeSideNumberUnderlined: toggleValue(dispatch)(\"sideNumberUnderlined\"),\r\n        changeSideNumberLineHeight: setNumber(dispatch)(\"sideNumberLineHeight\"),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListSection);","import ListSection from \"./ListSection\";\r\nexport default ListSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\nimport { setValue } from \"../actions\";\r\nimport { MAIN_LANG_KEY } from \"../constants\";\r\n\r\nclass ReferencingSection extends React.Component {\r\n    onXrefChange = (e, xrefName, xref) => {\r\n        if (xref) {\r\n            this.props.changeReferenceGroupToCreate(null, xref);\r\n        }\r\n        this.props.changeReferenceGroup(e, xrefName);\r\n    };\r\n\r\n    render() {\r\n        const { \r\n            referenceGroupToCreate, \r\n            isGroupDialogOpen,\r\n            hasGroupDialogValidationError,  \r\n            openGroupDialog, \r\n            closeGroupDialog, \r\n            showGroupDialogValidationError, \r\n            hideGroupDialogValidationError,\r\n            referenceGroup,\r\n        } = this.props;\r\n        \r\n        const newGroupName = referenceGroupToCreate[MAIN_LANG_KEY] || referenceGroupToCreate.groupKey;\r\n        const isEditMode = !!newGroupName;\r\n    \r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <span>Reference group</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        input={ <CustomInput /> } \r\n                        value={referenceGroup} \r\n                        onChange={this.onXrefChange} \r\n                    >\r\n                        { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                        <option value=\"\">none</option>\r\n                        <option value=\"0\">Reference group 1</option>\r\n                        <option value=\"1\">Reference group 2</option>\r\n                    </NativeSelect>\r\n                    {\r\n                        !(isEditMode && referenceGroup !== newGroupName) &&\r\n                        <Button color=\"primary\" className=\"textButton\" onClick={openGroupDialog}>\r\n                            { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                        </Button>\r\n                     }\r\n                </div>\r\n                <NewGroupDialog\r\n                    isOpen={isGroupDialogOpen}\r\n                    saveGroup={this.onXrefChange}\r\n                    savedGroup={referenceGroupToCreate}\r\n                    groupType=\"xref\" \r\n                    { ...{ \r\n                        isEditMode,\r\n                        hasGroupDialogValidationError,\r\n                        closeGroupDialog, \r\n                        showGroupDialogValidationError, \r\n                        hideGroupDialogValidationError, \r\n                    } }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        referenceGroup: form.referenceGroup,\r\n        referenceGroupToCreate: form.referenceGroupToCreate,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeReferenceGroup: setValue(dispatch)(\"referenceGroup\"),\r\n        changeReferenceGroupToCreate: setValue(dispatch)(\"referenceGroupToCreate\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(withNewGroupControl(ReferencingSection)));","import * as React from \"react\";\r\nimport deepEqual from \"fast-deep-equal\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, q = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(q[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, q[i]))\r\n              t[q[i]] = s[q[i]];\r\n      }\r\n  return t;\r\n};\r\n\r\nfunction normalizeHtml(str) {\r\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, \" \");\r\n}\r\nfunction findLastTextNode(node) {\r\n  if (node.nodeType === Node.TEXT_NODE)\r\n      return node;\r\n  let children = node.childNodes;\r\n  for (let i = children.length - 1; i >= 0; i--) {\r\n      let textNode = findLastTextNode(children[i]);\r\n      if (textNode !== null)\r\n          return textNode;\r\n  }\r\n  return null;\r\n}\r\nfunction replaceCaret(el) {\r\n  // Place the caret at the end of the element\r\n  const target = findLastTextNode(el);\r\n  // do not move caret if element was not focused\r\n  const isTargetFocused = document.activeElement === el;\r\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\r\n      var sel = window.getSelection();\r\n      if (sel !== null) {\r\n          var range = document.createRange();\r\n          range.setStart(target, target.nodeValue.length);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n      }\r\n      if (el instanceof HTMLElement)\r\n          el.focus();\r\n  }\r\n}\r\n/**\r\n* A simple component for an html element with editable contents.\r\n*/\r\nexport default class ContentEditable extends React.Component {\r\n  constructor() {\r\n      super(...arguments);\r\n      this.lastHtml = this.props.html;\r\n      this.el = typeof this.props.innerRef === \"function\" ? { current: null } : React.createRef();\r\n      this.getEl = () => (this.props.innerRef && typeof this.props.innerRef !== \"function\" ? this.props.innerRef : this.el).current;\r\n      this.emitChange = (originalEvt) => {\r\n          const el = this.getEl();\r\n          if (!el)\r\n              return;\r\n          const html = el.innerHTML;\r\n          if (this.props.onChange && html !== this.lastHtml) {\r\n              // Clone event with Object.assign to avoid\r\n              // \"Cannot assign to read only property 'target' of object\"\r\n              const evt = Object.assign({}, originalEvt, {\r\n                  target: {\r\n                      value: html\r\n                  }\r\n              });\r\n              this.props.onChange(evt);\r\n          }\r\n          this.lastHtml = html;\r\n      };\r\n  }\r\n  render() {\r\n      const _a = this.props, { tagName, html, innerRef } = _a, props = __rest(_a, [\"tagName\", \"html\", \"innerRef\"]);\r\n      return React.createElement(tagName || \"table\", Object.assign({}, props, { ref: typeof innerRef === \"function\" ? (current) => {\r\n              innerRef(current);\r\n              this.el.current = current;\r\n          } : innerRef || this.el, onInput: this.emitChange, onBlur: this.props.onBlur || this.emitChange, onKeyUp: this.props.onKeyUp || this.emitChange, onKeyDown: this.props.onKeyDown || this.emitChange, contentEditable: !this.props.disabled, dangerouslySetInnerHTML: { __html: html } }), this.props.children);\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n      const { props } = this;\r\n      const el = this.getEl();\r\n      // We need not rerender if the change of props simply reflects the user's edits.\r\n      // Rerendering in this case would make the cursor/caret jump\r\n      // Rerender if there is no element yet... (somehow?)\r\n      if (!el)\r\n          return true;\r\n      // ...or if html really changed... (programmatically, not by user edit)\r\n      if (normalizeHtml(nextProps.html) !== normalizeHtml(el.innerHTML)) {\r\n          return true;\r\n      }\r\n      // Handle additional properties\r\n      return props.disabled !== nextProps.disabled ||\r\n          props.tagName !== nextProps.tagName ||\r\n          props.className !== nextProps.className ||\r\n          props.innerRef !== nextProps.innerRef ||\r\n          !deepEqual(props.style, nextProps.style);\r\n  }\r\n  componentDidUpdate() {\r\n      const el = this.getEl();\r\n      if (!el)\r\n          return;\r\n      // Perhaps React (whose VDOM gets outdated because we often prevent\r\n      // rerendering) did not update the DOM. So we update it manually now.(?!(?:<br \\/>|<br>|<br\\/>)$)<(.*?)>\r\n      if (this.props.html !== el.innerHTML) {\r\n          el.innerHTML = this.lastHtml = this.props.html;\r\n      }\r\n      replaceCaret(el);\r\n  }\r\n}\r\nContentEditable.propTypes = {\r\n  html: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  tagName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n  ])\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ContentEditable from \"../ContentEditable\";\r\nimport { generatePreviewStyle } from \"./generators\";\r\nimport { setValue } from \"../../actions\";\r\nimport { selectAllEditableContent, getUnstyledText } from \"../../helpers\"\r\n\r\nimport \"./style.css\";\r\n\r\nclass Preview extends React.Component {\r\n    onPreviewTextChange = e => {\r\n        const { value } = e.target;\r\n        if (value && value !== \"<div></div>\" && value !== \"<br>\") {\r\n            this.props.changePreviewText(null, getUnstyledText(value));\r\n        } else {\r\n            this.props.changePreviewText(null, `<div><br></div>`);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const previewStyle = generatePreviewStyle(this.props.formState);\r\n        const { previewText } = this.props;\r\n    \r\n        return (\r\n            <div className=\"preview\">\r\n                <span className=\"preview-title\">Preview</span>\r\n                <div \r\n                    className=\"preview-content preview-content_withPointer\" \r\n                    onClick={selectAllEditableContent(\"demonstrationElement\")}\r\n                >\r\n                    <div className=\"demonstrationElement\">\r\n                        <ContentEditable\r\n                            className=\"demonstrationElement-text\"\r\n                            onChange={this.onPreviewTextChange} \r\n                            html={previewText}\r\n                            style={previewStyle}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        formState: form,\r\n        previewText: form.previewText,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changePreviewText: setValue(dispatch)(\"previewText\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(Preview));","import Preview from \"./Preview.js\";\r\nexport default Preview;","import TypographySection from \"./TypographySection\";\r\nexport default TypographySection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport Preview from \"../../common/Preview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport {  setValue, toggleValue, setNumber, setColor } from \"../../actions\";\r\nimport { DEFAULT_FONT_SIZE, DEFAULT_FONT_COLOR } from \"../../constants\";\r\nimport { selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst TypographySection = props => {\r\n    const { \r\n        previewProps,\r\n        font, changeFont,\r\n        customFont, changeCustomFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign,\r\n        readOnly, changeReadOnly,\r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"flexibleGrid\">\r\n                <FontSelectFields { ...{ font, changeFont, customFont, changeCustomFont }} />\r\n                \r\n                <span>Alignment</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={alignment}\r\n                    onChange={changeAlignment}\r\n                >\r\n                    <option value={\"left\"}>Left</option>\r\n                    <option value={\"center\"}>Center</option>\r\n                    <option value={\"right\"}>Right</option>\r\n                    <option value={\"justify\"}>Justified</option>\r\n                </NativeSelect>\r\n\r\n                <span>Font size</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={fontSize}\r\n                        onChange={changeFontSize}\r\n                        onClick={selectAllOnClick(DEFAULT_FONT_SIZE)}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>      \r\n\r\n                <span>Font color</span>\r\n                <ColorField \r\n                    colorCode={fontColor} \r\n                    changeColorCode={changeFontColor}\r\n                    defaultColorCode={DEFAULT_FONT_COLOR}\r\n                    required\r\n                />\r\n\r\n                <span>Sub/Superscript</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        value={verticalAlign} \r\n                        onChange={changeVerticalAlign}\r\n                        input={ <CustomInput /> } \r\n                    >\r\n                        <option value=\"baseline\">None</option>\r\n                        <option value=\"sub\">Subscript</option>\r\n                        <option value=\"super\">Superscript</option>\r\n                    </NativeSelect>\r\n                </div>\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_topIndented\">\r\n            <span className=\"stylingsSpan\">Stylings</span>\r\n            <div className=\"checkBoxesSet\">\r\n                <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Bold\"\r\n                        labelPlacement=\"end\"\r\n                        checked={bold}\r\n                        onChange={changeBold}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Italic\"\r\n                        labelPlacement=\"end\"\r\n                        checked={italic}\r\n                        onChange={changeItalic}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Underlined\"\r\n                        labelPlacement=\"end\"\r\n                        checked={underlined}\r\n                        onChange={changeUnderlined}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_stroke\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Stroke\"\r\n                        labelPlacement=\"end\"\r\n                        checked={stroke}\r\n                        onChange={changeStroke}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <span>Text transform</span>\r\n            <RadioGroup \r\n                value={textTransform} \r\n                onChange={changeTextTransform} \r\n                row\r\n            >\r\n                <div className=\"labeledCheckbox\">\r\n                    <FormControlLabel\r\n                        value=\"none\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"None\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_uppercase\">\r\n                    <FormControlLabel\r\n                        value=\"uppercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Uppercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_lowercase\">\r\n                    <FormControlLabel\r\n                        value=\"lowercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Lowercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_smallCaps\">\r\n                    <FormControlLabel\r\n                        value=\"small-caps\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Small caps\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n            </RadioGroup>\r\n\r\n            <span>Read only</span>\r\n            <div className=\"unlabeledCheckbox\">\r\n                <Checkbox \r\n                    checked={readOnly}\r\n                    onChange={changeReadOnly}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        font: form.font,\r\n        customFont: form.customFont,\r\n        alignment: form.alignment,\r\n        fontSize: form.fontSize,\r\n        fontColor: form.fontColor,\r\n        bold: form.bold,\r\n        italic: form.italic,\r\n        underlined: form.underlined,\r\n        stroke: form.stroke,\r\n        textTransform: form.textTransform,\r\n        verticalAlign: form.verticalAlign,\r\n        readOnly: form.readOnly,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeFont: setValue(dispatch)(\"font\"),\r\n        changeCustomFont: setValue(dispatch)(\"customFont\"),\r\n        changeAlignment: setValue(dispatch)(\"alignment\"),\r\n        changeFontSize: setNumber(dispatch)(\"fontSize\"),\r\n        changeFontColor: setColor(dispatch)(\"fontColor\"),\r\n        changeBold: toggleValue(dispatch)(\"bold\"),\r\n        changeItalic: toggleValue(dispatch)(\"italic\"),\r\n        changeUnderlined: toggleValue(dispatch)(\"underlined\"),\r\n        changeStroke: toggleValue(dispatch)(\"stroke\"),\r\n        changeTextTransform: setValue(dispatch)(\"textTransform\"),\r\n        changeVerticalAlign: setValue(dispatch)(\"verticalAlign\"),\r\n        changeMarginTop: setNumber(dispatch)(\"marginTop\"),\r\n        changeReadOnly: toggleValue(dispatch)(\"readOnly\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(TypographySection));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport { toggleValue } from \"../actions\";\r\n\r\nconst ConnectToPreviousField = ({ connectToPrevious, changeConnectToPrevious }) => (\r\n    <>\r\n        <span>Merge sections</span>\r\n        <div className=\"unlabeledCheckbox\">\r\n            <Checkbox \r\n                checked={connectToPrevious}\r\n                onChange={changeConnectToPrevious}\r\n                color=\"primary\" \r\n            />\r\n        </div>\r\n    </>\r\n);\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        connectToPrevious: form.connectToPrevious,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeConnectToPrevious: toggleValue(dispatch)(\"connectToPrevious\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(ConnectToPreviousField));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport Preview from \"../common/Preview\";\r\nimport { setValue, setNumber } from \"../actions\";\r\nimport { DEFAULT_MARGIN, DEFAULT_WORD_SPACING } from \"../constants\";\r\nimport { selectAllOnClick, focusInput, changeAndScroll } from \"../helpers\";\r\nimport ConnectToPreviousField from \"../common/ConnectToPreviousField\";\r\n\r\nclass DistancesSection extends React.Component {\r\n    customLineSpacingInputRef = React.createRef();\r\n\r\n    onLineSpacingChange = e => {\r\n        this.props.changeLineSpacing(e);\r\n        if (e.target.value === \"custom\") {\r\n            focusInput(this.customLineSpacingInputRef);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            previewProps,\r\n            connectToPrevious,\r\n            marginTop, changeMarginTop,\r\n            marginBottom, changeMarginBottom,\r\n            firstRowIndent, changeFirstRowIndent,\r\n            otherRowsIndent, changeOtherRowsIndent,\r\n            lineSpacing,\r\n            customLineSpacing, changeCustomLineSpacing,\r\n            wordSpacing, changeWordSpacing,\r\n        } = this.props;\r\n\r\n        const customLineSpacingFieldState = lineSpacing === \"custom\" ? \"optionalField_shown\" : \"optionalField_hidden\";\r\n        const marginFieldsState = !connectToPrevious ? \"optionalField_shown\" : \"optionalField_hidden\";\r\n\r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n                <div className=\"flexibleGrid\">\r\n                    <ConnectToPreviousField />\r\n                    <div className={`optionalField optionalField ${marginFieldsState}`}>\r\n                      <span>Margin top</span>\r\n                    </div>\r\n                    <div className={`inputWithAdornment optionalField ${marginFieldsState}`}>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={marginTop}\r\n                            onChange={changeMarginTop}\r\n                            onClick={selectAllOnClick(DEFAULT_MARGIN)}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </div> \r\n    \r\n                    <div className={`optionalField ${marginFieldsState}`}>\r\n                        <span>Margin bottom</span>\r\n                    </div>\r\n\r\n                    <div className={`inputWithAdornment optionalField ${marginFieldsState}`}>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={marginBottom}\r\n                            onChange={changeMarginBottom}\r\n                            onClick={selectAllOnClick(DEFAULT_MARGIN)}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </div> \r\n    \r\n                    <span>1st row indent</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={firstRowIndent}\r\n                            onChange={changeFirstRowIndent}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                    </div>\r\n    \r\n                    <span>Other rows indent</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={otherRowsIndent}\r\n                            onChange={changeOtherRowsIndent}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                    </div>\r\n    \r\n                    <span>Line spacing</span>\r\n                    <div>\r\n                        <NativeSelect \r\n                            input={ <CustomInputShort /> } \r\n                            value={lineSpacing} \r\n                            onChange={changeAndScroll(this.onLineSpacingChange, 500)} \r\n                        >\r\n                            <option value=\"1.0\">1.0</option>\r\n                            <option value=\"1.15\">1.15</option>\r\n                            <option value=\"1.5\">1.5</option>\r\n                            <option value=\"2.0\">2.0</option>\r\n                            <option value=\"2.5\">2.5</option>\r\n                            <option value=\"3.0\">3.0</option>\r\n                            <option value=\"custom\" className=\"highlightedOption\">Custom</option>\r\n                        </NativeSelect> \r\n                    </div>\r\n\r\n                    <div className={`optionalField ${customLineSpacingFieldState}`}>\r\n                    </div>\r\n                    <div className={`optionalField ${customLineSpacingFieldState}`}>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={customLineSpacing}\r\n                            onChange={changeCustomLineSpacing}\r\n                            placeholder=\"Your value\"\r\n                            inputRef={this.customLineSpacingInputRef}\r\n                        />                                            \r\n                    </div>\r\n                        \r\n                    <span>Word spacing</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={wordSpacing}\r\n                            onChange={changeWordSpacing}\r\n                            onClick={selectAllOnClick(DEFAULT_WORD_SPACING)}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </div> \r\n                </div>\r\n                <div className=\"previewSide\">\r\n                    <Preview {...previewProps} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        connectToPrevious: form.connectToPrevious,\r\n        marginTop: form.marginTop,\r\n        marginBottom: form.marginBottom,\r\n        firstRowIndent: form.firstRowIndent,\r\n        otherRowsIndent: form.otherRowsIndent,\r\n        lineSpacing: form.lineSpacing,\r\n        customLineSpacing: form.customLineSpacing,\r\n        wordSpacing: form.wordSpacing,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeMarginTop: setNumber(dispatch)(\"marginTop\"),\r\n        changeMarginBottom: setNumber(dispatch)(\"marginBottom\"),\r\n        changeFirstRowIndent: setNumber(dispatch)(\"firstRowIndent\"),\r\n        changeOtherRowsIndent: setNumber(dispatch)(\"otherRowsIndent\"),\r\n        changeLineSpacing: setValue(dispatch)(\"lineSpacing\"),\r\n        changeCustomLineSpacing: setNumber(dispatch)(\"customLineSpacing\"),\r\n        changeWordSpacing: setNumber(dispatch)(\"wordSpacing\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(DistancesSection));","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst FrameTypeInput = withStyles(theme => ({\r\n    root: {\r\n      width: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      fontFamily: [\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default FrameTypeInput;","import { getCorrectColor } from \"../../helpers\";\r\n\r\nconst generateBorderPreviewStyle = formState => {\r\n    const { \r\n        borderLeft,\r\n        borderRight,\r\n        borderTop,\r\n        borderBottom,\r\n        borderColor,\r\n        borderThickness,\r\n        borderType,\r\n    } = formState;\r\n\r\n    const correctColor = getCorrectColor(borderColor);\r\n    const previewBorderWidth = borderThickness && !isNaN(parseFloat(borderThickness))\r\n                                ? `${borderThickness <= 15 ? borderThickness : 15}pt`\r\n                                : \"0\";\r\n\r\n    const previewStyle = {\r\n        borderLeft: borderLeft ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginLeft: borderLeft ? \"0\" : previewBorderWidth, \r\n        borderRight: borderRight ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginRight: borderRight ? \"0\" : previewBorderWidth, \r\n        borderTop: borderTop ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginTop: borderTop ? \"0\" : previewBorderWidth, \r\n        borderBottom: borderBottom ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginBottom: borderBottom ? \"0\" : previewBorderWidth, \r\n    };\r\n\r\n    return previewStyle;\r\n};\r\n\r\nexport default generateBorderPreviewStyle;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport FrameTypeInput from \"../../sections/FramesSection/FrameTypeInput\";\r\nimport Preview from \"../../common/Preview\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport ConnectToPreviousField from \"../../common/ConnectToPreviousField\";\r\nimport generateBorderPreviewStyle from \"./generateBorderPreviewStyle\";\r\nimport { setValue, toggleValue, setNumber, setColor } from \"../../actions\";\r\nimport { selectAllOnClick } from \"../../helpers\";\r\nimport { DEFAULT_BORDER_COLOR, DEFAULT_BORDER_THICKNESS } from \"../../constants\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass FramesSection extends React.Component {\r\n    onBorderTypeChange = e => {\r\n        this.props.changeBorderType(e);\r\n        if (e.target.value === \"double\" && this.props.borderThickness === \"2\") {\r\n            this.props.changeBorderThickness(null, \"3\");\r\n        } else if (e.target.value !== \"double\" && this.props.borderThickness === \"3\") {\r\n            this.props.changeBorderThickness(null, \"2\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { \r\n            previewProps,\r\n            formState,\r\n            borderLeft, changeBorderLeft, \r\n            borderRight, changeBorderRight,\r\n            borderTop, changeBorderTop, \r\n            borderBottom, changeBorderBottom, \r\n            borderColor, changeBorderColor,\r\n            borderThickness, changeBorderThickness,\r\n            borderType,\r\n         } = this.props;\r\n\r\n        const previewStyle = generateBorderPreviewStyle(formState)\r\n    \r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n                <div>\r\n                    <div className=\"directionControlsContainer\">\r\n                        <div className=\"directionsControls\" style={previewStyle}>\r\n                            <span className=\"directionLabel\">Left</span>\r\n                            <div className=\"centralColumn\">\r\n                                <span className=\"directionLabel\">Top</span>\r\n                                <div className=\"checkboxesKit crossGrid\">\r\n                                    <div id=\"r1\" className=\"gridCell\">\r\n                                        <Checkbox \r\n                                            color=\"primary\"\r\n                                            checked={borderTop}  \r\n                                            onChange={changeBorderTop}\r\n                                        />\r\n                                    </div>\r\n                                    <div id=\"r2c1\" className=\"gridCell\">\r\n                                        <Checkbox \r\n                                            color=\"primary\" \r\n                                            checked={borderLeft}  \r\n                                            onChange={changeBorderLeft}\r\n                                        />\r\n                                    </div>\r\n                                    <div id=\"r2c2\" className=\"gridCell\">\r\n                                    </div>\r\n                                    <div id=\"r2c3\" className=\"gridCell\">\r\n                                        <Checkbox \r\n                                            color=\"primary\" \r\n                                            checked={borderRight}  \r\n                                            onChange={changeBorderRight}\r\n                                        />\r\n                                    </div>\r\n                                    <div id=\"r3\" className=\"gridCell\">\r\n                                        <Checkbox \r\n                                            color=\"primary\"\r\n                                            checked={borderBottom}  \r\n                                            onChange={changeBorderBottom}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"directionLabel\">Bottom</span>\r\n                            </div>\r\n                            <span className=\"directionLabel\">Right</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        <span>Frame color</span>\r\n                        <ColorField \r\n                            colorCode={borderColor} \r\n                            changeColorCode={changeBorderColor}\r\n                            defaultColorCode={DEFAULT_BORDER_COLOR}\r\n                            required\r\n                        />\r\n        \r\n                        <span>Frame thickness</span>\r\n                        <div className=\"inputWithAdornment\">\r\n                            <TextField \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                                className=\"numberInput\"\r\n                                value={borderThickness}\r\n                                onChange={changeBorderThickness}\r\n                                onClick={selectAllOnClick(DEFAULT_BORDER_THICKNESS)}\r\n                            />                                            \r\n                            <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                        </div>                        \r\n        \r\n                        <span>Type of frame</span>\r\n                        <div >\r\n                            <Select\r\n                            input={<FrameTypeInput />}\r\n                            value={borderType}\r\n                            onChange={this.onBorderTypeChange}\r\n                            >\r\n                                <MenuItem value=\"solid\"><b>━━━━</b></MenuItem>\r\n                                <MenuItem value=\"dotted\">• • • • • • •</MenuItem>\r\n                                <MenuItem value=\"dashed\"><b>– – – – –</b></MenuItem>\r\n                                <MenuItem value=\"double\">══════</MenuItem>              \r\n                            </Select>\r\n                        </div>\r\n\r\n                        <ConnectToPreviousField />\r\n                    </div>\r\n                </div>\r\n                <div className=\"previewSide\">\r\n                    <Preview {...previewProps} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        formState: form,\r\n        borderLeft: form.borderLeft,\r\n        borderRight: form.borderRight,\r\n        borderTop: form.borderTop,\r\n        borderBottom: form.borderBottom,\r\n        borderColor: form.borderColor,\r\n        borderThickness: form.borderThickness,\r\n        borderType: form.borderType,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeBorderLeft: toggleValue(dispatch)(\"borderLeft\"),\r\n        changeBorderRight: toggleValue(dispatch)(\"borderRight\"),\r\n        changeBorderTop: toggleValue(dispatch)(\"borderTop\"),\r\n        changeBorderBottom: toggleValue(dispatch)(\"borderBottom\"),\r\n        changeBorderColor: setColor(dispatch)(\"borderColor\"),\r\n        changeBorderThickness: setNumber(dispatch)(\"borderThickness\"),\r\n        changeBorderType: setValue(dispatch)(\"borderType\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(FramesSection));","import FramesSection from \"./FramesSection\";\r\nexport default FramesSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Preview from \"../common/Preview\";\r\nimport ColorField from \"../common/ColorField\";\r\nimport ConnectToPreviousField from \"../common/ConnectToPreviousField\";\r\nimport { setColor } from \"../actions\";\r\n\r\nconst  FillingSection = ({ previewProps, fillingColor, changeFillingColor }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Filling color</span>\r\n                <ColorField \r\n                    colorCode={fillingColor} \r\n                    changeColorCode={changeFillingColor}\r\n                />\r\n                <ConnectToPreviousField />\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        fillingColor: form.fillingColor,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changeFillingColor: setColor(dispatch)(\"fillingColor\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(FillingSection));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport { setValue } from \"../actions\";\r\n\r\nconst TocSection = ({ tocIndentation, changeTocIndentation }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>ToC indentation</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={tocIndentation}\r\n                    onChange={changeTocIndentation} \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>                    \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        tocIndentation: form.tocIndentation,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changeTocIndentation: setValue(dispatch)(\"tocIndentation\"),\r\n    };\r\n};\r\n\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(TocSection));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { setShortCut } from \"../actions\";\r\n\r\nconst ShortCutSection = ({ shortCutWinView, shortCutMacView, changeShortCutWin, changeShortCutMac }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n            <span>Mac</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField\r\n                    value={shortCutMacView}\r\n                    onKeyDown={changeShortCutMac}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n\r\n            <span>Windows</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField\r\n                    value={shortCutWinView}\r\n                    onKeyDown={changeShortCutWin}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        shortCutWinView: form.shortCutWinView,\r\n        shortCutMacView: form.shortCutMacView,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changeShortCutWin: setShortCut(dispatch)(\"shortCutWin\", \"shortCutWinView\"),\r\n        changeShortCutMac: setShortCut(dispatch)(\"shortCutMac\", \"shortCutMacView\"),\r\n    };\r\n};\r\n\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(ShortCutSection));","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: pink,\r\n    },\r\n});\r\n\r\nexport default theme;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomTab;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomErrorTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n      textDecoration: \"red underline\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n        textDecoration: \"indianred underline\",\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomErrorTab;","import Tabs from \"@material-ui/core/Tabs\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n    indicator: {\r\n        backgroundColor: \"#1890ff\",\r\n        opacity: 0.5,\r\n        width: \"190px\",\r\n        zIndex: 5,\r\n        display: \"none\",\r\n    }\r\n};\r\n\r\nexport default withStyles(styles)(Tabs);","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst CustomDialog = withStyles(theme => ({\r\n    root: {\r\n        minWidth: \"1250px\",\r\n        minHeight: \"1100px !important\",\r\n        height: \"100%\",\r\n    },\r\n    container: {\r\n        height: \"100vh\",\r\n        display: \"block\",\r\n    },\r\n    scrollBody: {\r\n        \"&:after\": {\r\n            height: \"100%\",\r\n        }\r\n    },\r\n    paperFullWidth: {\r\n        maxWidth: \"1280px\",\r\n        maxHeight: \"850px\",\r\n        minHeight: \"550px\",\r\n        width: \"calc(100% - 96px)\",\r\n        height: \"calc(100% - 96px)\",\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        border: \"none\",\r\n    },\r\n    paperScrollBody: {\r\n        verticalAlign: \"middle\",\r\n    },\r\n  }))(Dialog);\r\n  \r\n  export default CustomDialog;","export const SAVE_DEC_FORM = \"SAVE_DEC_FORM\";\r\nexport const CLEAR_SAVED_DEC_FORM = \"CLEAR_SAVED_DEC_FORM\";\r\n\r\nexport const saveDecoratorForm = payload => {\r\n    return {\r\n        type: SAVE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearSavedDecoratorForm = () => {\r\n    return {\r\n        type: CLEAR_SAVED_DEC_FORM,\r\n    };\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport NamesSection from \"./sections/NamesSection\";\r\nimport PositioningSection from \"./sections/PositioningSection\";\r\nimport ListSection from \"./sections/ListSection\";\r\nimport ReferencingSection from \"./sections/ReferencingSection\";\r\nimport TypographySection from \"./sections/TypographySection\";\r\nimport DistancesSection from \"./sections/DistancesSection\";\r\nimport FramesSection from \"./sections/FramesSection\";\r\nimport FillingSection from \"./sections/FillingSection\";\r\nimport TocSection from \"./sections/TocSection\";\r\nimport ShortCutsSection from \"./sections/ShortCutsSection\";\r\n// import TestSection from \"./sections/TestSection\";\r\n\r\nimport theme from \"./theme\";\r\nimport CustomTab from \"./common/CustomTab\";\r\nimport CustomErrorTab from \"./common/CustomErrorTab\";\r\nimport CustomTabs from \"./common/CustomTabs\";\r\nimport CustomDialog from \"./common/CustomDialog\";\r\nimport { saveDecoratorForm } from \"../../actions\";\r\nimport { \r\n    closeDialog, \r\n    clearDecoratorForm, \r\n    switchDecDialogTab, \r\n    updateValidationError \r\n} from \"./actions\";\r\nimport { \r\n    fillMissedFields, \r\n    DecDataConverter, \r\n    getTabsErrorState,\r\n    getTabNumberToSwitch,\r\n} from \"./helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass DecoratorDialog extends React.Component {\r\n    onClose = () => {\r\n        this.props.closeDialog();\r\n        this.props.clearForm();\r\n    };\r\n\r\n    onSaveButtonClick = () => {\r\n        const { formState, updateValidationError, switchTab, sendForm } = this.props;\r\n        const tabsErrorState = getTabsErrorState(formState);\r\n        if (tabsErrorState) {\r\n            updateValidationError(tabsErrorState);\r\n            switchTab(getTabNumberToSwitch(tabsErrorState));\r\n        } else {\r\n            const formToSend = DecDataConverter.convertToSend(fillMissedFields(formState));\r\n            sendForm(formToSend);\r\n            this.onClose();\r\n        }\r\n    };\r\n\r\n    onTabSwitch = (e, tabNumber) => {\r\n        this.props.switchTab(tabNumber);\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            isOpen, \r\n            openedTab,\r\n            validationError, \r\n            isEditMode,\r\n        } = this.props;\r\n    \r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <CustomDialog\r\n                    open={isOpen}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    scroll=\"body\"\r\n                    className=\"decoratorDialog\"\r\n                    fullWidth={true}\r\n                    maxWidth={false}\r\n                    id=\"dialog\"\r\n                >\r\n                    <div className=\"header\">\r\n                        <DialogTitle className=\"header-title\">\r\n                            <p>Create new paragraph decorator</p>\r\n                        </DialogTitle>\r\n                        <div className=\"header-buttons\">\r\n                            <Button \r\n                                variant=\"contained\"\r\n                                color=\"default\"\r\n                                onClick={this.onClose}\r\n                                className=\"topNavButton\"\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                            <Button \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={this.onSaveButtonClick}\r\n                                className=\"topNavButton\"\r\n                            >\r\n                                {isEditMode ? \"Save\" : \"Create\"}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <DialogContent className=\"content\">\r\n                        <div className=\"content-leftSide\">\r\n                            <CustomTabs \r\n                                className=\"dialogTabs\"\r\n                                value={openedTab} \r\n                                onChange={this.onTabSwitch} \r\n                                orientation=\"vertical\"\r\n                                color=\"primary\"\r\n                                indicatorColor=\"primary\"\r\n                            >\r\n                                { validationError.namesSection \r\n                                    ? ( <CustomErrorTab className=\"dialogTab\" label=\"Decorator's name\" /> )\r\n                                    :  ( <CustomTab className=\"dialogTab\" label=\"Decorator's name\" /> ) }\r\n    \r\n                                <CustomTab className=\"dialogTab\" label=\"Positioning\" />\r\n    \r\n                                { validationError.listSection \r\n                                    ? ( <CustomErrorTab className=\"dialogTab\" label=\"List\" /> ) \r\n                                    : ( <CustomTab className=\"dialogTab\" label=\"List\" /> ) }\r\n    \r\n                                <CustomTab className=\"dialogTab\" label=\"Referencing\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Typography\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Distances\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Frames\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Filling\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"ToC\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Short cuts\" />\r\n                                {/* <CustomTab className=\"dialogTab\" label=\"Test\" /> */}\r\n                            </CustomTabs>\r\n                        </div>\r\n                        <div className=\"content-rightSide\">\r\n                            { openedTab === 0 && <NamesSection /> }\r\n                            { openedTab === 1 && <PositioningSection /> }\r\n                            { openedTab === 2 && <ListSection /> }\r\n                            { openedTab === 3 && <ReferencingSection /> }\r\n                            { openedTab === 4 && <TypographySection /> }\r\n                            { openedTab === 5 && <DistancesSection /> }\r\n                            { openedTab === 6 && <FramesSection /> }\r\n                            { openedTab === 7 && <FillingSection /> }\r\n                            { openedTab === 8 && <TocSection /> }\r\n                            { openedTab === 9 && <ShortCutsSection /> }\r\n                            {/* openedTab === 10 && <TestSection /> */}\r\n                        </div>\r\n                    </DialogContent>\r\n                </CustomDialog>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, isOpen, openedTab, validationError, isEditMode }}) => {\r\n    return { \r\n        formState: form,\r\n        isOpen,\r\n        openedTab,\r\n        validationError, \r\n        isEditMode,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        closeDialog: closeDialog(dispatch),\r\n        clearForm: () => dispatch(clearDecoratorForm()),\r\n        switchTab: payload => dispatch(switchDecDialogTab(payload)),\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        saveForm: payload => dispatch(saveDecoratorForm(payload)),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(DecoratorDialog);","import DecoratorDialog from \"./DecoratorDialog\";\r\nexport default DecoratorDialog;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport DecoratorDialog from \"./components/DecoratorDialog\";\nimport { openDialog } from \"./components/DecoratorDialog/actions\";\nimport { clearSavedDecoratorForm,  saveDecoratorForm } from \"./actions\";\nimport { DecDataConverter } from \"./components/DecoratorDialog/helpers\";\nimport theme from \"./components/DecoratorDialog/theme\";\n\nimport \"./App.css\";\n\nconst App = props => {\n    const { openDialog, saveForm, clearSavedForm, savedForm } = props;\n\n    const openEditDialog = () => {\n        openDialog(DecDataConverter.convertToEdit(savedForm || {}));\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"App\">\n                <div className=\"startButtons\">\n                    { !savedForm ? (\n                        <Button \n                            onClick={() => openDialog()}\n                            color=\"primary\"\n                        >Create new</Button>\n                    ) : (\n                        <>\n                            <Button \n                                onClick={() => openEditDialog()}\n                            >Edit saved</Button>\n                            <Button \n                                onClick={clearSavedForm}\n                                color=\"secondary\"\n                            >Delete saved</Button>\n                        </>\n                    )}\n                </div>\n                <DecoratorDialog sendForm={saveForm} />\n            </div>\n        </ThemeProvider>\n    );\n};\n\nconst mapStateToProps = ({ savedForm }) => {\n    return { savedForm };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        openDialog: openDialog(dispatch),\n        saveForm: payload => dispatch(saveDecoratorForm(payload)),\n        clearSavedForm: () => dispatch(clearSavedDecoratorForm()),\n    };\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { SHOW_DEC_DIALOG, HIDE_DEC_DIALOG } from \"../../components/DecoratorDialog/actions\";\r\n\r\nconst isOpenReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case SHOW_DEC_DIALOG:\r\n            return true;\r\n        case HIDE_DEC_DIALOG:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isOpenReducer;","import { UPDATE_DEC_FORM, CLEAR_DEC_FORM } from \"../../components/DecoratorDialog/actions\";\r\nimport { sampleText, initialFormState } from \"../../components/DecoratorDialog/constants\";\r\n\r\nconst initialState = { \r\n    previewText: sampleText,\r\n    ...initialFormState,\r\n};\r\n\r\nconst decoratorFormReducer = (state = initialState, action) =>  {\r\n    switch (action.type) {\r\n        case UPDATE_DEC_FORM:\r\n            return { ...state, ...action.payload };\r\n        case CLEAR_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default decoratorFormReducer;","import { \r\n    UPDATE_VALIDATION_ERROR, \r\n    REMOVE_VALIDATION_ERROR, \r\n} from \"../../components/DecoratorDialog/actions\";\r\n\r\nimport { tabsErrorInitialState } from \"../../components/DecoratorDialog/constants\";\r\n\r\nconst validationErrorReducer = (state = tabsErrorInitialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_VALIDATION_ERROR:\r\n            return { ...state, ...action.payload };\r\n        case REMOVE_VALIDATION_ERROR:\r\n            return tabsErrorInitialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default validationErrorReducer;","import { \r\n    SWITCH_ON_DEC_DIALOG_EDIT_MODE, \r\n    SWITCH_OFF_DEC_DIALOG_EDIT_MODE, \r\n} from \"../../components/DecoratorDialog/actions\";\r\n\r\nconst isEditModeReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_ON_DEC_DIALOG_EDIT_MODE:\r\n            return true;\r\n        case SWITCH_OFF_DEC_DIALOG_EDIT_MODE:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isEditModeReducer;","import { \r\n    SWITCH_DEC_DIALOG_TAB,\r\n    RESET_DEC_DIALOG_TAB, \r\n} from \"../../components/DecoratorDialog/actions\";\r\n\r\nconst initialState = 0;\r\n\r\nconst openedTabReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_DEC_DIALOG_TAB:\r\n            return action.payload;\r\n        case RESET_DEC_DIALOG_TAB:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default openedTabReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport isOpenReducer from \"./isOpenReducer\";\r\nimport decoratorFormReducer from \"./decoratorFormReducer\";\r\nimport validationErrorReducer from \"./validationErrorReducer\";\r\nimport isEditModeReducer from \"./isEditModeReducer\";\r\nimport openedTabReducer from \"./openedTabReducer\";\r\n\r\nconst decoratorDialogReducer = combineReducers({\r\n    isOpen: isOpenReducer,\r\n    openedTab: openedTabReducer,\r\n    validationError: validationErrorReducer,\r\n    isEditMode: isEditModeReducer,\r\n    form: decoratorFormReducer,\r\n});\r\n\r\nexport default decoratorDialogReducer;","import { SAVE_DEC_FORM, CLEAR_SAVED_DEC_FORM } from \"../actions\";\r\n\r\nconst initialState = null;\r\n\r\nexport const savedFormReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SAVE_DEC_FORM:\r\n            return action.payload;\r\n        case CLEAR_SAVED_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default savedFormReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport decoratorDialogReducer from \"./decoratorDialogReducer\";\r\nimport savedFormReducer from \"./savedFormReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    decoratorDialog: decoratorDialogReducer,\r\n    savedForm: savedFormReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}