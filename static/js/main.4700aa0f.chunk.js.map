{"version":3,"sources":["components/DecoratorDialog/common/CustomInput.js","components/DecoratorDialog/common/NewGroupDialog.js","components/DecoratorDialog/common/LabelWithAsterisk.js","components/DecoratorDialog/hoc/withNewGroupControl.js","components/DecoratorDialog/helpers/DecDataParser.js","components/DecoratorDialog/helpers/isFontAvailable.js","components/DecoratorDialog/helpers/getShortCutUtils.js","components/DecoratorDialog/constants/decoratorsList.js","components/DecoratorDialog/constants/fontsSet.js","components/DecoratorDialog/constants/validationData.js","components/DecoratorDialog/constants/constants.js","components/DecoratorDialog/constants/emptyDecFormState.js","components/DecoratorDialog/helpers/validationFunctions.js","components/DecoratorDialog/helpers/helpers.js","components/DecoratorDialog/actions/index.js","components/DecoratorDialog/sections/NamesSection.js","components/DecoratorDialog/sections/WordExportSection.js","components/DecoratorDialog/common/CustomInputShort.js","components/DecoratorDialog/sections/PositioningSection/BackSpaceActionInput.js","components/DecoratorDialog/sections/PositioningSection/index.js","components/DecoratorDialog/sections/PositioningSection/PositioningSection.js","components/DecoratorDialog/common/Preview/generators.js","components/DecoratorDialog/common/Preview/ListPreview.js","components/DecoratorDialog/common/ColorField/index.js","components/DecoratorDialog/common/ColorField/ColorField.js","components/DecoratorDialog/common/FontSelectFields.js","components/DecoratorDialog/sections/ListSection/ListSection.js","components/DecoratorDialog/sections/ListSection/index.js","components/DecoratorDialog/sections/ReferencingSection.js","components/DecoratorDialog/common/ContentEditable.js","components/DecoratorDialog/common/Preview/Preview.js","components/DecoratorDialog/common/Preview/index.js","components/DecoratorDialog/sections/TypographySection/index.js","components/DecoratorDialog/sections/TypographySection/TypographySection.js","components/DecoratorDialog/sections/DistancesSection.js","components/DecoratorDialog/sections/FramesSection/FrameTypeInput.js","components/DecoratorDialog/sections/FramesSection/generateBorderPreviewStyle.js","components/DecoratorDialog/sections/FramesSection/FramesSection.js","components/DecoratorDialog/sections/FramesSection/index.js","components/DecoratorDialog/sections/FillingSection.js","components/DecoratorDialog/sections/TocSection.js","components/DecoratorDialog/sections/ShortCutsSection.js","components/DecoratorDialog/theme.js","components/DecoratorDialog/common/CustomTab.js","components/DecoratorDialog/common/CustomErrorTab.js","components/DecoratorDialog/common/CustomTabs.js","components/DecoratorDialog/common/CustomDialog.js","actions.js","components/DecoratorDialog/DecoratorDialog.js","components/DecoratorDialog/index.js","App.js","reducers/decoratorDialogReducer/isOpenReducer.js","reducers/decoratorDialogReducer/decoratorFormReducer.js","reducers/decoratorDialogReducer/validationErrorReducer.js","reducers/decoratorDialogReducer/isEditModeReducer.js","reducers/decoratorDialogReducer/openedTabReducer.js","reducers/decoratorDialogReducer/index.js","reducers/savedFormReducer.js","reducers/rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["CustomInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","minWidth","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","NewGroupDialog","state","props","currentGroup","groupType","nameEn","nameDe","nameRu","nameFr","nameFrCa","nameEs","groupKey","onInputChange","inputName","e","setState","target","value","onClose","hideDialog","onGroupSave","onSave","changeGroupSelect","trim","length","groupToSave","this","isOpen","isEditMode","titleText","buttonText","Dialog","className","open","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","variant","margin","onChange","DialogActions","Button","onClick","color","React","Component","LabelWithAsterisk","children","withNewGroupControl","ViewComponent","groupSelect","newGroup","savedNewGroup","handleClick","newValue","DecDataParser","dec","mapDecFields","width","getShortCutUtils","systemName","keyCode","preventDefault","stopPropagation","ShortcutUtils","isDeadKey","prevent","deleteKey","shortCut","ctrlKey","shiftKey","altKey","metaKey","shortCutForView","convertShortcutToMeta","indexOf","isCmdPressed","stringValue","Object","keys","CMD_KEYS","forEach","key","keycode","removeDuplicateShortcuts","decorators","newPdShortcut","removed","decoratorKey","item","item_type","isEqual","keyboard_shortcut","childItems","child_items","itemKey","style","removeDuplicateShortcutsInInlineStyle","inlineStyles","styleKey","body","document","container","createElement","innerHTML","Array","cssText","getWidth","appendChild","clientWidth","removeChild","monoWidth","serifWidth","sansWidth","isFontAvailable","font","decoratorsList","name","fontSet","namesSectionRequiredFields","wordExportSectionRequiredFields","listSectionRequiredFields","tabsErrorInitialState","namesSection","wordExportSection","listSection","sectionsTabNumbers","tabName","tabNumber","alignmentsMap","center","left","right","justify","backSpaceActions","bulletNamesMap","bulletpoint","dash","star","listStyleTypes","numberingSets","decimal","HOLDER","autoFillingRequiredFields","sideNumberFont","sideNumberFontSize","sideNumberFontColor","sideNumberFillingColor","sideNumberWidth","sideNumberRadius","fontColor","marginBottom","firstRowIndent","otherRowsIndent","wordSpacing","lineSpacing","borderThickness","emptyDecFormState","decKey","group","groupToCreate","active","decNameEn","decNameDe","decNameRu","decNameFr","decNameFrCa","decNameEs","wordStyleName","softReturn","indentationalLevel","backspaceActionWithContent","backspaceActionWithContentStyle","returnActionNextSection","returnActionEmptySection","tabAction","shiftTabAction","isList","listName","orderLevel","prefix","suffix","suffixDistance","magicTabs","listType","listItem","unicodeNumber","unicodeChar","numberingStyle","continueNumbering","allowRestartNumbering","includePreviousFrom","sideNumber","customSideNumberFont","sideNumberAlignment","referenceGroup","referenceGroupToCreate","customFont","alignment","fontColorName","bold","italic","underlined","stroke","textTransform","verticalAlign","customLineSpacing","leftBorder","rightBorder","topBorder","bottomBorder","borderColorName","borderType","borderConnectToPrevious","fillingColorName","fillingColor","fillingfillingConnectToPrevious","tocIndentation","shortCutWin","shortCutWinView","shortCutMac","shortCutMacView","getNamesSectionErrorState","form","every","fieldName","getWordExportSectionErrorState","getListSectionErrorState","getTabsErrorState","tabsState","clone","getTabNumberToSwitch","tabsErrorState","getCorrectColor","hex","correctColor","selectAllOnClick","defaultValue","focus","select","getOffset","alignType","parseFloat","slice","getUnstyledText","styledText","unstyledText","replace","unicodeNumberToChar","String","fromCharCode","parseInt","unicodeCharToNumber","charCodeAt","toString","scrollToBottom","setTimeout","getElementsByClassName","scrollTo","top","Number","MAX_SAFE_INTEGER","behavior","changeAndScroll","changeFunction","timeOut","focusInput","inputRef","timeout","current","getPreviewFont","fillMissedFields","currentFormState","formStateWithoutMissedFields","option","customOption","updateDecoratorForm","payload","type","clearDecoratorForm","updateValidationError","openDialog","dispatch","closeDialog","setValue","propName","secondArg","undefined","toggleValue","checked","setBullet","newBullet","setColor","filteredInput","match","setNumber","setShortCut","valuePropName","viewPropName","isMac","convertEventToShortCut","NamesSection","decKeyInputRef","createRef","decNameEnInputRef","focusOnEmptyField","onGroupChange","changeGroupToCreate","changeGroup","validationError","prevprops","formState","changeDecKey","changeActive","changeDecNameEn","changeDecNameDe","changeDecNameRu","changeDecNameFr","changeDecNameFrCa","changeDecNameEs","newGroupName","error","NativeSelect","Checkbox","connect","decoratorDialog","changeWordStyleName","changeSoftReturn","autoFocus","CustomInputShort","BackSpaceActionInput","PositioningSection","changeIndentationalLevel","changeBackspaceActionWithContent","changeBackspaceActionWithContentStyle","changeBackspaceActionWithoutContent","changeBackspaceActionWithoutContentStyle","changeReturnActionNextSection","changeReturnActionEmptySection","changeTabAction","changeShiftTabAction","backSpaceActionStyleSettingsState","id","map","action","generatePreviewStyle","fillingConnectToPrevious","previewFontColor","previewFillingColor","previewAdditionalFillingColor","indentsDifference","previewMarginLeft","previewTextIndent","previewLineSpacing","console","log","alignItems","textAlign","fontWeight","fontStyle","textDecoration","fontVariant","backgroundImage","marginLeft","textIndent","lineHeight","outline","previewText","isOrderedList","listItemBeginnings","fill","getListChars","listChar","previewStyle","sideNumberStyle","previewSideNumberFontColor","previewSideNumberFillingColor","marginRight","generateSideNumberStyle","listItemBeginningStyle","ColorField","hideColorPicker","showColorPicker","colorPickerHandler","changeColor","colorCode","changeColorCode","defaultColorCode","required","bottomAligned","colorError","inputError","pickerColor","colorSampleStyle","colorPickerClassName","InputProps","startAdornment","InputAdornment","onChangeComplete","disableAlpha","FontSelectFields","customFontInputRef","onFontChange","changeFont","changeCustomFont","availableFonts","filter","fontName","optionalFieldState","placeholder","ListSection","listNameInputRef","unicodeCharInputRef","onIsListChange","changeListName","changeIsList","onListTypeChange","changeListType","changeSuffix","onListItemChange","changeListItem","onUnicodeNumberChange","newUnicodeNumber","changeUnicodeNumber","newUnicodeChar","changeUnicodeChar","onUnicodeCharChange","onSideNumberChange","changeSideNumber","listPreviewProps","changeOrderLevel","changePrefix","changeSuffixDistance","changeMagicTabs","changeNumberingStyle","changeContinueNumbering","changeAllowRestartNumbering","changeIncludePreviousFrom","changeSideNumberFont","changeCustomSideNumberFont","changeSideNumberAlignment","changeSideNumberFontSize","changeSideNumberFontColor","changeSideNumberFillingColor","changeSideNumberWidth","changeSideNumberRadius","mainListSettingsState","unorderedListSettingsState","customListItemSettingsState","orderedListSettingsState","sideNumberSettingsState","RadioGroup","row","FormControlLabel","control","Radio","label","labelPlacement","entries","ReferencingSection","onXrefChange","xref","changeReferenceGroupToCreate","changeReferenceGroup","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","q","propertyIsEnumerable","normalizeHtml","str","replaceCaret","el","findLastTextNode","node","nodeType","Node","TEXT_NODE","childNodes","textNode","isTargetFocused","activeElement","nodeValue","sel","window","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","ContentEditable","arguments","lastHtml","html","innerRef","getEl","emitChange","originalEvt","evt","assign","_a","tagName","ref","onInput","onBlur","onKeyUp","onKeyDown","contentEditable","disabled","dangerouslySetInnerHTML","__html","nextProps","deepEqual","Preview","onPreviewTextChange","changePreviewText","selectAllChildren","TypographySection","changeAlignment","changeFontSize","changeFontColorName","changeFontColor","changeBold","changeItalic","changeUnderlined","changeStroke","changeTextTransform","changeVerticalAlign","changeMarginTop","previewProps","DistancesSection","customLineSpacingInputRef","onLineSpacingChange","changeLineSpacing","changeMarginBottom","changeFirstRowIndent","changeOtherRowsIndent","changeCustomLineSpacing","changeWordSpacing","FrameTypeInput","generateBorderPreviewStyle","previewBorderWidth","isNaN","borderLeft","borderRight","borderTop","borderBottom","FramesSection","onBorderTypeChange","changeBorderType","changeBorderThickness","changeLeftBorder","changeRightBorder","changeTopBorder","changeBottomBorder","changeBorderColorName","changeBorderColor","changeBorderConnectToPrevious","Select","MenuItem","changeFillingColorName","changeFillingColor","changefillingConnectToPrevious","changeTocIndentation","changeShortCutWin","changeShortCutMac","createMuiTheme","primary","blue","secondary","pink","CustomTab","overflow","opacity","selected","Tab","CustomErrorTab","CustomTabs","indicator","zIndex","display","Tabs","CustomDialog","minHeight","height","scrollBody","paperFullWidth","maxHeight","flexDirection","paperScrollBody","saveDecoratorForm","DecoratorDialog","clearForm","onSaveButtonClick","switchTab","sendForm","parseToSend","onTabSwitch","openedTab","ThemeProvider","aria-labelledby","scroll","orientation","indicatorColor","ShortCutsSection","switchDecDialogTab","saveForm","savedForm","clearSavedForm","parseToEdit","isOpenReducer","initialState","decoratorFormReducer","validationErrorReducer","isEditModeReducer","openedTabReducer","decoratorDialogReducer","combineReducers","savedFormReducer","rootReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4700aa0f.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInput = withStyles(theme => ({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      minWidth: \"183px\",\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInput;","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass NewGroupDialog extends React.Component {\r\n    state = this.props.currentGroup \r\n          ? this.props.currentGroup \r\n          : this.props.groupType !== \"xref\" \r\n          ? { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", }\r\n          : { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", groupKey: \"\", };\r\n    \r\n    onInputChange = inputName => e => {\r\n        this.setState({ \r\n            [inputName]: e.target.value \r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        const {currentGroup, hideDialog } = this.props;\r\n        this.setState({ ...currentGroup });\r\n        hideDialog()\r\n    };\r\n\r\n    onGroupSave = () => {\r\n        const { onSave, changeGroupSelect, hideDialog, groupType } = this.props;\r\n        if (this.state.nameEn.trim().length && (groupType !== \"xref\" || this.state.groupKey.trim().length)) {\r\n            const groupToSave = {\r\n                nameEn: this.state.nameEn.trim(),\r\n                nameDe: this.state.nameDe.trim(),\r\n                nameRu: this.state.nameRu.trim(),\r\n                nameFr: this.state.nameFr.trim(),\r\n                nameFrCa: this.state.nameFrCa.trim(),\r\n                nameEs: this.state.nameEs.trim(),\r\n            };\r\n            if (groupType === \"xref\") {\r\n                groupToSave.groupKey = this.state.groupKey.trim();\r\n            }\r\n            onSave(groupToSave);\r\n            changeGroupSelect(groupToSave)(null, this.state.nameEn.trim());\r\n            hideDialog();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isOpen, isEditMode } = this.props;\r\n        const { onInputChange, onGroupSave, onClose } = this;\r\n        const titleText = `${isEditMode ? \"Edit\" : \"Create\"} new ${this.props.groupType === \"xref\" ? \"reference \" : \"\"}group`\r\n        const buttonText = isEditMode ? \"Save\" : \"Create\";\r\n        return (\r\n            <Dialog\r\n                className=\"paragraphDecorators-dialog\"\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <DialogTitle>{titleText}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        {\r\n                            this.props.groupType === \"xref\" \r\n                            &&\r\n                            <>\r\n                                <span>Group Key</span>\r\n                                <TextField \r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                    onChange={onInputChange(\"groupKey\")}\r\n                                    value={this.state.groupKey}\r\n                                />\r\n                            </>\r\n                        }\r\n                        <span>Name EN</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEn\")}\r\n                            value={this.state.nameEn}\r\n                        />\r\n                        <span>Name DE</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameDe\")} \r\n                            value={this.state.nameDe}\r\n                        />                        \r\n                        <span>Name RU</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameRu\")} \r\n                            value={this.state.nameRu}\r\n                        />                        \r\n                        <span>Name FR<br/><span className=\"smallText\">France</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFr\")} \r\n                            value={this.state.nameFr}\r\n                        />\r\n                        <span>Name FR<br/><span className=\"smallText\">Canada</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFrCa\")} \r\n                            value={this.state.nameFrCa}\r\n                        />\r\n                        <span>Name ES</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEs\")} \r\n                            value={this.state.nameEs}\r\n                        />                  \r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color=\"default\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={onGroupSave} color=\"primary\">\r\n                        {buttonText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewGroupDialog;","import React from \"react\";\r\n\r\nconst LabelWithAsterisk = ({ children }) => {\r\n    return (\r\n        <div className=\"labelWithAsterisk\">\r\n            <div className=\"labelWithAsterisk-labelBox\">\r\n                <span>{children}</span>\r\n            </div>\r\n            <div className=\"labelWithAsterisk-asteriskBox\">\r\n                <span className=\"labelWithAsterisk-asteriskMark\">*</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LabelWithAsterisk;","import React from \"react\";\r\n\r\nconst withNewGroupControl = (ViewComponent) => {\r\n    return class extends React.Component {\r\n        state = {\r\n            isOpen: false,\r\n            groupSelect: \"\",\r\n            newGroup: this.props.savedNewGroup || \"\",\r\n        }\r\n        \r\n        handleClick = () => {\r\n            this.setState(({ isOpen }) => {\r\n                return {\r\n                    isOpen: !isOpen\r\n                };\r\n            });\r\n        }\r\n    \r\n        onSave = newGroup => {\r\n            this.setState({ newGroup });\r\n        }\r\n    \r\n        changeGroupSelect = (newValue) => {\r\n            this.setState({\r\n                groupSelect: newValue,\r\n            });\r\n        }\r\n\r\n        hideDialog = () => {\r\n            this.setState({ isOpen: false });\r\n        }\r\n        \r\n        render() {\r\n            const { handleClick, onSave, changeGroupSelect, hideDialog } = this; \r\n            return ( <ViewComponent {...this.props} {...this.state} {...{ handleClick, onSave, changeGroupSelect, hideDialog }} /> );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withNewGroupControl;","class DecDataParser {\r\n    static parseToSend(dec) {\r\n        return dec;\r\n    }\r\n\r\n    static parseToEdit(dec) {\r\n        return dec;\r\n    }\r\n\r\n    static mapDecFields = {};\r\n}\r\n\r\nexport default DecDataParser;","const { body } = document;\r\nlet width;\r\n\r\nconst container = document.createElement('span');\r\ncontainer.innerHTML = Array(100).join('wi');\r\ncontainer.style.cssText = [\r\n    'position:absolute',\r\n    'width:auto',\r\n    'font-size:128px',\r\n    'left:-99999px'\r\n].join(' !important;');\r\n\r\nconst getWidth = fontFamily => {\r\n    container.style.fontFamily = fontFamily;\r\n\r\n    body.appendChild(container);\r\n    width = container.clientWidth;\r\n    body.removeChild(container);\r\n\r\n    return width;\r\n};\r\n\r\nconst monoWidth  = getWidth('monospace');\r\nconst serifWidth = getWidth('serif');\r\nconst sansWidth  = getWidth('sans-serif');\r\n\r\nconst isFontAvailable = font => {\r\n    return monoWidth !== getWidth(font + ',monospace') ||\r\n    sansWidth !== getWidth(font + ',sans-serif') ||\r\n    serifWidth !== getWidth(font + ',serif');\r\n};\r\n\r\nexport default isFontAvailable;","import keycode from \"keycode\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nconst getShortCutUtils = systemName => {\r\n  return class ShortcutUtils {  \r\n    static CMD_KEYS = {\r\n      altKey: systemName === \"MacOS\" ? \"Option\" : \"Alt\",\r\n      ctrlKey: systemName === \"MacOS\" ? \"Control\" : \"Ctrl\",\r\n      shiftKey: \"Shift\",\r\n      metaKey: \"Command\",\r\n    };\r\n  \r\n    static isDeadKey(e) {\r\n      return e.keyCode === 229;\r\n    }\r\n  \r\n    static prevent(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  \r\n    static convertEventToShortCut(e) {\r\n      if (ShortcutUtils.isDeadKey(e)) {\r\n        ShortcutUtils.prevent(e);\r\n        return { deleteKey: true };\r\n      }\r\n      ShortcutUtils.prevent(e);\r\n      const shortCut = {\r\n        keyCode: e.keyCode,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n        altKey: e.altKey,\r\n        metaKey: false,\r\n      };\r\n      if (systemName === \"MacOS\") {\r\n        shortCut.metaKey = e.metaKey;\r\n      }\r\n      const deleteKeys = [8, 46];\r\n      const cmdKeysCodes = [16, 91, 18, 17];\r\n      const shortCutForView = ShortcutUtils.convertShortcutToMeta(shortCut);\r\n      if (deleteKeys.indexOf(e.keyCode) > -1) {\r\n        return { deleteKey: true };\r\n      } else if (shortCutForView.isCmdPressed && cmdKeysCodes.indexOf(e.keyCode) === -1) {\r\n        return {\r\n          value: shortCut,\r\n          stringValue: shortCutForView.stringValue,\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n  \r\n    static convertShortcutToString(shortCut = {}) {\r\n      return ShortcutUtils.convertShortcutToMeta(shortCut).stringValue;\r\n    }\r\n  \r\n    static convertShortcutToMeta(shortCut = {}) {\r\n      let shortCutForView = \"\";\r\n      let isCmdPressed = false;\r\n      Object.keys(ShortcutUtils.CMD_KEYS).forEach((key) => {\r\n        if (shortCut && shortCut[key]) {\r\n          isCmdPressed = true;\r\n          shortCutForView += `${ShortcutUtils.CMD_KEYS[key]} + `;\r\n        }\r\n      });\r\n      if (shortCut && shortCut.keyCode) {\r\n        shortCutForView += keycode(shortCut.keyCode);\r\n      }\r\n      return { stringValue: shortCutForView, isCmdPressed };\r\n    }\r\n  \r\n    static removeDuplicateShortcuts = function (decorators, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(decorators).forEach((decoratorKey) => {\r\n        const item = decorators[decoratorKey];\r\n        const itemType = item.item_type;\r\n        if (itemType === \"style\") {\r\n          if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n            decorators[decoratorKey].keyboard_shortcut = null;\r\n            removed = true;\r\n          }\r\n        } else {\r\n          const childItems = item.child_items;\r\n          Object.keys(childItems).forEach((itemKey) => {\r\n            const style = childItems[itemKey];\r\n            if (isEqual(style.keyboard_shortcut, newPdShortcut)) {\r\n              style.keyboard_shortcut = null;\r\n              removed = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  \r\n    static removeDuplicateShortcutsInInlineStyle = function (inlineStyles, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(inlineStyles).forEach((styleKey) => {\r\n        const item = inlineStyles[styleKey];\r\n        if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n          inlineStyles[styleKey].keyboard_shortcut = null;\r\n          removed = true;\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  }\r\n};\r\n\r\nexport default getShortCutUtils;\r\n\r\n","const decoratorsList = [\r\n    { name: \"...\", value: \"\" },\r\n    { name: \"Text 1\", value: \"quick_text_1\" },\r\n    { name: \"Text 2\", value: \"quick_text_2\" },\r\n    { name: \"Text 3\", value: \"quick_text_3\" },\r\n    { name: \"Text 4\", value: \"quick_text_4\" },\r\n    { name: \"Text 5\", value: \"quick_text_5\" },\r\n    { name: \"Heading 1\", value: \"quick_heading_1\" },\r\n    { name: \"Heading 2\", value: \"quick_heading_2\" },\r\n    { name: \"Heading 3\", value: \"quick_heading_3\" },\r\n    { name: \"Heading 4\", value: \"quick_heading_4\" },\r\n    { name: \"Heading 5\", value: \"quick_heading_5\" },\r\n];\r\n\r\nexport default decoratorsList;","const fontSet = [ \r\n    \"Source Sans Pro\",\r\n    \"Dejavu Sans\",\r\n    \"Dejavu Serif\",\r\n    \"Open Sans\",\r\n    \"Montserrat\",\r\n    \"Arial\",\r\n    \"Georgia\",\r\n    \"Verdana\",\r\n    \"Times New Roman\",\r\n];\r\n\r\nexport default fontSet;","export const namesSectionRequiredFields = [\"decKey\", \"decNameEn\"];\r\n\r\nexport const wordExportSectionRequiredFields = [\"wordStyleName\"];\r\n\r\nexport const listSectionRequiredFields = [\"listName\"];\r\n\r\nexport const requiredFields = [ \r\n    ...namesSectionRequiredFields, \r\n    ...wordExportSectionRequiredFields, \r\n    ...listSectionRequiredFields, \r\n];\r\n\r\nexport const tabsErrorInitialState = {\r\n    namesSection: false,\r\n    wordExportSection: false,\r\n    listSection: false,\r\n};\r\n\r\nexport const sectionsTabNumbers = [\r\n    { tabName: \"namesSection\", tabNumber: 0 },\r\n    { tabName: \"wordExportSection\", tabNumber: 1},\r\n    { tabName: \"listSection\", tabNumber: 3 },\r\n];","export const alignmentsMap = {\r\n    center: \"center\",\r\n    left: \"flex-start\",\r\n    right: \"flex-end\",\r\n    justify: \"flex-start\",\r\n};\r\n\r\nexport const backSpaceActions = [\r\n    { key: 'merge', value: 'Merge' },\r\n    { key: 'apply_other_pd', value: 'Apply other PD' },\r\n    { key: 'remove_pd', value: 'Remove PD' },\r\n    { key: 'nothing', value: 'Nothing' }\r\n];\r\n\r\nexport const bulletNamesMap = {\r\n    bulletpoint: \"•\",\r\n    dash: \"—\",\r\n    star: \"★\",\r\n};\r\n\r\nexport const listStyleTypes = [\r\n    { name: '1, 2, 3', value: 'decimal' },\r\n    {  name: 'A, B, C', value: 'upper-alpha' },\r\n    {  name: 'a, b, c', value: 'lower-alpha' },\r\n    {  name: 'I, II, III', value: 'upper-roman' },\r\n    {  name: 'i, ii, iii', value: 'lower-roman' },\r\n];\r\n\r\nexport const numberingSets = {\r\n    decimal: [\"1\", \"2\", \"3\", \"4\"],\r\n    \"upper-alpha\": [\"A\", \"B\", \"C\", \"D\"],\r\n    \"lower-alpha\": [\"a\", \"b\", \"c\", \"d\"],\r\n    \"upper-roman\": [\"I\", \"II\", \"III\", \"IV\"],\r\n    \"lower-roman\": [\"i\", \"ii\", \"iii\", \"iv\"],\r\n};\r\n\r\nexport const sampleText = `<div>Sample Text. You can change it.</div><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ornare maximus vehicula. Duis nisi velit, dictum id mauris vitae, lobortis pretium quam.</div>`;\r\n","export const HOLDER = \"HOLDER-POLDER\";\r\nexport const DEFAULT_FONT = \"Helvetica\";\r\nexport const DEFAULT_FONT_SIZE = \"11\";\r\nexport const DEFAULT_SIDE_NUMBER_FONT_COLOR = \"FFF\";\r\nexport const DEFAULT_SIDE_NUMBER_FILLING_COLOR = \"1E88E5\";\r\nexport const DEFAULT_SIDE_NUMBER_WIDTH = \"20\";\r\nexport const DEFAULT_SIDE_NUMBER_RADIUS = \"10\";\r\nexport const DEFAULT_FONT_COLOR = \"000\";\r\nexport const DEFAULT_ROW_INDENT = \"0\";\r\nexport const DEFAULT_MARGIN = \"6\";\r\nexport const DEFAULT_WORD_SPACING = \"0\";\r\nexport const DEFAULT_LINE_SPACING = \"1.5\";\r\nexport const DEFAULT_BORDER_COLOR = \"F00\";\r\nexport const DEFAULT_BORDER_THICKNESS = \"2\";\r\nexport const DEFAULT_FONT_COLOR_NAME = \"Black\";\r\nexport const DEFAULT_BORDER_COLOR_NAME = \"Red\";\r\n\r\nexport const autoFillingRequiredFields = {\r\n    sideNumberFont: DEFAULT_FONT,\r\n    sideNumberFontSize: DEFAULT_FONT_SIZE,\r\n    sideNumberFontColor: DEFAULT_SIDE_NUMBER_FONT_COLOR,\r\n    sideNumberFillingColor: DEFAULT_SIDE_NUMBER_FILLING_COLOR,\r\n    sideNumberWidth: DEFAULT_SIDE_NUMBER_WIDTH,\r\n    sideNumberRadius: DEFAULT_SIDE_NUMBER_RADIUS,\r\n    font: DEFAULT_FONT,\r\n    fontSize: DEFAULT_FONT_SIZE,\r\n    fontColor: DEFAULT_FONT_COLOR,\r\n    marginTop: DEFAULT_MARGIN,\r\n    marginBottom: DEFAULT_MARGIN,\r\n    firstRowIndent: DEFAULT_ROW_INDENT,\r\n    otherRowsIndent: DEFAULT_ROW_INDENT,\r\n    wordSpacing: DEFAULT_WORD_SPACING,   \r\n    lineSpacing: DEFAULT_LINE_SPACING,\r\n    borderColor: DEFAULT_BORDER_COLOR,\r\n    borderThickness: DEFAULT_BORDER_THICKNESS,\r\n};\r\n\r\nexport const emptyDecFormState = {\r\n    ...autoFillingRequiredFields,\r\n    decKey: \"\",\r\n    group: \"\",\r\n    groupToCreate: \"\",\r\n    active: true,\r\n    decNameEn: \"\",\r\n    decNameDe: \"\",\r\n    decNameRu: \"\",\r\n    decNameFr: \"\",\r\n    decNameFrCa: \"\",\r\n    decNameEs: \"\",\r\n    wordStyleName: \"\",\r\n    softReturn: false,\r\n    indentationalLevel: \"\",\r\n    backspaceActionWithContent: \"merge\",\r\n    backspaceActionWithContentStyle: \"default\",\r\n    returnActionNextSection: \"default\",\r\n    returnActionEmptySection: \"default\",\r\n    tabAction: \"\",\r\n    shiftTabAction: \"\",\r\n    isList: false,\r\n    listName: HOLDER,\r\n    orderLevel: \"\",\r\n    prefix: \"\",\r\n    suffix: \"\",\r\n    suffixDistance: \"0.25\",\r\n    magicTabs: false,\r\n    listType: \"unordered\",\r\n    listItem: \"bulletpoint\",\r\n    unicodeNumber: \"\",\r\n    unicodeChar: \"\",\r\n    numberingStyle: \"decimal\",\r\n    continueNumbering: false,\r\n    allowRestartNumbering: false,\r\n    includePreviousFrom: \"\",\r\n    sideNumber: false,\r\n    customSideNumberFont: \"\",\r\n    sideNumberAlignment: \"center\",\r\n    referenceGroup: \"\",\r\n    referenceGroupToCreate: \"\",\r\n    customFont: \"\",\r\n    alignment: \"left\",\r\n    fontColorName: DEFAULT_FONT_COLOR_NAME,\r\n    bold: false,\r\n    italic: false,\r\n    underlined: false,\r\n    stroke: false,\r\n    textTransform: \"none\",\r\n    verticalAlign: \"baseline\",\r\n    customLineSpacing: \"\",\r\n    leftBorder: false,\r\n    rightBorder: false,\r\n    topBorder: false,\r\n    bottomBorder: false,\r\n    borderColorName: DEFAULT_BORDER_COLOR_NAME,\r\n    borderType: \"solid\",\r\n    borderConnectToPrevious: false,\r\n    fillingColorName: \"\",\r\n    fillingColor: \"\",\r\n    fillingfillingConnectToPrevious: false,\r\n    tocIndentation: \"\",\r\n    shortCutWin: \"\",\r\n    shortCutWinView: \"\",\r\n    shortCutMac: \"\",\r\n    shortCutMacView: \"\",\r\n};","import { clone } from \"lodash\";\r\n\r\nimport {\r\n    namesSectionRequiredFields,\r\n    wordExportSectionRequiredFields,\r\n    listSectionRequiredFields,\r\n    tabsErrorInitialState,\r\n    sectionsTabNumbers,\r\n} from \"../constants\";\r\n\r\nexport const getNamesSectionErrorState = form => {\r\n    return !namesSectionRequiredFields.every(fieldName => form[fieldName]);\r\n};\r\n\r\nexport const getWordExportSectionErrorState = form => {\r\n    return !wordExportSectionRequiredFields.every(fieldName => form[fieldName]);\r\n}\r\n\r\nexport const getListSectionErrorState = form => {\r\n    return !listSectionRequiredFields.every(fieldName => form[fieldName]);\r\n}\r\n\r\nexport const getTabsErrorState = form => {\r\n    const tabsState = clone(tabsErrorInitialState);\r\n\r\n    if (getNamesSectionErrorState(form)) {\r\n        tabsState.namesSection = true;\r\n    }\r\n\r\n    if (getWordExportSectionErrorState(form)) {\r\n        tabsState.wordExportSection = true;\r\n    }\r\n\r\n    if (getListSectionErrorState(form)) {\r\n        tabsState.listSection = true;\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (let tabName in tabsState) {\r\n        if (tabsState[tabName]) {\r\n            return tabsState;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport const getTabNumberToSwitch = tabsErrorState => {\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (const { tabName, tabNumber } of sectionsTabNumbers) {\r\n        if (tabsErrorState[tabName]) {\r\n            return tabNumber;\r\n        }\r\n    }\r\n};","import { \r\n    numberingSets, \r\n    bulletNamesMap, \r\n    autoFillingRequiredFields, \r\n    DEFAULT_FONT, \r\n} from \"../constants\";\r\nimport isFontAvailable from \"./isFontAvailable\";\r\n\r\nexport const getCorrectColor = (hex, backgroundColor = \"FFF\") => {\r\n    const correctColor = typeof hex === \"string\" && (hex.length === 6 || hex.length === 3) ? hex : backgroundColor;\r\n    return correctColor;\r\n};\r\n\r\nexport const selectAllOnClick = defaultValue => e => {\r\n    if (!defaultValue || e.target.value === defaultValue) {\r\n        e.target.focus();\r\n        e.target.select();\r\n    }\r\n};\r\n\r\nexport const getOffset = (alignType, fontSize) => {\r\n    if (alignType === \"baseline\") {\r\n        return 0;\r\n    }\r\n    return (parseFloat(fontSize.slice()) / 2) * (alignType === \"sub\" ? 1 : -1);\r\n};\r\n\r\nexport const getUnstyledText = styledText => {\r\n    const unstyledText = styledText.replace(/<\\/(.*?)>/gm, \"</div>\").replace(/(?!(?:<\\/(.*?)>|<br(.*?)>)$)<(.*?)>/gm, \"<div>\");\r\n    return unstyledText[0] !== \"<\" ? `<div>${unstyledText}</div>` : unstyledText;\r\n};\r\n\r\nexport const unicodeNumberToChar = unicodeNumber => {\r\n    return String.fromCharCode(parseInt(unicodeNumber, 16));\r\n};\r\n\r\nexport const unicodeCharToNumber = unicodeChar => {\r\n    return unicodeChar.charCodeAt(0).toString(16);\r\n};\r\n\r\nexport const scrollToBottom = className => {\r\n    setTimeout(() => { document.getElementsByClassName(className)[0].scrollTo({\r\n        top: Number.MAX_SAFE_INTEGER,\r\n        behavior: \"smooth\",\r\n    })}, 0);\r\n};\r\n\r\nexport const changeAndScroll = (changeFunction, timeOut) => (...args) => {\r\n    changeFunction(...args);\r\n    if (!timeOut) {\r\n        scrollToBottom(\"content-rightSide\");\r\n    } else {\r\n        setTimeout(() => {\r\n            scrollToBottom(\"content-rightSide\");\r\n        }, timeOut);\r\n    }\r\n};\r\n\r\nexport const selectAllEditableContent = className => e => {\r\n    if (e.target.className === className) {\r\n        window.getSelection().selectAllChildren(e.target.children[0]);\r\n    }\r\n};\r\n\r\nexport const getListChars = ({ isOrderedList, numberingStyle, listItem, unicodeChar }) => {\r\n    if (isOrderedList) {\r\n        return numberingSets[numberingStyle];\r\n    }\r\n    const newBullet = bulletNamesMap[listItem] || unicodeChar;\r\n    return Array(4).fill(newBullet);\r\n};\r\n\r\nexport const detectOS = () => {\r\n    if (navigator && navigator.appVersion) {\r\n        if (navigator.appVersion.indexOf(\"Win\") !== -1) {\r\n            return \"Windows\";\r\n        } else if (navigator.appVersion.indexOf(\"Mac\") !== -1) {\r\n            return \"MacOS\";\r\n        }\r\n    }\r\n};\r\n\r\nexport const focusInput = (inputRef, timeout = 300) => {\r\n    setTimeout(() => {\r\n        inputRef.current.focus();\r\n    }, timeout);\r\n};\r\n\r\nexport const getErrorSections = (requiredFields = [], ...sectionPropsSets) => {\r\n    return sectionPropsSets.map(sectionProps => {\r\n        return requiredFields.some(fieldName => {\r\n            return sectionProps.hasOwnProperty(fieldName) && !sectionProps[fieldName]\r\n        });\r\n    });\r\n};\r\n\r\nexport const getPreviewFont = (font, customFont) => {\r\n    if (font !== \"custom\" && isFontAvailable(font)) {\r\n        return font;\r\n    } else if (font === \"custom\" && customFont && isFontAvailable(customFont)) {\r\n        return customFont;\r\n    }\r\n    return `'${DEFAULT_FONT}', 'Roboto', sans-serif`;\r\n}\r\n\r\nexport const fillMissedFields = currentFormState => {\r\n    const { \r\n        font, customFont,\r\n        sideNumberFont, customSideNumberFont,\r\n        lineSpacing, customLineSpacing,\r\n    } = currentFormState;\r\n\r\n    const formStateWithoutMissedFields = { ...currentFormState };\r\n    \r\n    [\r\n        [font, customFont],\r\n        [sideNumberFont, customSideNumberFont], \r\n        [lineSpacing, customLineSpacing],\r\n    ].forEach(([option, customOption]) => {\r\n        if (option === \"custom\" && !customOption) {\r\n            formStateWithoutMissedFields[option] = null;\r\n        }\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n    for (let fieldName in autoFillingRequiredFields) {\r\n        if (!currentFormState[fieldName] && autoFillingRequiredFields[fieldName]) {\r\n            formStateWithoutMissedFields[fieldName] = autoFillingRequiredFields[fieldName];\r\n        }\r\n    }\r\n    return formStateWithoutMissedFields;\r\n};","import { getShortCutUtils } from \"../helpers\";\r\n\r\nexport const UPDATE_DEC_FORM = \"UPDATE_DEC_FORM\";\r\nexport const CLEAR_DEC_FORM = \"CLEAR_DEC_FORM\";\r\nexport const SHOW_DEC_DIALOG = \"SHOW_DEC_DIALOG\";\r\nexport const HIDE_DEC_DIALOG = \"HIDE_DEC_DIALOG\";\r\nexport const SWITCH_DEC_DIALOG_TAB = \"SWITCH_DEC_DIALOG_TAB\";\r\nexport const RESET_DEC_DIALOG_TAB = \"RESET_DEC_DIALOG_TAB\";\r\nexport const SWITCH_ON_DEC_DIALOG_EDIT_MODE = \"SWITCH_ON_DEC_DIALOG_EDIT_MOD\";\r\nexport const SWITCH_OFF_DEC_DIALOG_EDIT_MODE = \"SWITCH_OFF_DEC_DIALOG_EDIT_MODE\";\r\nexport const UPDATE_VALIDATION_ERROR = \"UPDATE_VALIDATION_ERROR\";\r\nexport const REMOVE_VALIDATION_ERROR = \"REMOVE_VALIDATION_ERROR\";\r\n\r\nexport const updateDecoratorForm = payload => {\r\n    return {\r\n        type: UPDATE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearDecoratorForm = payload => {\r\n    return {\r\n        type: CLEAR_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const showDecoratorDialog = () => {\r\n    return {\r\n        type: SHOW_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const hideDecoratorDialog = () => {\r\n    return {\r\n        type: HIDE_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const switchDecDialogTab = payload => {\r\n    return {\r\n        type: SWITCH_DEC_DIALOG_TAB,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const resetDecDialogTab = () => {\r\n    return {\r\n        type: RESET_DEC_DIALOG_TAB,\r\n    };\r\n}\r\n\r\nexport const switchOnDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_ON_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const switchOffDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_OFF_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const updateValidationError = payload => {\r\n    return {\r\n        type: UPDATE_VALIDATION_ERROR,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const removeValidationError = () => {\r\n    return {\r\n        type: REMOVE_VALIDATION_ERROR,\r\n    };\r\n};\r\n\r\nexport const openDialog = dispatch => dec => {\r\n    if (dec) {\r\n        dispatch(updateDecoratorForm(dec));\r\n        dispatch(switchOnDecDialogEditMode());\r\n    } \r\n    dispatch(showDecoratorDialog());\r\n};\r\n\r\nexport const closeDialog = dispatch => () => {\r\n    dispatch(hideDecoratorDialog());\r\n    dispatch(switchOffDecDialogEditMode());\r\n    dispatch(removeValidationError());\r\n    dispatch(resetDecDialogTab());\r\n    dispatch(clearDecoratorForm());\r\n};\r\n\r\nexport const setValue = dispatch => propName => (e, secondArg = \"\") => {\r\n    const newValue = (e && e.target.value !== \"\" && e.target.value !== undefined) ? e.target.value : secondArg;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newValue,\r\n    }));\r\n};\r\n\r\nexport const toggleValue = dispatch => propName => (e, secondArg) => {\r\n    const newValue = e ? e.target.checked : secondArg;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newValue,\r\n    }));\r\n};\r\n\r\nexport const setBullet = dispatch => propName => (e, secondArg) => {\r\n    const input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n\r\n    const newBullet = input.length > 1 ? input[input.length - 1] : input;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newBullet,\r\n    }));\r\n    return newBullet;\r\n};\r\n\r\nexport const setColor = dispatch => propName => (e, secondArg) => {\r\n    const input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n    \r\n    const filteredInput = input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i) \r\n                          ? input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i)[0].slice(0, 6)\r\n                          : \"\" ;\r\n    \r\n    dispatch(updateDecoratorForm({\r\n        [propName]: filteredInput,\r\n    }));\r\n    return filteredInput;\r\n};\r\n\r\nexport const setNumber = dispatch => propName => (e, secondArg) => {\r\n    let input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n\r\n    const filteredInput = input.replace(\",\", \".\").trim().match(/[0-9]+/i) \r\n                          ? input.replace(\",\", \".\").trim().match(/\\d+[.,]?\\d*/)[0]\r\n                          : \"\" ;\r\n\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: filteredInput,\r\n    }));\r\n    return filteredInput;\r\n};\r\n\r\nexport const setShortCut = dispatch => (valuePropName, viewPropName, isMac) => e => {\r\n    const systemName = isMac ? \"MacOS\" : \"Windows\";\r\n    const shortCut = getShortCutUtils(systemName).convertEventToShortCut(e);\r\n    if (shortCut && shortCut.deleteKey) {\r\n        setTimeout(() => {\r\n            dispatch(updateDecoratorForm({ \r\n                [valuePropName]: \"\" \r\n            }));\r\n            dispatch(updateDecoratorForm({ \r\n                [viewPropName]: \"\" \r\n            }));\r\n        }, 100);\r\n    } else if (shortCut) {\r\n        dispatch(updateDecoratorForm({ \r\n            [valuePropName]: shortCut.value \r\n        }));\r\n        dispatch(updateDecoratorForm({ \r\n            [viewPropName]: shortCut.stringValue \r\n        }));\r\n    }\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport LabelWithAsterisk from \"../common/LabelWithAsterisk\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\nimport { getNamesSectionErrorState, focusInput } from \"../helpers\";\r\nimport { setValue, toggleValue, updateValidationError } from \"../actions\";\r\n\r\nclass NamesSection extends React.Component {\r\n    decKeyInputRef = React.createRef();\r\n    decNameEnInputRef = React.createRef();\r\n\r\n    focusOnEmptyField = () => {\r\n        if (!this.props.decKey) {\r\n            focusInput(this.decKeyInputRef);\r\n        } else if (!this.props.decNameEn) {\r\n            focusInput(this.decNameEnInputRef);\r\n        }\r\n    };\r\n\r\n    onGroupChange = group => (e, secondArg) => {\r\n        const value = e ? e.target.value : secondArg;\r\n        if (group.nameEn && value === group.nameEn) {\r\n            this.props.changeGroupToCreate(null, group);\r\n        } else {\r\n            this.props.changeGroupToCreate(null, \"\");\r\n        }\r\n        this.props.changeGroup(e, secondArg);\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.validationError) {\r\n            this.focusOnEmptyField();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.validationError && !prevprops.validationError) {\r\n            this.focusOnEmptyField();\r\n        }\r\n        if (this.props.validationError && !getNamesSectionErrorState(this.props.formState)) {\r\n            this.props.updateValidationError({ namesSection: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            validationError,\r\n            onSave,\r\n            newGroup, \r\n            isOpen, \r\n            hideDialog, \r\n            handleClick, \r\n            decKey, changeDecKey,\r\n            group,\r\n            active, changeActive,\r\n            decNameEn, changeDecNameEn,\r\n            decNameDe, changeDecNameDe,\r\n            decNameRu, changeDecNameRu,\r\n            decNameFr, changeDecNameFr,\r\n            decNameFrCa, changeDecNameFrCa,\r\n            decNameEs, changeDecNameEs,\r\n        } = this.props;\r\n\r\n        const newGroupName = newGroup.nameEn;\r\n        const isEditMode = !!newGroupName;\r\n\r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n                <LabelWithAsterisk>Key</LabelWithAsterisk>\r\n                <TextField \r\n                    value={decKey}\r\n                    onChange={changeDecKey}\r\n                    error={validationError && !decKey}\r\n                    inputRef={this.decKeyInputRef}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Group</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        value={group} \r\n                        onChange={this.onGroupChange(newGroup)}\r\n                        input={ <CustomInput /> }  \r\n                    >\r\n                        <option value=\"\">...</option>\r\n                        { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                        <option value=\"0\">Text</option>\r\n                        <option value=\"1\">Heading</option>\r\n                        <option value=\"2\">Heading Heading Heading Heading</option>\r\n                    </NativeSelect>\r\n                    { !(isEditMode && group !== newGroupName) && (\r\n                        <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                            { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                        </Button>\r\n                    ) }\r\n                </div>\r\n\r\n                <span>Active</span>\r\n                <div className=\"unlabeledCheckbox\">\r\n                    <Checkbox\r\n                        checked={active}\r\n                        onChange={changeActive} \r\n                        color=\"primary\" \r\n                    />\r\n                </div>\r\n\r\n                <LabelWithAsterisk>Name EN</LabelWithAsterisk>\r\n                <TextField \r\n                    value={decNameEn}\r\n                    onChange={changeDecNameEn}\r\n                    error={validationError && !decNameEn}\r\n                    inputRef={this.decNameEnInputRef}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name DE</span>\r\n                <TextField \r\n                    value={decNameDe}\r\n                    onChange={changeDecNameDe}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name RU</span>\r\n                <TextField \r\n                    value={decNameRu}\r\n                    onChange={changeDecNameRu}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name FR<br/><span className=\"smallText\">France</span></span>\r\n                <TextField \r\n                    value={decNameFr}\r\n                    onChange={changeDecNameFr}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name FR<br/><span className=\"smallText\">Canada</span></span>\r\n                <TextField \r\n                    value={decNameFrCa}\r\n                    onChange={changeDecNameFrCa}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name ES</span>\r\n                <TextField \r\n                    value={decNameEs}\r\n                    onChange={changeDecNameEs}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <NewGroupDialog \r\n                    isOpen={isOpen}\r\n                    hideDialog={hideDialog}\r\n                    onSave={onSave}\r\n                    isEditMode={isEditMode}\r\n                    currentGroup={newGroup}\r\n                    changeGroupSelect={this.onGroupChange}\r\n                    groupType=\"decorators\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return { \r\n        validationError: validationError.namesSection,\r\n        formState: form,\r\n        decKey: form.decKey,\r\n        group: form.group,\r\n        active: form.active,\r\n        decNameEn: form.decNameEn,\r\n        decNameDe: form.decNameDe,\r\n        decNameRu: form.decNameRu,\r\n        decNameFr: form.decNameFr,\r\n        decNameFrCa: form.decNameFrCa,\r\n        decNameEs: form.decNameEs,\r\n        savedNewGroup: form.groupToCreate,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        changeDecKey: setValue(dispatch)(\"decKey\"),\r\n        changeGroup: setValue(dispatch)(\"group\"),\r\n        changeGroupToCreate: setValue(dispatch)(\"groupToCreate\"),\r\n        changeActive: toggleValue(dispatch)(\"active\"),\r\n        changeDecNameEn: setValue(dispatch)(\"decNameEn\"),\r\n        changeDecNameDe: setValue(dispatch)(\"decNameDe\"),\r\n        changeDecNameRu: setValue(dispatch)(\"decNameRu\"),\r\n        changeDecNameFr: setValue(dispatch)(\"decNameFr\"),\r\n        changeDecNameFrCa: setValue(dispatch)(\"decNameFrCa\"),\r\n        changeDecNameEs: setValue(dispatch)(\"decNameEs\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(withNewGroupControl(NamesSection)));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport LabelWithAsterisk from \"../common/LabelWithAsterisk\";\r\nimport { getWordExportSectionErrorState } from \"../helpers\";\r\nimport { setValue, toggleValue, updateValidationError } from \"../actions\";\r\n\r\nconst WordExportSection = props => {\r\n    const { \r\n        validationError, updateValidationError,\r\n        formState,\r\n        wordStyleName, changeWordStyleName,\r\n        softReturn, changeSoftReturn,\r\n    } = props;\r\n\r\n    if (validationError && !getWordExportSectionErrorState(formState)) {\r\n        updateValidationError({ wordExportSection: false });\r\n    }\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n            <LabelWithAsterisk>Style name in WORD</LabelWithAsterisk>\r\n            <TextField \r\n                value={wordStyleName}\r\n                onChange={changeWordStyleName}\r\n                error={validationError && !wordStyleName}\r\n                autoFocus={!wordStyleName}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n            \r\n            <span>Soft return</span>\r\n            <div className=\"unlabeledCheckbox\">\r\n                <Checkbox \r\n                    checked={softReturn}\r\n                    onChange={changeSoftReturn}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return { \r\n        validationError: validationError.wordExportSection,\r\n        formState: form,\r\n        wordStyleName: form.wordStyleName, \r\n        softReturn: form.softReturn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        changeWordStyleName: setValue(dispatch)(\"wordStyleName\"),\r\n        changeSoftReturn: toggleValue(dispatch)(\"softReturn\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(WordExportSection));","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInputShort = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInputShort;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst BackSpaceActionInput = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"175px\",\r\n      width: \"175px\",\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default BackSpaceActionInput;","import PositioningSection from \"./PositioningSection\";\r\nexport default PositioningSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport { backSpaceActions, decoratorsList } from \"../../constants\";\r\nimport BackSpaceActionInput from \"./BackSpaceActionInput\";\r\nimport { setValue } from \"../../actions\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst PositioningSection = props => {\r\n    const {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithContentStyle, changeBackspaceActionWithContentStyle,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    } = props;\r\n\r\n    const backSpaceActionStyleSettingsState = backspaceActionWithContent === \"apply_other_pd\" ? \"shown\" : \"hidden\";\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_positioning\">\r\n            <span id=\"r1c1\">Identational level</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={indentationalLevel}\r\n                    onChange={changeIndentationalLevel}\r\n                    id=\"r1c2\" \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n            <div id=\"r2\" className=\"sectionTitle\">\r\n                <span>BACKSPACE</span>\r\n            </div>\r\n\r\n            <span id=\"r3c1\">At the beginning of a section with content</span>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <div>\r\n                    <NativeSelect \r\n                        value={backspaceActionWithContent}\r\n                        onChange={changeBackspaceActionWithContent}\r\n                        id=\"r3c2\" \r\n                        input={ <BackSpaceActionInput /> }\r\n                    >\r\n                        {backSpaceActions.map(action => (\r\n                            <option value={action.key} key={`backSpace ${action.key}`}>{action.value}</option>\r\n                        ))}\r\n                    </NativeSelect>\r\n                </div>\r\n                <div className={`optionalSettings optionalSettings_${backSpaceActionStyleSettingsState}`}>\r\n                    <NativeSelect\r\n                        value={backspaceActionWithContentStyle}\r\n                        onChange={changeBackspaceActionWithContentStyle}\r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        <option value=\"default\">Global Fallback Style</option>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"r4\" className=\"sectionTitle\">\r\n                <span>RETURN</span>\r\n            </div>\r\n\r\n            <span id=\"r5c1\">Style of next section</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={returnActionNextSection}\r\n                    onChange={changeReturnActionNextSection}\r\n                    id=\"r5c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"default\">Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n\r\n            <span id=\"r6c1\">In empty section change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect \r\n                    value={returnActionEmptySection}\r\n                    onChange={changeReturnActionEmptySection}\r\n                    id=\"r6c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"default\">Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <div id=\"r7\" className=\"sectionTitle\">\r\n                <span>TAB / SHIFT+TAB</span>\r\n            </div>\r\n\r\n            <span id=\"r8c1\">TAB – change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={tabAction}\r\n                    onChange={changeTabAction}\r\n                    id=\"r8c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <span id=\"r9c1\">SHIFT+TAB – change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={shiftTabAction}\r\n                    onChange={changeShiftTabAction} \r\n                    id=\"r9c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        indentationalLevel: form.indentationalLevel,\r\n        backspaceActionWithContent: form.backspaceActionWithContent,\r\n        backspaceActionWithContentStyle: form.backspaceActionWithContentStyle,\r\n        returnActionNextSection: form.returnActionNextSection,\r\n        returnActionEmptySection: form.returnActionEmptySection,\r\n        tabAction: form.tabAction,\r\n        shiftTabAction: form.shiftTabAction,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeIndentationalLevel: setValue(dispatch)(\"indentationalLevel\"),\r\n        changeBackspaceActionWithContent: setValue(dispatch)(\"backspaceActionWithContent\"),\r\n        changeBackspaceActionWithContentStyle: setValue(dispatch)(\"backspaceActionWithContentStyle\"),\r\n        changeBackspaceActionWithoutContent: setValue(dispatch)(\"backspaceActionWithoutContent\"),\r\n        changeBackspaceActionWithoutContentStyle: setValue(dispatch)(\"backspaceActionWithoutContentStyle\"),\r\n        changeReturnActionNextSection: setValue(dispatch)(\"returnActionNextSection\"),\r\n        changeReturnActionEmptySection: setValue(dispatch)(\"returnActionEmptySectionStyle\"),\r\n        changeTabAction: setValue(dispatch)(\"tabAction\"),\r\n        changeShiftTabAction: setValue(dispatch)(\"shiftTabAction\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(PositioningSection));","import { getOffset, getCorrectColor, getPreviewFont } from \"../../helpers\";\r\nimport { alignmentsMap, DEFAULT_FONT_SIZE, DEFAULT_LINE_SPACING } from \"../../constants\";\r\n\r\nexport const generatePreviewStyle = formState => {\r\n    const {\r\n        font,\r\n        customFont,\r\n        alignment,\r\n        fontSize,\r\n        fontColor,\r\n        bold,\r\n        italic,\r\n        underlined,\r\n        stroke,\r\n        textTransform,\r\n        verticalAlign,\r\n        marginTop,\r\n        marginBottom,\r\n        firstRowIndent,\r\n        otherRowsIndent,\r\n        lineSpacing,\r\n        customLineSpacing,\r\n        wordSpacing,   \r\n        fillingColor,\r\n        fillingConnectToPrevious,\r\n    } = formState;\r\n    \r\n    const previewFontColor = getCorrectColor(fontColor, \"f5f5f5\");\r\n    const previewFillingColor = getCorrectColor(fillingColor, \"f5f5f5\");\r\n    const previewAdditionalFillingColor = fillingConnectToPrevious ? previewFillingColor : \"f5f5f5\";\r\n    const indentsDifference = (firstRowIndent || 0) - (otherRowsIndent || 0);\r\n    const previewMarginLeft = `${!otherRowsIndent ? 0 : (otherRowsIndent >= 6 ? 6 : otherRowsIndent)}cm`;\r\n    const previewTextIndent = `${!indentsDifference ? 0 : (indentsDifference >= 6 ? 6 : indentsDifference)}cm`;\r\n    const previewLineSpacing = lineSpacing !== \"custom\" ? lineSpacing : (customLineSpacing || DEFAULT_LINE_SPACING);\r\n\r\n    console.log(previewMarginLeft, previewTextIndent);\r\n\r\n    const previewStyle = {\r\n        fontSize: !fontSize ? `${DEFAULT_FONT_SIZE}pt` : `${fontSize <= 120 ? fontSize : 120}pt`,\r\n        color: `#${previewFontColor}`,\r\n        fontFamily: getPreviewFont(font, customFont),\r\n        alignItems: alignmentsMap[alignment],\r\n        textAlign: alignment,\r\n        fontWeight: bold ? \"bold\" : \"normal\",\r\n        fontStyle: italic ? \"italic\" : \"normal\",\r\n        textDecoration: `${underlined ? \"underline\" : \"\"}${stroke ? \" line-through\" : \"\"}`.trim() || \"none\",\r\n        verticalAlign,\r\n        textTransform: textTransform !== \"small-caps\" ? textTransform : \"none\",\r\n        fontVariant: textTransform === \"small-caps\" ? textTransform : \"normal\",\r\n        backgroundColor: `#${previewFillingColor}`,\r\n        backgroundImage:  `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        marginLeft: previewMarginLeft,\r\n        textIndent: previewTextIndent,\r\n        wordSpacing: `${wordSpacing || 0}pt`,\r\n        lineHeight: previewLineSpacing,\r\n        marginTop: `${parseFloat(marginTop) + getOffset(verticalAlign, fontSize)}pt`,\r\n        marginBottom: `${parseFloat(marginBottom) - getOffset(verticalAlign, fontSize)}pt`,\r\n        outline: \"none\",\r\n    };\r\n\r\n    return previewStyle;\r\n};\r\n\r\nexport const generateSideNumberStyle = formState => {\r\n    const { \r\n        listType,\r\n        suffixDistance,\r\n        sideNumber,\r\n        sideNumberFont,\r\n        customSideNumberFont,\r\n        sideNumberAlignment,\r\n        sideNumberFontSize,\r\n        sideNumberFontColor,\r\n        sideNumberFillingColor,\r\n        sideNumberWidth,\r\n        sideNumberRadius,\r\n    } = formState;\r\n\r\n    const previewSideNumberFontColor = getCorrectColor(sideNumberFontColor, \"f5f5f5\");\r\n    const previewSideNumberFillingColor = getCorrectColor(sideNumberFillingColor, \"f5f5f5\");\r\n\r\n    const sideNumberStyle = (!sideNumber || listType === \"unordered\") ? {} : {\r\n        fontFamily: getPreviewFont(sideNumberFont, customSideNumberFont),\r\n        textAlign: sideNumberAlignment,\r\n        fontSize: !sideNumberFontSize ? `${DEFAULT_FONT_SIZE}pt` : `${sideNumberFontSize <= 120 ? sideNumberFontSize : 120}pt`,\r\n        color: `#${previewSideNumberFontColor}`,\r\n        backgroundColor: `#${previewSideNumberFillingColor}`,\r\n        minWidth: `${!sideNumberWidth ? 0 : (sideNumberWidth < 150 ? sideNumberWidth : 150)}pt`,\r\n        borderRadius: `${sideNumberRadius || 0}pt`,\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n    };\r\n\r\n    return sideNumberStyle;\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { generatePreviewStyle, generateSideNumberStyle } from \"./generators\";\r\nimport { getListChars } from \"../../helpers\"\r\n\r\nimport \"./style.css\";\r\n\r\nconst ListPreview = props => {\r\n    const { \r\n        formState,\r\n        prefix, \r\n        suffix, \r\n        suffixDistance,\r\n        listType,\r\n        listItem, \r\n        unicodeChar,\r\n        numberingStyle,\r\n        sideNumber,\r\n    } = props;\r\n\r\n    const isOrderedList = listType === \"ordered\";\r\n\r\n    const listChars = getListChars({ \r\n        isOrderedList, \r\n        numberingStyle, \r\n        listItem, \r\n        unicodeChar \r\n    });\r\n\r\n    const listItemBeginnings = listChars.map(listChar => {\r\n        return (`${prefix}${listChar}${suffix}`);\r\n    });\r\n\r\n    const previewStyle = generatePreviewStyle(formState);\r\n    const sideNumberStyle = isOrderedList && sideNumber ? generateSideNumberStyle(formState) : {};\r\n    const listItemBeginningStyle = {\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n        ...sideNumberStyle,\r\n    };\r\n\r\n    return (\r\n        <div className=\"preview preview_list\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div className=\"preview-content\">\r\n                <div className=\"demonstrationElement\">\r\n                    <div\r\n                        className=\"demonstrationElement-text\"\r\n                        style={previewStyle}\r\n                    >\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginningStyle}\r\n                            >{`${listItemBeginnings[0]}`}</span><span>The first list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginningStyle}\r\n                            >{`${listItemBeginnings[1]}`}</span><span>The second list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginningStyle}\r\n                            >{`${listItemBeginnings[2]}`}</span><span>The third list item</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        formState: form,\r\n        previewText: form.previewText,\r\n        prefix: form.prefix, \r\n        suffix: form.suffix,\r\n        suffixDistance: form.suffixDistance,\r\n        listType: form.listType,\r\n        listItem: form.listItem, \r\n        unicodeChar: form.unicodeChar,\r\n        numberingStyle: form.numberingStyle,\r\n        sideNumber: form.sideNumber,\r\n    };\r\n};\r\n\r\nexport default (connect(mapStateToProps)(ListPreview));","import ColorField from \"./ColorField\";\r\nexport default ColorField;","import React from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport { getCorrectColor, selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ColorField extends React.Component {\r\n    state = {\r\n        isOpen: this.props.isOpen,\r\n    };\r\n\r\n    hideColorPicker = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    showColorPicker = () => {\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    colorPickerHandler = changeColor => ({ hex }) => {\r\n        changeColor(null, hex);\r\n    };\r\n\r\n    render() {\r\n        const { colorCode, changeColorCode, defaultColorCode, required, bottomAligned } = this.props;\r\n        const correctColor = getCorrectColor(colorCode);\r\n        const colorError = correctColor !== colorCode;\r\n        const inputError = colorError && (required || !!colorCode);\r\n        const pickerColor = colorError ? \"\" : `#${correctColor}`;\r\n        const colorSampleStyle = {\r\n            backgroundColor: `#${correctColor}`,\r\n        };\r\n        const colorPickerClassName = `colorPicker${ bottomAligned ? \" colorPicker_bottomAligned\" : \"\"}`;\r\n\r\n        return (\r\n            <div className=\"colorField\">\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    className=\"numberInput\" \r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                    }}\r\n                    value={colorCode}\r\n                    onChange={changeColorCode}\r\n                    onClick={e => { \r\n                        if (defaultColorCode) {\r\n                            selectAllOnClick(defaultColorCode)(e);\r\n                        }\r\n                        // this.showColorPicker(); \r\n                    }}\r\n                    error={inputError}\r\n                />\r\n                <div\r\n                    onClick={this.showColorPicker}\r\n                    className=\"colorSample\" \r\n                    style={colorSampleStyle}\r\n                />\r\n                {this.state.isOpen && (\r\n                    <div className={colorPickerClassName}>\r\n                        <div className=\"colorPicker-chromeBox\">\r\n                            <ChromePicker\r\n                                onChangeComplete={this.colorPickerHandler(changeColorCode)}\r\n                                color={pickerColor}\r\n                                disableAlpha\r\n                            />\r\n                        </div>\r\n                        <div className=\"colorPicker-popOver\"  onClick={this.hideColorPicker}></div>\r\n                    </div>\r\n                ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorField;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport CustomInput from \"./CustomInput\";\r\nimport { fontSet, DEFAULT_FONT } from \"../constants\";\r\nimport { isFontAvailable, focusInput, changeAndScroll } from \"../helpers\";\r\n\r\nclass FontSelectFields extends React.Component {\r\n    customFontInputRef = React.createRef();\r\n\r\n    onFontChange = e => {\r\n        this.props.changeFont(e);\r\n        if (e.target.value === \"custom\") {\r\n            focusInput(this.customFontInputRef);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { font, customFont, changeCustomFont } = this.props;\r\n        const availableFonts = fontSet.filter(fontName => fontName === font || isFontAvailable(fontName));\r\n        const optionalFieldState = font === \"custom\" ? \"optionalField_shown\" : \"optionalField_hidden\";\r\n        return (\r\n            <>\r\n                <span >Font</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={font}\r\n                    onChange={changeAndScroll(this.onFontChange, 500)}\r\n                >\r\n                    <option value={DEFAULT_FONT}>Helvetica</option>\r\n                    { availableFonts.map(fontName => <option value={fontName} key={fontName}>{fontName}</option>) }\r\n                    <option value=\"custom\" className=\"highlightedOption\">Custom</option>\r\n                </NativeSelect>\r\n    \r\n                <div className={`optionalField ${optionalFieldState}`}>\r\n                    <span></span>\r\n                </div>\r\n                <div className={`optionalField ${optionalFieldState}`}>\r\n                    <TextField \r\n                        value={customFont}\r\n                        onChange={changeCustomFont}\r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        placeholder=\"Enter the font name\"\r\n                        inputRef={this.customFontInputRef}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FontSelectFields;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport ListPreview from \"../../common/Preview/ListPreview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport LabelWithAsterisk from \"../../common/LabelWithAsterisk\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport { \r\n    listStyleTypes, \r\n    bulletNamesMap, \r\n    HOLDER, \r\n    DEFAULT_FONT_SIZE,\r\n    DEFAULT_SIDE_NUMBER_FONT_COLOR,\r\n    DEFAULT_SIDE_NUMBER_FILLING_COLOR,\r\n    DEFAULT_SIDE_NUMBER_WIDTH,\r\n    DEFAULT_SIDE_NUMBER_RADIUS,\r\n } from \"../../constants\";\r\nimport { \r\n    updateValidationError,\r\n    setValue,\r\n    toggleValue,\r\n    setNumber,\r\n    setColor,\r\n    setBullet,\r\n} from \"../../actions\";\r\nimport { \r\n    selectAllOnClick, \r\n    changeAndScroll, \r\n    getListSectionErrorState,\r\n    focusInput,\r\n    unicodeNumberToChar, \r\n    unicodeCharToNumber, \r\n} from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ListSection extends React.Component {\r\n    listNameInputRef = React.createRef();\r\n    unicodeCharInputRef = React.createRef();\r\n\r\n    onIsListChange = e => {\r\n        const { listName } = this.props;\r\n        if (e.target.checked) {\r\n            if (listName === HOLDER) {\r\n                this.props.changeListName(null, \"\");\r\n            }\r\n        } else if (listName === \"\") {\r\n            setTimeout(() => this.props.changeListName(null, HOLDER), 200);\r\n        }\r\n        this.props.changeIsList(e);\r\n\r\n        if (e.target.checked && listName === HOLDER) {\r\n            focusInput(this.listNameInputRef);\r\n        }       \r\n    };\r\n\r\n    onListTypeChange = e => {\r\n        const { suffix } = this.props;\r\n        const { value } = e.target;\r\n        this.props.changeListType(null, value);\r\n        if (value === \"ordered\" && suffix === \"\") {\r\n            this.props.changeSuffix(null, \".\");\r\n        } else if (value === \"unordered\" && suffix === \".\") {\r\n            this.props.changeSuffix(null, \"\");\r\n        }\r\n    };\r\n\r\n    onListItemChange = e => {\r\n        this.props.changeListItem(e);\r\n        if (e.target.value === \"custom\" && !this.props.unicodeChar) {\r\n            focusInput(this.unicodeCharInputRef);\r\n        }\r\n    };\r\n\r\n    onUnicodeNumberChange = e => {\r\n        const newUnicodeNumber = this.props.changeUnicodeNumber(e);\r\n        const newUnicodeChar = newUnicodeNumber !== \"\" ? unicodeNumberToChar(newUnicodeNumber) : \"\";\r\n        this.props.changeUnicodeChar(null, newUnicodeChar);\r\n    };\r\n    \r\n    onUnicodeCharChange = e => {\r\n        const newUnicodeChar = this.props.changeUnicodeChar(e);\r\n        const newUnicodeNumber = newUnicodeChar !== \"\" ? unicodeCharToNumber(newUnicodeChar) : \"\";\r\n        this.props.changeUnicodeNumber(null, newUnicodeNumber);\r\n    };\r\n\r\n    onSideNumberChange = e => {\r\n        const { suffix } = this.props;\r\n        this.props.changeSideNumber(e);\r\n        if (e.target.checked && suffix === \".\") {\r\n            this.props.changeSuffix(null, \"\");\r\n        } else if (!e.target.checked && suffix === \"\") {\r\n            this.props.changeSuffix(null, \".\");\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.validationError) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.validationError && !prevprops.validationError) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n        if (this.props.validationError && !getListSectionErrorState(this.props.formState)) {\r\n            this.props.updateValidationError({ listSection: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            validationError,\r\n            listPreviewProps,\r\n            isList,\r\n            listName, changeListName,\r\n            orderLevel, changeOrderLevel,\r\n            prefix, changePrefix,\r\n            suffix, changeSuffix,\r\n            suffixDistance, changeSuffixDistance,\r\n            magicTabs, changeMagicTabs,\r\n            listType,\r\n            listItem,\r\n            unicodeNumber,\r\n            unicodeChar,\r\n            numberingStyle, changeNumberingStyle,\r\n            continueNumbering, changeContinueNumbering,\r\n            allowRestartNumbering, changeAllowRestartNumbering,\r\n            includePreviousFrom, changeIncludePreviousFrom,\r\n            sideNumber,\r\n            sideNumberFont, changeSideNumberFont,\r\n            customSideNumberFont, changeCustomSideNumberFont,\r\n            sideNumberAlignment, changeSideNumberAlignment,\r\n            sideNumberFontSize, changeSideNumberFontSize,\r\n            sideNumberFontColor, changeSideNumberFontColor,\r\n            sideNumberFillingColor, changeSideNumberFillingColor,\r\n            sideNumberWidth, changeSideNumberWidth,\r\n            sideNumberRadius, changeSideNumberRadius,\r\n        } = this.props;\r\n        \r\n        const mainListSettingsState = isList ? \"shown\" : \"hidden\";\r\n        const unorderedListSettingsState = (isList && listType === \"unordered\") ? \"shown\" : \"hidden\";\r\n        const customListItemSettingsState = (isList && listType === \"unordered\" && listItem === \"custom\") ? \"shown\" : \"hidden\";\r\n        const orderedListSettingsState = (isList && listType === \"ordered\") ? \"shown\" : \"hidden\";\r\n        const sideNumberSettingsState = (isList && listType === \"ordered\" && sideNumber) ? \"shown\" : \"hidden\";\r\n    \r\n        return (\r\n            <>\r\n                <div className=\"dialogGrid dialogGrid_2cols\">\r\n                    <div>\r\n                        <div>\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth\">\r\n                                <div className=\"listSection-firstSpan\">\r\n                                    <span>Is it a list?</span>\r\n                                </div>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox \r\n                                        color=\"primary\" \r\n                                        checked={isList} \r\n                                        onChange={changeAndScroll(this.onIsListChange)} \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${mainListSettingsState}`}>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth optionalSettings\">\r\n                                    <LabelWithAsterisk>List name</LabelWithAsterisk>\r\n                                    <TextField\r\n                                        value={listName}\r\n                                        onChange={changeListName} \r\n                                        error={validationError && !listName}\r\n                                        inputRef={this.listNameInputRef}\r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                    />\r\n    \r\n                                    <span>Order level</span>\r\n                                    <div>\r\n                                        <NativeSelect\r\n                                            value={orderLevel}\r\n                                            onChange={changeOrderLevel}\r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            <option value=\"\">...</option>\r\n                                            <option value=\"0\">0</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                        </NativeSelect>\r\n                                    </div>\r\n    \r\n                                    <span>Prefix</span>\r\n                                    <TextField\r\n                                        value={prefix}\r\n                                        onChange={changePrefix} \r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                    />\r\n    \r\n                                    <span>Suffix</span>\r\n                                    <TextField\r\n                                        value={suffix}\r\n                                        onChange={changeSuffix} \r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                        onClick={selectAllOnClick(\".\")}\r\n                                    />\r\n    \r\n                                    <span>Suffix distance</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <NativeSelect\r\n                                            value={suffixDistance}\r\n                                            onChange={changeSuffixDistance} \r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            <option value=\"0.25\">0.25</option>\r\n                                            <option value=\"0.5\">0.5</option>\r\n                                            <option value=\"0.75\">0.75</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"1.25\">1.25</option>\r\n                                            <option value=\"1.5\">1.5</option>\r\n                                            <option value=\"1.75\">1.75</option>\r\n                                            <option value=\"2\">2</option>\r\n                                        </NativeSelect>\r\n                                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                                    </div>\r\n    \r\n                                    <span>Magic Tabs</span>\r\n                                    <div className=\"unlabeledCheckbox\">\r\n                                        <Checkbox \r\n                                            color=\"primary\" \r\n                                            checked={magicTabs} \r\n                                            onChange={changeMagicTabs} \r\n                                        />\r\n                                    </div>\r\n    \r\n                                    <span>Type of list</span>\r\n                                    <RadioGroup \r\n                                        value={listType} \r\n                                        onChange={changeAndScroll(this.onListTypeChange)}\r\n                                        row\r\n                                    >\r\n                                        <div className=\"labeledCheckbox\">\r\n                                            <FormControlLabel\r\n                                                value=\"unordered\"\r\n                                                control={<Radio color=\"primary\" />}\r\n                                                label=\"Unordered\"\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"labeledCheckbox\">\r\n                                            <FormControlLabel\r\n                                                value=\"ordered\"\r\n                                                control={<Radio color=\"primary\" />}\r\n                                                label=\"Ordered\"\r\n                                                labelPlacement=\"end\"\r\n                                            />\r\n                                        </div>\r\n                                    </RadioGroup>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`optionalSettings optionalSettings_${orderedListSettingsState}`}>\r\n                            <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                                <span>Numbering style</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={numberingStyle}\r\n                                        onChange={changeNumberingStyle}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        {listStyleTypes.map(style => (\r\n                                            <option value={style.value} key={style.value}>{style.name}</option>\r\n                                        ))}                                    \r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Continue numbering after interruption</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox\r\n                                        checked={continueNumbering}\r\n                                        onChange={changeContinueNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Allow restart numbering</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox\r\n                                        checked={allowRestartNumbering} \r\n                                        onChange={changeAllowRestartNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Include previous levels from</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={includePreviousFrom} \r\n                                        onChange={changeIncludePreviousFrom}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        <option value=\"\">...</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Side number</span>\r\n                                <div className=\"unlabeledCheckbox\">\r\n                                    <Checkbox\r\n                                        checked={sideNumber}\r\n                                        onChange={changeAndScroll(this.onSideNumberChange)}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                            </div> \r\n    \r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${sideNumberSettingsState}`}>\r\n                                <div className=\"flexibleGrid listTypeSettings\">\r\n                                    <FontSelectFields \r\n                                        font={sideNumberFont}\r\n                                        changeFont={changeSideNumberFont}\r\n                                        customFont={customSideNumberFont}\r\n                                        changeCustomFont={changeCustomSideNumberFont}\r\n                                    />\r\n                            \r\n                                    <span>Alignment</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberAlignment}\r\n                                        onChange={changeSideNumberAlignment}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"left\"}>Left</option>\r\n                                        <option value={\"center\"}>Center</option>\r\n                                        <option value={\"right\"}>Right</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Font size</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberFontSize}\r\n                                            onChange={changeSideNumberFontSize}\r\n                                            onClick={selectAllOnClick(DEFAULT_FONT_SIZE)}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>      \r\n                            \r\n                                    <span>Font color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFontColor} \r\n                                        changeColorCode={changeSideNumberFontColor}\r\n                                        defaultColorCode={DEFAULT_SIDE_NUMBER_FONT_COLOR}\r\n                                        bottomAligned\r\n                                    />\r\n                                        \r\n                                    <span>Filling color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFillingColor} \r\n                                        changeColorCode={changeSideNumberFillingColor}\r\n                                        defaultColorCode={DEFAULT_SIDE_NUMBER_FILLING_COLOR}\r\n                                        bottomAligned\r\n                                    />\r\n    \r\n                                    <span>Width</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberWidth}\r\n                                            onChange={changeSideNumberWidth}\r\n                                            onClick={selectAllOnClick(DEFAULT_SIDE_NUMBER_WIDTH)}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                        \r\n                                    <span>Radius</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberRadius}\r\n                                            onChange={changeSideNumberRadius}\r\n                                            onClick={selectAllOnClick(DEFAULT_SIDE_NUMBER_RADIUS)}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className={`listPreviewBox optionalSettings optionalSettings_${mainListSettingsState}`}>\r\n                        <ListPreview {...listPreviewProps} />\r\n                    </div>\r\n                </div>\r\n                <div className={`optionalSettings optionalSettings_${unorderedListSettingsState}`}>\r\n                    <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                        <div className=\"dialogGrid dialogGrid_2cols\">\r\n                            <span className=\"listSection-firstSpan\">List item</span>\r\n                            <div className=\"listItemSelect\">\r\n                                <NativeSelect \r\n                                    value={listItem} \r\n                                    onChange={this.onListItemChange} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    { \r\n                                        Object.entries(bulletNamesMap).map(([key, value]) => {\r\n                                            return (<option key={key} value={key}>{value}</option>) \r\n                                        })\r\n                                    }\r\n                                    <option value={\"custom\"} className=\"highlightedOption\">Custom</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`optionalSettings optionalSettings_${customListItemSettingsState}`}>\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Unicode number</span>\r\n                                    <div>\r\n                                        <TextField  \r\n                                            value={unicodeNumber}\r\n                                            onChange={this.onUnicodeNumberChange}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"unicodeInput\" \r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">u+</InputAdornment>\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Char</span>\r\n                                    <div>\r\n                                        <TextField \r\n                                            value={unicodeChar}\r\n                                            onChange={this.onUnicodeCharChange}\r\n                                            onClick={selectAllOnClick()}\r\n                                            inputRef={this.unicodeCharInputRef}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"bulletInput\" \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return {\r\n        validationError: validationError.listSection,\r\n        formState: form,\r\n        isList: form.isList,\r\n        listName: form.listName, \r\n        orderLevel: form.orderLevel,\r\n        prefix: form.prefix,\r\n        suffix: form.suffix,\r\n        suffixDistance: form.suffixDistance,\r\n        magicTabs: form.magicTabs,\r\n        listType: form.listType,\r\n        listItem: form.listItem,\r\n        unicodeNumber: form.unicodeNumber,\r\n        unicodeChar: form.unicodeChar,\r\n        numberingStyle: form.numberingStyle,\r\n        continueNumbering: form.continueNumbering,\r\n        allowRestartNumbering: form.allowRestartNumbering,\r\n        includePreviousFrom: form.includePreviousFrom,\r\n        sideNumber: form.sideNumber,\r\n        sideNumberFont: form.sideNumberFont,\r\n        customSideNumberFont: form.customSideNumberFont,\r\n        sideNumberAlignment: form.sideNumberAlignment,\r\n        sideNumberFontSize: form.sideNumberFontSize,\r\n        sideNumberFontColor: form.sideNumberFontColor,\r\n        sideNumberFillingColor: form.sideNumberFillingColor,\r\n        sideNumberWidth: form.sideNumberWidth,\r\n        sideNumberRadius: form.sideNumberRadius,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        changeListName: setValue(dispatch)(\"listName\"),\r\n        changeIsList: toggleValue(dispatch)(\"isList\"),\r\n        changeOrderLevel: setValue(dispatch)(\"orderLevel\"),\r\n        changePrefix: setValue(dispatch)(\"prefix\"),\r\n        changeSuffix: setValue(dispatch)(\"suffix\"),\r\n        changeSuffixDistance: setValue(dispatch)(\"suffixDistance\"),\r\n        changeMagicTabs: toggleValue(dispatch)(\"magicTabs\"),\r\n        changeListType: setValue(dispatch)(\"listType\"),\r\n        changeListItem: setValue(dispatch)(\"listItem\"),\r\n        changeUnicodeNumber: setColor(dispatch)(\"unicodeNumber\"),\r\n        changeUnicodeChar: setBullet(dispatch)(\"unicodeChar\"),\r\n        changeNumberingStyle: setValue(dispatch)(\"numberingStyle\"),\r\n        changeContinueNumbering: toggleValue(dispatch)(\"continueNumbering\"),\r\n        changeAllowRestartNumbering: toggleValue(dispatch)(\"allowRestartNumbering\"),\r\n        changeIncludePreviousFrom: setValue(dispatch)(\"includePreviousFrom\"),\r\n        changeSideNumber: toggleValue(dispatch)(\"sideNumber\"),\r\n        changeSideNumberFont: setValue(dispatch)(\"sideNumberFont\"),\r\n        changeCustomSideNumberFont: setValue(dispatch)(\"customSideNumberFont\"),\r\n        changeSideNumberAlignment: setValue(dispatch)(\"sideNumberAlignment\"),\r\n        changeSideNumberFontSize: setNumber(dispatch)(\"sideNumberFontSize\"),\r\n        changeSideNumberFontColor: setColor(dispatch)(\"sideNumberFontColor\"),\r\n        changeSideNumberFillingColor: setColor(dispatch)(\"sideNumberFillingColor\"),\r\n        changeSideNumberWidth: setNumber(dispatch)(\"sideNumberWidth\"),\r\n        changeSideNumberRadius: setNumber(dispatch)(\"sideNumberRadius\"),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListSection);","import ListSection from \"./ListSection\";\r\nexport default ListSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\nimport { setValue } from \"../actions\";\r\n\r\nclass ReferencingSection extends React.Component {\r\n    onXrefChange = xref => (e, secondArg) => {\r\n        const value = e ? e.target.value : secondArg;\r\n        if (xref.groupKey && xref.nameEn && value === xref.nameEn) {\r\n            this.props.changeReferenceGroupToCreate(null, xref);\r\n        } else {\r\n            this.props.changeReferenceGroupToCreate(null, \"\");\r\n        }\r\n        this.props.changeReferenceGroup(e, secondArg);\r\n    };\r\n\r\n    render() {\r\n        const { \r\n            newGroup, \r\n            isOpen, \r\n            hideDialog, \r\n            handleClick, \r\n            onSave,\r\n            referenceGroup, \r\n        } = this.props;\r\n        \r\n        const newGroupName = newGroup.nameEn;\r\n        const isEditMode = !!newGroupName;\r\n    \r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <span>Reference group</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        input={ <CustomInput /> } \r\n                        value={referenceGroup} \r\n                        onChange={this.onXrefChange(newGroup)} \r\n                    >\r\n                        { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                        <option value=\"\">none</option>\r\n                        <option value=\"0\">Reference group 1</option>\r\n                        <option value=\"1\">Reference group 2</option>\r\n                    </NativeSelect>\r\n                    {\r\n                        !(isEditMode && referenceGroup !== newGroupName) &&\r\n                        <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                            { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                        </Button>\r\n                     }\r\n                </div>\r\n                <NewGroupDialog \r\n                    isOpen={isOpen}\r\n                    hideDialog={hideDialog}\r\n                    onSave={onSave}\r\n                    isEditMode={isEditMode}\r\n                    currentGroup={newGroup}\r\n                    changeGroupSelect={this.onXrefChange}\r\n                    groupType=\"xref\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        referenceGroup: form.referenceGroup,\r\n        savedNewGroup: form.referenceGroupToCreate,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeReferenceGroup: setValue(dispatch)(\"referenceGroup\"),\r\n        changeReferenceGroupToCreate: setValue(dispatch)(\"referenceGroupToCreate\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(withNewGroupControl(ReferencingSection)));","import * as React from \"react\";\r\nimport deepEqual from \"fast-deep-equal\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, q = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(q[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, q[i]))\r\n              t[q[i]] = s[q[i]];\r\n      }\r\n  return t;\r\n};\r\n\r\nfunction normalizeHtml(str) {\r\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, \" \");\r\n}\r\nfunction findLastTextNode(node) {\r\n  if (node.nodeType === Node.TEXT_NODE)\r\n      return node;\r\n  let children = node.childNodes;\r\n  for (let i = children.length - 1; i >= 0; i--) {\r\n      let textNode = findLastTextNode(children[i]);\r\n      if (textNode !== null)\r\n          return textNode;\r\n  }\r\n  return null;\r\n}\r\nfunction replaceCaret(el) {\r\n  // Place the caret at the end of the element\r\n  const target = findLastTextNode(el);\r\n  // do not move caret if element was not focused\r\n  const isTargetFocused = document.activeElement === el;\r\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\r\n      var sel = window.getSelection();\r\n      if (sel !== null) {\r\n          var range = document.createRange();\r\n          range.setStart(target, target.nodeValue.length);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n      }\r\n      if (el instanceof HTMLElement)\r\n          el.focus();\r\n  }\r\n}\r\n/**\r\n* A simple component for an html element with editable contents.\r\n*/\r\nexport default class ContentEditable extends React.Component {\r\n  constructor() {\r\n      super(...arguments);\r\n      this.lastHtml = this.props.html;\r\n      this.el = typeof this.props.innerRef === \"function\" ? { current: null } : React.createRef();\r\n      this.getEl = () => (this.props.innerRef && typeof this.props.innerRef !== \"function\" ? this.props.innerRef : this.el).current;\r\n      this.emitChange = (originalEvt) => {\r\n          const el = this.getEl();\r\n          if (!el)\r\n              return;\r\n          const html = el.innerHTML;\r\n          if (this.props.onChange && html !== this.lastHtml) {\r\n              // Clone event with Object.assign to avoid\r\n              // \"Cannot assign to read only property 'target' of object\"\r\n              const evt = Object.assign({}, originalEvt, {\r\n                  target: {\r\n                      value: html\r\n                  }\r\n              });\r\n              this.props.onChange(evt);\r\n          }\r\n          this.lastHtml = html;\r\n      };\r\n  }\r\n  render() {\r\n      const _a = this.props, { tagName, html, innerRef } = _a, props = __rest(_a, [\"tagName\", \"html\", \"innerRef\"]);\r\n      return React.createElement(tagName || \"div\", Object.assign({}, props, { ref: typeof innerRef === \"function\" ? (current) => {\r\n              innerRef(current);\r\n              this.el.current = current;\r\n          } : innerRef || this.el, onInput: this.emitChange, onBlur: this.props.onBlur || this.emitChange, onKeyUp: this.props.onKeyUp || this.emitChange, onKeyDown: this.props.onKeyDown || this.emitChange, contentEditable: !this.props.disabled, dangerouslySetInnerHTML: { __html: html } }), this.props.children);\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n      const { props } = this;\r\n      const el = this.getEl();\r\n      // We need not rerender if the change of props simply reflects the user's edits.\r\n      // Rerendering in this case would make the cursor/caret jump\r\n      // Rerender if there is no element yet... (somehow?)\r\n      if (!el)\r\n          return true;\r\n      // ...or if html really changed... (programmatically, not by user edit)\r\n      if (normalizeHtml(nextProps.html) !== normalizeHtml(el.innerHTML)) {\r\n          return true;\r\n      }\r\n      // Handle additional properties\r\n      return props.disabled !== nextProps.disabled ||\r\n          props.tagName !== nextProps.tagName ||\r\n          props.className !== nextProps.className ||\r\n          props.innerRef !== nextProps.innerRef ||\r\n          !deepEqual(props.style, nextProps.style);\r\n  }\r\n  componentDidUpdate() {\r\n      const el = this.getEl();\r\n      if (!el)\r\n          return;\r\n      // Perhaps React (whose VDOM gets outdated because we often prevent\r\n      // rerendering) did not update the DOM. So we update it manually now.(?!(?:<br \\/>|<br>|<br\\/>)$)<(.*?)>\r\n      if (this.props.html !== el.innerHTML) {\r\n          el.innerHTML = this.lastHtml = this.props.html;\r\n      }\r\n      replaceCaret(el);\r\n  }\r\n}\r\nContentEditable.propTypes = {\r\n  html: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  tagName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n  ])\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ContentEditable from \"../ContentEditable\";\r\nimport { generatePreviewStyle } from \"./generators\";\r\nimport { setValue } from \"../../actions\";\r\nimport { selectAllEditableContent, getUnstyledText } from \"../../helpers\"\r\n\r\nimport \"./style.css\";\r\n\r\nclass Preview extends React.Component {\r\n    onPreviewTextChange = e => {\r\n        const { value } = e.target;\r\n        if (value && value !== \"<div></div>\" && value !== \"<br>\") {\r\n            this.props.changePreviewText(null, getUnstyledText(value));\r\n        } else {\r\n            this.props.changePreviewText(null, `<div><br></div>`);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const previewStyle = generatePreviewStyle(this.props.formState);\r\n        const { previewText } = this.props;\r\n    \r\n        return (\r\n            <div className=\"preview\">\r\n                <span className=\"preview-title\">Preview</span>\r\n                <div \r\n                    className=\"preview-content preview-content_withPointer\" \r\n                    onClick={selectAllEditableContent(\"demonstrationElement\")}\r\n                >\r\n                    <div className=\"demonstrationElement\">\r\n                        <ContentEditable\r\n                            className=\"demonstrationElement-text\"\r\n                            onChange={this.onPreviewTextChange} \r\n                            html={previewText}\r\n                            style={previewStyle}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        formState: form,\r\n        previewText: form.previewText,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changePreviewText: setValue(dispatch)(\"previewText\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(Preview));","import Preview from \"./Preview.js\";\r\nexport default Preview;","import TypographySection from \"./TypographySection\";\r\nexport default TypographySection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport Preview from \"../../common/Preview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport {  setValue, toggleValue, setNumber, setColor } from \"../../actions\";\r\nimport { DEFAULT_FONT_SIZE, DEFAULT_FONT_COLOR, DEFAULT_FONT_COLOR_NAME } from \"../../constants\";\r\nimport { selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst TypographySection = props => {\r\n    const { \r\n        previewProps,\r\n        font, changeFont,\r\n        customFont, changeCustomFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"flexibleGrid\">\r\n                <FontSelectFields { ...{ font, changeFont, customFont, changeCustomFont }} />\r\n                \r\n                <span>Alignment</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={alignment}\r\n                    onChange={changeAlignment}\r\n                >\r\n                    <option value={\"left\"}>Left</option>\r\n                    <option value={\"center\"}>Center</option>\r\n                    <option value={\"right\"}>Right</option>\r\n                    <option value={\"justify\"}>Justified</option>\r\n                </NativeSelect>\r\n\r\n                <span>Font size</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={fontSize}\r\n                        onChange={changeFontSize}\r\n                        onClick={selectAllOnClick(DEFAULT_FONT_SIZE)}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>      \r\n\r\n                <span>Font color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                    value={fontColorName}\r\n                    onChange={changeFontColorName}\r\n                    onClick={selectAllOnClick(DEFAULT_FONT_COLOR_NAME)}\r\n                />\r\n\r\n                <span>Font color HEX</span>\r\n                <ColorField \r\n                    colorCode={fontColor} \r\n                    changeColorCode={changeFontColor}\r\n                    defaultColorCode={DEFAULT_FONT_COLOR}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_topIndented\">\r\n            <span>Stylings</span>\r\n            <div className=\"checkBoxesSet\">\r\n                <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Bold\"\r\n                        labelPlacement=\"end\"\r\n                        checked={bold}\r\n                        onChange={changeBold}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Italic\"\r\n                        labelPlacement=\"end\"\r\n                        checked={italic}\r\n                        onChange={changeItalic}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Underlined\"\r\n                        labelPlacement=\"end\"\r\n                        checked={underlined}\r\n                        onChange={changeUnderlined}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_stroke\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Stroke\"\r\n                        labelPlacement=\"end\"\r\n                        checked={stroke}\r\n                        onChange={changeStroke}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <span>Text transform</span>\r\n            <RadioGroup \r\n                value={textTransform} \r\n                onChange={changeTextTransform} \r\n                row\r\n            >\r\n                <div className=\"labeledCheckbox\">\r\n                    <FormControlLabel\r\n                        value=\"none\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"None\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_uppercase\">\r\n                    <FormControlLabel\r\n                        value=\"uppercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Uppercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_lowercase\">\r\n                    <FormControlLabel\r\n                        value=\"lowercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Lowercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_smallCaps\">\r\n                    <FormControlLabel\r\n                        value=\"small-caps\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Small caps\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n            </RadioGroup>\r\n\r\n            <span>Sub/Superscript</span>\r\n            <div>\r\n                <NativeSelect \r\n                value={verticalAlign} \r\n                onChange={changeVerticalAlign}\r\n                    input={ <CustomInput /> } \r\n                >\r\n                    <option value=\"baseline\">None</option>\r\n                    <option value=\"sub\">Subscript</option>\r\n                    <option value=\"super\">Superscript</option>\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        font: form.font,\r\n        customFont: form.customFont,\r\n        alignment: form.alignment,\r\n        fontSize: form.fontSize,\r\n        fontColorName: form.fontColorName,\r\n        fontColor: form.fontColor,\r\n        bold: form.bold,\r\n        italic: form.italic,\r\n        underlined: form.underlined,\r\n        stroke: form.stroke,\r\n        textTransform: form.textTransform,\r\n        verticalAlign: form.verticalAlign,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeFont: setValue(dispatch)(\"font\"),\r\n        changeCustomFont: setValue(dispatch)(\"customFont\"),\r\n        changeAlignment: setValue(dispatch)(\"alignment\"),\r\n        changeFontSize: setNumber(dispatch)(\"fontSize\"),\r\n        changeFontColorName: setValue(dispatch)(\"fontColorName\"),\r\n        changeFontColor: setColor(dispatch)(\"fontColor\"),\r\n        changeBold: toggleValue(dispatch)(\"bold\"),\r\n        changeItalic: toggleValue(dispatch)(\"italic\"),\r\n        changeUnderlined: toggleValue(dispatch)(\"underlined\"),\r\n        changeStroke: toggleValue(dispatch)(\"stroke\"),\r\n        changeTextTransform: setValue(dispatch)(\"textTransform\"),\r\n        changeVerticalAlign: setValue(dispatch)(\"verticalAlign\"),\r\n        changeMarginTop: setNumber(dispatch)(\"marginTop\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(TypographySection));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport Preview from \"../common/Preview\";\r\nimport { setValue, setNumber } from \"../actions\";\r\nimport { DEFAULT_MARGIN, DEFAULT_WORD_SPACING } from \"../constants\";\r\nimport { selectAllOnClick, focusInput, changeAndScroll } from \"../helpers\";\r\n\r\nclass DistancesSection extends React.Component {\r\n    customLineSpacingInputRef = React.createRef();\r\n\r\n    onLineSpacingChange = e => {\r\n        this.props.changeLineSpacing(e);\r\n        if (e.target.value === \"custom\") {\r\n            focusInput(this.customLineSpacingInputRef);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            previewProps,\r\n            marginTop, changeMarginTop,\r\n            marginBottom, changeMarginBottom,\r\n            firstRowIndent, changeFirstRowIndent,\r\n            otherRowsIndent, changeOtherRowsIndent,\r\n            lineSpacing,\r\n            customLineSpacing, changeCustomLineSpacing,\r\n            wordSpacing, changeWordSpacing,\r\n        } = this.props;\r\n\r\n        const optionalFieldState = lineSpacing === \"custom\" ? \"optionalField_shown\" : \"optionalField_hidden\";\r\n        \r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n                <div className=\"flexibleGrid\">\r\n                    <span>Margin top</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={marginTop}\r\n                            onChange={changeMarginTop}\r\n                            onClick={selectAllOnClick(DEFAULT_MARGIN)}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </div> \r\n    \r\n                    <span>Margin bottom</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={marginBottom}\r\n                            onChange={changeMarginBottom}\r\n                            onClick={selectAllOnClick(DEFAULT_MARGIN)}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </div> \r\n    \r\n                    <span>1st row indent</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={firstRowIndent}\r\n                            onChange={changeFirstRowIndent}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                    </div>\r\n    \r\n                    <span>Other rows indent</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={otherRowsIndent}\r\n                            onChange={changeOtherRowsIndent}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                    </div>\r\n    \r\n                    <span>Line spacing</span>\r\n                    <div>\r\n                        <NativeSelect \r\n                            input={ <CustomInputShort /> } \r\n                            value={lineSpacing} \r\n                            onChange={changeAndScroll(this.onLineSpacingChange, 500)} \r\n                        >\r\n                            <option value=\"1.0\">1.0</option>\r\n                            <option value=\"1.15\">1.15</option>\r\n                            <option value=\"1.5\">1.5</option>\r\n                            <option value=\"2.0\">2.0</option>\r\n                            <option value=\"2.5\">2.5</option>\r\n                            <option value=\"3.0\">3.0</option>\r\n                            <option value=\"custom\" className=\"highlightedOption\">Custom</option>\r\n                        </NativeSelect> \r\n                    </div>\r\n\r\n                    <div className={`optionalField ${optionalFieldState}`}>\r\n                    </div>\r\n                    <div className={`optionalField ${optionalFieldState}`}>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={customLineSpacing}\r\n                            onChange={changeCustomLineSpacing}\r\n                            placeholder=\"Your value\"\r\n                            inputRef={this.customLineSpacingInputRef}\r\n                        />                                            \r\n                    </div>\r\n                        \r\n                    <span>Word spacing</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={wordSpacing}\r\n                            onChange={changeWordSpacing}\r\n                            onClick={selectAllOnClick(DEFAULT_WORD_SPACING)}\r\n                        />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </div> \r\n                </div>\r\n                <div className=\"previewSide\">\r\n                    <Preview {...previewProps} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        marginTop: form.marginTop,\r\n        marginBottom: form.marginBottom,\r\n        firstRowIndent: form.firstRowIndent,\r\n        otherRowsIndent: form.otherRowsIndent,\r\n        lineSpacing: form.lineSpacing,\r\n        customLineSpacing: form.customLineSpacing,\r\n        wordSpacing: form.wordSpacing,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeMarginTop: setNumber(dispatch)(\"marginTop\"),\r\n        changeMarginBottom: setNumber(dispatch)(\"marginBottom\"),\r\n        changeFirstRowIndent: setNumber(dispatch)(\"firstRowIndent\"),\r\n        changeOtherRowsIndent: setNumber(dispatch)(\"otherRowsIndent\"),\r\n        changeLineSpacing: setValue(dispatch)(\"lineSpacing\"),\r\n        changeCustomLineSpacing: setNumber(dispatch)(\"customLineSpacing\"),\r\n        changeWordSpacing: setNumber(dispatch)(\"wordSpacing\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(DistancesSection));","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst FrameTypeInput = withStyles(theme => ({\r\n    root: {\r\n      width: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      fontFamily: [\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default FrameTypeInput;","import { getCorrectColor } from \"../../helpers\";\r\n\r\nconst generateBorderPreviewStyle = formState => {\r\n    const { \r\n        leftBorder,\r\n        rightBorder,\r\n        topBorder,\r\n        bottomBorder,\r\n        borderColor,\r\n        borderThickness,\r\n        borderType,\r\n    } = formState;\r\n\r\n    const correctColor = getCorrectColor(borderColor);\r\n    const previewBorderWidth = borderThickness && !isNaN(parseFloat(borderThickness))\r\n                                ? `${borderThickness <= 15 ? borderThickness : 15}pt`\r\n                                : \"0\";\r\n\r\n    const previewStyle = {\r\n        borderLeft: leftBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginLeft: leftBorder ? \"0\" : previewBorderWidth, \r\n        borderRight: rightBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginRight: rightBorder ? \"0\" : previewBorderWidth, \r\n        borderTop: topBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginTop: topBorder ? \"0\" : previewBorderWidth, \r\n        borderBottom: bottomBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n        marginBottom: bottomBorder ? \"0\" : previewBorderWidth, \r\n    };\r\n\r\n    return previewStyle;\r\n};\r\n\r\nexport default generateBorderPreviewStyle;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport FrameTypeInput from \"../../sections/FramesSection/FrameTypeInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport generateBorderPreviewStyle from \"./generateBorderPreviewStyle\";\r\nimport { setValue, toggleValue, setNumber, setColor } from \"../../actions\";\r\nimport { selectAllOnClick } from \"../../helpers\";\r\nimport { \r\n    DEFAULT_BORDER_COLOR, \r\n    DEFAULT_BORDER_COLOR_NAME,\r\n    DEFAULT_BORDER_THICKNESS,\r\n} from \"../../constants\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass FramesSection extends React.Component {\r\n    onBorderTypeChange = e => {\r\n        this.props.changeBorderType(e);\r\n        if (e.target.value === \"double\" && this.props.borderThickness === \"2\") {\r\n            this.props.changeBorderThickness(null, \"3\");\r\n        } else if (e.target.value !== \"double\" && this.props.borderThickness === \"3\") {\r\n            this.props.changeBorderThickness(null, \"2\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { \r\n            formState,\r\n            leftBorder, changeLeftBorder, \r\n            rightBorder, changeRightBorder,\r\n            topBorder, changeTopBorder, \r\n            bottomBorder, changeBottomBorder, \r\n            borderColorName, changeBorderColorName,\r\n            borderColor, changeBorderColor,\r\n            borderThickness, changeBorderThickness,\r\n            borderType,\r\n            borderConnectToPrevious, changeBorderConnectToPrevious,\r\n         } = this.props;\r\n\r\n        const previewStyle = generateBorderPreviewStyle(formState)\r\n    \r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <div className=\"directionControlsContainer\">\r\n                    <div className=\"directionsControls\" style={previewStyle}>\r\n                        <span className=\"directionLabel\">Left</span>\r\n                        <div className=\"centralColumn\">\r\n                            <span className=\"directionLabel\">Top</span>\r\n                            <div className=\"checkboxesKit crossGrid\">\r\n                                <div id=\"r1\" className=\"gridCell\">\r\n                                    <Checkbox \r\n                                        color=\"primary\"\r\n                                        checked={topBorder}  \r\n                                        onChange={changeTopBorder}\r\n                                    />\r\n                                </div>\r\n                                <div id=\"r2c1\" className=\"gridCell\">\r\n                                    <Checkbox \r\n                                        color=\"primary\" \r\n                                        checked={leftBorder}  \r\n                                        onChange={changeLeftBorder}\r\n                                    />\r\n                                </div>\r\n                                <div id=\"r2c2\" className=\"gridCell\">\r\n                                </div>\r\n                                <div id=\"r2c3\" className=\"gridCell\">\r\n                                    <Checkbox \r\n                                        color=\"primary\" \r\n                                        checked={rightBorder}  \r\n                                        onChange={changeRightBorder}\r\n                                    />\r\n                                </div>\r\n                                <div id=\"r3\" className=\"gridCell\">\r\n                                    <Checkbox \r\n                                        color=\"primary\"\r\n                                        checked={bottomBorder}  \r\n                                        onChange={changeBottomBorder}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"directionLabel\">Bottom</span>\r\n                        </div>\r\n                        <span className=\"directionLabel\">Right</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialogGrid dialogGrid_2cols\">\r\n                    <span>Frame color name</span>\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        value={borderColorName}\r\n                        onChange={changeBorderColorName}\r\n                        onClick={selectAllOnClick(DEFAULT_BORDER_COLOR_NAME)}\r\n                    />\r\n    \r\n                    <span>Frame color HEX</span>\r\n                    <ColorField \r\n                        colorCode={borderColor} \r\n                        changeColorCode={changeBorderColor}\r\n                        defaultColorCode={DEFAULT_BORDER_COLOR}\r\n                        required\r\n                    />\r\n    \r\n                    <span>Frame thickness</span>\r\n                    <div className=\"inputWithAdornment\">\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={borderThickness}\r\n                            onChange={changeBorderThickness}\r\n                            onClick={selectAllOnClick(DEFAULT_BORDER_THICKNESS)}\r\n                         />                                            \r\n                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                    </div>                        \r\n    \r\n                    <span>Type of frame</span>\r\n                    <div >\r\n                        <Select\r\n                          input={<FrameTypeInput />}\r\n                          value={borderType}\r\n                          onChange={this.onBorderTypeChange}\r\n                        >\r\n                            <MenuItem value=\"solid\"><b>━━━━</b></MenuItem>\r\n                            <MenuItem value=\"dotted\">• • • • • • •</MenuItem>\r\n                            <MenuItem value=\"dashed\"><b>– – – – –</b></MenuItem>\r\n                            <MenuItem value=\"double\">══════</MenuItem>              \r\n                        </Select>\r\n                    </div>\r\n    \r\n                    <span>Connect to previous</span>\r\n                    <div className=\"unlabeledCheckbox\">\r\n                        <Checkbox \r\n                            checked={borderConnectToPrevious}\r\n                            onChange={changeBorderConnectToPrevious}\r\n                            color=\"primary\" \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        formState: form,\r\n        leftBorder: form.leftBorder,\r\n        rightBorder: form.rightBorder,\r\n        topBorder: form.topBorder,\r\n        bottomBorder: form.bottomBorder,\r\n        borderColorName: form.borderColorName,\r\n        borderColor: form.borderColor,\r\n        borderThickness: form.borderThickness,\r\n        borderType: form.borderType,\r\n        borderConnectToPrevious: form.borderConnectToPrevious,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeLeftBorder: toggleValue(dispatch)(\"leftBorder\"),\r\n        changeRightBorder: toggleValue(dispatch)(\"rightBorder\"),\r\n        changeTopBorder: toggleValue(dispatch)(\"topBorder\"),\r\n        changeBottomBorder: toggleValue(dispatch)(\"bottomBorder\"),\r\n        changeBorderColorName: setValue(dispatch)(\"borderColorName\"),\r\n        changeBorderColor: setColor(dispatch)(\"borderColor\"),\r\n        changeBorderThickness: setNumber(dispatch)(\"borderThickness\"),\r\n        changeBorderType: setValue(dispatch)(\"borderType\"),\r\n        changeBorderConnectToPrevious: toggleValue(dispatch)(\"borderConnectToPrevious\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(FramesSection));","import FramesSection from \"./FramesSection\";\r\nexport default FramesSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport Preview from \"../common/Preview\";\r\nimport ColorField from \"../common/ColorField\";\r\nimport { setValue, toggleValue, setColor } from \"../actions\";\r\n\r\nconst  FillingSection = props => {\r\n    const { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        fillingConnectToPrevious, changefillingConnectToPrevious,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Filling color name</span>\r\n                <div>\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        className=\"mediumTextField\" \r\n                        value={fillingColorName}\r\n                        onChange={changeFillingColorName}\r\n                    />\r\n                </div>\r\n\r\n                <span>Filling color HEX</span>\r\n                <ColorField \r\n                    colorCode={fillingColor} \r\n                    changeColorCode={changeFillingColor}\r\n                />\r\n\r\n                <span>Connect to previous</span>\r\n                <div className=\"unlabeledCheckbox\">\r\n                    <Checkbox \r\n                        color=\"primary\" \r\n                        checked={fillingConnectToPrevious} \r\n                        onChange={changefillingConnectToPrevious} \r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        fillingColorName: form.fillingColorName,\r\n        fillingColor: form.fillingColor,\r\n        fillingConnectToPrevious: form.fillingConnectToPrevious,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changeFillingColorName: setValue(dispatch)(\"fillingColorName\"),\r\n        changeFillingColor: setColor(dispatch)(\"fillingColor\"),\r\n        changefillingConnectToPrevious: toggleValue(dispatch)(\"fillingConnectToPrevious\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(FillingSection));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport { setValue } from \"../actions\";\r\n\r\nconst TocSection = ({ tocIndentation, changeTocIndentation }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>ToC indentation</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={tocIndentation}\r\n                    onChange={changeTocIndentation} \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>                    \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        tocIndentation: form.tocIndentation,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changeTocIndentation: setValue(dispatch)(\"tocIndentation\"),\r\n    };\r\n};\r\n\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(TocSection));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { setShortCut } from \"../actions\";\r\n\r\nconst ShortCutSection = ({ shortCutWinView, shortCutMacView, changeShortCutWin, changeShortCutMac }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Windows</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField\r\n                    value={shortCutWinView}\r\n                    onKeyDown={changeShortCutWin}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n\r\n            <span>Mac</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField\r\n                    value={shortCutMacView}\r\n                    onKeyDown={changeShortCutMac}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        shortCutWinView: form.shortCutWinView,\r\n        shortCutMacView: form.shortCutMacView,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        changeShortCutWin: setShortCut(dispatch)(\"shortCutWin\", \"shortCutWinView\"),\r\n        changeShortCutMac: setShortCut(dispatch)(\"shortCutMac\", \"shortCutMacView\"),\r\n    };\r\n};\r\n\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(ShortCutSection));","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: pink,\r\n    },\r\n});\r\n\r\nexport default theme;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomTab;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomErrorTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n      textDecoration: \"red underline\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n        textDecoration: \"indianred underline\",\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomErrorTab;","import Tabs from \"@material-ui/core/Tabs\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTabs = withStyles(theme => ({\r\n    indicator: {\r\n        backgroundColor: \"#1890ff\",\r\n        opacity: 0.5,\r\n        width: \"190px\",\r\n        zIndex: 5,\r\n        display: \"none\",\r\n      }\r\n  }))(Tabs);\r\n\r\n  export default CustomTabs;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst CustomDialog = withStyles(theme => ({\r\n    root: {\r\n        minWidth: \"1250px\",\r\n        minHeight: \"1100px !important\",\r\n        height: \"100%\",\r\n    },\r\n    container: {\r\n        height: \"100vh\",\r\n        display: \"block\",\r\n    },\r\n    scrollBody: {\r\n        \"&:after\": {\r\n            height: \"100%\",\r\n        }\r\n    },\r\n    paperFullWidth: {\r\n        maxWidth: \"1280px\",\r\n        maxHeight: \"850px\",\r\n        minHeight: \"550px\",\r\n        width: \"calc(100% - 96px)\",\r\n        height: \"calc(100% - 96px)\",\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        border: \"none\",\r\n    },\r\n    paperScrollBody: {\r\n        verticalAlign: \"middle\",\r\n    },\r\n  }))(Dialog);\r\n  \r\n  export default CustomDialog;","export const SAVE_DEC_FORM = \"SAVE_DEC_FORM\";\r\nexport const CLEAR_SAVED_DEC_FORM = \"CLEAR_SAVED_DEC_FORM\";\r\n\r\nexport const saveDecoratorForm = payload => {\r\n    return {\r\n        type: SAVE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearSavedDecoratorForm = () => {\r\n    return {\r\n        type: CLEAR_SAVED_DEC_FORM,\r\n    };\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport NamesSection from \"./sections/NamesSection\";\r\nimport WordExportSection from \"./sections/WordExportSection\";\r\nimport PositioningSection from \"./sections/PositioningSection\";\r\nimport ListSection from \"./sections/ListSection\";\r\nimport ReferencingSection from \"./sections/ReferencingSection\";\r\nimport TypographySection from \"./sections/TypographySection\";\r\nimport DistancesSection from \"./sections/DistancesSection\";\r\nimport FramesSection from \"./sections/FramesSection\";\r\nimport FillingSection from \"./sections/FillingSection\";\r\nimport TocSection from \"./sections/TocSection\";\r\nimport ShortCutsSection from \"./sections/ShortCutsSection\";\r\n// import TestSection from \"./sections/TestSection\";\r\n\r\nimport theme from \"./theme\";\r\nimport CustomTab from \"./common/CustomTab\";\r\nimport CustomErrorTab from \"./common/CustomErrorTab\";\r\nimport CustomTabs from \"./common/CustomTabs\";\r\nimport CustomDialog from \"./common/CustomDialog\";\r\nimport { saveDecoratorForm } from \"../../actions\";\r\nimport { \r\n    closeDialog, \r\n    clearDecoratorForm, \r\n    switchDecDialogTab, \r\n    updateValidationError \r\n} from \"./actions\";\r\nimport { \r\n    fillMissedFields, \r\n    DecDataParser, \r\n    getTabsErrorState,\r\n    getTabNumberToSwitch,\r\n} from \"./helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass DecoratorDialog extends React.Component {\r\n    onClose = () => {\r\n        this.props.closeDialog();\r\n        this.props.clearForm();\r\n    };\r\n\r\n    onSaveButtonClick = () => {\r\n        const { formState, updateValidationError, switchTab, sendForm } = this.props;\r\n        const tabsErrorState = getTabsErrorState(formState);\r\n        if (tabsErrorState) {\r\n            updateValidationError(tabsErrorState);\r\n            switchTab(getTabNumberToSwitch(tabsErrorState));\r\n        } else {\r\n            const formToSend = DecDataParser.parseToSend(fillMissedFields(formState));\r\n            sendForm(formToSend);\r\n            this.onClose();\r\n        }\r\n    };\r\n\r\n    onTabSwitch = (e, tabNumber) => {\r\n        this.props.switchTab(tabNumber);\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            isOpen, \r\n            openedTab,\r\n            validationError, \r\n            isEditMode,\r\n        } = this.props;\r\n    \r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <CustomDialog\r\n                    open={isOpen}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    scroll=\"body\"\r\n                    className=\"paragraphDecorators-dialog\"\r\n                    fullWidth={true}\r\n                    maxWidth={false}\r\n                    id=\"dialog\"\r\n                >\r\n                    <div className=\"header\">\r\n                        <DialogTitle className=\"header-title\">\r\n                            <p>Create new paragraph decorator</p>\r\n                        </DialogTitle>\r\n                        <div className=\"header-buttons\">\r\n                            <Button \r\n                                variant=\"contained\"\r\n                                color=\"default\"\r\n                                onClick={this.onClose}\r\n                                className=\"topNavButton\"\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                            <Button \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={this.onSaveButtonClick}\r\n                                className=\"topNavButton\"\r\n                            >\r\n                                {isEditMode ? \"Save\" : \"Create\"}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <DialogContent className=\"content\">\r\n                        <div className=\"content-leftSide\">\r\n                            <CustomTabs \r\n                                className=\"dialogTabs\"\r\n                                value={openedTab} \r\n                                onChange={this.onTabSwitch} \r\n                                orientation=\"vertical\"\r\n                                color=\"primary\"\r\n                                indicatorColor=\"primary\"\r\n                            >\r\n                                { validationError.namesSection \r\n                                    ? ( <CustomErrorTab className=\"dialogTab\" label=\"Names\" /> )\r\n                                    :  ( <CustomTab className=\"dialogTab\" label=\"Names\" /> ) }\r\n    \r\n                                { validationError.wordExportSection \r\n                                    ? ( <CustomErrorTab className=\"dialogTab\" label=\"WORD export\" /> ) \r\n                                    : ( <CustomTab className=\"dialogTab\" label=\"WORD export\" /> ) }\r\n    \r\n                                <CustomTab className=\"dialogTab\" label=\"Positioning\" />\r\n    \r\n                                { validationError.listSection \r\n                                    ? ( <CustomErrorTab className=\"dialogTab\" label=\"List\" /> ) \r\n                                    : ( <CustomTab className=\"dialogTab\" label=\"List\" /> ) }\r\n    \r\n                                <CustomTab className=\"dialogTab\" label=\"Referencing\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Typography\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Distances\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Frames\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Filling\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"ToC\" />\r\n                                <CustomTab className=\"dialogTab\" label=\"Short cuts\" />\r\n                                {/* <CustomTab className=\"dialogTab\" label=\"Test\" /> */}\r\n                            </CustomTabs>\r\n                        </div>\r\n                        <div className=\"content-rightSide\">\r\n                            { openedTab === 0 && <NamesSection /> }\r\n                            { openedTab === 1 && <WordExportSection /> }\r\n                            { openedTab === 2 && <PositioningSection /> }\r\n                            { openedTab === 3 && <ListSection /> }\r\n                            { openedTab === 4 && <ReferencingSection /> }\r\n                            { openedTab === 5 && <TypographySection /> }\r\n                            { openedTab === 6 && <DistancesSection /> }\r\n                            { openedTab === 7 && <FramesSection /> }\r\n                            { openedTab === 8 && <FillingSection /> }\r\n                            { openedTab === 9 && <TocSection /> }\r\n                            { openedTab === 10 && <ShortCutsSection /> }\r\n                            {/* openedTab === 11 && <TestSection /> */}\r\n                        </div>\r\n                    </DialogContent>\r\n                </CustomDialog>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, isOpen, openedTab, validationError, isEditMode }}) => {\r\n    return { \r\n        formState: form,\r\n        isOpen,\r\n        openedTab,\r\n        validationError, \r\n        isEditMode,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        closeDialog: closeDialog(dispatch),\r\n        clearForm: () => dispatch(clearDecoratorForm()),\r\n        switchTab: payload => dispatch(switchDecDialogTab(payload)),\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        saveForm: payload => dispatch(saveDecoratorForm(payload)),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(DecoratorDialog);","import DecoratorDialog from \"./DecoratorDialog\";\r\nexport default DecoratorDialog;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport DecoratorDialog from \"./components/DecoratorDialog\";\nimport { openDialog } from \"./components/DecoratorDialog/actions\";\nimport { clearSavedDecoratorForm,  saveDecoratorForm } from \"./actions\";\nimport { DecDataParser } from \"./components/DecoratorDialog/helpers\";\nimport theme from \"./components/DecoratorDialog/theme\";\n\nimport \"./App.css\";\n\nconst App = props => {\n    const { openDialog, saveForm, clearSavedForm, savedForm } = props;\n\n    const openEditDialog = () => {\n        openDialog(DecDataParser.parseToEdit(savedForm || {}));\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"App\">\n                <div className=\"startButtons\">\n                    { !savedForm ? (\n                        <Button \n                            onClick={() => openDialog()}\n                            color=\"primary\"\n                        >Create new</Button>\n                    ) : (\n                        <>\n                            <Button \n                                onClick={() => openEditDialog()}\n                            >Edit saved</Button>\n                            <Button \n                                onClick={clearSavedForm}\n                                color=\"secondary\"\n                            >Delete saved</Button>\n                        </>\n                    )}\n                </div>\n                <DecoratorDialog sendForm={saveForm} />\n            </div>\n        </ThemeProvider>\n    );\n};\n\nconst mapStateToProps = ({ savedForm }) => {\n    return { savedForm };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        openDialog: openDialog(dispatch),\n        saveForm: payload => dispatch(saveDecoratorForm(payload)),\n        clearSavedForm: () => dispatch(clearSavedDecoratorForm()),\n    };\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { SHOW_DEC_DIALOG, HIDE_DEC_DIALOG } from \"../../components/DecoratorDialog/actions\";\r\n\r\nconst isOpenReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case SHOW_DEC_DIALOG:\r\n            return true;\r\n        case HIDE_DEC_DIALOG:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isOpenReducer;","import { UPDATE_DEC_FORM, CLEAR_DEC_FORM } from \"../../components/DecoratorDialog/actions\";\r\nimport { sampleText, emptyDecFormState } from \"../../components/DecoratorDialog/constants\";\r\n\r\nconst initialState = { \r\n    previewText: sampleText,\r\n    ...emptyDecFormState,\r\n};\r\n\r\nconst decoratorFormReducer = (state = initialState, action) =>  {\r\n    switch (action.type) {\r\n        case UPDATE_DEC_FORM:\r\n            return { ...state, ...action.payload };\r\n        case CLEAR_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default decoratorFormReducer;","import { \r\n    UPDATE_VALIDATION_ERROR, \r\n    REMOVE_VALIDATION_ERROR, \r\n} from \"../../components/DecoratorDialog/actions\";\r\n\r\nimport { tabsErrorInitialState } from \"../../components/DecoratorDialog/constants\";\r\n\r\nconst validationErrorReducer = (state = tabsErrorInitialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_VALIDATION_ERROR:\r\n            return { ...state, ...action.payload };\r\n        case REMOVE_VALIDATION_ERROR:\r\n            return tabsErrorInitialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default validationErrorReducer;","import { \r\n    SWITCH_ON_DEC_DIALOG_EDIT_MODE, \r\n    SWITCH_OFF_DEC_DIALOG_EDIT_MODE, \r\n} from \"../../components/DecoratorDialog/actions\";\r\n\r\nconst isEditModeReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_ON_DEC_DIALOG_EDIT_MODE:\r\n            return true;\r\n        case SWITCH_OFF_DEC_DIALOG_EDIT_MODE:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isEditModeReducer;","import { \r\n    SWITCH_DEC_DIALOG_TAB,\r\n    RESET_DEC_DIALOG_TAB, \r\n} from \"../../components/DecoratorDialog/actions\";\r\n\r\nconst initialState = 0;\r\n\r\nconst openedTabReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_DEC_DIALOG_TAB:\r\n            return action.payload;\r\n        case RESET_DEC_DIALOG_TAB:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default openedTabReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport isOpenReducer from \"./isOpenReducer\";\r\nimport decoratorFormReducer from \"./decoratorFormReducer\";\r\nimport validationErrorReducer from \"./validationErrorReducer\";\r\nimport isEditModeReducer from \"./isEditModeReducer\";\r\nimport openedTabReducer from \"./openedTabReducer\";\r\n\r\nconst decoratorDialogReducer = combineReducers({\r\n    isOpen: isOpenReducer,\r\n    openedTab: openedTabReducer,\r\n    validationError: validationErrorReducer,\r\n    isEditMode: isEditModeReducer,\r\n    form: decoratorFormReducer,\r\n});\r\n\r\nexport default decoratorDialogReducer;","import { SAVE_DEC_FORM, CLEAR_SAVED_DEC_FORM } from \"../actions\";\r\n\r\nconst initialState = null;\r\n\r\nexport const savedFormReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SAVE_DEC_FORM:\r\n            return action.payload;\r\n        case CLEAR_SAVED_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default savedFormReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport decoratorDialogReducer from \"./decoratorDialogReducer\";\r\nimport savedFormReducer from \"./savedFormReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    decoratorDialog: decoratorDialogReducer,\r\n    savedForm: savedFormReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}