{"version":3,"sources":["components/NewDecDialog/helpers/DecDataParser.js","components/NewDecDialog/helpers/isFontAvailable.js","components/NewDecDialog/helpers/getShortCutUtils.js","components/NewDecDialog/constants/emptyDecFormState.js","components/NewDecDialog/constants/decoratorsList.js","components/NewDecDialog/constants/fontsSet.js","components/NewDecDialog/constants/validationData.js","components/NewDecDialog/constants/constants.js","components/NewDecDialog/helpers/validationFunctions.js","components/NewDecDialog/helpers/helpers.js","components/NewDecDialog/Handlers.js","components/NewDecDialog/common/CustomInput.js","components/NewDecDialog/common/NewGroupDialog.js","components/NewDecDialog/common/LabelWithAsterisk.js","components/NewDecDialog/hoc/withNewGroupControl.js","components/NewDecDialog/actions/index.js","components/NewDecDialog/sections/NamesSection.js","components/NewDecDialog/sections/WordExportSection.js","components/NewDecDialog/common/CustomInputShort.js","components/NewDecDialog/sections/PositioningSection/BackSpaceActionInput.js","components/NewDecDialog/sections/PositioningSection/PositioningSection.js","components/NewDecDialog/sections/PositioningSection/index.js","components/NewDecDialog/common/Preview/ListPreview.js","components/NewDecDialog/common/ColorField/index.js","components/NewDecDialog/common/ColorField/ColorField.js","components/NewDecDialog/common/FontSelectFields/index.js","components/NewDecDialog/common/FontSelectFields/FontSelectFields.js","components/NewDecDialog/sections/ListSection/ListSection.js","components/NewDecDialog/sections/ListSection/index.js","components/NewDecDialog/sections/ReferencingSection.js","components/NewDecDialog/common/ContentEditable.js","components/NewDecDialog/common/Preview/Preview.js","components/NewDecDialog/common/Preview/index.js","components/NewDecDialog/sections/TypographySection/index.js","components/NewDecDialog/sections/TypographySection/TypographySection.js","components/NewDecDialog/sections/DistancesSection.js","components/NewDecDialog/sections/FramesSection/FrameTypeInput.js","components/NewDecDialog/sections/FramesSection/index.js","components/NewDecDialog/sections/FramesSection/FramesSection.js","components/NewDecDialog/sections/FillingSection.js","components/NewDecDialog/sections/TocSection.js","components/NewDecDialog/sections/ShortCutsSection.js","components/NewDecDialog/sections/TestSection.js","components/NewDecDialog/theme.js","components/NewDecDialog/common/CustomTab.js","components/NewDecDialog/common/CustomErrorTab.js","components/NewDecDialog/common/CustomTabs.js","components/NewDecDialog/common/CustomDialog.js","components/NewDecDialog/index.js","actions.js","App.js","reducers/decoratorDialogReducer/isOpenReducer.js","reducers/decoratorDialogReducer/decoratorFormReducer.js","components/NewDecDialog/getInitialState.js","reducers/decoratorDialogReducer/validationErrorReducer.js","reducers/decoratorDialogReducer/isEditModeReducer.js","reducers/decoratorDialogReducer/openedTabReducer.js","reducers/decoratorDialogReducer/index.js","reducers/savedFormReducer.js","reducers/rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["DecDataParser","dec","mapDecFields","width","getShortCutUtils","systemName","e","keyCode","preventDefault","stopPropagation","ShortcutUtils","isDeadKey","prevent","deleteKey","shortCut","ctrlKey","shiftKey","altKey","metaKey","shortCutForView","convertShortcutToMeta","indexOf","isCmdPressed","value","stringValue","Object","keys","CMD_KEYS","forEach","key","keycode","removeDuplicateShortcuts","decorators","newPdShortcut","removed","decoratorKey","item","item_type","isEqual","keyboard_shortcut","childItems","child_items","itemKey","style","removeDuplicateShortcutsInInlineStyle","inlineStyles","styleKey","body","document","container","createElement","innerHTML","Array","join","cssText","getWidth","fontFamily","appendChild","clientWidth","removeChild","monoWidth","serifWidth","sansWidth","isFontAvailable","font","HOLDER","autoFillingRequiredFields","sideNumberFontSize","sideNumberFontColor","sideNumberFillingColor","sideNumberWidth","sideNumberRadius","fontSize","fontColor","marginTop","marginBottom","firstRowIndent","otherRowsIndent","wordSpacing","borderColor","borderThickness","emptyDecFormState","decKey","group","groupToCreate","active","decNameEn","decNameDe","decNameRu","decNameFr","decNameFrCa","decNameEs","wordStyleName","softReturn","indentationalLevel","backspaceActionWithContent","backspaceActionWithContentStyle","returnActionNextSection","returnActionEmptySection","tabAction","shiftTabAction","isList","listName","orderLevel","prefix","suffix","suffixDistance","magicTabs","listType","listItem","unicodeNumber","unicodeChar","numberingStyle","continueNumbering","allowRestartNumbering","includePreviousFrom","sideNumber","sideNumberFont","customSideNumberFont","sideNumberAlignment","referenceGroup","referenceGroupToCreate","customFont","alignment","fontColorName","bold","italic","underlined","stroke","textTransform","verticalAlign","lineSpacing","customLineSpacing","leftBorder","rightBorder","topBorder","bottomBorder","borderColorName","borderType","fillingColorName","fillingColor","connectToPrevious","tocIndentation","shortCutWin","shortCutWinView","shortCutMac","shortCutMacView","decoratorsList","name","fontSet","namesSectionRequiredFields","wordExportSectionRequiredFields","listSectionRequiredFields","tabsErrorInitialState","namesSection","wordExportSection","listSection","sectionsTabNumbers","tabName","tabNumber","alignmentsMap","center","left","right","justify","backSpaceActions","bulletNamesMap","bulletpoint","dash","star","listStyleTypes","numberingSets","decimal","sampleText","getNamesSectionErrorState","form","every","fieldName","getWordExportSectionErrorState","getListSectionErrorState","getCorrectColor","hex","backgroundColor","correctColor","length","selectAllOnClick","defaultValue","target","focus","select","getOffset","alignType","parseFloat","slice","unicodeNumberToChar","String","fromCharCode","parseInt","unicodeCharToNumber","charCodeAt","toString","scrollToBottom","className","setTimeout","getElementsByClassName","scrollTo","top","Number","MAX_SAFE_INTEGER","behavior","changeAndScroll","changeFunction","getListChars","isOrderedList","newBullet","fill","focusInput","inputRef","timeout","current","getPreviewFont","fillMissedFields","currentFormState","formStateWithoutMissedFields","Handlers","update","toggleStateProperty","propName","checked","setStateProperty","secondArg","newValue","undefined","setBullet","setColor","prevValue","input","filteredInput","replace","trim","match","setNumber","console","log","setShortCut","valuePropName","viewPropName","isMac","convertEventToShortCut","CustomInput","withStyles","theme","root","spacing","borderRadius","minWidth","position","palette","background","paper","border","padding","transition","transitions","create","boxShadow","InputBase","NewGroupDialog","state","props","currentGroup","groupType","nameEn","nameDe","nameRu","nameFr","nameFrCa","nameEs","groupKey","onInputChange","inputName","setState","onClose","hideDialog","onGroupSave","onSave","changeGroupSelect","groupToSave","this","isOpen","isEditMode","titleText","buttonText","Dialog","open","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","variant","margin","onChange","DialogActions","Button","onClick","color","React","Component","LabelWithAsterisk","children","withNewGroupControl","ViewComponent","groupSelect","newGroup","savedNewGroup","handleClick","changeDecoratorForm","payload","type","clearDecoratorForm","updateValidationError","openDialog","dispatch","closeDialog","NamesSection","handlers","updateForm","changeDecKey","changeGroup","changeGroupToCreate","changeActive","changeDecNameEn","changeDecNameDe","changeDecNameRu","changeDecNameFr","changeDecNameFrCa","changeDecNameEs","onGroupChange","args","decKeyInputRef","createRef","decNameEnInputRef","focusOnEmptyField","formState","validationError","prevprops","newGroupName","error","NativeSelect","Checkbox","connect","decoratorDialog","WordExportSection","changeWordStyleName","changeSoftReturn","autoFocus","CustomInputShort","BackSpaceActionInput","PositioningSection","changeIndentationalLevel","changeBackspaceActionWithContent","changeBackspaceActionWithContentStyle","changeBackspaceActionWithoutContent","changeBackspaceActionWithoutContentStyle","changeReturnActionNextSection","changeReturnActionEmptySection","changeTabAction","changeShiftTabAction","id","map","action","Fade","in","ListPreview","listPreviewStyle","listChars","sideNumberStyle","listItemsBeginnings","listChar","listItemBeginingStyle","marginRight","ColorField","hideColorPicker","showColorPicker","colorPickerHandler","changeColor","colorCode","changeColorCode","defaultColorCode","required","bottomAligned","colorError","inputError","pickerColor","colorSampleStyle","colorPickerClassName","InputProps","startAdornment","InputAdornment","onChangeComplete","disableAlpha","FontSelectFields","textInput","focusTextInput","onFontChange","changeFont","extraFunction","changeCustomFont","availableFonts","filter","fontName","customFontFieldState","placeholder","ListSection","changeListName","changeOrderLevel","changePrefix","changeSuffix","changeSuffixDistance","changeMagicTabs","changeListItem","changeNumberingStyle","changeContinueNumbering","changeAllowRestartNumbering","changeIncludePreviousFrom","changeSideNumberFont","changeCustomSideNumberFont","changeSideNumberAlignment","changeSideNumberFontSize","changeSideNumberFontColor","changeSideNumberFillingColor","changeSideNumberWidth","changeSideNumberRadius","changeIsList","changeListType","changeUnicodeNumber","prevUnicodeNumber","newUnicodeNumber","newUnicodeChar","changeUnicodeChar","changeSideNumber","listNameInputRef","unicodeCharInputRef","onIsListChange","onListItemChange","listPreviewProps","mainListSettingsState","unorderedListSettingsState","orderedListSettingsState","sideNumberSettingsState","entries","ReferencingSection","changeReferenceGroup","changeReferenceGroupToCreate","onXrefChange","xref","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","q","propertyIsEnumerable","normalizeHtml","str","replaceCaret","el","findLastTextNode","node","nodeType","Node","TEXT_NODE","childNodes","textNode","isTargetFocused","activeElement","nodeValue","sel","window","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","ContentEditable","arguments","lastHtml","html","innerRef","getEl","emitChange","originalEvt","evt","assign","_a","tagName","ref","onInput","onBlur","onKeyUp","onKeyDown","contentEditable","disabled","dangerouslySetInnerHTML","__html","nextProps","deepEqual","Preview","previewText","changePreviewText","previewStyle","editableContentStyle","outline","selectAllChildren","TypographySection","previewProps","changeAlignment","changeFontSize","changeFontColorName","changeFontColor","changeBold","changeItalic","changeUnderlined","changeStroke","changeTextTransform","changeVerticalAlign","FormControlLabel","control","label","labelPlacement","RadioGroup","row","Radio","DistancesSection","changeMarginTop","changeMarginBottom","changeFirstRowIndent","changeOtherRowsIndent","changeLineSpacing","changeCustomLineSpacing","changeWordSpacing","FrameTypeInput","FramesSection","changeLeftBorder","changeRightBorder","changeTopBorder","changeBottomBorder","changeBorderColorName","changeBorderColor","changeBorderThickness","changeBorderType","previewBorderWidth","isNaN","borderLeft","marginLeft","borderRight","borderTop","borderBottom","Select","MenuItem","FillingSection","changeFillingColorName","changeFillingColor","changeConnectToPrevious","TocSection","changeTocIndentation","ShortCutSection","changeShortCutWin","changeShortCutMac","createMuiTheme","primary","blue","secondary","pink","CustomTab","overflow","opacity","selected","Tab","CustomErrorTab","textDecoration","CustomTabs","indicator","zIndex","display","Tabs","CustomDialog","minHeight","height","scrollBody","paperFullWidth","maxHeight","flexDirection","paperScrollBody","openedTab","clearForm","switchTab","switchDecDialogTab","saveForm","saveDecoratorForm","previewFontColor","previewFillingColor","previewAdditionalFillingColor","indentsDifference","previewMarginLeft","previewTextIndent","alignItems","textAlign","fontWeight","fontStyle","fontVariant","backgroundImage","textIndent","lineHeight","styledText","unstyledText","getUnstyledText","previewSideNumberFontColor","previewSideNumberFillingColor","listSectionProps","typographySectionProps","distancesSectionProps","framesSectionProps","fillingSectionProps","tocSectionProps","shortCutsSectionProps","ThemeProvider","aria-labelledby","scroll","tabsErrorState","tabsState","clone","getTabsErrorState","getTabNumberToSwitch","formToSave","parseToSend","orientation","indicatorColor","ShortCutsSection","TestSection","savedForm","clearSavedForm","parseToEdit","isOpenReducer","initialState","currentDecFormState","getInitialState","decoratorFormReducer","validationErrorReducer","isEditModeReducer","openedTabReducer","decoratorDialogReducer","combineReducers","savedFormReducer","rootReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.edd578c6.chunk.js","sourcesContent":["class DecDataParser {\r\n    static parseToSend(dec) {\r\n        return dec;\r\n    }\r\n\r\n    static parseToEdit(dec) {\r\n        return dec;\r\n    }\r\n\r\n    static mapDecFields = {};\r\n}\r\n\r\nexport default DecDataParser;","const { body } = document;\r\nlet width;\r\n\r\nconst container = document.createElement('span');\r\ncontainer.innerHTML = Array(100).join('wi');\r\ncontainer.style.cssText = [\r\n    'position:absolute',\r\n    'width:auto',\r\n    'font-size:128px',\r\n    'left:-99999px'\r\n].join(' !important;');\r\n\r\nconst getWidth = fontFamily => {\r\n    container.style.fontFamily = fontFamily;\r\n\r\n    body.appendChild(container);\r\n    width = container.clientWidth;\r\n    body.removeChild(container);\r\n\r\n    return width;\r\n};\r\n\r\nconst monoWidth  = getWidth('monospace');\r\nconst serifWidth = getWidth('serif');\r\nconst sansWidth  = getWidth('sans-serif');\r\n\r\nconst isFontAvailable = font => {\r\n    return monoWidth !== getWidth(font + ',monospace') ||\r\n    sansWidth !== getWidth(font + ',sans-serif') ||\r\n    serifWidth !== getWidth(font + ',serif');\r\n};\r\n\r\nexport default isFontAvailable;","import keycode from \"keycode\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nconst getShortCutUtils = systemName => {\r\n  return class ShortcutUtils {  \r\n    static CMD_KEYS = {\r\n      altKey: systemName === \"MacOS\" ? \"Option\" : \"Alt\",\r\n      ctrlKey: systemName === \"MacOS\" ? \"Control\" : \"Ctrl\",\r\n      shiftKey: \"Shift\",\r\n      metaKey: \"Command\",\r\n    };\r\n  \r\n    static isDeadKey(e) {\r\n      return e.keyCode === 229;\r\n    }\r\n  \r\n    static prevent(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  \r\n    static convertEventToShortCut(e) {\r\n      if (ShortcutUtils.isDeadKey(e)) {\r\n        ShortcutUtils.prevent(e);\r\n        return { deleteKey: true };\r\n      }\r\n      ShortcutUtils.prevent(e);\r\n      const shortCut = {\r\n        keyCode: e.keyCode,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n        altKey: e.altKey,\r\n        metaKey: false,\r\n      };\r\n      if (systemName === \"MacOS\") {\r\n        shortCut.metaKey = e.metaKey;\r\n      }\r\n      const deleteKeys = [8, 46];\r\n      const cmdKeysCodes = [16, 91, 18, 17];\r\n      const shortCutForView = ShortcutUtils.convertShortcutToMeta(shortCut);\r\n      if (deleteKeys.indexOf(e.keyCode) > -1) {\r\n        return { deleteKey: true };\r\n      } else if (shortCutForView.isCmdPressed && cmdKeysCodes.indexOf(e.keyCode) === -1) {\r\n        return {\r\n          value: shortCut,\r\n          stringValue: shortCutForView.stringValue,\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n  \r\n    static convertShortcutToString(shortCut = {}) {\r\n      return ShortcutUtils.convertShortcutToMeta(shortCut).stringValue;\r\n    }\r\n  \r\n    static convertShortcutToMeta(shortCut = {}) {\r\n      let shortCutForView = \"\";\r\n      let isCmdPressed = false;\r\n      Object.keys(ShortcutUtils.CMD_KEYS).forEach((key) => {\r\n        if (shortCut && shortCut[key]) {\r\n          isCmdPressed = true;\r\n          shortCutForView += `${ShortcutUtils.CMD_KEYS[key]} + `;\r\n        }\r\n      });\r\n      if (shortCut && shortCut.keyCode) {\r\n        shortCutForView += keycode(shortCut.keyCode);\r\n      }\r\n      return { stringValue: shortCutForView, isCmdPressed };\r\n    }\r\n  \r\n    static removeDuplicateShortcuts = function (decorators, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(decorators).forEach((decoratorKey) => {\r\n        const item = decorators[decoratorKey];\r\n        const itemType = item.item_type;\r\n        if (itemType === \"style\") {\r\n          if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n            decorators[decoratorKey].keyboard_shortcut = null;\r\n            removed = true;\r\n          }\r\n        } else {\r\n          const childItems = item.child_items;\r\n          Object.keys(childItems).forEach((itemKey) => {\r\n            const style = childItems[itemKey];\r\n            if (isEqual(style.keyboard_shortcut, newPdShortcut)) {\r\n              style.keyboard_shortcut = null;\r\n              removed = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  \r\n    static removeDuplicateShortcutsInInlineStyle = function (inlineStyles, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(inlineStyles).forEach((styleKey) => {\r\n        const item = inlineStyles[styleKey];\r\n        if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n          inlineStyles[styleKey].keyboard_shortcut = null;\r\n          removed = true;\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  }\r\n};\r\n\r\nexport default getShortCutUtils;\r\n\r\n","export const HOLDER = \"HOLDER-POLDER\";\r\nexport const DEFAULT_FONT = \"Helvetica\";\r\n\r\nexport const autoFillingRequiredFields = {\r\n  sideNumberFontSize: \"12\",\r\n  sideNumberFontColor: \"FFF\",\r\n  sideNumberFillingColor: \"1E88E5\",\r\n  sideNumberWidth: \"20\",\r\n  sideNumberRadius: \"10\",\r\n  fontSize: \"12\",\r\n  fontColor: \"000\",\r\n  marginTop: \"6\",\r\n  marginBottom: \"6\",\r\n  firstRowIndent: \"0\",\r\n  otherRowsIndent: \"0\",\r\n  wordSpacing: \"0\",   \r\n  borderColor: \"f00\",\r\n  borderThickness: \"2\",\r\n};\r\n\r\nexport const emptyDecFormState = {\r\n  decKey: \"\",\r\n  group: \"\",\r\n  groupToCreate: \"\",\r\n  active: false,\r\n  decNameEn: \"\",\r\n  decNameDe: \"\",\r\n  decNameRu: \"\",\r\n  decNameFr: \"\",\r\n  decNameFrCa: \"\",\r\n  decNameEs: \"\",\r\n  wordStyleName: \"\",\r\n  softReturn: false,\r\n  indentationalLevel: \"\",\r\n  backspaceActionWithContent: \"merge\",\r\n  backspaceActionWithContentStyle: \"default\",\r\n  returnActionNextSection: \"default\",\r\n  returnActionEmptySection: \"default\",\r\n  tabAction: \"\",\r\n  shiftTabAction: \"\",\r\n  isList: false,\r\n  listName: HOLDER,\r\n  orderLevel: \"\",\r\n  prefix: \"\",\r\n  suffix: \"\",\r\n  suffixDistance: \"0.25\",\r\n  magicTabs: false,\r\n  listType: \"unordered\",\r\n  listItem: \"bulletpoint\",\r\n  unicodeNumber: \"\",\r\n  unicodeChar: \"\",\r\n  numberingStyle: \"decimal\",\r\n  continueNumbering: false,\r\n  allowRestartNumbering: false,\r\n  includePreviousFrom: \"\",\r\n  sideNumber: false,\r\n  sideNumberFont: DEFAULT_FONT,\r\n  customSideNumberFont: \"\",\r\n  sideNumberAlignment: \"center\",\r\n  referenceGroup: \"\",\r\n  referenceGroupToCreate: \"\",\r\n  font: DEFAULT_FONT,\r\n  customFont: \"\",\r\n  alignment: \"left\",\r\n  fontColorName: \"Black\",\r\n  bold: false,\r\n  italic: false,\r\n  underlined: false,\r\n  stroke: false,\r\n  textTransform: \"none\",\r\n  verticalAlign: \"baseline\",\r\n  lineSpacing: \"1.15\",\r\n  customLineSpacing: \"\",\r\n  leftBorder: false,\r\n  rightBorder: false,\r\n  topBorder: false,\r\n  bottomBorder: false,\r\n  borderColorName: \"Red\",\r\n  borderType: \"solid\",\r\n  fillingColorName: \"\",\r\n  fillingColor: \"\",\r\n  connectToPrevious: false,\r\n  tocIndentation: \"\",\r\n  shortCutWin: \"\",\r\n  shortCutWinView: \"\",\r\n  shortCutMac: \"\",\r\n  shortCutMacView: \"\",\r\n  ...autoFillingRequiredFields,\r\n};","const decoratorsList = [\r\n    { name: \"...\", value: \"\" },\r\n    { name: \"Text 1\", value: \"quick_text_1\" },\r\n    { name: \"Text 2\", value: \"quick_text_2\" },\r\n    { name: \"Text 3\", value: \"quick_text_3\" },\r\n    { name: \"Text 4\", value: \"quick_text_4\" },\r\n    { name: \"Text 5\", value: \"quick_text_5\" },\r\n    { name: \"Heading 1\", value: \"quick_heading_1\" },\r\n    { name: \"Heading 2\", value: \"quick_heading_2\" },\r\n    { name: \"Heading 3\", value: \"quick_heading_3\" },\r\n    { name: \"Heading 4\", value: \"quick_heading_4\" },\r\n    { name: \"Heading 5\", value: \"quick_heading_5\" },\r\n];\r\n\r\nexport default decoratorsList;","const fontSet = [ \r\n    \"Source Sans Pro\", \r\n    \"Dejavu Sans\", \r\n    \"Dejavu Serif\", \r\n    \"Open Sans\", \r\n    \"Georgia\", \r\n    \"Arial\", \r\n    \"Verdana\", \r\n    \"Times New Roman\",\r\n];\r\n\r\nexport default fontSet;","export const namesSectionRequiredFields = [\"decKey\", \"decNameEn\"];\r\n\r\nexport const wordExportSectionRequiredFields = [\"wordStyleName\"];\r\n\r\nexport const listSectionRequiredFields = [\"listName\"];\r\n\r\nexport const requiredFields = [ \r\n    ...namesSectionRequiredFields, \r\n    ...wordExportSectionRequiredFields, \r\n    ...listSectionRequiredFields, \r\n];\r\n\r\nexport const tabsErrorInitialState = {\r\n    namesSection: false,\r\n    wordExportSection: false,\r\n    listSection: false,\r\n};\r\n\r\nexport const sectionsTabNumbers = [\r\n    { tabName: \"namesSection\", tabNumber: 0 },\r\n    { tabName: \"wordExportSection\", tabNumber: 1},\r\n    { tabName: \"listSection\", tabNumber: 3 },\r\n];","export const alignmentsMap = {\r\n    center: \"center\",\r\n    left: \"flex-start\",\r\n    right: \"flex-end\",\r\n    justify: \"flex-start\",\r\n};\r\n\r\nexport const backSpaceActions = [\r\n    { key: 'merge', value: 'Merge' },\r\n    { key: 'apply_other_pd', value: 'Apply other PD' },\r\n    { key: 'remove_pd', value: 'Remove PD' },\r\n    { key: 'nothing', value: 'Nothing' }\r\n];\r\n\r\nexport const bulletNamesMap = {\r\n    bulletpoint: \"•\",\r\n    dash: \"—\",\r\n    star: \"★\",\r\n};\r\n\r\nexport const listStyleTypes = [\r\n    { name: '1, 2, 3', value: 'decimal' },\r\n    {  name: 'A, B, C', value: 'upper-alpha' },\r\n    {  name: 'a, b, c', value: 'lower-alpha' },\r\n    {  name: 'I, II, III', value: 'upper-roman' },\r\n    {  name: 'i, ii, iii', value: 'lower-roman' },\r\n];\r\n\r\nexport const numberingSets = {\r\n    decimal: [\"1\", \"2\", \"3\", \"4\"],\r\n    \"upper-alpha\": [\"A\", \"B\", \"C\", \"D\"],\r\n    \"lower-alpha\": [\"a\", \"b\", \"c\", \"d\"],\r\n    \"upper-roman\": [\"I\", \"II\", \"III\", \"IV\"],\r\n    \"lower-roman\": [\"i\", \"ii\", \"iii\", \"iv\"],\r\n};\r\n\r\nexport const sampleText = `<div>Sample Text. You can change it.</div><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ornare maximus vehicula. Duis nisi velit, dictum id mauris vitae, lobortis pretium quam.</div>`;\r\n","import { clone } from \"lodash\";\r\n\r\nimport {\r\n    namesSectionRequiredFields,\r\n    wordExportSectionRequiredFields,\r\n    listSectionRequiredFields,\r\n    tabsErrorInitialState,\r\n    sectionsTabNumbers,\r\n} from \"../constants\";\r\n\r\nexport const getNamesSectionErrorState = form => {\r\n    return !namesSectionRequiredFields.every(fieldName => form[fieldName]);\r\n};\r\n\r\nexport const getWordExportSectionErrorState = form => {\r\n    return !wordExportSectionRequiredFields.every(fieldName => form[fieldName]);\r\n}\r\n\r\nexport const getListSectionErrorState = form => {\r\n    return !listSectionRequiredFields.every(fieldName => form[fieldName]);\r\n}\r\n\r\nexport const getTabsErrorState = form => {\r\n    const tabsState = clone(tabsErrorInitialState);\r\n\r\n    if (getNamesSectionErrorState(form)) {\r\n        tabsState.namesSection = true;\r\n    }\r\n\r\n    if (getWordExportSectionErrorState(form)) {\r\n        tabsState.wordExportSection = true;\r\n    }\r\n\r\n    if (getListSectionErrorState(form)) {\r\n        tabsState.listSection = true;\r\n    }\r\n\r\n    for (let tabName in tabsState) {\r\n        if (tabsState[tabName]) {\r\n            return tabsState;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport const getTabNumberToSwitch = tabsErrorState => {\r\n    for (const { tabName, tabNumber } of sectionsTabNumbers) {\r\n        if (tabsErrorState[tabName]) {\r\n            return tabNumber;\r\n        }\r\n    }\r\n};","import { \r\n    numberingSets, \r\n    bulletNamesMap, \r\n    autoFillingRequiredFields, \r\n    DEFAULT_FONT, \r\n    sectionsTabNumbers,\r\n} from \"../constants\";\r\nimport isFontAvailable from \"./isFontAvailable\";\r\n\r\nexport const getCorrectColor = (hex, backgroundColor = \"FFF\") => {\r\n    const correctColor = typeof hex === \"string\" && (hex.length === 6 || hex.length === 3) ? hex : backgroundColor;\r\n    return correctColor;\r\n};\r\n\r\nexport const selectAllOnClick = defaultValue => e => {\r\n    if (!defaultValue || e.target.value === defaultValue) {\r\n        e.target.focus();\r\n        e.target.select();\r\n    }\r\n};\r\n\r\nexport const getOffset = (alignType, fontSize) => {\r\n    if (alignType === \"baseline\") {\r\n        return 0;\r\n    }\r\n    return (parseFloat(fontSize.slice()) / 2) * (alignType === \"sub\" ? 1 : -1);\r\n};\r\n\r\nexport const getUnstyledText = styledText => {\r\n    const unstyledText = styledText.replace(/<\\/(.*?)>/gm, \"</div>\").replace(/(?!(?:<\\/(.*?)>|<br(.*?)>)$)<(.*?)>/gm, \"<div>\");\r\n    return unstyledText[0] !== \"<\" ? `<div>${unstyledText}</div>` : unstyledText;\r\n};\r\n\r\nexport const unicodeNumberToChar = unicodeNumber => {\r\n    return String.fromCharCode(parseInt(unicodeNumber, 16));\r\n};\r\n\r\nexport const unicodeCharToNumber = unicodeChar => {\r\n    return unicodeChar.charCodeAt(0).toString(16);\r\n};\r\n\r\nexport const scrollToBottom = className => {\r\n    setTimeout(() => { document.getElementsByClassName(className)[0].scrollTo({\r\n        top: Number.MAX_SAFE_INTEGER,\r\n        behavior: \"smooth\",\r\n    })}, 0);\r\n};\r\n\r\nexport const changeAndScroll = changeFunction => (...args) => {\r\n    changeFunction(...args);\r\n    scrollToBottom(\"content-rightSide\");\r\n};\r\n\r\nexport const selectAllEditableContent = className => e => {\r\n    if (e.target.className === className) {\r\n        window.getSelection().selectAllChildren(e.target.children[0]);\r\n    }\r\n};\r\n\r\nexport const getListChars = ({ isOrderedList, numberingStyle, listItem, unicodeChar }) => {\r\n    if (isOrderedList) {\r\n        return numberingSets[numberingStyle];\r\n    }\r\n    const newBullet = bulletNamesMap[listItem] || unicodeChar;\r\n    return Array(4).fill(newBullet);\r\n};\r\n\r\nexport const detectOS = () => {\r\n    if (navigator && navigator.appVersion) {\r\n        if (navigator.appVersion.indexOf(\"Win\") !== -1) {\r\n            return \"Windows\";\r\n        } else if (navigator.appVersion.indexOf(\"Mac\") !== -1) {\r\n            return \"MacOS\";\r\n        }\r\n    }\r\n};\r\n\r\nexport const focusInput = (inputRef, timeout = 300) => {\r\n    setTimeout(() => {\r\n        inputRef.current.focus();\r\n    }, timeout);\r\n};\r\n\r\nexport const getErrorSections = (requiredFields = [], ...sectionPropsSets) => {\r\n    return sectionPropsSets.map(sectionProps => {\r\n        return requiredFields.some(fieldName => {\r\n            return sectionProps.hasOwnProperty(fieldName) && !sectionProps[fieldName]\r\n        });\r\n    });\r\n};\r\n\r\nexport const getPreviewFont = (font, customFont) => {\r\n    if (font !== \"custom\" && isFontAvailable(font)) {\r\n        return font;\r\n    } else if (font === \"custom\" && customFont && isFontAvailable(customFont)) {\r\n        return customFont;\r\n    }\r\n    return `'${DEFAULT_FONT}', 'Roboto', sans-serif`;\r\n}\r\n\r\nexport const fillMissedFields = currentFormState => {\r\n    const formStateWithoutMissedFields = { ...currentFormState }; \r\n    \r\n    if (currentFormState.font === \"custom\" && !currentFormState.customFont) {\r\n        formStateWithoutMissedFields.font = DEFAULT_FONT;\r\n    };\r\n    \r\n    if (currentFormState.sideNumberFont === \"custom\" && !currentFormState.customSideNumberFont) {\r\n        formStateWithoutMissedFields.sideNumberFont = DEFAULT_FONT;\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n    for (let fieldName in autoFillingRequiredFields) {\r\n        if (!currentFormState[fieldName] && autoFillingRequiredFields[fieldName]) {\r\n            formStateWithoutMissedFields[fieldName] = autoFillingRequiredFields[fieldName];\r\n        }\r\n    }\r\n    return formStateWithoutMissedFields;\r\n};","import { getShortCutUtils } from \"./helpers\";\r\n\r\nconst Handlers = update => class {    \r\n    static toggleStateProperty = propName => e => {\r\n        update({\r\n            [propName]: e.target.checked\r\n        });\r\n    };\r\n\r\n    static setStateProperty = propName => (e, secondArg = \"\") => {\r\n        const newValue = (e && e.target.value !== \"\" && e.target.value !== undefined) ? e.target.value : secondArg;\r\n        update({\r\n            [propName]: newValue,\r\n        });\r\n    };\r\n\r\n    static setBullet = propName => e => {\r\n        const newBullet = e.target.value.length > 1 ? e.target.value[e.target.value.length - 1] : e.target.value;\r\n        update({\r\n            [propName]: newBullet,\r\n        });\r\n        return newBullet;\r\n    };\r\n\r\n    static setColor = propName => prevValue => (e, secondArg) => {\r\n        let input = e ? (e.target.value || \"\") : secondArg;\r\n        \r\n        const filteredInput = input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i) \r\n                              ? input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i)[0].slice(0, 6)\r\n                              : \"\" ;\r\n        \r\n        if (filteredInput !== prevValue) {\r\n            update({\r\n                [propName]: filteredInput,\r\n            });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setNumber = propName => prevValue => e => {\r\n        console.log(prevValue, 11, e);\r\n        let input = e.target.value || \"\";\r\n\r\n        const filteredInput = input.replace(\",\", \".\").trim().match(/[0-9]+/i) \r\n                              ? input.replace(\",\", \".\").trim().match(/\\d+[.,]?\\d*/)[0]\r\n                              : \"\" ;\r\n\r\n        if (filteredInput !== prevValue) {\r\n          update({\r\n              [propName]: filteredInput,\r\n          });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setShortCut = (valuePropName, viewPropName, isMac) => e => {\r\n        const systemName = isMac ? \"MacOS\" : \"Windows\";\r\n        const shortCut = getShortCutUtils(systemName).convertEventToShortCut(e);\r\n        if (shortCut && shortCut.deleteKey) {\r\n          setTimeout(() => {\r\n            update({ [valuePropName]: \"\" });\r\n            update({ [viewPropName]: \"\" });\r\n          }, 100);\r\n        } else if (shortCut) {\r\n          update({ [valuePropName]: shortCut.value });\r\n          update({ [viewPropName]: shortCut.stringValue });\r\n        }\r\n    };\r\n};\r\n\r\nexport default Handlers;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInput = withStyles(theme => ({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      minWidth: \"183px\",\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInput;","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass NewGroupDialog extends React.Component {\r\n\r\n    state = this.props.currentGroup \r\n          ? this.props.currentGroup \r\n          : this.props.groupType !== \"xref\" \r\n          ? { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", }\r\n          : { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", groupKey: \"\", };\r\n    \r\n    onInputChange = inputName => e => {\r\n        this.setState({ \r\n            [inputName]: e.target.value \r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        const {currentGroup, hideDialog } = this.props;\r\n        this.setState({ ...currentGroup });\r\n        hideDialog()\r\n    };\r\n\r\n    onGroupSave = () => {\r\n        const { onSave, changeGroupSelect, hideDialog, groupType } = this.props;\r\n        if (this.state.nameEn.trim().length && (groupType !== \"xref\" || this.state.groupKey.trim().length)) {\r\n            const groupToSave = {\r\n                nameEn: this.state.nameEn.trim(),\r\n                nameDe: this.state.nameDe.trim(),\r\n                nameRu: this.state.nameRu.trim(),\r\n                nameFr: this.state.nameFr.trim(),\r\n                nameFrCa: this.state.nameFrCa.trim(),\r\n                nameEs: this.state.nameEs.trim(),\r\n            };\r\n            if (groupType === \"xref\") {\r\n                groupToSave.groupKey = this.state.groupKey.trim();\r\n            }\r\n            onSave(groupToSave);\r\n            changeGroupSelect(groupToSave)(null, this.state.nameEn.trim());\r\n            hideDialog();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isOpen, isEditMode } = this.props;\r\n        const { onInputChange, onGroupSave, onClose } = this;\r\n        const titleText = `${isEditMode ? \"Edit\" : \"Create\"} new ${this.props.groupType === \"xref\" ? \"reference \" : \"\"}group`\r\n        const buttonText = isEditMode ? \"Save\" : \"Create\";\r\n        return (\r\n            <Dialog\r\n                className=\"paragraphDecorators-dialog\"\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <DialogTitle>{titleText}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        {\r\n                            this.props.groupType === \"xref\" \r\n                            &&\r\n                            <>\r\n                                <span>Group Key</span>\r\n                                <TextField \r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                    onChange={onInputChange(\"groupKey\")}\r\n                                    value={this.state.groupKey}\r\n                                />\r\n                            </>\r\n                        }\r\n                        <span>Name EN</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEn\")}\r\n                            value={this.state.nameEn}\r\n                        />\r\n                        <span>Name DE</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameDe\")} \r\n                            value={this.state.nameDe}\r\n                        />                        \r\n                        <span>Name RU</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameRu\")} \r\n                            value={this.state.nameRu}\r\n                        />                        \r\n                        <span>Name FR<br/><span className=\"smallText\">France</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFr\")} \r\n                            value={this.state.nameFr}\r\n                        />\r\n                        <span>Name FR<br/><span className=\"smallText\">Canada</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFrCa\")} \r\n                            value={this.state.nameFrCa}\r\n                        />\r\n                        <span>Name ES</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEs\")} \r\n                            value={this.state.nameEs}\r\n                        />                  \r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color=\"default\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={onGroupSave} color=\"primary\">\r\n                        {buttonText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n};\r\n\r\nexport default NewGroupDialog;","import React from \"react\";\r\n\r\nconst LabelWithAsterisk = ({ children }) => {\r\n    return (\r\n        <div className=\"labelWithAsterisk\">\r\n            <div className=\"labelWithAsterisk-labelBox\">\r\n                <span>{children}</span>\r\n            </div>\r\n            <div className=\"labelWithAsterisk-asteriskBox\">\r\n                <span className=\"labelWithAsterisk-asteriskMark\">*</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LabelWithAsterisk;","import React from \"react\";\r\n\r\nconst withNewGroupControl = (ViewComponent) => {\r\n    return class extends React.Component {\r\n        state = {\r\n            isOpen: false,\r\n            groupSelect: \"\",\r\n            newGroup: this.props.savedNewGroup || \"\",\r\n        }\r\n        \r\n        handleClick = () => {\r\n            this.setState(({ isOpen }) => {\r\n                return {\r\n                    isOpen: !isOpen\r\n                };\r\n            });\r\n        }\r\n    \r\n        onSave = newGroup => {\r\n            this.setState({ newGroup });\r\n        }\r\n    \r\n        changeGroupSelect = (newValue) => {\r\n            this.setState({\r\n                groupSelect: newValue,\r\n            });\r\n        }\r\n\r\n        hideDialog = () => {\r\n            this.setState({ isOpen: false });\r\n        }\r\n        \r\n        render() {\r\n            const { handleClick, onSave, changeGroupSelect, hideDialog } = this; \r\n            return ( <ViewComponent {...this.props} {...this.state} {...{ handleClick, onSave, changeGroupSelect, hideDialog }} /> );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withNewGroupControl;","export const CHANGE_DEC_FORM = \"CHANGE_DEC_FORM\";\r\nexport const CLEAR_DEC_FORM = \"CLEAR_DEC_FORM\";\r\nexport const SHOW_DEC_DIALOG = \"SHOW_DEC_DIALOG\";\r\nexport const HIDE_DEC_DIALOG = \"HIDE_DEC_DIALOG\";\r\nexport const SWITCH_DEC_DIALOG_TAB = \"SWITCH_DEC_DIALOG_TAB\";\r\nexport const RESET_DEC_DIALOG_TAB = \"RESET_DEC_DIALOG_TAB\";\r\nexport const SWITCH_ON_DEC_DIALOG_EDIT_MODE = \"SWITCH_ON_DEC_DIALOG_EDIT_MOD\";\r\nexport const SWITCH_OFF_DEC_DIALOG_EDIT_MODE = \"SWITCH_OFF_DEC_DIALOG_EDIT_MODE\";\r\nexport const UPDATE_VALIDATION_ERROR = \"UPDATE_VALIDATION_ERROR\";\r\nexport const REMOVE_VALIDATION_ERROR = \"REMOVE_VALIDATION_ERROR\";\r\n\r\nexport const changeDecoratorForm = payload => {\r\n    return {\r\n        type: CHANGE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearDecoratorForm = payload => {\r\n    return {\r\n        type: CLEAR_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const showDecoratorDialog = () => {\r\n    return {\r\n        type: SHOW_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const hideDecoratorDialog = () => {\r\n    return {\r\n        type: HIDE_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const switchDecDialogTab = payload => {\r\n    return {\r\n        type: SWITCH_DEC_DIALOG_TAB,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const resetDecDialogTab = () => {\r\n    return {\r\n        type: RESET_DEC_DIALOG_TAB,\r\n    };\r\n}\r\n\r\nexport const switchOnDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_ON_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const switchOffDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_OFF_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const updateValidationError = payload => {\r\n    return {\r\n        type: UPDATE_VALIDATION_ERROR,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const removeValidationError = () => {\r\n    return {\r\n        type: REMOVE_VALIDATION_ERROR,\r\n    };\r\n};\r\n\r\nexport const openDialog = dispatch => dec => {\r\n    if (dec) {\r\n        dispatch(changeDecoratorForm(dec));\r\n        dispatch(switchOnDecDialogEditMode());\r\n    } \r\n    dispatch(showDecoratorDialog());\r\n};\r\n\r\nexport const closeDialog = dispatch => () => {\r\n    dispatch(hideDecoratorDialog());\r\n    dispatch(switchOffDecDialogEditMode());\r\n    dispatch(removeValidationError());\r\n    dispatch(resetDecDialogTab());\r\n    dispatch(clearDecoratorForm());\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Handlers from \"../Handlers\";\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport LabelWithAsterisk from \"../common/LabelWithAsterisk\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\nimport { getNamesSectionErrorState, focusInput } from \"../helpers\";\r\nimport { changeDecoratorForm, updateValidationError } from \"../actions\";\r\n\r\nclass NamesSection extends React.Component {\r\n    handlers = Handlers(this.props.updateForm);\r\n    setStateProperty = this.handlers.setStateProperty;\r\n    toggleStateProperty = this.handlers.toggleStateProperty;\r\n\r\n    changeDecKey = this.setStateProperty(\"decKey\");\r\n    changeGroup = this.setStateProperty(\"group\");\r\n    changeGroupToCreate = this.setStateProperty(\"groupToCreate\");\r\n    changeActive = this.toggleStateProperty(\"active\");\r\n    changeDecNameEn = this.setStateProperty(\"decNameEn\");\r\n    changeDecNameDe = this.setStateProperty(\"decNameDe\");\r\n    changeDecNameRu = this.setStateProperty(\"decNameRu\");\r\n    changeDecNameFr = this.setStateProperty(\"decNameFr\");\r\n    changeDecNameFrCa = this.setStateProperty(\"decNameFrCa\");\r\n    changeDecNameEs = this.setStateProperty(\"decNameEs\");\r\n\r\n    onGroupChange = group => (...args) => {\r\n        const value = args[0] ? args[0].target.value : args[1];\r\n        if (group.nameEn && value === group.nameEn) {\r\n            this.changeGroupToCreate(null, group);\r\n        } else {\r\n            this.changeGroupToCreate(null, \"\");\r\n        }\r\n        this.changeGroup(...args);\r\n    };\r\n\r\n    decKeyInputRef = React.createRef();\r\n    decNameEnInputRef = React.createRef();\r\n\r\n    focusOnEmptyField = () => {\r\n        if (!this.props.formState.decKey) {\r\n            focusInput(this.decKeyInputRef);\r\n        } else if (!this.props.formState.decNameEn) {\r\n            focusInput(this.decNameEnInputRef);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.validationError) {\r\n            this.focusOnEmptyField();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.validationError && !prevprops.validationError) {\r\n            this.focusOnEmptyField();\r\n        }\r\n        if (this.props.validationError && !getNamesSectionErrorState(this.props.formState)) {\r\n            this.props.updateValidationError({ namesSection: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            formState,\r\n            validationError,\r\n            onSave,\r\n            newGroup, \r\n            isOpen, \r\n            hideDialog, \r\n            handleClick, \r\n        } = this.props;\r\n\r\n        const {\r\n            decKey,\r\n            group,\r\n            active,\r\n            decNameEn,\r\n            decNameDe,\r\n            decNameRu,\r\n            decNameFr,\r\n            decNameFrCa,\r\n            decNameEs,\r\n        } = formState;\r\n\r\n        const newGroupName = newGroup.nameEn;\r\n        const isEditMode = !!newGroupName;\r\n\r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n                <LabelWithAsterisk>Key</LabelWithAsterisk>\r\n                <TextField \r\n                    value={decKey}\r\n                    onChange={this.changeDecKey}\r\n                    error={validationError && !decKey}\r\n                    inputRef={this.decKeyInputRef}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Group</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        value={group} \r\n                        onChange={this.onGroupChange(newGroup)}\r\n                        input={ <CustomInput /> }  \r\n                    >\r\n                        <option value=\"\">...</option>\r\n                        { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                        <option value=\"0\">Text</option>\r\n                        <option value=\"1\">Heading</option>\r\n                        <option value=\"2\">Heading Heading Heading Heading</option>\r\n                    </NativeSelect>\r\n                    { !(isEditMode && group !== newGroupName) && (\r\n                        <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                            { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                        </Button>\r\n                    ) }\r\n                </div>\r\n\r\n                <span>Active</span>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={active}\r\n                        onChange={this.changeActive} \r\n                        color=\"primary\" \r\n                    />\r\n                </div>\r\n\r\n                <LabelWithAsterisk>Name EN</LabelWithAsterisk>\r\n                <TextField \r\n                    value={decNameEn}\r\n                    onChange={this.changeDecNameEn}\r\n                    error={validationError && !decNameEn}\r\n                    inputRef={this.decNameEnInputRef}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name DE</span>\r\n                <TextField \r\n                    value={decNameDe}\r\n                    onChange={this.changeDecNameDe}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name RU</span>\r\n                <TextField \r\n                    value={decNameRu}\r\n                    onChange={this.changeDecNameRu}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name FR<br/><span className=\"smallText\">France</span></span>\r\n                <TextField \r\n                    value={decNameFr}\r\n                    onChange={this.changeDecNameFr}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name FR<br/><span className=\"smallText\">Canada</span></span>\r\n                <TextField \r\n                    value={decNameFrCa}\r\n                    onChange={this.changeDecNameFrCa}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name ES</span>\r\n                <TextField \r\n                    value={decNameEs}\r\n                    onChange={this.changeDecNameEs}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <NewGroupDialog \r\n                    isOpen={isOpen}\r\n                    hideDialog={hideDialog}\r\n                    onSave={onSave}\r\n                    isEditMode={isEditMode}\r\n                    currentGroup={newGroup}\r\n                    changeGroupSelect={this.onGroupChange}\r\n                    groupType=\"decorators\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return { \r\n        formState: form,\r\n        savedNewGroup: form.groupToCreate,\r\n        validationError: validationError.namesSection,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(changeDecoratorForm(payload)),\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(withNewGroupControl(NamesSection)));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport Handlers from \"../Handlers\";\r\nimport LabelWithAsterisk from \"../common/LabelWithAsterisk\";\r\nimport { getWordExportSectionErrorState } from \"../helpers\";\r\nimport { changeDecoratorForm, updateValidationError } from \"../actions\";\r\n\r\nclass WordExportSection extends React.Component {\r\n    handlers = Handlers(this.props.updateForm);\r\n    setStateProperty = this.handlers.setStateProperty;\r\n    toggleStateProperty = this.handlers.toggleStateProperty;\r\n\r\n    changeWordStyleName = this.setStateProperty(\"wordStyleName\");\r\n    changeSoftReturn = this.toggleStateProperty(\"softReturn\");\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.validationError && !getWordExportSectionErrorState(this.props.formState)) {\r\n            this.props.updateValidationError({ wordExportSection: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { wordStyleName, softReturn, validationError } = this.props;\r\n        console.log(2);\r\n\r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <LabelWithAsterisk>Style name in WORD</LabelWithAsterisk>\r\n                <TextField \r\n                    value={wordStyleName}\r\n                    onChange={this.changeWordStyleName}\r\n                    error={validationError && !wordStyleName}\r\n                    autoFocus={validationError && !wordStyleName}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n                \r\n                <span>Soft return</span>\r\n                <div>\r\n                    <Checkbox \r\n                        checked={softReturn}\r\n                        onChange={this.changeSoftReturn}\r\n                        color=\"primary\" \r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return { \r\n        formState: form,\r\n        wordStyleName: form.wordStyleName, \r\n        softReturn: form.softReturn,\r\n        validationError: validationError.wordExportSection,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(changeDecoratorForm(payload)),\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(WordExportSection));","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInputShort = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInputShort;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst BackSpaceActionInput = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"175px\",\r\n      width: \"175px\",\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default BackSpaceActionInput;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport Handlers from \"../../Handlers\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport { backSpaceActions, decoratorsList } from \"../../constants\";\r\nimport BackSpaceActionInput from \"./BackSpaceActionInput\";\r\nimport { changeDecoratorForm } from \"../../actions\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass PositioningSection extends React.Component {\r\n    handlers = Handlers(this.props.updateForm);\r\n    setStateProperty = this.handlers.setStateProperty;\r\n\r\n    changeIndentationalLevel = this.setStateProperty(\"indentationalLevel\")\r\n    changeBackspaceActionWithContent = this.setStateProperty(\"backspaceActionWithContent\");\r\n    changeBackspaceActionWithContentStyle = this.setStateProperty(\"backspaceActionWithContentStyle\");\r\n    changeBackspaceActionWithoutContent = this.setStateProperty(\"backspaceActionWithoutContent\");\r\n    changeBackspaceActionWithoutContentStyle = this.setStateProperty(\"backspaceActionWithoutContentStyle\");\r\n    changeReturnActionNextSection = this.setStateProperty(\"returnActionNextSection\");\r\n    changeReturnActionEmptySection = this.setStateProperty(\"returnActionEmptySectionStyle\");\r\n    changeTabAction = this.setStateProperty(\"tabAction\");\r\n    changeShiftTabAction = this.setStateProperty(\"shiftTabAction\");\r\n\r\n    render() {\r\n        const {\r\n            indentationalLevel,\r\n            backspaceActionWithContent,\r\n            backspaceActionWithContentStyle,\r\n            returnActionNextSection,\r\n            returnActionEmptySection,\r\n            tabAction,\r\n            shiftTabAction,\r\n        } = this.props;\r\n    \r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_positioning\">\r\n                <span id=\"r1c1\">Identational level</span>\r\n                <div>\r\n                    <NativeSelect\r\n                        value={indentationalLevel}\r\n                        onChange={this.changeIndentationalLevel}\r\n                        id=\"r1c2\" \r\n                        input={ <CustomInputShort /> }\r\n                    >\r\n                        <option value=\"\">...</option>\r\n                        <option value=\"0\">0</option>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                    </NativeSelect>\r\n                </div>\r\n                \r\n                <div id=\"r2\" className=\"sectionTitle\">\r\n                    <span>BACKSPACE</span>\r\n                </div>\r\n    \r\n                <span id=\"r3c1\">At the beginning of a section with content</span>\r\n                <div className=\"dialogGrid dialogGrid_2cols\">\r\n                    <div>\r\n                        <NativeSelect \r\n                            value={backspaceActionWithContent}\r\n                            onChange={this.changeBackspaceActionWithContent}\r\n                            id=\"r3c2\" \r\n                            input={ <BackSpaceActionInput /> }\r\n                        >\r\n                            {backSpaceActions.map(action => (\r\n                                <option value={action.key} key={`backSpace ${action.key}`}>{action.value}</option>\r\n                            ))}\r\n                        </NativeSelect>\r\n                    </div>\r\n                    <Fade in={backspaceActionWithContent === \"apply_other_pd\"}>\r\n                        <NativeSelect\r\n                            value={backspaceActionWithContentStyle}\r\n                            onChange={this.changeBackspaceActionWithContentStyle}\r\n                            input={ <CustomInput /> }\r\n                        >\r\n                            <option value=\"default\">Global Fallback Style</option>\r\n                            { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                        </NativeSelect>\r\n                    </Fade>\r\n                </div>\r\n    \r\n                <div id=\"r4\" className=\"sectionTitle\">\r\n                    <span>RETURN</span>\r\n                </div>\r\n    \r\n                <span id=\"r5c1\">Style of next section</span>\r\n                <div className=\"positioning-styleInputBox\">\r\n                    <NativeSelect\r\n                        value={returnActionNextSection}\r\n                        onChange={this.changeReturnActionNextSection}\r\n                        id=\"r5c2\" \r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        <option value=\"default\">Global Fallback Style</option>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                </div>\r\n                \r\n    \r\n                <span id=\"r6c1\">In empty section change current style to</span>\r\n                <div className=\"positioning-styleInputBox\">\r\n                    <NativeSelect \r\n                        value={returnActionEmptySection}\r\n                        onChange={this.changeReturnActionEmptySection}\r\n                        id=\"r6c2\" \r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        <option value=\"default\">Global Fallback Style</option>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                </div>\r\n    \r\n                <div id=\"r7\" className=\"sectionTitle\">\r\n                    <span>TAB / SHIFT+TAB</span>\r\n                </div>\r\n    \r\n                <span id=\"r8c1\">TAB – change current style to</span>\r\n                <div className=\"positioning-styleInputBox\">\r\n                    <NativeSelect\r\n                        value={tabAction}\r\n                        onChange={this.changeTabAction}\r\n                        id=\"r8c2\" \r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                </div>\r\n    \r\n                <span id=\"r9c1\">SHIFT+TAB – change current style to</span>\r\n                <div className=\"positioning-styleInputBox\">\r\n                    <NativeSelect\r\n                        value={shiftTabAction}\r\n                        onChange={this.changeShiftTabAction} \r\n                        id=\"r9c2\" \r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        indentationalLevel: form.indentationalLevel,\r\n        backspaceActionWithContent: form.backspaceActionWithContent,\r\n        backspaceActionWithContentStyle: form.backspaceActionWithContentStyle,\r\n        returnActionNextSection: form.returnActionNextSection,\r\n        returnActionEmptySection: form.returnActionEmptySection,\r\n        tabAction: form.tabAction,\r\n        shiftTabAction: form.shiftTabAction,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(changeDecoratorForm(payload)),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(PositioningSection));","import PositioningSection from \"./PositioningSection\";\r\nexport default PositioningSection;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst ListPreview = (props) => {\r\n    const { \r\n        listPreviewStyle, \r\n        listChars, \r\n        prefix, \r\n        suffix, \r\n        suffixDistance, \r\n        sideNumberStyle,\r\n    } = props;\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n    const listItemsBeginnings = listChars.map(listChar => {\r\n        return (`${prefix}${listChar}${suffix}`);\r\n    });\r\n    const listItemBeginingStyle = {\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n        ...sideNumberStyle,\r\n    };\r\n\r\n    return (\r\n        <div className=\"preview preview_list\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div className=\"preview-content\">\r\n                <div className={demonstrationElementClassName}>\r\n                    <div\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        style={listPreviewStyle}\r\n                    >\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[0]}`}</span><span>The first list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[1]}`}</span><span>The second list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[2]}`}</span><span>The third list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[3]}`}</span><span>The fourth list item</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListPreview;","import ColorField from \"./ColorField\";\r\nexport default ColorField;","import React from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport { getCorrectColor, selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ColorField extends React.Component {\r\n    state = {\r\n        isOpen: this.props.isOpen,\r\n    };\r\n\r\n    hideColorPicker = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    showColorPicker = () => {\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    colorPickerHandler = changeColor => ({ hex }) => {\r\n        changeColor(null, hex);\r\n    };\r\n\r\n    render() {\r\n        const { colorCode, changeColorCode, defaultColorCode, required, bottomAligned } = this.props;\r\n        const { showColorPicker, hideColorPicker, colorPickerHandler } = this;\r\n        const correctColor = getCorrectColor(colorCode);\r\n        const colorError = correctColor !== colorCode;\r\n        const inputError = colorError && (required || !!colorCode);\r\n        const pickerColor = colorError ? \"\" : `#${correctColor}`;\r\n        const colorSampleStyle = {\r\n            backgroundColor: `#${correctColor}`,\r\n        };\r\n        const colorPickerClassName = `colorPicker${ bottomAligned ? \" colorPicker_bottomAligned\" : \"\"}`;\r\n\r\n        return (\r\n            <div className=\"colorField\">\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    className=\"numberInput\" \r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                    }}\r\n                    value={colorCode}\r\n                    onChange={changeColorCode}\r\n                    onClick={e => { \r\n                        selectAllOnClick(defaultColorCode || \"000\")(e); \r\n                        // this.showColorPicker(); \r\n                    }}\r\n                    error={inputError}\r\n                />\r\n                <div\r\n                    onClick={showColorPicker}\r\n                    className=\"colorSample\" \r\n                    style={colorSampleStyle}\r\n                />\r\n                {this.state.isOpen && (\r\n                    <div className={colorPickerClassName}>\r\n                        <div className=\"colorPicker-chromeBox\">\r\n                            <ChromePicker\r\n                                onChangeComplete={colorPickerHandler(changeColorCode)}\r\n                                color={pickerColor}\r\n                                disableAlpha\r\n                            />\r\n                        </div>\r\n                        <div className=\"colorPicker-popOver\"  onClick={hideColorPicker}></div>\r\n                    </div>\r\n                ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorField;","import FontSelectFields from \"./FontSelectFields\";\r\nexport default FontSelectFields;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport CustomInput from \"../CustomInput\";\r\nimport { fontSet, DEFAULT_FONT } from \"../../constants\";\r\nimport { isFontAvailable } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass FontSelectFields extends React.Component {\r\n    textInput = React.createRef();\r\n\r\n    focusTextInput = () => {\r\n        this.textInput.current.focus();\r\n    };\r\n\r\n    onFontChange = e => {\r\n        this.props.changeFont(e);\r\n        if (e.target.value === \"custom\") {\r\n            this.focusTextInput();\r\n            if (typeof this.props.extraFunction === \"function\") {\r\n                setTimeout(this.props.extraFunction, 500);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { font, customFont, changeCustomFont } = this.props;\r\n        const availableFonts = fontSet.filter(fontName => fontName === font || isFontAvailable(fontName));\r\n        const customFontFieldState = font === \"custom\" ? \"customFontField_shown\" : \"customFontField_hidden\";\r\n        return (\r\n            <>\r\n                <span >Font</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={font}\r\n                    onChange={this.onFontChange}\r\n                >\r\n                    <option value={DEFAULT_FONT}>Helvetica</option>\r\n                    { availableFonts.map(fontName => <option value={fontName} key={fontName}>{fontName}</option>) }\r\n                    <option value=\"custom\" className=\"highlightedOption\">Custom</option>\r\n                </NativeSelect>\r\n    \r\n                <div className={`customFontField ${customFontFieldState}`}>\r\n                    <span></span>\r\n                </div>\r\n                <div className={`customFontField ${customFontFieldState}`}>\r\n                    <TextField \r\n                        value={customFont}\r\n                        onChange={changeCustomFont}\r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        placeholder=\"Enter the font name\"\r\n                        inputRef={this.textInput}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FontSelectFields;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport Handlers from \"../../Handlers\";\r\nimport ListPreview from \"../../common/Preview/ListPreview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport LabelWithAsterisk from \"../../common/LabelWithAsterisk\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport { listStyleTypes, bulletNamesMap, HOLDER } from \"../../constants\";\r\nimport { changeDecoratorForm, updateValidationError } from \"../../actions\";\r\nimport { \r\n    selectAllOnClick, \r\n    scrollToBottom, \r\n    changeAndScroll, \r\n    getListSectionErrorState,\r\n    focusInput,\r\n    unicodeNumberToChar, \r\n    unicodeCharToNumber \r\n} from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ListSection extends React.Component {\r\n    handlers = Handlers(this.props.updateForm);\r\n    setStateProperty = this.handlers.setStateProperty;\r\n    toggleStateProperty = this.handlers.toggleStateProperty;\r\n    setNumber = this.handlers.setNumber;\r\n    setColor = this.handlers.setColor;\r\n    setBullet = this.handlers.setBullet;\r\n\r\n    changeListName = this.setStateProperty(\"listName\");\r\n    changeOrderLevel = this.setStateProperty(\"orderLevel\");\r\n    changePrefix = this.setStateProperty(\"prefix\");\r\n    changeSuffix = this.setStateProperty(\"suffix\");\r\n    changeSuffixDistance = this.setStateProperty(\"suffixDistance\");\r\n    changeMagicTabs = this.toggleStateProperty(\"magicTabs\");\r\n    changeListItem = this.setStateProperty(\"listItem\");\r\n    changeNumberingStyle = this.setStateProperty(\"numberingStyle\");\r\n    changeContinueNumbering = this.toggleStateProperty(\"continueNumbering\");\r\n    changeAllowRestartNumbering = this.toggleStateProperty(\"allowRestartNumbering\");\r\n    changeIncludePreviousFrom = this.setStateProperty(\"includePreviousFrom\");\r\n    changeSideNumberFont = this.setStateProperty(\"sideNumberFont\");\r\n    changeCustomSideNumberFont = this.setStateProperty(\"customSideNumberFont\");\r\n    changeSideNumberAlignment = this.setStateProperty(\"sideNumberAlignment\");\r\n    changeSideNumberFontSize = this.setNumber(\"sideNumberFontSize\");\r\n    changeSideNumberFontColor = this.setColor(\"sideNumberFontColor\");\r\n    changeSideNumberFillingColor = this.setColor(\"sideNumberFillingColor\");\r\n    changeSideNumberWidth = this.setNumber(\"sideNumberWidth\");\r\n    changeSideNumberRadius = this.setNumber(\"sideNumberRadius\");\r\n\r\n    changeIsList = listName => e => {\r\n        if (e.target.checked) {\r\n            if (listName === HOLDER) {\r\n                this.changeListName(null, \"\");\r\n            }\r\n        } else if (listName === \"\"){\r\n            setTimeout(() => this.changeListName(null, HOLDER), 200);\r\n        }\r\n        this.toggleStateProperty(\"isList\")(e);\r\n    };\r\n\r\n    changeListType = suffix => e => {\r\n        const { value } = e.target;\r\n        this.setStateProperty(\"listType\")(null, value);\r\n        if (value === \"ordered\" && suffix === \"\") {\r\n            this.setStateProperty(\"suffix\")(null, \".\");\r\n        } else if (value === \"unordered\" && suffix === \".\") {\r\n            this.setStateProperty(\"suffix\")(null, \"\");\r\n        }\r\n    };\r\n\r\n    changeUnicodeNumber = prevUnicodeNumber => e => {\r\n        const newUnicodeNumber = this.setColor(\"unicodeNumber\")(prevUnicodeNumber)(e);\r\n        const newUnicodeChar = newUnicodeNumber !== \"\" ? unicodeNumberToChar(newUnicodeNumber) : \"\";\r\n        this.setStateProperty(\"unicodeChar\")(null, newUnicodeChar);\r\n    };\r\n    \r\n    changeUnicodeChar = e => {\r\n        const newUnicodeChar = this.setBullet(\"unicodeChar\")(e);\r\n        const newUnicodeNumber = newUnicodeChar !== \"\" ? unicodeCharToNumber(newUnicodeChar) : \"\";\r\n        this.setStateProperty(\"unicodeNumber\")(null, newUnicodeNumber);\r\n    };\r\n\r\n    changeSideNumber = suffix => e => {\r\n        this.toggleStateProperty(\"sideNumber\")(e);\r\n        if (e.target.checked && suffix === \".\") {\r\n            this.setStateProperty(\"suffix\")(null, \"\");\r\n        } else if (!e.target.checked && suffix === \"\") {\r\n            this.setStateProperty(\"suffix\")(null, \".\");\r\n        }\r\n    };\r\n\r\n    listNameInputRef = React.createRef();\r\n    unicodeCharInputRef = React.createRef();\r\n\r\n    onIsListChange = listName => e => {\r\n        changeAndScroll(this.changeIsList(listName))(e);\r\n        if (e.target.checked && listName === HOLDER) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n    };\r\n\r\n    onListItemChange = unicodeChar => e => {\r\n        this.changeListItem(e);\r\n        if (e.target.value === \"custom\" && !unicodeChar) {\r\n            focusInput(this.unicodeCharInputRef);\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.validationError) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.validationError && !prevprops.validationError) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n        if (this.props.validationError && !getListSectionErrorState(this.props.formState)) {\r\n            this.props.updateValidationError({ listSection: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            listPreviewProps,\r\n            validationError,\r\n            formState,\r\n        } = this.props;\r\n\r\n        const {\r\n            isList,\r\n            listName, \r\n            orderLevel,\r\n            prefix,\r\n            suffix,\r\n            suffixDistance,\r\n            magicTabs,\r\n            listType,\r\n            listItem,\r\n            unicodeNumber,\r\n            unicodeChar,\r\n            numberingStyle,\r\n            continueNumbering,\r\n            allowRestartNumbering,\r\n            includePreviousFrom,\r\n            sideNumber,\r\n            sideNumberFont,\r\n            customSideNumberFont,\r\n            sideNumberAlignment,\r\n            sideNumberFontSize,\r\n            sideNumberFontColor,\r\n            sideNumberFillingColor,\r\n            sideNumberWidth,\r\n            sideNumberRadius,\r\n        } = formState;\r\n        \r\n        const mainListSettingsState = isList ? \"shown\" : \"hidden\";\r\n        const unorderedListSettingsState = (isList && listType === \"unordered\") ? \"shown\" : \"hidden\";\r\n        const orderedListSettingsState = (isList && listType === \"ordered\") ? \"shown\" : \"hidden\";\r\n        const sideNumberSettingsState = (isList && listType === \"ordered\" && sideNumber) ? \"shown\" : \"hidden\";\r\n    \r\n        return (\r\n            <>\r\n                <div className=\"dialogGrid dialogGrid_2cols\">\r\n                    <div>\r\n                        <div>\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth\">\r\n                                <div className=\"listSection-firstSpan\">\r\n                                    <span>Is it a list?</span>\r\n                                </div>\r\n                                <div>\r\n                                    <Checkbox \r\n                                        color=\"primary\" \r\n                                        checked={isList} \r\n                                        onChange={this.onIsListChange(listName)} \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${mainListSettingsState}`}>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth optionalSettings\">\r\n                                    <LabelWithAsterisk>List name</LabelWithAsterisk>\r\n                                    <TextField\r\n                                        value={listName}\r\n                                        onChange={this.changeListName} \r\n                                        error={validationError && !listName}\r\n                                        inputRef={this.listNameInputRef}\r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                    />\r\n    \r\n                                    <span>Order level</span>\r\n                                    <div>\r\n                                        <NativeSelect\r\n                                            value={orderLevel}\r\n                                            onChange={this.changeOrderLevel}\r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            <option value=\"\">...</option>\r\n                                            <option value=\"0\">0</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                        </NativeSelect>\r\n                                    </div>\r\n    \r\n                                    <span>Prefix</span>\r\n                                    <TextField\r\n                                        value={prefix}\r\n                                        onChange={this.changePrefix} \r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                    />\r\n    \r\n                                    <span>Suffix</span>\r\n                                    <TextField\r\n                                        value={suffix}\r\n                                        onChange={this.changeSuffix} \r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                        onClick={selectAllOnClick(\".\")}\r\n                                    />\r\n    \r\n                                    <span>Suffix distance</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <NativeSelect\r\n                                            value={suffixDistance}\r\n                                            onChange={this.changeSuffixDistance} \r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            <option value=\"0.25\">0.25</option>\r\n                                            <option value=\"0.5\">0.5</option>\r\n                                            <option value=\"0.75\">0.75</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"1.25\">1.25</option>\r\n                                            <option value=\"1.5\">1.5</option>\r\n                                            <option value=\"1.75\">1.75</option>\r\n                                            <option value=\"2\">2</option>\r\n                                        </NativeSelect>\r\n                                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                                    </div>\r\n    \r\n                                    <span>Magic Tabs</span>\r\n                                    <div>\r\n                                        <Checkbox \r\n                                            color=\"primary\" \r\n                                            checked={magicTabs} \r\n                                            onChange={this.changeMagicTabs} \r\n                                        />\r\n                                    </div>\r\n    \r\n                                    <span>Type of list</span>\r\n                                    <div>\r\n                                        <NativeSelect \r\n                                            value={listType} \r\n                                            onChange={changeAndScroll(this.changeListType(suffix))} \r\n                                            input={ <CustomInput /> }\r\n                                        >\r\n                                            <option value={\"unordered\"}>Unordered</option>\r\n                                            <option value={\"ordered\"}>Ordered</option>\r\n                                        </NativeSelect>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`optionalSettings optionalSettings_${orderedListSettingsState}`}>\r\n                            <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                                <span>Numbering style</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={numberingStyle}\r\n                                        onChange={this.changeNumberingStyle}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        {listStyleTypes.map(style => (\r\n                                            <option value={style.value} key={style.value}>{style.name}</option>\r\n                                        ))}                                    \r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Continue numbering after interruption</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={continueNumbering}\r\n                                        onChange={this.changeContinueNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Allow restart numbering</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={allowRestartNumbering} \r\n                                        onChange={this.changeAllowRestartNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Include previous levels from</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={includePreviousFrom} \r\n                                        onChange={this.changeIncludePreviousFrom}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        <option value=\"\">...</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Side number</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={sideNumber}\r\n                                        onChange={changeAndScroll(this.changeSideNumber(suffix))}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                            </div> \r\n    \r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${sideNumberSettingsState}`}>\r\n                                <div className=\"fontSettingsGrid listTypeSettings\">\r\n                                    <FontSelectFields \r\n                                        font={sideNumberFont}\r\n                                        changeFont={this.changeSideNumberFont}\r\n                                        customFont={customSideNumberFont}\r\n                                        changeCustomFont={this.changeCustomSideNumberFont}\r\n                                        extraFunction={() => { scrollToBottom(\"content-rightSide\"); }}\r\n                                    />\r\n                            \r\n                                    <span>Alignment</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberAlignment}\r\n                                        onChange={this.changeSideNumberAlignment}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"left\"}>Left</option>\r\n                                        <option value={\"center\"}>Center</option>\r\n                                        <option value={\"right\"}>Right</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Font size</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberFontSize}\r\n                                            onChange={this.changeSideNumberFontSize(sideNumberFontSize)}\r\n                                            onClick={selectAllOnClick(\"12\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>      \r\n                            \r\n                                    <span>Font color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFontColor} \r\n                                        changeColorCode={this.changeSideNumberFontColor(sideNumberFontColor)}\r\n                                        defaultColorCode={\"FFF\"}\r\n                                        bottomAligned\r\n                                    />\r\n                                        \r\n                                    <span>Filling color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFillingColor} \r\n                                        changeColorCode={this.changeSideNumberFillingColor(sideNumberFillingColor)}\r\n                                        defaultColorCode={\"1E88E5\"}\r\n                                        bottomAligned\r\n                                    />\r\n    \r\n                                    <span>Width</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberWidth}\r\n                                            onChange={this.changeSideNumberWidth(sideNumberWidth)}\r\n                                            onClick={selectAllOnClick(\"20\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                        \r\n                                    <span>Radius</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberRadius}\r\n                                            onChange={this.changeSideNumberRadius(sideNumberRadius)}\r\n                                            onClick={selectAllOnClick(\"10\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className={`listPreviewBox optionalSettings optionalSettings_${mainListSettingsState}`}>\r\n                        <ListPreview {...listPreviewProps} />\r\n                    </div>\r\n                </div>\r\n                <div className={`optionalSettings optionalSettings_${unorderedListSettingsState}`}>\r\n                    <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                        <div className=\"dialogGrid dialogGrid_2cols\">\r\n                            <span className=\"listSection-firstSpan\">List item</span>\r\n                            <div className=\"listItemSelect\">\r\n                                <NativeSelect \r\n                                    value={listItem} \r\n                                    onChange={this.onListItemChange(unicodeChar)} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    { \r\n                                        Object.entries(bulletNamesMap).map(([key, value]) => {\r\n                                            return (<option key={key} value={key}>{value}</option>) \r\n                                        })\r\n                                    }\r\n                                    <option value={\"custom\"} className=\"highlightedOption\">Custom</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </div>\r\n                        <Fade in={listItem === \"custom\"}>\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Unicode number</span>\r\n                                    <div>\r\n                                        <TextField  \r\n                                            value={unicodeNumber}\r\n                                            onChange={this.changeUnicodeNumber(unicodeNumber)}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"unicodeInput\" \r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">u+</InputAdornment>\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Char</span>\r\n                                    <div>\r\n                                        <TextField \r\n                                            value={unicodeChar}\r\n                                            onChange={this.changeUnicodeChar}\r\n                                            onClick={selectAllOnClick()}\r\n                                            inputRef={this.unicodeCharInputRef}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"bulletInput\" \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                        </Fade>\r\n                    </div> \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return { \r\n        formState: form,\r\n        validationError: validationError.listSection,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(changeDecoratorForm(payload)),\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListSection);","import ListSection from \"./ListSection\";\r\nexport default ListSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Handlers from \"../Handlers\";\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\nimport { changeDecoratorForm } from \"../actions\";\r\n\r\n\r\nclass ReferencingSection extends React.Component {\r\n    handlers = Handlers(this.props.updateForm);\r\n    setStateProperty = this.handlers.setStateProperty;\r\n\r\n    changeReferenceGroup = this.setStateProperty(\"referenceGroup\");\r\n    changeReferenceGroupToCreate = this.setStateProperty(\"referenceGroupToCreate\");\r\n\r\n    onXrefChange = xref => (e, secondArg) => {\r\n        const value = e ? e.target.value : secondArg;\r\n        if (xref.groupKey && xref.nameEn && value === xref.nameEn) {\r\n            this.changeReferenceGroupToCreate(null, xref);\r\n        } else {\r\n            this.changeReferenceGroupToCreate(null, \"\");\r\n        }\r\n        this.changeReferenceGroup(e, secondArg);\r\n    };\r\n\r\n    render() {\r\n        const { \r\n            newGroup, \r\n            isOpen, \r\n            hideDialog, \r\n            handleClick, \r\n            onSave,\r\n            referenceGroup, \r\n        } = this.props;\r\n        \r\n        const newGroupName = newGroup.nameEn;\r\n        const isEditMode = !!newGroupName;\r\n    \r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <span>Reference group</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        input={ <CustomInput /> } \r\n                        value={referenceGroup} \r\n                        onChange={this.onXrefChange(newGroup)} \r\n                    >\r\n                        { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                        <option value=\"\">none</option>\r\n                        <option value=\"0\">Reference group 1</option>\r\n                        <option value=\"1\">Reference group 2</option>\r\n                    </NativeSelect>\r\n                    {\r\n                        !(isEditMode && referenceGroup !== newGroupName) &&\r\n                        <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                            { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                        </Button>\r\n                     }\r\n                </div>\r\n                <NewGroupDialog \r\n                    isOpen={isOpen}\r\n                    hideDialog={hideDialog}\r\n                    onSave={onSave}\r\n                    isEditMode={isEditMode}\r\n                    currentGroup={newGroup}\r\n                    changeGroupSelect={this.onXrefChange}\r\n                    groupType=\"xref\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        referenceGroup: form.referenceGroup,\r\n        savedNewGroup: form.referenceGroupToCreate,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(changeDecoratorForm(payload)),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(withNewGroupControl(ReferencingSection)));","import * as React from \"react\";\r\nimport deepEqual from \"fast-deep-equal\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, q = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(q[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, q[i]))\r\n              t[q[i]] = s[q[i]];\r\n      }\r\n  return t;\r\n};\r\n\r\nfunction normalizeHtml(str) {\r\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, \" \");\r\n}\r\nfunction findLastTextNode(node) {\r\n  if (node.nodeType === Node.TEXT_NODE)\r\n      return node;\r\n  let children = node.childNodes;\r\n  for (let i = children.length - 1; i >= 0; i--) {\r\n      let textNode = findLastTextNode(children[i]);\r\n      if (textNode !== null)\r\n          return textNode;\r\n  }\r\n  return null;\r\n}\r\nfunction replaceCaret(el) {\r\n  // Place the caret at the end of the element\r\n  const target = findLastTextNode(el);\r\n  // do not move caret if element was not focused\r\n  const isTargetFocused = document.activeElement === el;\r\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\r\n      var sel = window.getSelection();\r\n      if (sel !== null) {\r\n          var range = document.createRange();\r\n          range.setStart(target, target.nodeValue.length);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n      }\r\n      if (el instanceof HTMLElement)\r\n          el.focus();\r\n  }\r\n}\r\n/**\r\n* A simple component for an html element with editable contents.\r\n*/\r\nexport default class ContentEditable extends React.Component {\r\n  constructor() {\r\n      super(...arguments);\r\n      this.lastHtml = this.props.html;\r\n      this.el = typeof this.props.innerRef === \"function\" ? { current: null } : React.createRef();\r\n      this.getEl = () => (this.props.innerRef && typeof this.props.innerRef !== \"function\" ? this.props.innerRef : this.el).current;\r\n      this.emitChange = (originalEvt) => {\r\n          const el = this.getEl();\r\n          if (!el)\r\n              return;\r\n          const html = el.innerHTML;\r\n          if (this.props.onChange && html !== this.lastHtml) {\r\n              // Clone event with Object.assign to avoid\r\n              // \"Cannot assign to read only property 'target' of object\"\r\n              const evt = Object.assign({}, originalEvt, {\r\n                  target: {\r\n                      value: html\r\n                  }\r\n              });\r\n              this.props.onChange(evt);\r\n          }\r\n          this.lastHtml = html;\r\n      };\r\n  }\r\n  render() {\r\n      const _a = this.props, { tagName, html, innerRef } = _a, props = __rest(_a, [\"tagName\", \"html\", \"innerRef\"]);\r\n      return React.createElement(tagName || \"div\", Object.assign({}, props, { ref: typeof innerRef === \"function\" ? (current) => {\r\n              innerRef(current);\r\n              this.el.current = current;\r\n          } : innerRef || this.el, onInput: this.emitChange, onBlur: this.props.onBlur || this.emitChange, onKeyUp: this.props.onKeyUp || this.emitChange, onKeyDown: this.props.onKeyDown || this.emitChange, contentEditable: !this.props.disabled, dangerouslySetInnerHTML: { __html: html } }), this.props.children);\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n      const { props } = this;\r\n      const el = this.getEl();\r\n      // We need not rerender if the change of props simply reflects the user's edits.\r\n      // Rerendering in this case would make the cursor/caret jump\r\n      // Rerender if there is no element yet... (somehow?)\r\n      if (!el)\r\n          return true;\r\n      // ...or if html really changed... (programmatically, not by user edit)\r\n      if (normalizeHtml(nextProps.html) !== normalizeHtml(el.innerHTML)) {\r\n          return true;\r\n      }\r\n      // Handle additional properties\r\n      return props.disabled !== nextProps.disabled ||\r\n          props.tagName !== nextProps.tagName ||\r\n          props.className !== nextProps.className ||\r\n          props.innerRef !== nextProps.innerRef ||\r\n          !deepEqual(props.style, nextProps.style);\r\n  }\r\n  componentDidUpdate() {\r\n      const el = this.getEl();\r\n      if (!el)\r\n          return;\r\n      // Perhaps React (whose VDOM gets outdated because we often prevent\r\n      // rerendering) did not update the DOM. So we update it manually now.(?!(?:<br \\/>|<br>|<br\\/>)$)<(.*?)>\r\n      if (this.props.html !== el.innerHTML) {\r\n          el.innerHTML = this.lastHtml = this.props.html;\r\n      }\r\n      replaceCaret(el);\r\n  }\r\n}\r\nContentEditable.propTypes = {\r\n  html: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  tagName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n  ])\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport ContentEditable from \"../ContentEditable\";\r\nimport { getOffset, selectAllEditableContent } from \"../../helpers\"\r\n\r\nconst Preview = ({previewText, changePreviewText, previewStyle}) => {\r\n    const { verticalAlign, fontSize } = previewStyle;\r\n\r\n    const editableContentStyle = {\r\n        ...previewStyle, \r\n        outline: \"none\",\r\n        marginTop: `${parseFloat(previewStyle.marginTop) + getOffset(verticalAlign, fontSize)}pt`,\r\n        marginBottom: `${parseFloat(previewStyle.marginBottom) - getOffset(verticalAlign, fontSize)}pt`,\r\n    };\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n\r\n    return (\r\n        <div className=\"preview\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div \r\n                className=\"preview-content preview-content_withPointer\" \r\n                onClick={selectAllEditableContent(demonstrationElementClassName)}\r\n            >\r\n                <div className={demonstrationElementClassName}>\r\n                    <ContentEditable\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        onChange={changePreviewText} \r\n                        html={previewText}\r\n                        style={editableContentStyle}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preview;","import Preview from \"./Preview.js\";\r\nexport default Preview;","import TypographySection from \"./TypographySection\";\r\nexport default TypographySection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport Preview from \"../../common/Preview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport { selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst TypographySection = (props) => {\r\n    const { \r\n        previewProps,\r\n        font, changeFont,\r\n        customFont, changeCustomFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"fontSettingsGrid\">\r\n                <FontSelectFields { ...{ font, changeFont, customFont, changeCustomFont }} />\r\n                \r\n                <span>Alignment</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={alignment}\r\n                    onChange={changeAlignment}\r\n                >\r\n                    <option value={\"left\"}>Left</option>\r\n                    <option value={\"center\"}>Center</option>\r\n                    <option value={\"right\"}>Right</option>\r\n                    <option value={\"justify\"}>Justified</option>\r\n                </NativeSelect>\r\n\r\n                <span>Font size</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={fontSize}\r\n                        onChange={changeFontSize}\r\n                        onClick={selectAllOnClick(\"12\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>      \r\n\r\n                <span>Font color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                    value={fontColorName}\r\n                    onChange={changeFontColorName}\r\n                    onClick={selectAllOnClick(\"Black\")}\r\n                />\r\n\r\n                <span>Font color HEX</span>\r\n                <ColorField \r\n                    colorCode={fontColor} \r\n                    changeColorCode={changeFontColor}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_indented\">\r\n            <span>Stylings</span>\r\n            <div className=\"checkBoxesSet\">\r\n                <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Bold\"\r\n                        labelPlacement=\"end\"\r\n                        checked={bold}\r\n                        onChange={changeBold}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Italic\"\r\n                        labelPlacement=\"end\"\r\n                        checked={italic}\r\n                        onChange={changeItalic}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Underlined\"\r\n                        labelPlacement=\"end\"\r\n                        checked={underlined}\r\n                        onChange={changeUnderlined}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_stroke\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Stroke\"\r\n                        labelPlacement=\"end\"\r\n                        checked={stroke}\r\n                        onChange={changeStroke}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <span>Text transform</span>\r\n            <RadioGroup \r\n                value={textTransform} \r\n                onChange={changeTextTransform} \r\n                row\r\n            >\r\n                <div className=\"labeledCheckbox labeledCheckbox_topIndented\">\r\n                    <FormControlLabel\r\n                        value=\"none\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"None\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_uppercase\">\r\n                    <FormControlLabel\r\n                        value=\"uppercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Uppercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_lowercase\">\r\n                    <FormControlLabel\r\n                        value=\"lowercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Lowercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_smallCaps\">\r\n                    <FormControlLabel\r\n                        value=\"small-caps\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Small caps\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n            </RadioGroup>\r\n\r\n            <span>Sub/Superscript</span>\r\n            <div>\r\n                <NativeSelect \r\n                value={verticalAlign} \r\n                onChange={changeVerticalAlign}\r\n                    input={ <CustomInput /> } \r\n                >\r\n                    <option value=\"baseline\">None</option>\r\n                    <option value=\"sub\">Subscript</option>\r\n                    <option value=\"super\">Superscript</option>\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport Preview from \"../common/Preview\";\r\nimport { selectAllOnClick } from \"../helpers\";\r\n\r\nconst DistancesSection = (props) => {\r\n    const {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    } = props;\r\n    \r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Margin top</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginTop}\r\n                        onChange={changeMarginTop}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>Margin bottom</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginBottom}\r\n                        onChange={changeMarginBottom}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>1st row indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={firstRowIndent}\r\n                        onChange={changeFirstRowIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Other rows indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={otherRowsIndent}\r\n                        onChange={changeOtherRowsIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Line spacing</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        input={ <CustomInputShort /> } \r\n                        value={lineSpacing} \r\n                        onChange={changeLineSpacing} \r\n                    >\r\n                        <option value=\"1.0\">1.0</option>\r\n                        <option className=\"highlightedOption\" value=\"1.15\">1.15</option>\r\n                        <option value=\"1.5\">1.5</option>\r\n                        <option value=\"2.0\">2.0</option>\r\n                        <option value=\"2.5\">2.5</option>\r\n                        <option value=\"3.0\">3.0</option>\r\n                        <option value=\"custom\">Custom</option>\r\n                    </NativeSelect> \r\n                    {\r\n                    lineSpacing === \"custom\" && \r\n                    (\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={customLineSpacing}\r\n                            onChange={changeCustomLineSpacing}\r\n                        />                                            \r\n                    )\r\n                }\r\n                </div>\r\n                   \r\n                    \r\n                <span>Word spacing</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={wordSpacing}\r\n                        onChange={changeWordSpacing}\r\n                        onClick={selectAllOnClick(\"0\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistancesSection;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst FrameTypeInput = withStyles(theme => ({\r\n    root: {\r\n      width: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      fontFamily: [\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default FrameTypeInput;","import FramesSection from \"./FramesSection\";\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport FrameTypeInput from \"../../sections/FramesSection/FrameTypeInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport { getCorrectColor, selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst FramesSection = (props) => {\r\n    const { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n     } = props;\r\n\r\n     const correctColor = getCorrectColor(borderColor);\r\n     const previewBorderWidth = borderThickness && !isNaN(parseFloat(borderThickness))\r\n                                ? `${borderThickness <= 15 ? borderThickness : 15}pt`\r\n                                : \"0\";\r\n\r\n     const previewStyle = {\r\n         borderLeft: leftBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginLeft: leftBorder ? \"0\" : previewBorderWidth, \r\n         borderRight: rightBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginRight: rightBorder ? \"0\" : previewBorderWidth, \r\n         borderTop: topBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginTop: topBorder ? \"0\" : previewBorderWidth, \r\n         borderBottom: bottomBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginBottom: bottomBorder ? \"0\" : previewBorderWidth, \r\n     };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"directionControlsContainer\">\r\n                <div className=\"directionsControls\" style={previewStyle}>\r\n                    <span className=\"directionLabel\">Left</span>\r\n                    <div className=\"centralColumn\">\r\n                        <span className=\"directionLabel\">Top</span>\r\n                        <div className=\"checkboxesKit crossGrid\">\r\n                            <div id=\"r1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={topBorder}  \r\n                                    onChange={changeTopBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={leftBorder}  \r\n                                    onChange={changeLeftBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c2\" className=\"gridCell\">\r\n                            </div>\r\n                            <div id=\"r2c3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={rightBorder}  \r\n                                    onChange={changeRightBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={bottomBorder}  \r\n                                    onChange={changeBottomBorder}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"directionLabel\">Bottom</span>\r\n                    </div>\r\n                    <span className=\"directionLabel\">Right</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <span>Frame color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    value={borderColorName}\r\n                    onChange={changeBorderColorName}\r\n                    onClick={selectAllOnClick(\"Red\")}\r\n                />\r\n\r\n                <span>Frame color HEX</span>\r\n                <ColorField \r\n                    colorCode={borderColor} \r\n                    changeColorCode={changeBorderColor}\r\n                    required\r\n                />\r\n\r\n                <span>Frame thickness</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={borderThickness}\r\n                        onChange={changeBorderThickness}\r\n                        onClick={selectAllOnClick(\"2\")}\r\n                     />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>                        \r\n\r\n                <span>Type of frame</span>\r\n                <div >\r\n                    <Select\r\n                      input={<FrameTypeInput />}\r\n                      value={borderType}\r\n                      onChange={changeBorderType}\r\n                    >\r\n                        <MenuItem value=\"solid\"><b>━━━━</b></MenuItem>\r\n                        <MenuItem value=\"dotted\">• • • • • • •</MenuItem>\r\n                        <MenuItem value=\"dashed\"><b>– – – – –</b></MenuItem>\r\n                        <MenuItem value=\"double\">══════</MenuItem>              \r\n                    </Select>\r\n                </div>\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox color=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport Preview from \"../common/Preview\";\r\nimport ColorField from \"../common/ColorField\";\r\n\r\nconst  FillingSection = (props) => {\r\n    const { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n     } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Filling color name</span>\r\n                <div>\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        className=\"mediumTextField\" \r\n                        value={fillingColorName}\r\n                        onChange={changeFillingColorName}\r\n                    />\r\n                </div>\r\n\r\n                <span>Filling color HEX</span>\r\n                <ColorField \r\n                    colorCode={fillingColor} \r\n                    changeColorCode={changeFillingColor}\r\n                />\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox \r\n                        color=\"primary\" \r\n                        checked={connectToPrevious} \r\n                        onChange={changeConnectToPrevious} \r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FillingSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\n\r\nconst TocSection = ({ tocIndentation, changeTocIndentation }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>ToC indentation</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={tocIndentation}\r\n                    onChange={changeTocIndentation} \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>                    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TocSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst ShortCutSection = (props) => {\r\n    const {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Windows</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutWinView}\r\n                    onKeyDown={changeShortCutWin} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n\r\n            <span>Mac</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutMacView}\r\n                    onKeyDown={changeShortCutMac} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />     \r\n            </div>          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShortCutSection;","import React from \"react\";\r\n\r\nconst TypographySection = () => {\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: pink,\r\n    },\r\n});\r\n\r\nexport default theme;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomTab;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomErrorTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n      textDecoration: \"red underline\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n        textDecoration: \"indianred underline\",\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomErrorTab;","import Tabs from \"@material-ui/core/Tabs\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTabs = withStyles(theme => ({\r\n    indicator: {\r\n        backgroundColor: \"#1890ff\",\r\n        opacity: 0.5,\r\n        width: \"190px\",\r\n        zIndex: 5,\r\n        display: \"none\",\r\n      }\r\n  }))(Tabs);\r\n\r\n  export default CustomTabs;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst CustomDialog = withStyles(theme => ({\r\n    root: {\r\n        minWidth: \"1250px\",\r\n        minHeight: \"1100px !important\",\r\n        height: \"100%\",\r\n    },\r\n    container: {\r\n        height: \"100vh\",\r\n        display: \"block\",\r\n    },\r\n    scrollBody: {\r\n        \"&:after\": {\r\n            height: \"100%\",\r\n        }\r\n    },\r\n    paperFullWidth: {\r\n        maxWidth: \"1280px\",\r\n        maxHeight: \"850px\",\r\n        minHeight: \"550px\",\r\n        width: \"calc(100% - 96px)\",\r\n        height: \"calc(100% - 96px)\",\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        border: \"none\",\r\n    },\r\n    paperScrollBody: {\r\n        verticalAlign: \"middle\",\r\n    },\r\n  }))(Dialog);\r\n  \r\n  export default CustomDialog;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport NamesSection from \"./sections/NamesSection\";\r\nimport WordExportSection from \"./sections/WordExportSection\";\r\nimport PositioningSection from \"./sections/PositioningSection\";\r\nimport ListSection from \"./sections/ListSection\";\r\nimport ReferencingSection from \"./sections/ReferencingSection\";\r\nimport TypographySection from \"./sections/TypographySection\";\r\nimport DistancesSection from \"./sections/DistancesSection\";\r\nimport FramesSection from \"./sections/FramesSection\";\r\nimport FillingSection from \"./sections/FillingSection\";\r\nimport TocSection from \"./sections/TocSection\";\r\nimport ShortCutsSection from \"./sections/ShortCutsSection\";\r\nimport TestSection from \"./sections/TestSection\";\r\n\r\nimport theme from \"./theme\";\r\nimport Handlers from \"./Handlers\";\r\nimport CustomTab from \"./common/CustomTab\";\r\nimport CustomErrorTab from \"./common/CustomErrorTab\";\r\nimport CustomTabs from \"./common/CustomTabs\";\r\nimport CustomDialog from \"./common/CustomDialog\";\r\nimport { alignmentsMap, HOLDER } from \"./constants\";\r\n\r\nimport { \r\n    fillMissedFields, \r\n    DecDataParser, \r\n    getTabsErrorState,\r\n    getCorrectColor, \r\n    getUnstyledText,\r\n    getListChars, \r\n    getTabNumberToSwitch,\r\n    getPreviewFont,\r\n} from \"./helpers\";\r\n\r\nimport {\r\n    changeDecoratorForm, \r\n    clearDecoratorForm, \r\n    switchDecDialogTab, \r\n    updateValidationError, \r\n} from \"./actions\";\r\n\r\nimport { saveDecoratorForm } from \"../../actions\"\r\n\r\nimport \"./style.css\";\r\n\r\nconst NewDecDialog = props => {\r\n    const { \r\n        isOpen, \r\n        closeDialog, \r\n        clearForm, \r\n        saveForm,\r\n        updateForm, \r\n        formState, \r\n        openedTab,\r\n        validationError, \r\n        isEditMode,\r\n        switchTab,\r\n        updateValidationError,\r\n    } = props;\r\n\r\n    const onClose = () => {\r\n        closeDialog();\r\n        clearForm();\r\n    };\r\n\r\n    const onSaveButtonClick = () => {\r\n        const tabsErrorState = getTabsErrorState(formState)\r\n        if (tabsErrorState) {\r\n            updateValidationError(tabsErrorState);\r\n            switchTab(getTabNumberToSwitch(tabsErrorState));\r\n        } else {\r\n            const formToSave = DecDataParser.parseToSend(fillMissedFields(formState));\r\n            saveForm(formToSave);\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    const { \r\n        setStateProperty, \r\n        toggleStateProperty, \r\n        setNumber, \r\n        setColor, \r\n        setBullet, \r\n        setShortCut \r\n    } = Handlers(updateForm, formState);\r\n\r\n    const { \r\n        previewText,\r\n        isList,\r\n        listName,\r\n        orderLevel,\r\n        prefix,\r\n        suffix,\r\n        suffixDistance,\r\n        magicTabs,\r\n        listType,\r\n        listItem,\r\n        unicodeNumber,\r\n        unicodeChar,\r\n        numberingStyle,\r\n        continueNumbering,\r\n        allowRestartNumbering,\r\n        includePreviousFrom,\r\n        sideNumber,\r\n        sideNumberFont,\r\n        customSideNumberFont,\r\n        sideNumberAlignment,\r\n        sideNumberFontSize,\r\n        sideNumberFontColor,\r\n        sideNumberFillingColor,\r\n        sideNumberWidth,\r\n        sideNumberRadius,\r\n        referenceGroup,\r\n        referenceGroupToCreate,\r\n        font,\r\n        customFont,\r\n        alignment,\r\n        fontSize,\r\n        fontColorName,\r\n        fontColor,\r\n        bold,\r\n        italic,\r\n        underlined,\r\n        stroke,\r\n        textTransform,\r\n        verticalAlign,\r\n        marginTop,\r\n        marginBottom,\r\n        firstRowIndent,\r\n        otherRowsIndent,\r\n        lineSpacing,\r\n        customLineSpacing,\r\n        wordSpacing,   \r\n        leftBorder,\r\n        rightBorder,\r\n        topBorder,\r\n        bottomBorder,\r\n        borderColorName,\r\n        borderColor,\r\n        borderThickness,\r\n        borderType,\r\n        fillingColorName,\r\n        fillingColor,\r\n        connectToPrevious,\r\n        tocIndentation,\r\n        shortCutWinView,\r\n        shortCutMacView,\r\n    } = formState;\r\n    console.log(0);\r\n\r\n    const changeFont = setStateProperty(\"font\");\r\n    const changeCustomFont = setStateProperty(\"customFont\");\r\n    const changeAlignment = setStateProperty(\"alignment\");\r\n    const changeFontSize = setNumber(\"fontSize\");\r\n    const changeFontColorName = setStateProperty(\"fontColorName\");\r\n    const changeFontColor = setColor(\"fontColor\");\r\n    const changeBold = toggleStateProperty(\"bold\");\r\n    const changeItalic = toggleStateProperty(\"italic\");\r\n    const changeUnderlined = toggleStateProperty(\"underlined\");\r\n    const changeStroke = toggleStateProperty(\"stroke\");\r\n    const changeTextTransform = setStateProperty(\"textTransform\");\r\n    const changeVerticalAlign = setStateProperty(\"verticalAlign\");\r\n    const changeMarginTop = setNumber(\"marginTop\");\r\n    const changeMarginBottom = setNumber(\"marginBottom\");\r\n    const changeFirstRowIndent = setNumber(\"firstRowIndent\");\r\n    const changeOtherRowsIndent = setNumber(\"otherRowsIndent\");\r\n    const changeLineSpacing = setStateProperty(\"lineSpacing\");\r\n    const changeCustomLineSpacing = setNumber(\"customLineSpacing\");\r\n    const changeWordSpacing = setNumber(\"wordSpacing\");\r\n    const changeLeftBorder = toggleStateProperty(\"leftBorder\");\r\n    const changeRightBorder = toggleStateProperty(\"rightBorder\");\r\n    const changeTopBorder = toggleStateProperty(\"topBorder\");\r\n    const changeBottomBorder = toggleStateProperty(\"bottomBorder\");\r\n    const changeBorderColorName = setStateProperty(\"borderColorName\");\r\n    const changeBorderColor = setColor(\"borderColor\");\r\n    const changeBorderThickness = setNumber(\"borderThickness\");\r\n    const changeFillingColorName = setStateProperty(\"fillingColorName\");\r\n    const changeFillingColor = setColor(\"fillingColor\");\r\n    const changeConnectToPrevious = toggleStateProperty(\"connectToPrevious\");\r\n    const changeTocIndentation = setStateProperty(\"tocIndentation\");\r\n    const changeShortCutWin = setShortCut(\"shortCutWin\", \"shortCutWinView\");\r\n    const changeShortCutMac = setShortCut(\"shortCutMac\", \"shortCutMacView\", true);\r\n\r\n    const changePreviewText = e => {\r\n        const { value } = e.target;\r\n        if (value && value !== \"<div></div>\" && value !== \"<br>\") {\r\n            setStateProperty(\"previewText\")(null, getUnstyledText(value));\r\n        } else {\r\n            setStateProperty(\"previewText\")(null, `<div><br></div>`);\r\n        }\r\n    };\r\n\r\n    const changeBorderType = e => {\r\n        setStateProperty(\"borderType\")(e);\r\n        if (e.target.value === \"double\" && borderThickness === \"2\") {\r\n            setStateProperty(\"borderThickness\")(null, \"3\");\r\n        }\r\n        if (e.target.value !== \"double\" && borderThickness === \"3\") {\r\n            setStateProperty(\"borderThickness\")(null, \"2\");\r\n        }\r\n    };\r\n\r\n    const previewFontColor = getCorrectColor(fontColor, \"f5f5f5\");\r\n    const previewFillingColor = getCorrectColor(fillingColor, \"f5f5f5\");\r\n    const previewAdditionalFillingColor = connectToPrevious ? previewFillingColor : \"f5f5f5\";\r\n    const indentsDifference = (firstRowIndent || 0) - (otherRowsIndent || 0);\r\n    const previewMarginLeft = otherRowsIndent ? `${otherRowsIndent >= 12 ? 12 : otherRowsIndent}cm` : 0;\r\n    const previewTextIndent = indentsDifference ? `${indentsDifference >= 12 ? 12 : indentsDifference}cm` : 0;\r\n\r\n    const previewStyle = {\r\n        fontSize: !fontSize ? \"0\" : `${fontSize <= 120 ? fontSize : 120}pt`,\r\n        color: `#${previewFontColor}`,\r\n        fontFamily: getPreviewFont(font, customFont),\r\n        alignItems: alignmentsMap[alignment],\r\n        textAlign: alignment,\r\n        fontWeight: bold ? \"bold\" : \"normal\",\r\n        fontStyle: italic ? \"italic\" : \"normal\",\r\n        textDecoration: `${underlined ? \"underline\" : \"\"}${stroke ? \" line-through\" : \"\"}`.trim() || \"none\",\r\n        verticalAlign,\r\n        textTransform: textTransform !== \"small-caps\" ? textTransform : \"none\",\r\n        fontVariant: textTransform === \"small-caps\" ? textTransform : \"normal\",\r\n        backgroundColor: `#${previewFillingColor}`,\r\n        backgroundImage:  `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        marginLeft: previewMarginLeft,\r\n        textIndent: previewTextIndent,\r\n        wordSpacing: `${wordSpacing || 0}pt`,\r\n        lineHeight: (lineSpacing !== \"custom\" ? lineSpacing : (!customLineSpacing ? \"1.15\" : `${customLineSpacing || 0}`)),\r\n        marginBottom: `${marginBottom || 0}pt`,\r\n        marginTop: `${marginTop || 0}pt`,\r\n    };\r\n\r\n    const previewProps = { previewText, changePreviewText, previewStyle };\r\n\r\n    const previewSideNumberFontColor = getCorrectColor(sideNumberFontColor, \"f5f5f5\");\r\n    const previewSideNumberFillingColor = getCorrectColor(sideNumberFillingColor, \"f5f5f5\");\r\n\r\n    const sideNumberStyle = (!sideNumber || listType === \"unordered\") ? {} : {\r\n        fontFamily: getPreviewFont(sideNumberFont, customSideNumberFont),\r\n        textAlign: sideNumberAlignment,\r\n        fontSize: !sideNumberFontSize ? \"0\" : `${sideNumberFontSize <= 120 ? sideNumberFontSize : 120}pt`,\r\n        color: `#${previewSideNumberFontColor}`,\r\n        backgroundColor: `#${previewSideNumberFillingColor}`,\r\n        minWidth: `${sideNumberWidth || 0}pt`,\r\n        borderRadius: `${sideNumberRadius || 0}pt`,\r\n    };\r\n\r\n    const listPreviewProps = { \r\n        listChars: getListChars({\r\n                isOrderedList: listType === \"ordered\", \r\n                numberingStyle, \r\n                listItem,\r\n                unicodeChar,\r\n            }),\r\n        listPreviewStyle: previewStyle,\r\n        prefix, \r\n        suffix, \r\n        suffixDistance,\r\n        sideNumberStyle,\r\n    };\r\n\r\n    const listSectionProps = { \r\n        listPreviewProps,\r\n    };\r\n\r\n    //const referencingSectionProps = {\r\n    //    referenceGroup, changeReferenceGroup,\r\n    //    savedNewGroup: referenceGroupToCreate, \r\n    //    changeReferenceGroupToCreate,\r\n    //};\r\n\r\n    const typographySectionProps = { \r\n        previewProps,\r\n        font, changeFont,\r\n        customFont, changeCustomFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    };\r\n\r\n    const distancesSectionProps = {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    };\r\n\r\n    const framesSectionProps = { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n    };\r\n\r\n    const fillingSectionProps = { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n    };\r\n\r\n    const tocSectionProps = {\r\n        tocIndentation, changeTocIndentation,\r\n    };\r\n\r\n    const shortCutsSectionProps = {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    };\r\n        \r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CustomDialog\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                scroll=\"body\"\r\n                className=\"paragraphDecorators-dialog\"\r\n                fullWidth={true}\r\n                maxWidth={false}\r\n                id=\"dialog\"\r\n            >\r\n                <div className=\"header\">\r\n                    <DialogTitle className=\"header-title\">\r\n                        <p>Create new paragraph decorator</p>\r\n                    </DialogTitle>\r\n                    <div className=\"header-buttons\">\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            onClick={onClose}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={onSaveButtonClick}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            {isEditMode ? \"Save\" : \"Create\"}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <DialogContent className=\"content\">\r\n                    <div className=\"content-leftSide\">\r\n                        <CustomTabs \r\n                            className=\"dialogTabs\"\r\n                            value={openedTab} \r\n                            onChange={(e, tabNumber) => { switchTab(tabNumber) }} \r\n                            orientation=\"vertical\"\r\n                            color=\"primary\"\r\n                            indicatorColor=\"primary\"\r\n                        >\r\n                            { validationError.namesSection \r\n                                ? ( <CustomErrorTab className=\"dialogTab\" label=\"Names\" /> )\r\n                                :  ( <CustomTab className=\"dialogTab\" label=\"Names\" /> ) }\r\n\r\n                            { validationError.wordExportSection \r\n                                ? ( <CustomErrorTab className=\"dialogTab\" label=\"WORD export\" /> ) \r\n                                : ( <CustomTab className=\"dialogTab\" label=\"WORD export\" /> ) }\r\n\r\n                            <CustomTab className=\"dialogTab\" label=\"Positioning\" />\r\n\r\n                            { validationError.listSection \r\n                                ? ( <CustomErrorTab className=\"dialogTab\" label=\"List\" /> ) \r\n                                : ( <CustomTab className=\"dialogTab\" label=\"List\" /> ) }\r\n\r\n                            <CustomTab className=\"dialogTab\" label=\"Referencing\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Typography\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Distances\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Frames\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Filling\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"ToC\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Short cuts\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Test\" />\r\n                        </CustomTabs>\r\n                    </div>\r\n                    <div className=\"content-rightSide\">\r\n                        { openedTab === 0 && <NamesSection /> }\r\n                        { openedTab === 1 && <WordExportSection /> }\r\n                        { openedTab === 2 && <PositioningSection /> }\r\n                        { openedTab === 3 && <ListSection {...listSectionProps} /> }\r\n                        { openedTab === 4 && <ReferencingSection /> }\r\n                        { openedTab === 5 && <TypographySection {...typographySectionProps} /> }\r\n                        { openedTab === 6 && <DistancesSection {...distancesSectionProps} /> }\r\n                        { openedTab === 7 && <FramesSection {...framesSectionProps} /> }\r\n                        { openedTab === 8 && <FillingSection {...fillingSectionProps} /> }\r\n                        { openedTab === 9 && <TocSection {...tocSectionProps} /> }\r\n                        { openedTab === 10 && <ShortCutsSection {...shortCutsSectionProps} /> }\r\n                        { openedTab === 11 && <TestSection {...typographySectionProps} /> }\r\n                    </div>\r\n                </DialogContent>\r\n            </CustomDialog>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, openedTab, validationError, isEditMode }}) => {\r\n    return { \r\n        formState: form,\r\n        openedTab,\r\n        validationError, \r\n        isEditMode,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(changeDecoratorForm(payload)),\r\n        clearForm: () => dispatch(clearDecoratorForm()),\r\n        switchTab: payload => dispatch(switchDecDialogTab(payload)),\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        saveForm: payload => dispatch(saveDecoratorForm(payload)),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewDecDialog);","export const SAVE_DEC_FORM = \"SAVE_DEC_FORM\";\r\nexport const CLEAR_SAVED_DEC_FORM = \"CLEAR_SAVED_DEC_FORM\";\r\n\r\nexport const saveDecoratorForm = payload => {\r\n    return {\r\n        type: SAVE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearSavedDecoratorForm = () => {\r\n    return {\r\n        type: CLEAR_SAVED_DEC_FORM,\r\n    };\r\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport NewDecDialog from \"./components/NewDecDialog\";\nimport { openDialog, closeDialog } from \"./components/NewDecDialog/actions\";\nimport { clearSavedDecoratorForm } from \"./actions\";\nimport { DecDataParser } from \"./components/NewDecDialog/helpers\";\nimport theme from \"./components/NewDecDialog/theme\";\n\nimport \"./App.css\";\n\nconst App = props => {\n    const { isOpen, openDialog, closeDialog, savedForm, clearSavedForm } = props;\n\n    const openEditDialog = () => {\n        openDialog(DecDataParser.parseToEdit(savedForm || {}));\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"App\">\n                <div className=\"startButtons\">\n                    { !savedForm ? (\n                        <Button \n                            onClick={() => openDialog()}\n                            color=\"primary\"\n                        >Create new</Button>\n                    ) : (\n                        <>\n                            <Button \n                                onClick={() => openEditDialog()}\n                            >Edit saved</Button>\n                            <Button \n                                onClick={clearSavedForm}\n                                color=\"secondary\"\n                            >Delete saved</Button>\n                        </>\n                    )}\n                </div>\n                <NewDecDialog { ...{isOpen, closeDialog}} />\n            </div>\n        </ThemeProvider>\n    );\n};\n\nconst mapStateToProps = ({ savedForm, decoratorDialog: { isOpen }}) => {\n    return { isOpen, savedForm };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        openDialog: openDialog(dispatch),\n        closeDialog: closeDialog(dispatch),\n        clearSavedForm: () => dispatch(clearSavedDecoratorForm()),\n    };\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { SHOW_DEC_DIALOG, HIDE_DEC_DIALOG } from \"../../components/NewDecDialog/actions\";\r\n\r\nconst isOpenReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case SHOW_DEC_DIALOG:\r\n            return true;\r\n        case HIDE_DEC_DIALOG:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isOpenReducer;","import { CHANGE_DEC_FORM, CLEAR_DEC_FORM } from \"../../components/NewDecDialog/actions\";\r\nimport getInitialState from \"../../components/NewDecDialog/getInitialState\";\r\n\r\nconst initialState = getInitialState();\r\n\r\nconst decoratorFormReducer = (state = initialState, action) =>  {\r\n    switch (action.type) {\r\n        case CHANGE_DEC_FORM:\r\n            return { ...state, ...action.payload };\r\n        case CLEAR_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default decoratorFormReducer;","import { sampleText, emptyDecFormState } from \"./constants\";\r\n\r\nconst getInitialState = (currentDecFormState = {}) => {\r\n    return { \r\n        previewText: sampleText,\r\n        ...emptyDecFormState,\r\n        ...currentDecFormState,\r\n    };\r\n};\r\n\r\nexport default getInitialState;","import { \r\n    UPDATE_VALIDATION_ERROR, \r\n    REMOVE_VALIDATION_ERROR, \r\n} from \"../../components/NewDecDialog/actions\";\r\n\r\nimport { tabsErrorInitialState } from \"../../components/NewDecDialog/constants\";\r\n\r\nconst validationErrorReducer = (state = tabsErrorInitialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_VALIDATION_ERROR:\r\n            return { ...state, ...action.payload };\r\n        case REMOVE_VALIDATION_ERROR:\r\n            return tabsErrorInitialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default validationErrorReducer;","import { \r\n    SWITCH_ON_DEC_DIALOG_EDIT_MODE, \r\n    SWITCH_OFF_DEC_DIALOG_EDIT_MODE, \r\n} from \"../../components/NewDecDialog/actions\";\r\n\r\nconst isEditModeReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_ON_DEC_DIALOG_EDIT_MODE:\r\n            return true;\r\n        case SWITCH_OFF_DEC_DIALOG_EDIT_MODE:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isEditModeReducer;","import { \r\n    SWITCH_DEC_DIALOG_TAB,\r\n    RESET_DEC_DIALOG_TAB, \r\n} from \"../../components/NewDecDialog/actions\";\r\n\r\nconst initialState = 0;\r\n\r\nconst openedTabReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_DEC_DIALOG_TAB:\r\n            return action.payload;\r\n        case RESET_DEC_DIALOG_TAB:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default openedTabReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport isOpenReducer from \"./isOpenReducer\";\r\nimport decoratorFormReducer from \"./decoratorFormReducer\";\r\nimport validationErrorReducer from \"./validationErrorReducer\";\r\nimport isEditModeReducer from \"./isEditModeReducer\";\r\nimport openedTabReducer from \"./openedTabReducer\";\r\n\r\nconst decoratorDialogReducer = combineReducers({\r\n    isOpen: isOpenReducer,\r\n    openedTab: openedTabReducer,\r\n    validationError: validationErrorReducer,\r\n    isEditMode: isEditModeReducer,\r\n    form: decoratorFormReducer,\r\n});\r\n\r\nexport default decoratorDialogReducer;","import { SAVE_DEC_FORM, CLEAR_SAVED_DEC_FORM } from \"../actions\";\r\n\r\nconst initialState = null;\r\n\r\nexport const savedFormReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SAVE_DEC_FORM:\r\n            return action.payload;\r\n        case CLEAR_SAVED_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default savedFormReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport decoratorDialogReducer from \"./decoratorDialogReducer\";\r\nimport savedFormReducer from \"./savedFormReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    decoratorDialog: decoratorDialogReducer,\r\n    savedForm: savedFormReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}