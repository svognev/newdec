{"version":3,"sources":["components/NewDecDialog/common/CustomInput.js","components/NewDecDialog/common/NewGroupDialog.js","components/NewDecDialog/hoc/withNewGroupControl.js","components/NewDecDialog/sections/NamesSection.js","components/NewDecDialog/sections/WordExportSection.js","components/NewDecDialog/common/CustomInputShort.js","components/NewDecDialog/constants.js","components/NewDecDialog/sections/PositioningSection/BackSpaceActionInput.js","components/NewDecDialog/sections/PositioningSection/index.js","components/NewDecDialog/sections/PositioningSection/PositioningSection.js","components/NewDecDialog/common/Preview/ListPreview.js","components/NewDecDialog/utils/utils.js","components/NewDecDialog/common/ColorField/index.js","components/NewDecDialog/common/ColorField/ColorField.js","components/NewDecDialog/sections/ListSection.js","components/NewDecDialog/sections/ReferencingSection.js","components/NewDecDialog/common/ContentEditable.js","components/NewDecDialog/common/Preview/Preview.js","components/NewDecDialog/common/Preview/index.js","components/NewDecDialog/sections/TypographySection/index.js","components/NewDecDialog/sections/TypographySection/TypographySection.js","components/NewDecDialog/sections/DistancesSection.js","components/NewDecDialog/sections/FramesSection/FrameTypeInput.js","components/NewDecDialog/sections/FramesSection/index.js","components/NewDecDialog/sections/FramesSection/FramesSection.js","components/NewDecDialog/sections/FillingSection.js","components/NewDecDialog/sections/TocSection.js","components/NewDecDialog/sections/ShortCutsSection.js","components/NewDecDialog/sections/TestSection.js","components/NewDecDialog/utils/getShortCutUtils.js","components/NewDecDialog/Handlers.js","components/NewDecDialog/theme.js","components/NewDecDialog/common/CustomTab.js","components/NewDecDialog/common/CustomTabs.js","components/NewDecDialog/common/CustomDialog.js","components/NewDecDialog/index.js","components/NewDecDialog/actions/index.js","App.js","components/NewDecDialog/initialState.js","reducers/decoratorFormReducer.js","store.js","serviceWorker.js","index.js"],"names":["CustomInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","minWidth","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","NewGroupDialog","state","props","currentGroup","groupType","nameEn","nameDe","nameRu","nameFr","nameFrCa","nameEs","groupKey","onInputChange","inputName","e","setState","target","value","onClose","hideDialog","onGroupSave","onSave","changeGroupSelect","trim","length","groupToSave","this","isOpen","isEditMode","titleText","buttonText","Dialog","className","open","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","variant","margin","onChange","DialogActions","Button","onClick","color","React","Component","withNewGroupControl","ViewComponent","groupSelect","newGroup","handleClick","newValue","decKey","changeDecKey","group","changeGroup","active","changeActive","styleNameEn","changeStyleNameEn","styleNameDe","changeStyleNameDe","styleNameRu","changeStyleNameRu","styleNameFr","changeStyleNameFr","styleNameFrCa","changeStyleNameFrCa","styleNameEs","changeStyleNameEs","changeGroupToCreate","newGroupName","onGroupChange","args","NativeSelect","Checkbox","checked","WordExportSection","wordStyleName","changeWordStyleName","softReturn","changeSoftReturn","CustomInputShort","listStyleType","name","backSpaceActions","key","returnOnEmptySectionActions","decoratorsList","alignmentsMap","center","left","right","justify","numberingSets","decimal","bulletNamesMap","bulletpoint","dash","star","BackSpaceActionInput","width","PositioningSection","indentationalLevel","changeIndentationalLevel","backspaceActionWithContent","changeBackspaceActionWithContent","backspaceActionWithContentStyle","changeBackspaceActionWithContentStyle","backspaceActionWithoutContent","changeBackspaceActionWithoutContent","backspaceActionWithoutContentStyle","changeBackspaceActionWithoutContentStyle","returnActionNextSection","changeReturnActionNextSection","returnActionEmptySection","changeReturnActionEmptySection","tabAction","changeTabAction","shiftTabAction","changeShiftTabAction","id","map","action","dec","ListPreview","listPreviewStyle","listChars","prefix","suffix","suffixDistance","sideNumberStyle","listItemsBeginnings","listChar","listItemBeginingStyle","marginRight","style","getCorrectColor","hex","correctColor","selectAllOnClick","defaultValue","focus","select","getOffset","alignType","parseFloat","slice","scrollToBottom","setTimeout","document","getElementsByClassName","scrollTo","top","Number","MAX_SAFE_INTEGER","behavior","getListChars","isOrderedList","numberingStyle","listItem","unicodeChar","newBullet","Array","fill","ColorField","hideColorPicker","showColorPicker","colorPickerHandler","changeColor","colorCode","changeColorCode","defaultColorCode","required","bottomAligned","colorError","inputError","pickerColor","colorSampleStyle","colorPickerClassName","InputProps","startAdornment","InputAdornment","error","onChangeComplete","disableAlpha","ListSection","listPreviewProps","isList","changeIsList","listName","changeListName","orderLevel","changeOrderLevel","changePrefix","changeSuffix","changeSuffixDistance","magicTabs","changeMagicTabs","listType","changeListType","changeListItem","unicodeNumber","changeUnicodeNumber","changeUnicodeChar","changeNumberingStyle","continueNumbering","changeContinueNumbering","allowRestartNumbering","changeAllowRestartNumbering","includePreviousFrom","changeIncludePreviousFrom","sideNumber","changeSideNumber","sideNumberFont","changeSideNumberFont","sideNumberAlignment","changeSideNumberAlignment","sideNumberFontSize","changeSideNumberFontSize","sideNumberFontColor","changeSideNumberFontColor","sideNumberFillingColor","changeSideNumberFillingColor","sideNumberWidth","changeSideNumberWidth","sideNumberRadius","changeSideNumberRadius","Object","entries","referenceGroup","changeReferenceGroup","changeReferenceGroupToCreate","onXrefChange","xref","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","q","propertyIsEnumerable","normalizeHtml","str","replace","replaceCaret","el","findLastTextNode","node","nodeType","Node","TEXT_NODE","children","childNodes","textNode","isTargetFocused","activeElement","nodeValue","sel","window","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","ContentEditable","arguments","lastHtml","html","innerRef","current","getEl","emitChange","originalEvt","innerHTML","evt","assign","_a","tagName","ref","onInput","onBlur","onKeyUp","onKeyDown","contentEditable","disabled","dangerouslySetInnerHTML","__html","nextProps","deepEqual","Preview","previewText","changePreviewText","previewStyle","verticalAlign","editableContentStyle","outline","marginBottom","selectAllChildren","TypographySection","previewProps","font","changeFont","alignment","changeAlignment","changeFontSize","fontColorName","changeFontColorName","fontColor","changeFontColor","bold","changeBold","italic","changeItalic","underlined","changeUnderlined","stroke","changeStroke","textTransform","changeTextTransform","changeVerticalAlign","FormControlLabel","control","label","labelPlacement","RadioGroup","row","Radio","DistancesSection","changeMarginTop","changeMarginBottom","firstRowIndent","changeFirstRowIndent","otherRowsIndent","changeOtherRowsIndent","lineSpacing","changeLineSpacing","customLineSpacing","changeCustomLineSpacing","wordSpacing","changeWordSpacing","FrameTypeInput","FramesSection","leftBorder","changeLeftBorder","rightBorder","changeRightBorder","topBorder","changeTopBorder","bottomBorder","changeBottomBorder","borderColorName","changeBorderColorName","changeBorderColor","borderThickness","changeBorderThickness","borderType","changeBorderType","previewBorderWidth","isNaN","borderLeft","marginLeft","borderRight","borderTop","borderBottom","Select","MenuItem","FillingSection","fillingColorName","changeFillingColorName","fillingColor","changeFillingColor","connectToPrevious","changeConnectToPrevious","TocSection","tocIndentation","changeTocIndentation","ShortCutSection","shortCutWinView","changeShortCutWin","shortCutMacView","changeShortCutMac","getShortCutUtils","systemName","keyCode","preventDefault","stopPropagation","ShortcutUtils","isDeadKey","prevent","deleteKey","shortCut","ctrlKey","shiftKey","altKey","metaKey","shortCutForView","convertShortcutToMeta","isCmdPressed","stringValue","keys","CMD_KEYS","forEach","keycode","removeDuplicateShortcuts","decorators","newPdShortcut","removed","decoratorKey","item","item_type","isEqual","keyboard_shortcut","childItems","child_items","itemKey","removeDuplicateShortcutsInInlineStyle","inlineStyles","styleKey","Handlers","update","formState","toggleStateProperty","propName","setStateProperty","secondArg","undefined","setBullet","setColor","filteredInput","match","setNumber","setShortCut","valuePropName","viewPropName","isMac","convertEventToShortCut","createMuiTheme","primary","blue","secondary","pink","CustomTab","overflow","opacity","selected","Tab","CustomTabs","indicator","zIndex","display","Tabs","CustomDialog","minHeight","height","container","scrollBody","paperFullWidth","maxHeight","flexDirection","paperScrollBody","connect","dispatch","updateForm","payload","type","changeDecoratorForm","openedTab","groupToCreate","referenceGroupToCreate","changeOpenedTab","previewFontColor","previewFillingColor","previewAdditionalFillingColor","indentsDifference","previewMarginLeft","previewTextIndent","alignItems","textAlign","fontWeight","fontStyle","textDecoration","fontVariant","backgroundImage","textIndent","lineHeight","styledText","unstyledText","getUnstyledText","previewSideNumberFontColor","previewSideNumberFillingColor","namesSectionProps","wordExportProps","positioningSectionProps","listSectionProps","newUnicodeNumber","newUnicodeChar","String","fromCharCode","parseInt","unicodeNumberToChar","charCodeAt","toString","unicodeCharToNumber","referencingSectionProps","typographySectionProps","distancesSectionProps","framesSectionProps","fillingSectionProps","tocSectionProps","shortCutsSectionProps","ThemeProvider","aria-labelledby","scroll","orientation","indicatorColor","ShortCutsSection","TestSection","App","clearForm","initialState","shortCutWin","shortCutMac","decoratorFormReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8fc83a63.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInput = withStyles(theme => ({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      minWidth: \"183px\",\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInput;","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass NewGroupDialog extends React.Component {\r\n\r\n    state = this.props.currentGroup \r\n          ? this.props.currentGroup \r\n          : this.props.groupType !== \"xref\" \r\n          ? { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", }\r\n          : { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", groupKey: \"\", };\r\n    \r\n    onInputChange = inputName => e => {\r\n        this.setState({ \r\n            [inputName]: e.target.value \r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        const {currentGroup, hideDialog } = this.props;\r\n        this.setState({ ...currentGroup });\r\n        hideDialog()\r\n    };\r\n\r\n    onGroupSave = () => {\r\n        const { onSave, changeGroupSelect, hideDialog, groupType } = this.props;\r\n        if (this.state.nameEn.trim().length && (groupType !== \"xref\" || this.state.groupKey.trim().length)) {\r\n            const groupToSave = {\r\n                nameEn: this.state.nameEn.trim(),\r\n                nameDe: this.state.nameDe.trim(),\r\n                nameRu: this.state.nameRu.trim(),\r\n                nameFr: this.state.nameFr.trim(),\r\n                nameFrCa: this.state.nameFrCa.trim(),\r\n                nameEs: this.state.nameEs.trim(),\r\n            };\r\n            if (groupType === \"xref\") {\r\n                groupToSave.groupKey = this.state.groupKey.trim();\r\n            }\r\n            onSave(groupToSave);\r\n            changeGroupSelect(groupToSave)(null, this.state.nameEn.trim());\r\n            hideDialog();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isOpen, isEditMode } = this.props;\r\n        const { onInputChange, onGroupSave, onClose } = this;\r\n        const titleText = `${isEditMode ? \"Edit\" : \"Create\"} new ${this.props.groupType === \"xref\" ? \"reference \" : \"\"}group`\r\n        const buttonText = isEditMode ? \"Save\" : \"Create\";\r\n        return (\r\n            <Dialog\r\n                className=\"paragraphDecorators-dialog\"\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <DialogTitle>{titleText}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        {\r\n                            this.props.groupType === \"xref\" \r\n                            &&\r\n                            <>\r\n                                <span>Group Key</span>\r\n                                <TextField \r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                    onChange={onInputChange(\"groupKey\")}\r\n                                    value={this.state.groupKey}\r\n                                />\r\n                            </>\r\n                        }\r\n                        <span>Name EN</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEn\")}\r\n                            value={this.state.nameEn}\r\n                        />\r\n                        <span>Name DE</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameDe\")} \r\n                            value={this.state.nameDe}\r\n                        />                        \r\n                        <span>Name RU</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameRu\")} \r\n                            value={this.state.nameRu}\r\n                        />                        \r\n                        <span>Name FR<br/><span className=\"span_smallText\">France</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFr\")} \r\n                            value={this.state.nameFr}\r\n                        />\r\n                        <span>Name FR<br/><span className=\"span_smallText\">Canada</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFrCa\")} \r\n                            value={this.state.nameFrCa}\r\n                        />\r\n                        <span>Name ES</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEs\")} \r\n                            value={this.state.nameEs}\r\n                        />                  \r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color=\"default\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={onGroupSave} color=\"primary\">\r\n                        {buttonText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n};\r\n\r\nexport default NewGroupDialog;","import React from \"react\";\r\n\r\nconst withNewGroupControl = (ViewComponent) => {\r\n    return class extends React.Component {\r\n        state = {\r\n            isOpen: false,\r\n            groupSelect: \"\",\r\n            newGroup: this.props.newGroup || \"\",\r\n        }\r\n        \r\n        handleClick = () => {\r\n            this.setState(({ isOpen }) => {\r\n                return {\r\n                    isOpen: !isOpen\r\n                };\r\n            });\r\n        }\r\n    \r\n        onSave = newGroup => {\r\n            this.setState({ newGroup });\r\n        }\r\n    \r\n        changeGroupSelect = (newValue) => {\r\n            this.setState({\r\n                groupSelect: newValue,\r\n            });\r\n        }\r\n\r\n        hideDialog = () => {\r\n            this.setState({ isOpen: false });\r\n        }\r\n        \r\n        render() {\r\n            const { handleClick, onSave, changeGroupSelect, hideDialog } = this; \r\n            return ( <ViewComponent {...this.props} {...this.state} {...{ handleClick, onSave, changeGroupSelect, hideDialog }} /> );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withNewGroupControl;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\n\r\nconst NamesSection = (props) => {\r\n    const { \r\n        newGroup, \r\n        isOpen, \r\n        hideDialog, \r\n        handleClick, \r\n        onSave, \r\n        decKey, changeDecKey,\r\n        group, changeGroup,\r\n        active, changeActive,\r\n        styleNameEn, changeStyleNameEn,\r\n        styleNameDe, changeStyleNameDe,\r\n        styleNameRu, changeStyleNameRu,\r\n        styleNameFr, changeStyleNameFr,\r\n        styleNameFrCa, changeStyleNameFrCa,\r\n        styleNameEs, changeStyleNameEs,\r\n        changeGroupToCreate,\r\n    } = props;\r\n    \r\n    const newGroupName = newGroup.nameEn;\r\n    const isEditMode = !!newGroupName;\r\n\r\n    const onGroupChange = group => (...args) => {\r\n        const value = args[0] ? args[0].target.value : args[1];\r\n        if (group.nameEn && value === group.nameEn) {\r\n            changeGroupToCreate(null, group);\r\n        } else {\r\n            changeGroupToCreate(null, \"\");\r\n        }\r\n        changeGroup(...args);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n            <span>Key</span>\r\n            <TextField \r\n                value={decKey}\r\n                onChange={changeDecKey}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Group</span>\r\n            <div>\r\n                <NativeSelect \r\n                    value={group} \r\n                    onChange={onGroupChange(newGroup)}\r\n                    input={ <CustomInput /> }  \r\n                >\r\n                    <option value=\"\">...</option>\r\n                    { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                    <option value=\"0\">Text</option>\r\n                    <option value=\"1\">Heading</option>\r\n                    <option value=\"2\">Heading Heading Heading Heading</option>\r\n                </NativeSelect>\r\n                { !(isEditMode && group !== newGroupName) && (\r\n                    <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                        { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                    </Button>\r\n                ) }\r\n            </div>\r\n\r\n            <span>Active</span>\r\n            <div>\r\n                <Checkbox\r\n                    checked={active}\r\n                    onChange={changeActive} \r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n\r\n            <span>Name EN</span>\r\n            <TextField \r\n                value={styleNameEn}\r\n                onChange={changeStyleNameEn}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name DE</span>\r\n            <TextField \r\n                value={styleNameDe}\r\n                onChange={changeStyleNameDe}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name RU</span>\r\n            <TextField \r\n                value={styleNameRu}\r\n                onChange={changeStyleNameRu}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name FR<br/><span className=\"span_smallText\">France</span></span>\r\n            <TextField \r\n                value={styleNameFr}\r\n                onChange={changeStyleNameFr}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name FR<br/><span className=\"span_smallText\">Canada</span></span>\r\n            <TextField \r\n                value={styleNameFrCa}\r\n                onChange={changeStyleNameFrCa}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name ES</span>\r\n            <TextField \r\n                value={styleNameEs}\r\n                onChange={changeStyleNameEs}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n\r\n            <NewGroupDialog \r\n                isOpen={isOpen}\r\n                hideDialog={hideDialog}\r\n                onSave={onSave}\r\n                isEditMode={isEditMode}\r\n                currentGroup={newGroup}\r\n                changeGroupSelect={onGroupChange}\r\n                groupType=\"decorators\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withNewGroupControl(NamesSection);","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst WordExportSection = ({ wordStyleName, changeWordStyleName, softReturn, changeSoftReturn }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Style name in WORD</span>\r\n            <TextField \r\n                value={wordStyleName}\r\n                onChange={changeWordStyleName}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n            \r\n            <span>Soft return</span>\r\n            <div>\r\n                <Checkbox \r\n                    checked={softReturn}\r\n                    onChange={changeSoftReturn}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WordExportSection;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInputShort = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInputShort;","export const listStyleType = [\r\n  {\r\n    name: '1, 2, 3',\r\n    value: 'decimal',\r\n  },\r\n  {\r\n    name: 'A, B, C',\r\n    value: 'upper-alpha',\r\n  },\r\n  {\r\n    name: 'a, b, c',\r\n    value: 'lower-alpha',\r\n  },\r\n  {\r\n    name: 'I, II, III',\r\n    value: 'upper-roman',\r\n  },\r\n  {\r\n    name: 'i, ii, iii',\r\n    value: 'lower-roman',\r\n  },\r\n];\r\n\r\nexport const backSpaceActions = [\r\n  { key: 'merge', value: 'Merge' },\r\n  { key: 'apply_other_pd', value: 'Apply other PD' },\r\n  { key: 'remove_pd', value: 'Remove PD' },\r\n  { key: 'nothing', value: 'Nothing' }\r\n];\r\n\r\nexport const returnOnEmptySectionActions = [\r\n  { key: 'apply_other_pd', value: 'Apply other PD' },\r\n  { key: 'create_new_section', value: 'Create new section' },\r\n  { key: 'apply_default_pd', value: 'Apply default PD' },\r\n  { key: 'nothing', value: 'Nothing' }\r\n];\r\n\r\nexport const decoratorsList = [\r\n    { name: \"...\", value: \"\" },\r\n    { name: \"Text 0\", value: \"quick_text_0\" },\r\n    { name: \"Text 1\", value: \"quick_text_1\" },\r\n    { name: \"Text 2\", value: \"quick_text_2\" },\r\n    { name: \"Text 3\", value: \"quick_text_3\" },\r\n    { name: \"Text 4\", value: \"quick_text_4\" },\r\n    { name: \"Text 5\", value: \"quick_text_5\" },\r\n];\r\n\r\nexport const alignmentsMap = {\r\n  center: \"center\",\r\n  left: \"flex-start\",\r\n  right: \"flex-end\",\r\n  justify: \"flex-start\",\r\n};\r\n\r\nexport const numberingSets = {\r\n  decimal: [\"1\", \"2\", \"3\", \"4\"],\r\n  \"upper-alpha\": [\"A\", \"B\", \"C\", \"D\"],\r\n  \"lower-alpha\": [\"a\", \"b\", \"c\", \"d\"],\r\n  \"upper-roman\": [\"I\", \"II\", \"III\", \"IV\"],\r\n  \"lower-roman\": [\"i\", \"ii\", \"iii\", \"iv\"],\r\n};\r\n\r\nexport const bulletNamesMap = {\r\n  bulletpoint: \"•\",\r\n  dash: \"—\",\r\n  star: \"★\",\r\n};\r\n\r\nexport const sampleText = `<div>Sample Text. You can change it.</div><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ornare maximus vehicula. Duis nisi velit, dictum id mauris vitae, lobortis pretium quam.</div>`;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst BackSpaceActionInput = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"175px\",\r\n      width: \"175px\",\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default BackSpaceActionInput;","import PositioningSection from \"./PositioningSection\";\r\nexport default PositioningSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport { backSpaceActions, returnOnEmptySectionActions, decoratorsList } from \"../../constants\";\r\nimport BackSpaceActionInput from \"./BackSpaceActionInput\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst PositioningSection = (props) => {\r\n    const {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithContentStyle, changeBackspaceActionWithContentStyle,\r\n        backspaceActionWithoutContent, changeBackspaceActionWithoutContent,\r\n        backspaceActionWithoutContentStyle, changeBackspaceActionWithoutContentStyle,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_positioning\">\r\n            <span id=\"r1c1\">Identational level</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={indentationalLevel}\r\n                    onChange={changeIndentationalLevel}\r\n                    id=\"r1c2\" \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n            <div id=\"r2\" className=\"sectionTitle\">\r\n                <span>BACKSPACE</span>\r\n            </div>\r\n\r\n            <span id=\"r3c1\">At the beginning of a section with content</span>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <div>\r\n                    <NativeSelect \r\n                        value={backspaceActionWithContent}\r\n                        onChange={changeBackspaceActionWithContent}\r\n                        id=\"r3c2\" \r\n                        input={ <BackSpaceActionInput /> }\r\n                    >\r\n                        {backSpaceActions.map(action => (\r\n                            <option value={action.key} key={`backSpace ${action.key}`}>{action.value}</option>\r\n                        ))}\r\n                    </NativeSelect>\r\n                </div>\r\n                {   backspaceActionWithContent === \"apply_other_pd\" && (\r\n                    <NativeSelect\r\n                        value={backspaceActionWithContentStyle}\r\n                        onChange={changeBackspaceActionWithContentStyle}\r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        <option value=\"default\">Global Fallback Style</option>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                ) }\r\n            </div>\r\n\r\n            <span id=\"r4c1\">At the beginning of a section WITHOUT content</span>\r\n            <div id=\"r4c2\" className=\"dialogGrid dialogGrid_2cols\">\r\n                <div>\r\n                    <NativeSelect\r\n                        value={backspaceActionWithoutContent}\r\n                        onChange={changeBackspaceActionWithoutContent}\r\n                        input={ <BackSpaceActionInput /> }\r\n                    >\r\n                        {returnOnEmptySectionActions.map(action => (\r\n                            <option value={action.key} key={`backSpace ${action.key}`}>{action.value}</option>\r\n                        ))}\r\n                    </NativeSelect>\r\n                </div>\r\n                {   backspaceActionWithoutContent === \"apply_other_pd\" && (\r\n                    <NativeSelect\r\n                        value={backspaceActionWithoutContentStyle}\r\n                        onChange={changeBackspaceActionWithoutContentStyle}\r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        <option value=\"default\">Global Fallback Style</option>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                ) }\r\n            </div>\r\n\r\n            <div id=\"r5\" className=\"sectionTitle\">\r\n                <span>RETURN</span>\r\n            </div>\r\n\r\n            <span id=\"r6c1\">Style of next section</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={returnActionNextSection}\r\n                    onChange={changeReturnActionNextSection}\r\n                    id=\"r6c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"default\">Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n\r\n            <span id=\"r7c1\">In empty section change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect \r\n                    value={returnActionEmptySection}\r\n                    onChange={changeReturnActionEmptySection}\r\n                    id=\"r7c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"default\">Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <div id=\"r8\" className=\"sectionTitle\">\r\n                <span>TAB / SHIFT+TAB</span>\r\n            </div>\r\n\r\n            <span id=\"r9c1\">TAB – change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={tabAction}\r\n                    onChange={changeTabAction}\r\n                    id=\"r9c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <span id=\"r10c1\">SHIFT+TAB – change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={shiftTabAction}\r\n                    onChange={changeShiftTabAction} \r\n                    id=\"r10c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PositioningSection;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst ListPreview = (props) => {\r\n    const { \r\n        listPreviewStyle, \r\n        listChars, \r\n        prefix, \r\n        suffix, \r\n        suffixDistance, \r\n        sideNumberStyle,\r\n    } = props;\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n    const listItemsBeginnings = listChars.map(listChar => {\r\n        return (`${prefix}${listChar}${suffix}`);\r\n    });\r\n    const listItemBeginingStyle = {\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n        ...sideNumberStyle,\r\n    };\r\n\r\n    return (\r\n        <div className=\"preview preview_list\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div className=\"preview-content\">\r\n                <div className={demonstrationElementClassName}>\r\n                    <div\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        style={listPreviewStyle}\r\n                    >\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[0]}`}</span><span>The first list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[1]}`}</span><span>The second list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[2]}`}</span><span>The third list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[3]}`}</span><span>The fourth list item</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListPreview;","import { numberingSets, bulletNamesMap } from \"../constants\";\r\n\r\nexport const getCorrectColor = (hex, backgroundColor = \"FFF\") => {\r\n    const correctColor = typeof hex === \"string\" && (hex.length === 6 || hex.length === 3) ? hex : backgroundColor;\r\n    return correctColor;\r\n};\r\n\r\nexport const selectAllOnClick = defaultValue => e => {\r\n    if (!defaultValue || e.target.value === defaultValue) {\r\n        e.target.focus();\r\n        e.target.select();\r\n    }\r\n};\r\n\r\nexport const getOffset = (alignType, fontSize) => {\r\n    if (alignType === \"baseline\") {\r\n        return 0;\r\n    }\r\n    return (parseFloat(fontSize.slice()) / 2) * (alignType === \"sub\" ? 1 : -1);\r\n};\r\n\r\nexport const getUnstyledText = styledText => {\r\n    const unstyledText = styledText.replace(/<\\/(.*?)>/gm, \"</div>\").replace(/(?!(?:<\\/(.*?)>|<br(.*?)>)$)<(.*?)>/gm, \"<div>\");\r\n    return unstyledText[0] !== \"<\" ? `<div>${unstyledText}</div>` : unstyledText;\r\n};\r\n\r\nexport const unicodeNumberToChar = unicodeNumber => {\r\n    return String.fromCharCode(parseInt(unicodeNumber, 16));\r\n};\r\n\r\nexport const unicodeCharToNumber = unicodeChar => {\r\n    return unicodeChar.charCodeAt(0).toString(16);\r\n};\r\n\r\nexport const scrollToBottom = className => {\r\n    setTimeout(() => { document.getElementsByClassName(className)[0].scrollTo({\r\n        top: Number.MAX_SAFE_INTEGER,\r\n        behavior: \"smooth\",\r\n    })}, 0);\r\n};\r\n\r\nexport const selectAllEditableContent = className => e => {\r\n    if (e.target.className === className) {\r\n        window.getSelection().selectAllChildren(e.target.children[0]);\r\n    }\r\n};\r\n\r\nexport const getListChars = ({ isOrderedList, numberingStyle, listItem, unicodeChar }) => {\r\n    if (isOrderedList) {\r\n        return numberingSets[numberingStyle];\r\n    }\r\n    const newBullet = bulletNamesMap[listItem] || unicodeChar;\r\n    return Array(4).fill(newBullet);\r\n};\r\n\r\nexport const detectOS = () => {\r\n    if (navigator && navigator.appVersion) {\r\n        if (navigator.appVersion.indexOf(\"Win\") !== -1) {\r\n            return \"Windows\";\r\n        } else if (navigator.appVersion.indexOf(\"Mac\") !== -1) {\r\n            return \"MacOS\";\r\n        }\r\n    }\r\n};","import ColorField from \"./ColorField\";\r\nexport default ColorField;","import React from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport { getCorrectColor, selectAllOnClick } from \"../../utils\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ColorField extends React.Component {\r\n    state = {\r\n        isOpen: this.props.isOpen,\r\n    };\r\n\r\n    hideColorPicker = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    showColorPicker = () => {\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    colorPickerHandler = changeColor => ({ hex }) => {\r\n        changeColor(null, hex);\r\n    };\r\n\r\n    render() {\r\n        const { colorCode, changeColorCode, defaultColorCode, required, bottomAligned } = this.props;\r\n        const { showColorPicker, hideColorPicker, colorPickerHandler } = this;\r\n        const correctColor = getCorrectColor(colorCode);\r\n        const colorError = correctColor !== colorCode;\r\n        const inputError = colorError && (required || !!colorCode);\r\n        const pickerColor = colorError ? \"\" : `#${correctColor}`;\r\n        const colorSampleStyle = {\r\n            backgroundColor: `#${correctColor}`,\r\n        };\r\n        const colorPickerClassName = `colorPicker${ bottomAligned ? \" colorPicker_bottomAligned\" : \"\"}`;\r\n\r\n        return (\r\n            <div className=\"colorField\">\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    className=\"numberInput\" \r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                    }}\r\n                    value={colorCode}\r\n                    onChange={changeColorCode}\r\n                    onClick={e => { \r\n                        selectAllOnClick(defaultColorCode || \"000\")(e); \r\n                        // this.showColorPicker(); \r\n                    }}\r\n                    error={inputError}\r\n                />\r\n                <div\r\n                    onClick={showColorPicker}\r\n                    className=\"colorSample\" \r\n                    style={colorSampleStyle}\r\n                />\r\n                {this.state.isOpen && (\r\n                    <div className={colorPickerClassName}>\r\n                        <div className=\"colorPicker-chromeBox\">\r\n                            <ChromePicker\r\n                                onChangeComplete={colorPickerHandler(changeColorCode)}\r\n                                color={pickerColor}\r\n                                disableAlpha\r\n                            />\r\n                        </div>\r\n                        <div className=\"colorPicker-popOver\"  onClick={hideColorPicker}></div>\r\n                    </div>\r\n                ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorField;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport ListPreview from \"../common/Preview/ListPreview\";\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport ColorField from \"../common/ColorField\";\r\nimport { listStyleType, bulletNamesMap } from \"../constants\"\r\nimport { selectAllOnClick, scrollToBottom } from \"../utils\";\r\n\r\nconst ListSection = (props) => {\r\n    const {\r\n        listPreviewProps,\r\n        isList, changeIsList, \r\n        listName, changeListName,\r\n        orderLevel, changeOrderLevel,\r\n        prefix, changePrefix,\r\n        suffix, changeSuffix,\r\n        suffixDistance, changeSuffixDistance,\r\n        magicTabs, changeMagicTabs,\r\n        listType, changeListType, \r\n        listItem, changeListItem,\r\n        unicodeNumber, changeUnicodeNumber,\r\n        unicodeChar, changeUnicodeChar,\r\n        numberingStyle, changeNumberingStyle,\r\n        continueNumbering, changeContinueNumbering,\r\n        allowRestartNumbering, changeAllowRestartNumbering,\r\n        includePreviousFrom, changeIncludePreviousFrom,\r\n        sideNumber, changeSideNumber,\r\n        sideNumberFont, changeSideNumberFont,\r\n        sideNumberAlignment, changeSideNumberAlignment,\r\n        sideNumberFontSize, changeSideNumberFontSize,\r\n        sideNumberFontColor, changeSideNumberFontColor,\r\n        sideNumberFillingColor, changeSideNumberFillingColor,\r\n        sideNumberWidth, changeSideNumberWidth,\r\n        sideNumberRadius, changeSideNumberRadius,\r\n    } = props;\r\n\r\n    const onListTypeChange = (...args) => {\r\n        changeListType(...args);\r\n        scrollToBottom(\"content-rightSide\");\r\n    };\r\n\r\n    const onSideNumberChange = (...args) => {\r\n        changeSideNumber(...args);\r\n        scrollToBottom(\"content-rightSide\");\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <div>\r\n                    <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth\">\r\n                    <div className=\"listSection-firstSpan\">\r\n                        <span>Is it a list?</span>\r\n                    </div>\r\n                    <div>\r\n                        <Checkbox \r\n                            color=\"primary\" \r\n                            checked={isList} \r\n                            onChange={changeIsList} \r\n                        />\r\n                    </div>\r\n                    { isList && (\r\n                        <>\r\n                            <span>List name</span>\r\n                            <TextField\r\n                                value={listName}\r\n                                onChange={changeListName} \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                            />\r\n\r\n                            <span>Order level</span>\r\n                            <div>\r\n                                <NativeSelect\r\n                                    value={orderLevel}\r\n                                    onChange={changeOrderLevel}\r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    <option value=\"\">...</option>\r\n                                    <option value=\"0\">0</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n\r\n                            <span>Prefix</span>\r\n                            <TextField\r\n                                value={prefix}\r\n                                onChange={changePrefix} \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                            />\r\n\r\n                            <span>Suffix</span>\r\n                            <TextField\r\n                                value={suffix}\r\n                                onChange={changeSuffix} \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                                onClick={selectAllOnClick(\".\")}\r\n                            />\r\n\r\n                            <span>Suffix distance</span>\r\n                            <div className=\"inputWithAdornment\">\r\n                                <NativeSelect\r\n                                    value={suffixDistance}\r\n                                    onChange={changeSuffixDistance} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    <option value=\"0.25\">0.25</option>\r\n                                    <option value=\"0.5\">0.5</option>\r\n                                    <option value=\"0.75\">0.75</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"1.25\">1.25</option>\r\n                                    <option value=\"1.5\">1.5</option>\r\n                                    <option value=\"1.75\">1.75</option>\r\n                                    <option value=\"2\">2</option>\r\n                                </NativeSelect>\r\n                                <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                            </div>\r\n\r\n                            <span>Magic Tabs</span>\r\n                            <div>\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={magicTabs} \r\n                                    onChange={changeMagicTabs} \r\n                                />\r\n                            </div>\r\n\r\n                            <span>Type of list</span>\r\n                            <div>\r\n                                <NativeSelect \r\n                                    value={listType} \r\n                                    onChange={onListTypeChange} \r\n                                    input={ <CustomInput /> }\r\n                                >\r\n                                    <option value={\"unordered\"}>Unordered</option>\r\n                                    <option value={\"ordered\"}>Ordered</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </>\r\n                    ) }\r\n                </div>\r\n                    { isList && listType === \"ordered\" && (\r\n                        <div className=\"listSection-typeSettings\">\r\n                            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                                <span>Numbering style</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={numberingStyle}\r\n                                        onChange={changeNumberingStyle}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        {listStyleType.map(style => (\r\n                                          <option value={style.value} key={style.value}>{style.name}</option>\r\n                                        ))}                                    \r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Continue numbering after interruption</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={continueNumbering}\r\n                                        onChange={changeContinueNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Allow restart numbering</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={allowRestartNumbering} \r\n                                        onChange={changeAllowRestartNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Include previous levels from</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={includePreviousFrom} \r\n                                        onChange={changeIncludePreviousFrom}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        <option value=\"\">...</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Side number</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={sideNumber}\r\n                                        onChange={onSideNumberChange}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                            </div> \r\n\r\n                            { sideNumber && (\r\n                                <div className=\"dialogGrid dialogGrid_2minCols listSection-typeSettings\">\r\n                                    <span>Font</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberFont}\r\n                                        onChange={changeSideNumberFont}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"Roboto, slab-serif\"}>Roboto</option>\r\n                                        <option value={\"'Source Serif Pro', serif\"}>Source Serif</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Alignment</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberAlignment}\r\n                                        onChange={changeSideNumberAlignment}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"left\"}>Left</option>\r\n                                        <option value={\"center\"}>Center</option>\r\n                                        <option value={\"right\"}>Right</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Font size</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberFontSize}\r\n                                            onChange={changeSideNumberFontSize}\r\n                                            onClick={selectAllOnClick(\"12\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>      \r\n                            \r\n                                    <span>Font color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFontColor} \r\n                                        changeColorCode={changeSideNumberFontColor}\r\n                                        defaultColorCode={\"FFF\"}\r\n                                        bottomAligned\r\n                                    />\r\n                                        \r\n                                    <span>Filling color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFillingColor} \r\n                                        changeColorCode={changeSideNumberFillingColor}\r\n                                        defaultColorCode={\"1E88E5\"}\r\n                                        bottomAligned\r\n                                    />\r\n\r\n                                    <span>Width</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberWidth}\r\n                                            onChange={changeSideNumberWidth}\r\n                                            onClick={selectAllOnClick(\"20\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                        \r\n                                    <span>Radius</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberRadius}\r\n                                            onChange={changeSideNumberRadius}\r\n                                            onClick={selectAllOnClick(\"10\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                </div> \r\n                            ) }\r\n                        </div>\r\n                    ) }\r\n                </div>\r\n                { isList && <div className=\"listPreviewBox\"><ListPreview {...listPreviewProps} /></div> }\r\n            </div>\r\n            { isList && listType === \"unordered\" && (\r\n                <div className=\"listSection-typeSettings\">\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        <div className=\"dialogGrid dialogGrid_2cols\">\r\n                            <span className=\"listSection-firstSpan\">List item</span>\r\n                            <div className=\"listItemSelect\">\r\n                                <NativeSelect \r\n                                    value={listItem} \r\n                                    onChange={changeListItem} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    { \r\n                                        Object.entries(bulletNamesMap).map(([key, value]) => {\r\n                                            return (<option key={key} value={key}>{value}</option>) \r\n                                        })\r\n                                    }\r\n                                    <option value={\"individual\"}>Custom</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </div>\r\n                        {   listItem === \"individual\" && (\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Unicode number</span>\r\n                                    <div>\r\n                                        <TextField \r\n                                            value={unicodeNumber}\r\n                                            onChange={changeUnicodeNumber}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"unicodeInput\" \r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">u+</InputAdornment>\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Char</span>\r\n                                    <div>\r\n                                        <TextField \r\n                                            value={unicodeChar}\r\n                                            onChange={changeUnicodeChar}\r\n                                            onClick={selectAllOnClick()}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"bulletInput\" \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                        ) }\r\n                    </div> \r\n                </div> \r\n            ) }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\n\r\nconst ReferencingSection = (props) => {\r\n    const { \r\n        newGroup, \r\n        isOpen, \r\n        hideDialog, \r\n        handleClick, \r\n        onSave,\r\n        referenceGroup, changeReferenceGroup,\r\n        changeReferenceGroupToCreate,\r\n    } = props;\r\n    \r\n    const newGroupName = newGroup.nameEn;\r\n    const isEditMode = !!newGroupName;\r\n\r\n    const onXrefChange = xref => (...args) => {\r\n        const value = args[0] ? args[0].target.value : args[1];\r\n        if (xref.groupKey && xref.nameEn && value === xref.nameEn) {\r\n            changeReferenceGroupToCreate(null, xref);\r\n        } else {\r\n            changeReferenceGroupToCreate(null, \"\");\r\n        }\r\n        changeReferenceGroup(...args);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Reference group</span>\r\n            <div>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> } \r\n                    value={referenceGroup} \r\n                    onChange={onXrefChange(newGroup)} \r\n                >\r\n                    { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                    <option value=\"\">none</option>\r\n                    <option value=\"0\">Reference group 1</option>\r\n                    <option value=\"1\">Reference group 2</option>\r\n                </NativeSelect>\r\n                {\r\n                    !(isEditMode && referenceGroup !== newGroupName) &&\r\n                    <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                        { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                    </Button>\r\n                 }\r\n            </div>\r\n            <NewGroupDialog \r\n                isOpen={isOpen}\r\n                hideDialog={hideDialog}\r\n                onSave={onSave}\r\n                isEditMode={isEditMode}\r\n                currentGroup={newGroup}\r\n                changeGroupSelect={onXrefChange}\r\n                groupType=\"xref\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withNewGroupControl(ReferencingSection);","import * as React from \"react\";\r\nimport deepEqual from \"fast-deep-equal\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, q = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(q[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, q[i]))\r\n              t[q[i]] = s[q[i]];\r\n      }\r\n  return t;\r\n};\r\n\r\nfunction normalizeHtml(str) {\r\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, \" \");\r\n}\r\nfunction findLastTextNode(node) {\r\n  if (node.nodeType === Node.TEXT_NODE)\r\n      return node;\r\n  let children = node.childNodes;\r\n  for (let i = children.length - 1; i >= 0; i--) {\r\n      let textNode = findLastTextNode(children[i]);\r\n      if (textNode !== null)\r\n          return textNode;\r\n  }\r\n  return null;\r\n}\r\nfunction replaceCaret(el) {\r\n  // Place the caret at the end of the element\r\n  const target = findLastTextNode(el);\r\n  // do not move caret if element was not focused\r\n  const isTargetFocused = document.activeElement === el;\r\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\r\n      var sel = window.getSelection();\r\n      if (sel !== null) {\r\n          var range = document.createRange();\r\n          range.setStart(target, target.nodeValue.length);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n      }\r\n      if (el instanceof HTMLElement)\r\n          el.focus();\r\n  }\r\n}\r\n/**\r\n* A simple component for an html element with editable contents.\r\n*/\r\nexport default class ContentEditable extends React.Component {\r\n  constructor() {\r\n      super(...arguments);\r\n      this.lastHtml = this.props.html;\r\n      this.el = typeof this.props.innerRef === \"function\" ? { current: null } : React.createRef();\r\n      this.getEl = () => (this.props.innerRef && typeof this.props.innerRef !== \"function\" ? this.props.innerRef : this.el).current;\r\n      this.emitChange = (originalEvt) => {\r\n          const el = this.getEl();\r\n          if (!el)\r\n              return;\r\n          const html = el.innerHTML;\r\n          if (this.props.onChange && html !== this.lastHtml) {\r\n              // Clone event with Object.assign to avoid\r\n              // \"Cannot assign to read only property 'target' of object\"\r\n              const evt = Object.assign({}, originalEvt, {\r\n                  target: {\r\n                      value: html\r\n                  }\r\n              });\r\n              this.props.onChange(evt);\r\n          }\r\n          this.lastHtml = html;\r\n      };\r\n  }\r\n  render() {\r\n      const _a = this.props, { tagName, html, innerRef } = _a, props = __rest(_a, [\"tagName\", \"html\", \"innerRef\"]);\r\n      return React.createElement(tagName || \"div\", Object.assign({}, props, { ref: typeof innerRef === \"function\" ? (current) => {\r\n              innerRef(current);\r\n              this.el.current = current;\r\n          } : innerRef || this.el, onInput: this.emitChange, onBlur: this.props.onBlur || this.emitChange, onKeyUp: this.props.onKeyUp || this.emitChange, onKeyDown: this.props.onKeyDown || this.emitChange, contentEditable: !this.props.disabled, dangerouslySetInnerHTML: { __html: html } }), this.props.children);\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n      const { props } = this;\r\n      const el = this.getEl();\r\n      // We need not rerender if the change of props simply reflects the user's edits.\r\n      // Rerendering in this case would make the cursor/caret jump\r\n      // Rerender if there is no element yet... (somehow?)\r\n      if (!el)\r\n          return true;\r\n      // ...or if html really changed... (programmatically, not by user edit)\r\n      if (normalizeHtml(nextProps.html) !== normalizeHtml(el.innerHTML)) {\r\n          return true;\r\n      }\r\n      // Handle additional properties\r\n      return props.disabled !== nextProps.disabled ||\r\n          props.tagName !== nextProps.tagName ||\r\n          props.className !== nextProps.className ||\r\n          props.innerRef !== nextProps.innerRef ||\r\n          !deepEqual(props.style, nextProps.style);\r\n  }\r\n  componentDidUpdate() {\r\n      const el = this.getEl();\r\n      if (!el)\r\n          return;\r\n      // Perhaps React (whose VDOM gets outdated because we often prevent\r\n      // rerendering) did not update the DOM. So we update it manually now.(?!(?:<br \\/>|<br>|<br\\/>)$)<(.*?)>\r\n      if (this.props.html !== el.innerHTML) {\r\n          el.innerHTML = this.lastHtml = this.props.html;\r\n      }\r\n      replaceCaret(el);\r\n  }\r\n}\r\nContentEditable.propTypes = {\r\n  html: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  tagName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n  ])\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport ContentEditable from \"../ContentEditable\";\r\nimport { getOffset, selectAllEditableContent } from \"../../utils\"\r\n\r\nconst Preview = ({previewText, changePreviewText, previewStyle}) => {\r\n    const { verticalAlign, fontSize } = previewStyle;\r\n\r\n    const editableContentStyle = {\r\n        ...previewStyle, \r\n        outline: \"none\",\r\n        marginTop: `${parseFloat(previewStyle.marginTop) + getOffset(verticalAlign, fontSize)}pt`,\r\n        marginBottom: `${parseFloat(previewStyle.marginBottom) - getOffset(verticalAlign, fontSize)}pt`,\r\n    };\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n\r\n    return (\r\n        <div className=\"preview\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div \r\n                className=\"preview-content preview-content_withPointer\" \r\n                onClick={selectAllEditableContent(demonstrationElementClassName)}\r\n            >\r\n                <div className={demonstrationElementClassName}>\r\n                    <ContentEditable\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        onChange={changePreviewText} \r\n                        html={previewText}\r\n                        style={editableContentStyle}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preview;","import Preview from \"./Preview.js\";\r\nexport default Preview;","import TypographySection from \"./TypographySection\";\r\nexport default TypographySection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport Preview from \"../../common/Preview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport { selectAllOnClick } from \"../../utils\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst TypographySection = (props) => {\r\n    const { \r\n        previewProps,\r\n        font, changeFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Font</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={font}\r\n                    onChange={changeFont}\r\n                >\r\n                    <option value={\"Roboto, slab-serif\"}>Roboto</option>\r\n                    <option value={\"'Source Serif Pro', serif\"}>Source Serif</option>\r\n                </NativeSelect>\r\n\r\n                <span>Alignment</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={alignment}\r\n                    onChange={changeAlignment}\r\n                >\r\n                    <option value={\"left\"}>Left</option>\r\n                    <option value={\"center\"}>Center</option>\r\n                    <option value={\"right\"}>Right</option>\r\n                    <option value={\"justify\"}>Justified</option>\r\n                </NativeSelect>\r\n\r\n                <span>Font size</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={fontSize}\r\n                        onChange={changeFontSize}\r\n                        onClick={selectAllOnClick(\"12\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>      \r\n\r\n                <span>Font color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                    value={fontColorName}\r\n                    onChange={changeFontColorName}\r\n                    onClick={selectAllOnClick(\"Black\")}\r\n                />\r\n\r\n                <span>Font color HEX</span>\r\n                <ColorField \r\n                    colorCode={fontColor} \r\n                    changeColorCode={changeFontColor}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_indented\">\r\n            <span>Stylings</span>\r\n            <div className=\"checkBoxesSet\">\r\n                <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Bold\"\r\n                        labelPlacement=\"end\"\r\n                        checked={bold}\r\n                        onChange={changeBold}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Italic\"\r\n                        labelPlacement=\"end\"\r\n                        checked={italic}\r\n                        onChange={changeItalic}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Underlined\"\r\n                        labelPlacement=\"end\"\r\n                        checked={underlined}\r\n                        onChange={changeUnderlined}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_stroke\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Stroke\"\r\n                        labelPlacement=\"end\"\r\n                        checked={stroke}\r\n                        onChange={changeStroke}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <span>Text transform</span>\r\n            <RadioGroup \r\n                value={textTransform} \r\n                onChange={changeTextTransform} \r\n                row\r\n            >\r\n                <div className=\"labeledCheckbox labeledCheckbox_topIndented\">\r\n                    <FormControlLabel\r\n                        value=\"none\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"None\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_uppercase\">\r\n                    <FormControlLabel\r\n                        value=\"uppercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Uppercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_lowercase\">\r\n                    <FormControlLabel\r\n                        value=\"lowercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Lowercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_smallCaps\">\r\n                    <FormControlLabel\r\n                        value=\"small-caps\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Small caps\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n            </RadioGroup>\r\n\r\n            <span>Sub/Superscript</span>\r\n            <div>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> } \r\n                    value={verticalAlign} \r\n                    onChange={changeVerticalAlign} \r\n                >\r\n                    <option value=\"baseline\">None</option>\r\n                    <option value=\"sub\">Subscript</option>\r\n                    <option value=\"super\">Superscript</option>\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport Preview from \"../common/Preview\";\r\nimport { selectAllOnClick } from \"../utils\";\r\n\r\nconst DistancesSection = (props) => {\r\n    const {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    } = props;\r\n    \r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Margin top</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginTop}\r\n                        onChange={changeMarginTop}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>Margin bottom</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginBottom}\r\n                        onChange={changeMarginBottom}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>1st row indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={firstRowIndent}\r\n                        onChange={changeFirstRowIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Other rows indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={otherRowsIndent}\r\n                        onChange={changeOtherRowsIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Line spacing</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        input={ <CustomInputShort /> } \r\n                        value={lineSpacing} \r\n                        onChange={changeLineSpacing} \r\n                    >\r\n                        <option value=\"1.0\">1.0</option>\r\n                        <option className=\"highlightedOption\" value=\"1.15\">1.15</option>\r\n                        <option value=\"1.5\">1.5</option>\r\n                        <option value=\"2.0\">2.0</option>\r\n                        <option value=\"2.5\">2.5</option>\r\n                        <option value=\"3.0\">3.0</option>\r\n                        <option value=\"custom\">Custom</option>\r\n                    </NativeSelect> \r\n                    {\r\n                    lineSpacing === \"custom\" && \r\n                    (\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={customLineSpacing}\r\n                            onChange={changeCustomLineSpacing}\r\n                        />                                            \r\n                    )\r\n                }\r\n                </div>\r\n                   \r\n                    \r\n                <span>Word spacing</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={wordSpacing}\r\n                        onChange={changeWordSpacing}\r\n                        onClick={selectAllOnClick(\"0\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistancesSection;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst FrameTypeInput = withStyles(theme => ({\r\n    root: {\r\n      width: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      fontFamily: [\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default FrameTypeInput;","import FramesSection from \"./FramesSection\";\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport FrameTypeInput from \"../../sections/FramesSection/FrameTypeInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport { getCorrectColor, selectAllOnClick } from \"../../utils\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst FramesSection = (props) => {\r\n    const { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n     } = props;\r\n\r\n     const correctColor = getCorrectColor(borderColor);\r\n     const previewBorderWidth = borderThickness && !isNaN(parseFloat(borderThickness))\r\n                                ? `${borderThickness <= 15 ? borderThickness : 15}pt`\r\n                                : \"0\";\r\n\r\n     const previewStyle = {\r\n         borderLeft: leftBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginLeft: leftBorder ? \"0\" : previewBorderWidth, \r\n         borderRight: rightBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginRight: rightBorder ? \"0\" : previewBorderWidth, \r\n         borderTop: topBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginTop: topBorder ? \"0\" : previewBorderWidth, \r\n         borderBottom: bottomBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginBottom: bottomBorder ? \"0\" : previewBorderWidth, \r\n     };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"directionControlsContainer\">\r\n                <div className=\"directionsControls\" style={previewStyle}>\r\n                    <span className=\"directionLabel\">Left</span>\r\n                    <div className=\"centralColumn\">\r\n                        <span className=\"directionLabel\">Top</span>\r\n                        <div className=\"checkboxesKit crossGrid\">\r\n                            <div id=\"r1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={topBorder}  \r\n                                    onChange={changeTopBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={leftBorder}  \r\n                                    onChange={changeLeftBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c2\" className=\"gridCell\">\r\n                            </div>\r\n                            <div id=\"r2c3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={rightBorder}  \r\n                                    onChange={changeRightBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={bottomBorder}  \r\n                                    onChange={changeBottomBorder}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"directionLabel\">Bottom</span>\r\n                    </div>\r\n                    <span className=\"directionLabel\">Right</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <span>Frame color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    value={borderColorName}\r\n                    onChange={changeBorderColorName}\r\n                    onClick={selectAllOnClick(\"Red\")}\r\n                />\r\n\r\n                <span>Frame color HEX</span>\r\n                <ColorField \r\n                    colorCode={borderColor} \r\n                    changeColorCode={changeBorderColor}\r\n                    required\r\n                />\r\n\r\n                <span>Frame thickness</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={borderThickness}\r\n                        onChange={changeBorderThickness}\r\n                        onClick={selectAllOnClick(\"2\")}\r\n                     />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>                        \r\n\r\n                <span>Type of frame</span>\r\n                <div >\r\n                    <Select\r\n                      input={<FrameTypeInput />}\r\n                      value={borderType}\r\n                      onChange={changeBorderType}\r\n                    >\r\n                        <MenuItem value=\"solid\"><b>━━━━</b></MenuItem>\r\n                        <MenuItem value=\"dotted\">• • • • • • •</MenuItem>\r\n                        <MenuItem value=\"dashed\"><b>– – – – –</b></MenuItem>\r\n                        <MenuItem value=\"double\">══════</MenuItem>              \r\n                    </Select>\r\n                </div>\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox color=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport Preview from \"../common/Preview\";\r\nimport ColorField from \"../common/ColorField\";\r\n\r\nconst  FillingSection = (props) => {\r\n    const { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n     } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Filling color name</span>\r\n                <div>\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        className=\"mediumTextField\" \r\n                        value={fillingColorName}\r\n                        onChange={changeFillingColorName}\r\n                    />\r\n                </div>\r\n\r\n                <span>Filling color HEX</span>\r\n                <ColorField \r\n                    colorCode={fillingColor} \r\n                    changeColorCode={changeFillingColor}\r\n                />\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox \r\n                        color=\"primary\" \r\n                        checked={connectToPrevious} \r\n                        onChange={changeConnectToPrevious} \r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FillingSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\n\r\nconst TocSection = ({ tocIndentation, changeTocIndentation }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>ToC indentation</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={tocIndentation}\r\n                    onChange={changeTocIndentation} \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>                    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TocSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst ShortCutSection = (props) => {\r\n    const {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Windows</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutWinView}\r\n                    onKeyDown={changeShortCutWin} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n\r\n            <span>Mac</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutMacView}\r\n                    onKeyDown={changeShortCutMac} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />     \r\n            </div>          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShortCutSection;","import React from \"react\";\r\n\r\nconst TypographySection = () => {\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import keycode from \"keycode\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nconst getShortCutUtils = systemName => {\r\n  return class ShortcutUtils {  \r\n    static CMD_KEYS = {\r\n      altKey: systemName === \"MacOS\" ? \"Option\" : \"Alt\",\r\n      ctrlKey: systemName === \"MacOS\" ? \"Control\" : \"Ctrl\",\r\n      shiftKey: \"Shift\",\r\n      metaKey: \"Command\",\r\n    };\r\n  \r\n    static isDeadKey(e) {\r\n      return e.keyCode === 229;\r\n    }\r\n  \r\n    static prevent(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  \r\n    static convertEventToShortCut(e) {\r\n      if (ShortcutUtils.isDeadKey(e)) {\r\n        ShortcutUtils.prevent(e);\r\n        return { deleteKey: true };\r\n      }\r\n      ShortcutUtils.prevent(e);\r\n      const shortCut = {\r\n        keyCode: e.keyCode,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n        altKey: e.altKey,\r\n        metaKey: false,\r\n      };\r\n      if (systemName === \"MacOS\") {\r\n        shortCut.metaKey = e.metaKey;\r\n      }\r\n      const deleteKeys = [8, 46];\r\n      const cmdKeysCodes = [16, 91, 18, 17];\r\n      const shortCutForView = ShortcutUtils.convertShortcutToMeta(shortCut);\r\n      if (deleteKeys.indexOf(e.keyCode) > -1) {\r\n        return { deleteKey: true };\r\n      } else if (shortCutForView.isCmdPressed && cmdKeysCodes.indexOf(e.keyCode) === -1) {\r\n        return {\r\n          value: shortCut,\r\n          stringValue: shortCutForView.stringValue,\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n  \r\n    static convertShortcutToString(shortCut = {}) {\r\n      return ShortcutUtils.convertShortcutToMeta(shortCut).stringValue;\r\n    }\r\n  \r\n    static convertShortcutToMeta(shortCut = {}) {\r\n      let shortCutForView = \"\";\r\n      let isCmdPressed = false;\r\n      Object.keys(ShortcutUtils.CMD_KEYS).forEach((key) => {\r\n        if (shortCut && shortCut[key]) {\r\n          isCmdPressed = true;\r\n          shortCutForView += `${ShortcutUtils.CMD_KEYS[key]} + `;\r\n        }\r\n      });\r\n      if (shortCut && shortCut.keyCode) {\r\n        shortCutForView += keycode(shortCut.keyCode);\r\n      }\r\n      return { stringValue: shortCutForView, isCmdPressed };\r\n    }\r\n  \r\n    static removeDuplicateShortcuts = function (decorators, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(decorators).forEach((decoratorKey) => {\r\n        const item = decorators[decoratorKey];\r\n        const itemType = item.item_type;\r\n        if (itemType === \"style\") {\r\n          if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n            decorators[decoratorKey].keyboard_shortcut = null;\r\n            removed = true;\r\n          }\r\n        } else {\r\n          const childItems = item.child_items;\r\n          Object.keys(childItems).forEach((itemKey) => {\r\n            const style = childItems[itemKey];\r\n            if (isEqual(style.keyboard_shortcut, newPdShortcut)) {\r\n              style.keyboard_shortcut = null;\r\n              removed = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  \r\n    static removeDuplicateShortcutsInInlineStyle = function (inlineStyles, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(inlineStyles).forEach((styleKey) => {\r\n        const item = inlineStyles[styleKey];\r\n        if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n          inlineStyles[styleKey].keyboard_shortcut = null;\r\n          removed = true;\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  }\r\n};\r\n\r\nexport default getShortCutUtils;\r\n\r\n","import getShortCutUtils from \"./utils/getShortCutUtils\";\r\n\r\nconst Handlers = (update, formState) => class {    \r\n    static toggleStateProperty = propName => e => {\r\n        update({\r\n            [propName]: e.target.checked\r\n        });\r\n    };\r\n\r\n    static setStateProperty = propName => (e, secondArg = \"\") => {\r\n        const newValue = (e && e.target.value !== \"\" && e.target.value !== undefined) ? e.target.value : secondArg;\r\n        update({\r\n            [propName]: newValue,\r\n        });\r\n    };\r\n\r\n    static setBullet = propName => e => {\r\n        const newBullet = e.target.value.length > 1 ? e.target.value[e.target.value.length - 1] : e.target.value;\r\n        update({\r\n            [propName]: newBullet,\r\n        });\r\n        return newBullet;\r\n    };\r\n\r\n    static setColor = propName => (e, secondArg) => {\r\n        let input = e ? (e.target.value || \"\") : secondArg;\r\n        \r\n        const filteredInput = input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i) \r\n                              ? input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i)[0].slice(0, 6)\r\n                              : \"\" ;\r\n        \r\n        if (filteredInput !== formState[propName]) {\r\n            update({\r\n                [propName]: filteredInput,\r\n            });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setNumber = propName => e => {\r\n        let input = e.target.value || \"\";\r\n\r\n        const filteredInput = input.replace(\",\", \".\").trim().match(/[0-9]+/i) \r\n                              ? input.replace(\",\", \".\").trim().match(/\\d+[.,]?\\d*/)[0]\r\n                              : \"\" ;\r\n\r\n        if (filteredInput !== formState[propName]) {\r\n          update({\r\n              [propName]: filteredInput,\r\n          });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setShortCut = (valuePropName, viewPropName, isMac) => e => {\r\n        const systemName = isMac ? \"MacOS\" : \"Windows\";\r\n        const shortCut = getShortCutUtils(systemName).convertEventToShortCut(e);\r\n        if (shortCut && shortCut.deleteKey) {\r\n          setTimeout(() => {\r\n            update({ [valuePropName]: \"\" });\r\n            update({ [viewPropName]: \"\" });\r\n          }, 100);\r\n        } else if (shortCut) {\r\n          update({ [valuePropName]: shortCut.value });\r\n          update({ [viewPropName]: shortCut.stringValue });\r\n        }\r\n    };\r\n};\r\n\r\nexport default Handlers;","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: pink,\r\n    },\r\n});\r\n\r\nexport default theme;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomTab;","import Tabs from \"@material-ui/core/Tabs\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTabs = withStyles(theme => ({\r\n    indicator: {\r\n        backgroundColor: \"#1890ff\",\r\n        opacity: 0.5,\r\n        width: \"190px\",\r\n        zIndex: 5,\r\n        display: \"none\",\r\n      }\r\n  }))(Tabs);\r\n\r\n  export default CustomTabs;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst CustomDialog = withStyles(theme => ({\r\n    root: {\r\n        minWidth: \"1250px\",\r\n        minHeight: \"1100px !important\",\r\n        height: \"100%\",\r\n    },\r\n    container: {\r\n        height: \"100vh\",\r\n        display: \"block\",\r\n    },\r\n    scrollBody: {\r\n        \"&:after\": {\r\n            height: \"100%\",\r\n        }\r\n    },\r\n    paperFullWidth: {\r\n        maxWidth: \"1280px\",\r\n        maxHeight: \"850px\",\r\n        minHeight: \"550px\",\r\n        width: \"calc(100% - 96px)\",\r\n        height: \"calc(100% - 96px)\",\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        border: \"none\",\r\n    },\r\n    paperScrollBody: {\r\n        verticalAlign: \"middle\",\r\n    },\r\n  }))(Dialog);\r\n  \r\n  export default CustomDialog;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport NamesSection from \"./sections/NamesSection\";\r\nimport WordExportSection from \"./sections/WordExportSection\";\r\nimport PositioningSection from \"./sections/PositioningSection\";\r\nimport ListSection from \"./sections/ListSection\";\r\nimport ReferencingSection from \"./sections/ReferencingSection\";\r\nimport TypographySection from \"./sections/TypographySection\";\r\nimport DistancesSection from \"./sections/DistancesSection\";\r\nimport FramesSection from \"./sections/FramesSection\";\r\nimport FillingSection from \"./sections/FillingSection\";\r\nimport TocSection from \"./sections/TocSection\";\r\nimport ShortCutsSection from \"./sections/ShortCutsSection\";\r\nimport TestSection from \"./sections/TestSection\";\r\n\r\nimport { changeDecoratorForm } from \"./actions\";\r\nimport Handlers from \"./Handlers\";\r\nimport theme from \"./theme\";\r\nimport CustomTab from \"./common/CustomTab\";\r\nimport CustomTabs from \"./common/CustomTabs\";\r\nimport CustomDialog from \"./common/CustomDialog\";\r\nimport { alignmentsMap } from \"./constants\";\r\nimport { \r\n    getCorrectColor, \r\n    getUnstyledText, \r\n    unicodeNumberToChar, \r\n    unicodeCharToNumber, \r\n    getListChars, \r\n} from \"./utils\";\r\n\r\n\r\nimport \"./style.css\";\r\n\r\nconst NewDecDialog = (props) => {\r\n    const { isOpen, onClose, updateForm, formState } = props;\r\n\r\n    const { \r\n        setStateProperty, \r\n        toggleStateProperty, \r\n        setNumber, \r\n        setColor, \r\n        setBullet, \r\n        setShortCut \r\n    } = Handlers(updateForm, formState);\r\n\r\n    const { \r\n        openedTab,\r\n        previewText,\r\n        decKey,\r\n        group,\r\n        groupToCreate,\r\n        active,\r\n        styleNameEn,\r\n        styleNameDe,\r\n        styleNameRu,\r\n        styleNameFr,\r\n        styleNameFrCa,\r\n        styleNameEs,\r\n        wordStyleName,\r\n        softReturn,\r\n        indentationalLevel,\r\n        backspaceActionWithContent,\r\n        backspaceActionWithContentStyle,\r\n        backspaceActionWithoutContent,\r\n        backspaceActionWithoutContentStyle,\r\n        returnActionNextSection,\r\n        returnActionEmptySection,\r\n        tabAction,\r\n        shiftTabAction,\r\n        isList,\r\n        listName,\r\n        orderLevel,\r\n        prefix,\r\n        suffix,\r\n        suffixDistance,\r\n        magicTabs,\r\n        listType,\r\n        listItem,\r\n        unicodeNumber,\r\n        unicodeChar,\r\n        numberingStyle,\r\n        continueNumbering,\r\n        allowRestartNumbering,\r\n        includePreviousFrom,\r\n        sideNumber,\r\n        sideNumberFont,\r\n        sideNumberAlignment,\r\n        sideNumberFontSize,\r\n        sideNumberFontColor,\r\n        sideNumberFillingColor,\r\n        sideNumberWidth,\r\n        sideNumberRadius,\r\n        referenceGroup,\r\n        referenceGroupToCreate,\r\n        font,\r\n        alignment,\r\n        fontSize,\r\n        fontColorName,\r\n        fontColor,\r\n        bold,\r\n        italic,\r\n        underlined,\r\n        stroke,\r\n        textTransform,\r\n        verticalAlign,\r\n        marginTop,\r\n        marginBottom,\r\n        firstRowIndent,\r\n        otherRowsIndent,\r\n        lineSpacing,\r\n        customLineSpacing,\r\n        wordSpacing,   \r\n        leftBorder,\r\n        rightBorder,\r\n        topBorder,\r\n        bottomBorder,\r\n        borderColorName,\r\n        borderColor,\r\n        borderThickness,\r\n        borderType,\r\n        fillingColorName,\r\n        fillingColor,\r\n        connectToPrevious,\r\n        tocIndentation,\r\n        shortCutWinView,\r\n        shortCutMacView,\r\n    } = formState;\r\n\r\n    const changeOpenedTab = setStateProperty(\"openedTab\");\r\n    const changeDecKey = setStateProperty(\"decKey\");\r\n    const changeGroup = setStateProperty(\"group\");\r\n    const changeGroupToCreate = setStateProperty(\"groupToCreate\");\r\n    const changeActive = toggleStateProperty(\"active\");\r\n    const changeStyleNameEn = setStateProperty(\"styleNameEn\");\r\n    const changeStyleNameDe = setStateProperty(\"styleNameDe\");\r\n    const changeStyleNameRu = setStateProperty(\"styleNameRu\");\r\n    const changeStyleNameFr = setStateProperty(\"styleNameFr\");\r\n    const changeStyleNameFrCa = setStateProperty(\"styleNameFrCa\");\r\n    const changeStyleNameEs = setStateProperty(\"styleNameEs\");\r\n    const changeWordStyleName = setStateProperty(\"wordStyleName\");\r\n    const changeSoftReturn = toggleStateProperty(\"softReturn\");\r\n    const changeIndentationalLevel = setStateProperty(\"indentationalLevel\")\r\n    const changeBackspaceActionWithContent = setStateProperty(\"backspaceActionWithContent\");\r\n    const changeBackspaceActionWithContentStyle = setStateProperty(\"backspaceActionWithContentStyle\");\r\n    const changeBackspaceActionWithoutContent = setStateProperty(\"backspaceActionWithoutContent\");\r\n    const changeBackspaceActionWithoutContentStyle = setStateProperty(\"backspaceActionWithoutContentStyle\");\r\n    const changeReturnActionNextSection = setStateProperty(\"returnActionNextSection\");\r\n    const changeReturnActionEmptySection = setStateProperty(\"returnActionEmptySectionStyle\")\r\n    const changeTabAction = setStateProperty(\"tabAction\");\r\n    const changeShiftTabAction = setStateProperty(\"shiftTabAction\");\r\n    const changeIsList = toggleStateProperty(\"isList\");\r\n    const changeListName = setStateProperty(\"listName\");\r\n    const changeOrderLevel = setStateProperty(\"orderLevel\");\r\n    const changePrefix = setStateProperty(\"prefix\");\r\n    const changeSuffix = setStateProperty(\"suffix\");\r\n    const changeSuffixDistance = setStateProperty(\"suffixDistance\");\r\n    const changeMagicTabs = toggleStateProperty(\"magicTabs\");\r\n    const changeListItem = setStateProperty(\"listItem\");\r\n    const changeNumberingStyle = setStateProperty(\"numberingStyle\");\r\n    const changeContinueNumbering = toggleStateProperty(\"continueNumbering\");\r\n    const changeAllowRestartNumbering = toggleStateProperty(\"allowRestartNumbering\");\r\n    const changeIncludePreviousFrom = setStateProperty(\"includePreviousFrom\");\r\n    const changeSideNumberFont = setStateProperty(\"sideNumberFont\");\r\n    const changeSideNumberAlignment = setStateProperty(\"sideNumberAlignment\");\r\n    const changeSideNumberFontSize = setNumber(\"sideNumberFontSize\");\r\n    const changeSideNumberFontColor = setColor(\"sideNumberFontColor\");\r\n    const changeSideNumberFillingColor = setColor(\"sideNumberFillingColor\");\r\n    const changeSideNumberWidth = setNumber(\"sideNumberWidth\");\r\n    const changeSideNumberRadius = setNumber(\"sideNumberRadius\");\r\n    const changeReferenceGroup = setStateProperty(\"referenceGroup\");\r\n    const changeReferenceGroupToCreate = setStateProperty(\"referenceGroupToCreate\");\r\n    const changeFont = setStateProperty(\"font\");\r\n    const changeAlignment = setStateProperty(\"alignment\");\r\n    const changeFontSize = setNumber(\"fontSize\");\r\n    const changeFontColorName = setStateProperty(\"fontColorName\");\r\n    const changeFontColor = setColor(\"fontColor\");\r\n    const changeBold = toggleStateProperty(\"bold\");\r\n    const changeItalic = toggleStateProperty(\"italic\");\r\n    const changeUnderlined = toggleStateProperty(\"underlined\");\r\n    const changeStroke = toggleStateProperty(\"stroke\");\r\n    const changeTextTransform = setStateProperty(\"textTransform\");\r\n    const changeVerticalAlign = setStateProperty(\"verticalAlign\");\r\n    const changeMarginTop = setNumber(\"marginTop\");\r\n    const changeMarginBottom = setNumber(\"marginBottom\");\r\n    const changeFirstRowIndent = setNumber(\"firstRowIndent\");\r\n    const changeOtherRowsIndent = setNumber(\"otherRowsIndent\");\r\n    const changeLineSpacing = setStateProperty(\"lineSpacing\");\r\n    const changeCustomLineSpacing = setNumber(\"customLineSpacing\");\r\n    const changeWordSpacing = setNumber(\"wordSpacing\");\r\n    const changeLeftBorder = toggleStateProperty(\"leftBorder\");\r\n    const changeRightBorder = toggleStateProperty(\"rightBorder\");\r\n    const changeTopBorder = toggleStateProperty(\"topBorder\");\r\n    const changeBottomBorder = toggleStateProperty(\"bottomBorder\");\r\n    const changeBorderColorName = setStateProperty(\"borderColorName\");\r\n    const changeBorderColor = setColor(\"borderColor\");\r\n    const changeBorderThickness = setNumber(\"borderThickness\");\r\n    const changeFillingColorName = setStateProperty(\"fillingColorName\");\r\n    const changeFillingColor = setColor(\"fillingColor\");\r\n    const changeConnectToPrevious = toggleStateProperty(\"connectToPrevious\");\r\n    const changeTocIndentation = setStateProperty(\"tocIndentation\");\r\n    const changeShortCutWin = setShortCut(\"shortCutWin\", \"shortCutWinView\");\r\n    const changeShortCutMac = setShortCut(\"shortCutMac\", \"shortCutMacView\", true);\r\n\r\n    const changePreviewText = e => {\r\n        const { value } = e.target;\r\n        if (value && value !== \"<div></div>\" && value !== \"<br>\") {\r\n            setStateProperty(\"previewText\")(null, getUnstyledText(value));\r\n        } else {\r\n            setStateProperty(\"previewText\")(null, `<div><br></div>`);\r\n        }\r\n    };\r\n\r\n    const changeListType = e => {\r\n        const { value } = e.target;\r\n        setStateProperty(\"listType\")(null, value);\r\n        if (value === \"ordered\" && suffix === \"\") {\r\n            setStateProperty(\"suffix\")(null, \".\");\r\n        } else if (value === \"unordered\" && suffix === \".\") {\r\n            setStateProperty(\"suffix\")(null, \"\");\r\n        }\r\n    };\r\n\r\n    const changeUnicodeNumber = e => {\r\n        const newUnicodeNumber = setColor(\"unicodeNumber\")(e);\r\n        const newUnicodeChar = newUnicodeNumber !== \"\" ? unicodeNumberToChar(newUnicodeNumber) : \"\";\r\n        setStateProperty(\"unicodeChar\")(null, newUnicodeChar);\r\n    };\r\n    \r\n    const changeUnicodeChar = e => {\r\n        const newUnicodeChar = setBullet(\"unicodeChar\")(e);\r\n        const newUnicodeNumber = newUnicodeChar !== \"\" ? unicodeCharToNumber(newUnicodeChar) : \"\";\r\n        setStateProperty(\"unicodeNumber\")(null, newUnicodeNumber);\r\n    };\r\n\r\n    const changeSideNumber = e => {\r\n        toggleStateProperty(\"sideNumber\")(e);\r\n        if (e.target.checked && suffix === \".\") {\r\n            setStateProperty(\"suffix\")(null, \"\");\r\n        } else if (!e.target.checked && suffix === \"\") {\r\n            setStateProperty(\"suffix\")(null, \".\");\r\n        }\r\n    };\r\n\r\n    const changeBorderType = e => {\r\n        setStateProperty(\"borderType\")(e);\r\n        if (e.target.value === \"double\" && borderThickness === \"2\") {\r\n            setStateProperty(\"borderThickness\")(null, \"3\");\r\n        }\r\n        if (e.target.value !== \"double\" && borderThickness === \"3\") {\r\n            setStateProperty(\"borderThickness\")(null, \"2\");\r\n        }\r\n        };\r\n\r\n    const previewFontColor = getCorrectColor(fontColor, \"f5f5f5\");\r\n    const previewFillingColor = getCorrectColor(fillingColor, \"f5f5f5\");\r\n    const previewAdditionalFillingColor = connectToPrevious ? previewFillingColor : \"f5f5f5\";\r\n    const indentsDifference = (firstRowIndent || 0) - (otherRowsIndent || 0);\r\n    const previewMarginLeft = otherRowsIndent ? `${otherRowsIndent >= 12 ? 12 : otherRowsIndent}cm` : 0;\r\n    const previewTextIndent = indentsDifference ? `${indentsDifference >= 12 ? 12 : indentsDifference}cm` : 0;\r\n\r\n    const previewStyle = {\r\n        fontSize: !fontSize ? \"0\" : `${fontSize <= 120 ? fontSize : 120}pt`,\r\n        color: `#${previewFontColor}`,\r\n        fontFamily: font,\r\n        alignItems: alignmentsMap[alignment],\r\n        textAlign: alignment,\r\n        fontWeight: bold ? \"bold\" : \"normal\",\r\n        fontStyle: italic ? \"italic\" : \"normal\",\r\n        textDecoration: `${underlined ? \"underline\" : \"\"}${stroke ? \" line-through\" : \"\"}`.trim() || \"none\",\r\n        verticalAlign,\r\n        textTransform: textTransform !== \"small-caps\" ? textTransform : \"none\",\r\n        fontVariant: textTransform === \"small-caps\" ? textTransform : \"normal\",\r\n        backgroundColor: `#${previewFillingColor}`,\r\n        backgroundImage:  `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        marginLeft: previewMarginLeft,\r\n        textIndent: previewTextIndent,\r\n        wordSpacing: `${wordSpacing || 0}pt`,\r\n        lineHeight: (lineSpacing !== \"custom\" ? lineSpacing : (!customLineSpacing ? \"1.15\" : `${customLineSpacing || 0}`)),\r\n        marginBottom: `${marginBottom || 0}pt`,\r\n        marginTop: `${marginTop || 0}pt`,\r\n    };\r\n\r\n    const previewProps = { previewText, changePreviewText, previewStyle };\r\n\r\n    const previewSideNumberFontColor = getCorrectColor(sideNumberFontColor, \"f5f5f5\");\r\n    const previewSideNumberFillingColor = getCorrectColor(sideNumberFillingColor, \"f5f5f5\");\r\n\r\n    const sideNumberStyle = (!sideNumber || listType === \"unordered\") ? {} : {\r\n        fontFamily: sideNumberFont,\r\n        textAlign: sideNumberAlignment,\r\n        fontSize: !sideNumberFontSize ? \"0\" : `${sideNumberFontSize <= 120 ? sideNumberFontSize : 120}pt`,\r\n        color: `#${previewSideNumberFontColor}`,\r\n        backgroundColor: `#${previewSideNumberFillingColor}`,\r\n        minWidth: `${sideNumberWidth || 0}pt`,\r\n        borderRadius: `${sideNumberRadius || 0}pt`,\r\n    };\r\n\r\n    const listPreviewProps = { \r\n        listChars: getListChars({\r\n                isOrderedList: listType === \"ordered\", \r\n                numberingStyle, \r\n                listItem,\r\n                unicodeChar,\r\n            }),\r\n        listPreviewStyle: previewStyle,\r\n        prefix, \r\n        suffix, \r\n        suffixDistance,\r\n        sideNumberStyle,\r\n    };\r\n\r\n    const namesSectionProps = {\r\n        decKey, changeDecKey,\r\n        group, changeGroup,\r\n        newGroup: groupToCreate, changeGroupToCreate,\r\n        active, changeActive,\r\n        styleNameEn, changeStyleNameEn,\r\n        styleNameDe, changeStyleNameDe,\r\n        styleNameRu, changeStyleNameRu,\r\n        styleNameFr, changeStyleNameFr,\r\n        styleNameFrCa, changeStyleNameFrCa,\r\n        styleNameEs, changeStyleNameEs,\r\n    }; \r\n\r\n    const wordExportProps = {\r\n        wordStyleName, changeWordStyleName,\r\n        softReturn, changeSoftReturn,\r\n    };\r\n\r\n    const positioningSectionProps = {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithContentStyle, changeBackspaceActionWithContentStyle,\r\n        backspaceActionWithoutContent, changeBackspaceActionWithoutContent,\r\n        backspaceActionWithoutContentStyle, changeBackspaceActionWithoutContentStyle,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    };\r\n\r\n    const listSectionProps = { \r\n        listPreviewProps,\r\n        isList, changeIsList, \r\n        listName, changeListName,\r\n        orderLevel, changeOrderLevel,\r\n        prefix, changePrefix,\r\n        suffix, changeSuffix,\r\n        suffixDistance, changeSuffixDistance,\r\n        magicTabs, changeMagicTabs,\r\n        listType, changeListType, \r\n        listItem, changeListItem,\r\n        unicodeNumber, changeUnicodeNumber,\r\n        unicodeChar, changeUnicodeChar,\r\n        numberingStyle, changeNumberingStyle,\r\n        continueNumbering, changeContinueNumbering,\r\n        allowRestartNumbering, changeAllowRestartNumbering,\r\n        includePreviousFrom, changeIncludePreviousFrom,\r\n        sideNumber, changeSideNumber,\r\n        sideNumberFont, changeSideNumberFont,\r\n        sideNumberAlignment, changeSideNumberAlignment,\r\n        sideNumberFontSize, changeSideNumberFontSize,\r\n        sideNumberFontColor, changeSideNumberFontColor,\r\n        sideNumberFillingColor, changeSideNumberFillingColor,\r\n        sideNumberWidth, changeSideNumberWidth,\r\n        sideNumberRadius, changeSideNumberRadius,\r\n    };\r\n\r\n    const referencingSectionProps = {\r\n        referenceGroup, changeReferenceGroup,\r\n        newGroup: referenceGroupToCreate, changeReferenceGroupToCreate,\r\n    };\r\n\r\n    const typographySectionProps = { \r\n        previewProps,\r\n        font, changeFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    };\r\n\r\n    const distancesSectionProps = {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    };\r\n\r\n    const framesSectionProps = { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n    };\r\n\r\n    const fillingSectionProps = { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n    };\r\n\r\n    const tocSectionProps = {\r\n        tocIndentation, changeTocIndentation,\r\n    };\r\n\r\n    const shortCutsSectionProps = {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    };\r\n    \r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CustomDialog\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                scroll=\"body\"\r\n                className=\"paragraphDecorators-dialog\"\r\n                fullWidth={true}\r\n                maxWidth={false}\r\n                id=\"dialog\"\r\n            >\r\n                <div className=\"header\">\r\n                    <DialogTitle className=\"header-title\">\r\n                        <p>Create new paragraph decorator</p>\r\n                    </DialogTitle>\r\n                    <div className=\"header-buttons\">\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            onClick={onClose}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {}}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <DialogContent className=\"content\">\r\n                    <div className=\"content-leftSide\">\r\n                        <CustomTabs \r\n                            className=\"dialogTabs\"\r\n                            value={openedTab} \r\n                            onChange={changeOpenedTab} \r\n                            orientation=\"vertical\"\r\n                            color=\"primary\"\r\n                            indicatorColor=\"primary\"\r\n                        >\r\n                            <CustomTab className=\"dialogTab\" label=\"Names\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"WORD export\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Positioning\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"List\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Referencing\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Typography\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Distances\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Frames\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Filling\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"ToC\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Short cuts\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Test\" />\r\n                        </CustomTabs>\r\n                    </div>\r\n                    <div className=\"content-rightSide\">\r\n                        { openedTab === 0 && <NamesSection {...namesSectionProps} /> }\r\n                        { openedTab === 1 && <WordExportSection {...wordExportProps} /> }\r\n                        { openedTab === 2 && <PositioningSection {...positioningSectionProps} /> }\r\n                        { openedTab === 3 && <ListSection {...listSectionProps} />}\r\n                        { openedTab === 4 && <ReferencingSection {...referencingSectionProps} /> }\r\n                        { openedTab === 5 && <TypographySection {...typographySectionProps} /> }\r\n                        { openedTab === 6 && <DistancesSection {...distancesSectionProps} /> }\r\n                        { openedTab === 7 && <FramesSection {...framesSectionProps} /> }\r\n                        { openedTab === 8 && <FillingSection {...fillingSectionProps} /> }\r\n                        { openedTab === 9 && <TocSection {...tocSectionProps} /> }\r\n                        { openedTab === 10 && <ShortCutsSection {...shortCutsSectionProps} /> }\r\n                        { openedTab === 11 && <TestSection {...typographySectionProps} /> }\r\n                    </div>\r\n                </DialogContent>\r\n            </CustomDialog>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { formState: state };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(changeDecoratorForm(payload)),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewDecDialog);","export const CHANGE_DECORATOR_FORM = \"CHANGE_DECORATOR_FORM\";\r\nexport const CLEAR_DECORATOR_FORM = \"CLEAR_DECORATOR_FORM\";\r\n\r\nexport const changeDecoratorForm = payload => {\r\n    return {\r\n        type: CHANGE_DECORATOR_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\n\r\nexport const clearDecoratorForm = payload => {\r\n    return {\r\n        type: CLEAR_DECORATOR_FORM,\r\n        payload,\r\n    };\r\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport NewDecDialog from \"./components/NewDecDialog\";\nimport { clearDecoratorForm } from \"./components/NewDecDialog/actions\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n    state = {\n        isOpen: true,\n    };\n\n    handleClick = () => {\n        this.setState(({ isOpen }) => {\n            return {\n                isOpen: !isOpen\n            };\n        });\n    };\n\n    onClose = () => {\n      this.setState({ isOpen: false });\n      this.props.clearForm();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <button onClick={this.handleClick}>Open</button>\n                <NewDecDialog \n                    isOpen={this.state.isOpen}\n                    onClose={this.onClose}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        clearForm: () => dispatch(clearDecoratorForm()),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { sampleText } from \"./constants\";\r\n\r\nconst initialState = { \r\n    openedTab: 2,\r\n    previewText: sampleText,\r\n    decKey: \"\",\r\n    group: \"\",\r\n    groupToCreate: \"\",\r\n    active: false,\r\n    styleNameEn: \"\",\r\n    styleNameDe: \"\",\r\n    styleNameRu: \"\",\r\n    styleNameFr: \"\",\r\n    styleNameFrCa: \"\",\r\n    styleNameEs: \"\",\r\n    wordStyleName: \"\",\r\n    softReturn: false,\r\n    indentationalLevel: \"\",\r\n    backspaceActionWithContent: \"merge\",\r\n    backspaceActionWithContentStyle: \"default\",\r\n    backspaceActionWithoutContent: \"apply_other_pd\",\r\n    backspaceActionWithoutContentStyle: \"default\",\r\n    returnActionNextSection: \"default\",\r\n    returnActionEmptySection: \"default\",\r\n    tabAction: \"\",\r\n    shiftTabAction: \"\",\r\n    isList: false,\r\n    listName: \"\",\r\n    orderLevel: \"\",\r\n    prefix: \"\",\r\n    suffix: \"\",\r\n    suffixDistance: \"0.25\",\r\n    magicTabs: false,\r\n    listType: \"unordered\",\r\n    listItem: \"bulletpoint\",\r\n    unicodeNumber: \"\",\r\n    unicodeChar: \"\",\r\n    numberingStyle: \"decimal\",\r\n    continueNumbering: false,\r\n    allowRestartNumbering: false,\r\n    includePreviousFrom: \"\",\r\n    sideNumber: false,\r\n    sideNumberFont: \"Roboto\",\r\n    sideNumberAlignment: \"center\",\r\n    sideNumberFontSize: \"12\",\r\n    sideNumberFontColor: \"FFF\",\r\n    sideNumberFillingColor: \"1E88E5\",\r\n    sideNumberWidth: \"20\",\r\n    sideNumberRadius: \"10\",\r\n    referenceGroup: \"\",\r\n    referenceGroupToCreate: \"\",\r\n    font: \"Roboto\",\r\n    alignment: \"left\",\r\n    fontSize: \"12\",\r\n    fontColorName: \"Black\",\r\n    fontColor: \"000\",\r\n    bold: false,\r\n    italic: false,\r\n    underlined: false,\r\n    stroke: false,\r\n    textTransform: \"none\",\r\n    verticalAlign: \"baseline\",\r\n    marginTop: \"6\",\r\n    marginBottom: \"6\",\r\n    firstRowIndent: \"0\",\r\n    otherRowsIndent: \"0\",\r\n    lineSpacing: \"1.15\",\r\n    customLineSpacing: \"\",\r\n    wordSpacing: \"0\",   \r\n    leftBorder: false,\r\n    rightBorder: false,\r\n    topBorder: false,\r\n    bottomBorder: false,\r\n    borderColorName: \"Red\",\r\n    borderColor: \"f00\",\r\n    borderThickness: \"2\",\r\n    borderType: \"solid\",\r\n    fillingColorName: \"\",\r\n    fillingColor: \"\",\r\n    connectToPrevious: false,\r\n    tocIndentation: \"\",\r\n    shortCutWin: \"\",\r\n    shortCutWinView: \"\",\r\n    shortCutMac: \"\",\r\n    shortCutMacView: \"\",\r\n};\r\n\r\nexport default initialState;","import { CHANGE_DECORATOR_FORM, CLEAR_DECORATOR_FORM } from \"../components/NewDecDialog/actions\";\r\nimport initialState from \"../components/NewDecDialog/initialState\";\r\n\r\nconst decoratorFormReducer = (state = initialState, action) =>  {\r\n    switch (action.type) {\r\n        case CHANGE_DECORATOR_FORM:\r\n            return { ...state, ...action.payload };\r\n        case CLEAR_DECORATOR_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default decoratorFormReducer;","import { createStore } from \"redux\";\r\nimport decoratorFormReducer from \"./reducers/decoratorFormReducer\";\r\n\r\nexport default createStore(\r\n    decoratorFormReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}