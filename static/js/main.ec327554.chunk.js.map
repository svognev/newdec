{"version":3,"sources":["components/NewDecDialog/common/CustomInput.js","components/NewDecDialog/common/NewGroupDialog.js","components/NewDecDialog/common/LabelWithAsterisk.js","components/NewDecDialog/hoc/withNewGroupControl.js","components/NewDecDialog/helpers/DecDataParser.js","components/NewDecDialog/helpers/isFontAvailable.js","components/NewDecDialog/helpers/getShortCutUtils.js","components/NewDecDialog/constants/emptyDecFormState.js","components/NewDecDialog/constants/decoratorsList.js","components/NewDecDialog/constants/fontsSet.js","components/NewDecDialog/constants/validationData.js","components/NewDecDialog/constants/constants.js","components/NewDecDialog/helpers/validationFunctions.js","components/NewDecDialog/helpers/helpers.js","components/NewDecDialog/actions/index.js","components/NewDecDialog/sections/NamesSection.js","components/NewDecDialog/sections/WordExportSection.js","components/NewDecDialog/common/CustomInputShort.js","components/NewDecDialog/sections/PositioningSection/BackSpaceActionInput.js","components/NewDecDialog/sections/PositioningSection/index.js","components/NewDecDialog/sections/PositioningSection/PositioningSection.js","components/NewDecDialog/common/Preview/ListPreview.js","components/NewDecDialog/common/ColorField/index.js","components/NewDecDialog/common/ColorField/ColorField.js","components/NewDecDialog/common/FontSelectFields/index.js","components/NewDecDialog/common/FontSelectFields/FontSelectFields.js","components/NewDecDialog/sections/ListSection/ListSection.js","components/NewDecDialog/sections/ListSection/index.js","components/NewDecDialog/sections/ReferencingSection.js","components/NewDecDialog/Handlers.js","components/NewDecDialog/common/ContentEditable.js","components/NewDecDialog/common/Preview/Preview.js","components/NewDecDialog/common/Preview/index.js","components/NewDecDialog/sections/TypographySection/index.js","components/NewDecDialog/sections/TypographySection/TypographySection.js","components/NewDecDialog/sections/DistancesSection.js","components/NewDecDialog/sections/FramesSection/FrameTypeInput.js","components/NewDecDialog/sections/FramesSection/index.js","components/NewDecDialog/sections/FramesSection/FramesSection.js","components/NewDecDialog/sections/FillingSection.js","components/NewDecDialog/sections/TocSection.js","components/NewDecDialog/sections/ShortCutsSection.js","components/NewDecDialog/sections/TestSection.js","components/NewDecDialog/theme.js","components/NewDecDialog/common/CustomTab.js","components/NewDecDialog/common/CustomErrorTab.js","components/NewDecDialog/common/CustomTabs.js","components/NewDecDialog/common/CustomDialog.js","components/NewDecDialog/index.js","actions.js","App.js","reducers/decoratorDialogReducer/isOpenReducer.js","reducers/decoratorDialogReducer/decoratorFormReducer.js","components/NewDecDialog/getInitialState.js","reducers/decoratorDialogReducer/validationErrorReducer.js","reducers/decoratorDialogReducer/isEditModeReducer.js","reducers/decoratorDialogReducer/openedTabReducer.js","reducers/decoratorDialogReducer/index.js","reducers/savedFormReducer.js","reducers/rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["CustomInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","minWidth","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","NewGroupDialog","state","props","currentGroup","groupType","nameEn","nameDe","nameRu","nameFr","nameFrCa","nameEs","groupKey","onInputChange","inputName","e","setState","target","value","onClose","hideDialog","onGroupSave","onSave","changeGroupSelect","trim","length","groupToSave","this","isOpen","isEditMode","titleText","buttonText","Dialog","className","open","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","variant","margin","onChange","DialogActions","Button","onClick","color","React","Component","LabelWithAsterisk","children","withNewGroupControl","ViewComponent","groupSelect","newGroup","savedNewGroup","handleClick","newValue","DecDataParser","dec","mapDecFields","width","getShortCutUtils","systemName","keyCode","preventDefault","stopPropagation","ShortcutUtils","isDeadKey","prevent","deleteKey","shortCut","ctrlKey","shiftKey","altKey","metaKey","shortCutForView","convertShortcutToMeta","indexOf","isCmdPressed","stringValue","Object","keys","CMD_KEYS","forEach","key","keycode","removeDuplicateShortcuts","decorators","newPdShortcut","removed","decoratorKey","item","item_type","isEqual","keyboard_shortcut","childItems","child_items","itemKey","style","removeDuplicateShortcutsInInlineStyle","inlineStyles","styleKey","body","document","container","createElement","innerHTML","Array","cssText","getWidth","appendChild","clientWidth","removeChild","monoWidth","serifWidth","sansWidth","isFontAvailable","font","HOLDER","autoFillingRequiredFields","sideNumberFontSize","sideNumberFontColor","sideNumberFillingColor","sideNumberWidth","sideNumberRadius","fontColor","marginBottom","firstRowIndent","otherRowsIndent","wordSpacing","borderThickness","emptyDecFormState","decKey","group","groupToCreate","active","decNameEn","decNameDe","decNameRu","decNameFr","decNameFrCa","decNameEs","wordStyleName","softReturn","indentationalLevel","backspaceActionWithContent","backspaceActionWithContentStyle","returnActionNextSection","returnActionEmptySection","tabAction","shiftTabAction","isList","listName","orderLevel","prefix","suffix","suffixDistance","magicTabs","listType","listItem","unicodeNumber","unicodeChar","numberingStyle","continueNumbering","allowRestartNumbering","includePreviousFrom","sideNumber","sideNumberFont","customSideNumberFont","sideNumberAlignment","referenceGroup","referenceGroupToCreate","customFont","alignment","fontColorName","bold","italic","underlined","stroke","textTransform","verticalAlign","lineSpacing","customLineSpacing","leftBorder","rightBorder","topBorder","bottomBorder","borderColorName","borderType","fillingColorName","fillingColor","connectToPrevious","tocIndentation","shortCutWin","shortCutWinView","shortCutMac","shortCutMacView","decoratorsList","name","fontSet","namesSectionRequiredFields","wordExportSectionRequiredFields","listSectionRequiredFields","tabsErrorInitialState","namesSection","wordExportSection","listSection","sectionsTabNumbers","tabName","tabNumber","alignmentsMap","center","left","right","justify","backSpaceActions","bulletNamesMap","bulletpoint","dash","star","listStyleTypes","numberingSets","decimal","sampleText","getNamesSectionErrorState","form","every","fieldName","getWordExportSectionErrorState","getListSectionErrorState","getCorrectColor","hex","correctColor","selectAllOnClick","defaultValue","focus","select","getOffset","alignType","parseFloat","slice","unicodeNumberToChar","String","fromCharCode","parseInt","unicodeCharToNumber","charCodeAt","toString","scrollToBottom","setTimeout","getElementsByClassName","scrollTo","top","Number","MAX_SAFE_INTEGER","behavior","changeAndScroll","changeFunction","getListChars","isOrderedList","newBullet","fill","focusInput","inputRef","timeout","current","getPreviewFont","fillMissedFields","currentFormState","formStateWithoutMissedFields","updateDecoratorForm","payload","type","clearDecoratorForm","updateValidationError","openDialog","dispatch","closeDialog","setValue","propName","secondArg","undefined","toggleValue","checked","setBullet","setColor","filteredInput","replace","match","setNumber","NamesSection","decKeyInputRef","createRef","decNameEnInputRef","focusOnEmptyField","onGroupChange","changeGroupToCreate","changeGroup","validationError","prevprops","formState","changeDecKey","changeActive","changeDecNameEn","changeDecNameDe","changeDecNameRu","changeDecNameFr","changeDecNameFrCa","changeDecNameEs","newGroupName","error","NativeSelect","Checkbox","connect","decoratorDialog","changeWordStyleName","changeSoftReturn","autoFocus","CustomInputShort","BackSpaceActionInput","PositioningSection","changeIndentationalLevel","changeBackspaceActionWithContent","changeBackspaceActionWithContentStyle","changeBackspaceActionWithoutContent","changeBackspaceActionWithoutContentStyle","changeReturnActionNextSection","changeReturnActionEmptySection","changeTabAction","changeShiftTabAction","id","map","action","Fade","in","ListPreview","listPreviewStyle","listChars","sideNumberStyle","listItemsBeginnings","listChar","listItemBeginingStyle","marginRight","ColorField","hideColorPicker","showColorPicker","colorPickerHandler","changeColor","colorCode","changeColorCode","defaultColorCode","required","bottomAligned","colorError","inputError","pickerColor","colorSampleStyle","colorPickerClassName","InputProps","startAdornment","InputAdornment","onChangeComplete","disableAlpha","FontSelectFields","textInput","focusTextInput","onFontChange","changeFont","extraFunction","changeCustomFont","availableFonts","filter","fontName","customFontFieldState","placeholder","ListSection","listNameInputRef","unicodeCharInputRef","onIsListChange","changeListName","changeIsList","onListTypeChange","changeListType","changeSuffix","onListItemChange","changeListItem","onUnicodeNumberChange","newUnicodeNumber","changeUnicodeNumber","newUnicodeChar","changeUnicodeChar","onUnicodeCharChange","onSideNumberChange","changeSideNumber","listPreviewProps","changeOrderLevel","changePrefix","changeSuffixDistance","changeMagicTabs","changeNumberingStyle","changeContinueNumbering","changeAllowRestartNumbering","changeIncludePreviousFrom","changeSideNumberFont","changeCustomSideNumberFont","changeSideNumberAlignment","changeSideNumberFontSize","changeSideNumberFontColor","changeSideNumberFillingColor","changeSideNumberWidth","changeSideNumberRadius","mainListSettingsState","unorderedListSettingsState","orderedListSettingsState","sideNumberSettingsState","entries","ReferencingSection","onXrefChange","xref","changeReferenceGroupToCreate","changeReferenceGroup","Handlers","update","prevValue","console","log","setShortCut","valuePropName","viewPropName","isMac","convertEventToShortCut","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","q","propertyIsEnumerable","normalizeHtml","str","replaceCaret","el","findLastTextNode","node","nodeType","Node","TEXT_NODE","childNodes","textNode","isTargetFocused","activeElement","nodeValue","sel","window","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","ContentEditable","arguments","lastHtml","html","innerRef","getEl","emitChange","originalEvt","evt","assign","_a","tagName","ref","onInput","onBlur","onKeyUp","onKeyDown","contentEditable","disabled","dangerouslySetInnerHTML","__html","nextProps","deepEqual","Preview","previewText","changePreviewText","previewStyle","editableContentStyle","outline","selectAllChildren","TypographySection","previewProps","changeAlignment","changeFontSize","changeFontColorName","changeFontColor","changeBold","changeItalic","changeUnderlined","changeStroke","changeTextTransform","changeVerticalAlign","FormControlLabel","control","label","labelPlacement","RadioGroup","row","Radio","DistancesSection","changeMarginTop","changeMarginBottom","changeFirstRowIndent","changeOtherRowsIndent","changeLineSpacing","changeCustomLineSpacing","changeWordSpacing","FrameTypeInput","FramesSection","changeLeftBorder","changeRightBorder","changeTopBorder","changeBottomBorder","changeBorderColorName","changeBorderColor","changeBorderThickness","changeBorderType","previewBorderWidth","isNaN","borderLeft","marginLeft","borderRight","borderTop","borderBottom","Select","MenuItem","FillingSection","changeFillingColorName","changeFillingColor","changeConnectToPrevious","TocSection","changeTocIndentation","ShortCutSection","changeShortCutWin","changeShortCutMac","createMuiTheme","primary","blue","secondary","pink","CustomTab","overflow","opacity","selected","Tab","CustomErrorTab","textDecoration","CustomTabs","indicator","zIndex","display","Tabs","CustomDialog","minHeight","height","scrollBody","paperFullWidth","maxHeight","flexDirection","paperScrollBody","openedTab","updateForm","clearForm","switchTab","switchDecDialogTab","saveForm","saveDecoratorForm","previewFontColor","previewFillingColor","previewAdditionalFillingColor","indentsDifference","previewMarginLeft","previewTextIndent","alignItems","textAlign","fontWeight","fontStyle","fontVariant","backgroundImage","textIndent","lineHeight","styledText","unstyledText","getUnstyledText","previewSideNumberFontColor","previewSideNumberFillingColor","listSectionProps","typographySectionProps","distancesSectionProps","framesSectionProps","fillingSectionProps","tocSectionProps","shortCutsSectionProps","ThemeProvider","aria-labelledby","scroll","tabsErrorState","tabsState","clone","getTabsErrorState","getTabNumberToSwitch","formToSave","parseToSend","orientation","indicatorColor","ShortCutsSection","TestSection","savedForm","clearSavedForm","parseToEdit","isOpenReducer","initialState","currentDecFormState","getInitialState","decoratorFormReducer","validationErrorReducer","isEditModeReducer","openedTabReducer","decoratorDialogReducer","combineReducers","savedFormReducer","rootReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec327554.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInput = withStyles(theme => ({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      minWidth: \"183px\",\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInput;","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass NewGroupDialog extends React.Component {\r\n\r\n    state = this.props.currentGroup \r\n          ? this.props.currentGroup \r\n          : this.props.groupType !== \"xref\" \r\n          ? { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", }\r\n          : { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", groupKey: \"\", };\r\n    \r\n    onInputChange = inputName => e => {\r\n        this.setState({ \r\n            [inputName]: e.target.value \r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        const {currentGroup, hideDialog } = this.props;\r\n        this.setState({ ...currentGroup });\r\n        hideDialog()\r\n    };\r\n\r\n    onGroupSave = () => {\r\n        const { onSave, changeGroupSelect, hideDialog, groupType } = this.props;\r\n        if (this.state.nameEn.trim().length && (groupType !== \"xref\" || this.state.groupKey.trim().length)) {\r\n            const groupToSave = {\r\n                nameEn: this.state.nameEn.trim(),\r\n                nameDe: this.state.nameDe.trim(),\r\n                nameRu: this.state.nameRu.trim(),\r\n                nameFr: this.state.nameFr.trim(),\r\n                nameFrCa: this.state.nameFrCa.trim(),\r\n                nameEs: this.state.nameEs.trim(),\r\n            };\r\n            if (groupType === \"xref\") {\r\n                groupToSave.groupKey = this.state.groupKey.trim();\r\n            }\r\n            onSave(groupToSave);\r\n            changeGroupSelect(groupToSave)(null, this.state.nameEn.trim());\r\n            hideDialog();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isOpen, isEditMode } = this.props;\r\n        const { onInputChange, onGroupSave, onClose } = this;\r\n        const titleText = `${isEditMode ? \"Edit\" : \"Create\"} new ${this.props.groupType === \"xref\" ? \"reference \" : \"\"}group`\r\n        const buttonText = isEditMode ? \"Save\" : \"Create\";\r\n        return (\r\n            <Dialog\r\n                className=\"paragraphDecorators-dialog\"\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <DialogTitle>{titleText}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        {\r\n                            this.props.groupType === \"xref\" \r\n                            &&\r\n                            <>\r\n                                <span>Group Key</span>\r\n                                <TextField \r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                    onChange={onInputChange(\"groupKey\")}\r\n                                    value={this.state.groupKey}\r\n                                />\r\n                            </>\r\n                        }\r\n                        <span>Name EN</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEn\")}\r\n                            value={this.state.nameEn}\r\n                        />\r\n                        <span>Name DE</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameDe\")} \r\n                            value={this.state.nameDe}\r\n                        />                        \r\n                        <span>Name RU</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameRu\")} \r\n                            value={this.state.nameRu}\r\n                        />                        \r\n                        <span>Name FR<br/><span className=\"smallText\">France</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFr\")} \r\n                            value={this.state.nameFr}\r\n                        />\r\n                        <span>Name FR<br/><span className=\"smallText\">Canada</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFrCa\")} \r\n                            value={this.state.nameFrCa}\r\n                        />\r\n                        <span>Name ES</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEs\")} \r\n                            value={this.state.nameEs}\r\n                        />                  \r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color=\"default\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={onGroupSave} color=\"primary\">\r\n                        {buttonText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n};\r\n\r\nexport default NewGroupDialog;","import React from \"react\";\r\n\r\nconst LabelWithAsterisk = ({ children }) => {\r\n    return (\r\n        <div className=\"labelWithAsterisk\">\r\n            <div className=\"labelWithAsterisk-labelBox\">\r\n                <span>{children}</span>\r\n            </div>\r\n            <div className=\"labelWithAsterisk-asteriskBox\">\r\n                <span className=\"labelWithAsterisk-asteriskMark\">*</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LabelWithAsterisk;","import React from \"react\";\r\n\r\nconst withNewGroupControl = (ViewComponent) => {\r\n    return class extends React.Component {\r\n        state = {\r\n            isOpen: false,\r\n            groupSelect: \"\",\r\n            newGroup: this.props.savedNewGroup || \"\",\r\n        }\r\n        \r\n        handleClick = () => {\r\n            this.setState(({ isOpen }) => {\r\n                return {\r\n                    isOpen: !isOpen\r\n                };\r\n            });\r\n        }\r\n    \r\n        onSave = newGroup => {\r\n            this.setState({ newGroup });\r\n        }\r\n    \r\n        changeGroupSelect = (newValue) => {\r\n            this.setState({\r\n                groupSelect: newValue,\r\n            });\r\n        }\r\n\r\n        hideDialog = () => {\r\n            this.setState({ isOpen: false });\r\n        }\r\n        \r\n        render() {\r\n            const { handleClick, onSave, changeGroupSelect, hideDialog } = this; \r\n            return ( <ViewComponent {...this.props} {...this.state} {...{ handleClick, onSave, changeGroupSelect, hideDialog }} /> );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withNewGroupControl;","class DecDataParser {\r\n    static parseToSend(dec) {\r\n        return dec;\r\n    }\r\n\r\n    static parseToEdit(dec) {\r\n        return dec;\r\n    }\r\n\r\n    static mapDecFields = {};\r\n}\r\n\r\nexport default DecDataParser;","const { body } = document;\r\nlet width;\r\n\r\nconst container = document.createElement('span');\r\ncontainer.innerHTML = Array(100).join('wi');\r\ncontainer.style.cssText = [\r\n    'position:absolute',\r\n    'width:auto',\r\n    'font-size:128px',\r\n    'left:-99999px'\r\n].join(' !important;');\r\n\r\nconst getWidth = fontFamily => {\r\n    container.style.fontFamily = fontFamily;\r\n\r\n    body.appendChild(container);\r\n    width = container.clientWidth;\r\n    body.removeChild(container);\r\n\r\n    return width;\r\n};\r\n\r\nconst monoWidth  = getWidth('monospace');\r\nconst serifWidth = getWidth('serif');\r\nconst sansWidth  = getWidth('sans-serif');\r\n\r\nconst isFontAvailable = font => {\r\n    return monoWidth !== getWidth(font + ',monospace') ||\r\n    sansWidth !== getWidth(font + ',sans-serif') ||\r\n    serifWidth !== getWidth(font + ',serif');\r\n};\r\n\r\nexport default isFontAvailable;","import keycode from \"keycode\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nconst getShortCutUtils = systemName => {\r\n  return class ShortcutUtils {  \r\n    static CMD_KEYS = {\r\n      altKey: systemName === \"MacOS\" ? \"Option\" : \"Alt\",\r\n      ctrlKey: systemName === \"MacOS\" ? \"Control\" : \"Ctrl\",\r\n      shiftKey: \"Shift\",\r\n      metaKey: \"Command\",\r\n    };\r\n  \r\n    static isDeadKey(e) {\r\n      return e.keyCode === 229;\r\n    }\r\n  \r\n    static prevent(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  \r\n    static convertEventToShortCut(e) {\r\n      if (ShortcutUtils.isDeadKey(e)) {\r\n        ShortcutUtils.prevent(e);\r\n        return { deleteKey: true };\r\n      }\r\n      ShortcutUtils.prevent(e);\r\n      const shortCut = {\r\n        keyCode: e.keyCode,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n        altKey: e.altKey,\r\n        metaKey: false,\r\n      };\r\n      if (systemName === \"MacOS\") {\r\n        shortCut.metaKey = e.metaKey;\r\n      }\r\n      const deleteKeys = [8, 46];\r\n      const cmdKeysCodes = [16, 91, 18, 17];\r\n      const shortCutForView = ShortcutUtils.convertShortcutToMeta(shortCut);\r\n      if (deleteKeys.indexOf(e.keyCode) > -1) {\r\n        return { deleteKey: true };\r\n      } else if (shortCutForView.isCmdPressed && cmdKeysCodes.indexOf(e.keyCode) === -1) {\r\n        return {\r\n          value: shortCut,\r\n          stringValue: shortCutForView.stringValue,\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n  \r\n    static convertShortcutToString(shortCut = {}) {\r\n      return ShortcutUtils.convertShortcutToMeta(shortCut).stringValue;\r\n    }\r\n  \r\n    static convertShortcutToMeta(shortCut = {}) {\r\n      let shortCutForView = \"\";\r\n      let isCmdPressed = false;\r\n      Object.keys(ShortcutUtils.CMD_KEYS).forEach((key) => {\r\n        if (shortCut && shortCut[key]) {\r\n          isCmdPressed = true;\r\n          shortCutForView += `${ShortcutUtils.CMD_KEYS[key]} + `;\r\n        }\r\n      });\r\n      if (shortCut && shortCut.keyCode) {\r\n        shortCutForView += keycode(shortCut.keyCode);\r\n      }\r\n      return { stringValue: shortCutForView, isCmdPressed };\r\n    }\r\n  \r\n    static removeDuplicateShortcuts = function (decorators, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(decorators).forEach((decoratorKey) => {\r\n        const item = decorators[decoratorKey];\r\n        const itemType = item.item_type;\r\n        if (itemType === \"style\") {\r\n          if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n            decorators[decoratorKey].keyboard_shortcut = null;\r\n            removed = true;\r\n          }\r\n        } else {\r\n          const childItems = item.child_items;\r\n          Object.keys(childItems).forEach((itemKey) => {\r\n            const style = childItems[itemKey];\r\n            if (isEqual(style.keyboard_shortcut, newPdShortcut)) {\r\n              style.keyboard_shortcut = null;\r\n              removed = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  \r\n    static removeDuplicateShortcutsInInlineStyle = function (inlineStyles, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(inlineStyles).forEach((styleKey) => {\r\n        const item = inlineStyles[styleKey];\r\n        if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n          inlineStyles[styleKey].keyboard_shortcut = null;\r\n          removed = true;\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  }\r\n};\r\n\r\nexport default getShortCutUtils;\r\n\r\n","export const HOLDER = \"HOLDER-POLDER\";\r\nexport const DEFAULT_FONT = \"Helvetica\";\r\n\r\nexport const autoFillingRequiredFields = {\r\n  sideNumberFontSize: \"12\",\r\n  sideNumberFontColor: \"FFF\",\r\n  sideNumberFillingColor: \"1E88E5\",\r\n  sideNumberWidth: \"20\",\r\n  sideNumberRadius: \"10\",\r\n  fontSize: \"12\",\r\n  fontColor: \"000\",\r\n  marginTop: \"6\",\r\n  marginBottom: \"6\",\r\n  firstRowIndent: \"0\",\r\n  otherRowsIndent: \"0\",\r\n  wordSpacing: \"0\",   \r\n  borderColor: \"f00\",\r\n  borderThickness: \"2\",\r\n};\r\n\r\nexport const emptyDecFormState = {\r\n  decKey: \"\",\r\n  group: \"\",\r\n  groupToCreate: \"\",\r\n  active: false,\r\n  decNameEn: \"\",\r\n  decNameDe: \"\",\r\n  decNameRu: \"\",\r\n  decNameFr: \"\",\r\n  decNameFrCa: \"\",\r\n  decNameEs: \"\",\r\n  wordStyleName: \"\",\r\n  softReturn: false,\r\n  indentationalLevel: \"\",\r\n  backspaceActionWithContent: \"merge\",\r\n  backspaceActionWithContentStyle: \"default\",\r\n  returnActionNextSection: \"default\",\r\n  returnActionEmptySection: \"default\",\r\n  tabAction: \"\",\r\n  shiftTabAction: \"\",\r\n  isList: false,\r\n  listName: HOLDER,\r\n  orderLevel: \"\",\r\n  prefix: \"\",\r\n  suffix: \"\",\r\n  suffixDistance: \"0.25\",\r\n  magicTabs: false,\r\n  listType: \"unordered\",\r\n  listItem: \"bulletpoint\",\r\n  unicodeNumber: \"\",\r\n  unicodeChar: \"\",\r\n  numberingStyle: \"decimal\",\r\n  continueNumbering: false,\r\n  allowRestartNumbering: false,\r\n  includePreviousFrom: \"\",\r\n  sideNumber: false,\r\n  sideNumberFont: DEFAULT_FONT,\r\n  customSideNumberFont: \"\",\r\n  sideNumberAlignment: \"center\",\r\n  referenceGroup: \"\",\r\n  referenceGroupToCreate: \"\",\r\n  font: DEFAULT_FONT,\r\n  customFont: \"\",\r\n  alignment: \"left\",\r\n  fontColorName: \"Black\",\r\n  bold: false,\r\n  italic: false,\r\n  underlined: false,\r\n  stroke: false,\r\n  textTransform: \"none\",\r\n  verticalAlign: \"baseline\",\r\n  lineSpacing: \"1.15\",\r\n  customLineSpacing: \"\",\r\n  leftBorder: false,\r\n  rightBorder: false,\r\n  topBorder: false,\r\n  bottomBorder: false,\r\n  borderColorName: \"Red\",\r\n  borderType: \"solid\",\r\n  fillingColorName: \"\",\r\n  fillingColor: \"\",\r\n  connectToPrevious: false,\r\n  tocIndentation: \"\",\r\n  shortCutWin: \"\",\r\n  shortCutWinView: \"\",\r\n  shortCutMac: \"\",\r\n  shortCutMacView: \"\",\r\n  ...autoFillingRequiredFields,\r\n};","const decoratorsList = [\r\n    { name: \"...\", value: \"\" },\r\n    { name: \"Text 1\", value: \"quick_text_1\" },\r\n    { name: \"Text 2\", value: \"quick_text_2\" },\r\n    { name: \"Text 3\", value: \"quick_text_3\" },\r\n    { name: \"Text 4\", value: \"quick_text_4\" },\r\n    { name: \"Text 5\", value: \"quick_text_5\" },\r\n    { name: \"Heading 1\", value: \"quick_heading_1\" },\r\n    { name: \"Heading 2\", value: \"quick_heading_2\" },\r\n    { name: \"Heading 3\", value: \"quick_heading_3\" },\r\n    { name: \"Heading 4\", value: \"quick_heading_4\" },\r\n    { name: \"Heading 5\", value: \"quick_heading_5\" },\r\n];\r\n\r\nexport default decoratorsList;","const fontSet = [ \r\n    \"Source Sans Pro\", \r\n    \"Dejavu Sans\", \r\n    \"Dejavu Serif\", \r\n    \"Open Sans\", \r\n    \"Georgia\", \r\n    \"Arial\", \r\n    \"Verdana\", \r\n    \"Times New Roman\",\r\n];\r\n\r\nexport default fontSet;","export const namesSectionRequiredFields = [\"decKey\", \"decNameEn\"];\r\n\r\nexport const wordExportSectionRequiredFields = [\"wordStyleName\"];\r\n\r\nexport const listSectionRequiredFields = [\"listName\"];\r\n\r\nexport const requiredFields = [ \r\n    ...namesSectionRequiredFields, \r\n    ...wordExportSectionRequiredFields, \r\n    ...listSectionRequiredFields, \r\n];\r\n\r\nexport const tabsErrorInitialState = {\r\n    namesSection: false,\r\n    wordExportSection: false,\r\n    listSection: false,\r\n};\r\n\r\nexport const sectionsTabNumbers = [\r\n    { tabName: \"namesSection\", tabNumber: 0 },\r\n    { tabName: \"wordExportSection\", tabNumber: 1},\r\n    { tabName: \"listSection\", tabNumber: 3 },\r\n];","export const alignmentsMap = {\r\n    center: \"center\",\r\n    left: \"flex-start\",\r\n    right: \"flex-end\",\r\n    justify: \"flex-start\",\r\n};\r\n\r\nexport const backSpaceActions = [\r\n    { key: 'merge', value: 'Merge' },\r\n    { key: 'apply_other_pd', value: 'Apply other PD' },\r\n    { key: 'remove_pd', value: 'Remove PD' },\r\n    { key: 'nothing', value: 'Nothing' }\r\n];\r\n\r\nexport const bulletNamesMap = {\r\n    bulletpoint: \"•\",\r\n    dash: \"—\",\r\n    star: \"★\",\r\n};\r\n\r\nexport const listStyleTypes = [\r\n    { name: '1, 2, 3', value: 'decimal' },\r\n    {  name: 'A, B, C', value: 'upper-alpha' },\r\n    {  name: 'a, b, c', value: 'lower-alpha' },\r\n    {  name: 'I, II, III', value: 'upper-roman' },\r\n    {  name: 'i, ii, iii', value: 'lower-roman' },\r\n];\r\n\r\nexport const numberingSets = {\r\n    decimal: [\"1\", \"2\", \"3\", \"4\"],\r\n    \"upper-alpha\": [\"A\", \"B\", \"C\", \"D\"],\r\n    \"lower-alpha\": [\"a\", \"b\", \"c\", \"d\"],\r\n    \"upper-roman\": [\"I\", \"II\", \"III\", \"IV\"],\r\n    \"lower-roman\": [\"i\", \"ii\", \"iii\", \"iv\"],\r\n};\r\n\r\nexport const sampleText = `<div>Sample Text. You can change it.</div><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ornare maximus vehicula. Duis nisi velit, dictum id mauris vitae, lobortis pretium quam.</div>`;\r\n","import { clone } from \"lodash\";\r\n\r\nimport {\r\n    namesSectionRequiredFields,\r\n    wordExportSectionRequiredFields,\r\n    listSectionRequiredFields,\r\n    tabsErrorInitialState,\r\n    sectionsTabNumbers,\r\n} from \"../constants\";\r\n\r\nexport const getNamesSectionErrorState = form => {\r\n    return !namesSectionRequiredFields.every(fieldName => form[fieldName]);\r\n};\r\n\r\nexport const getWordExportSectionErrorState = form => {\r\n    return !wordExportSectionRequiredFields.every(fieldName => form[fieldName]);\r\n}\r\n\r\nexport const getListSectionErrorState = form => {\r\n    return !listSectionRequiredFields.every(fieldName => form[fieldName]);\r\n}\r\n\r\nexport const getTabsErrorState = form => {\r\n    const tabsState = clone(tabsErrorInitialState);\r\n\r\n    if (getNamesSectionErrorState(form)) {\r\n        tabsState.namesSection = true;\r\n    }\r\n\r\n    if (getWordExportSectionErrorState(form)) {\r\n        tabsState.wordExportSection = true;\r\n    }\r\n\r\n    if (getListSectionErrorState(form)) {\r\n        tabsState.listSection = true;\r\n    }\r\n\r\n    for (let tabName in tabsState) {\r\n        if (tabsState[tabName]) {\r\n            return tabsState;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport const getTabNumberToSwitch = tabsErrorState => {\r\n    for (const { tabName, tabNumber } of sectionsTabNumbers) {\r\n        if (tabsErrorState[tabName]) {\r\n            return tabNumber;\r\n        }\r\n    }\r\n};","import { \r\n    numberingSets, \r\n    bulletNamesMap, \r\n    autoFillingRequiredFields, \r\n    DEFAULT_FONT, \r\n    sectionsTabNumbers,\r\n} from \"../constants\";\r\nimport isFontAvailable from \"./isFontAvailable\";\r\n\r\nexport const getCorrectColor = (hex, backgroundColor = \"FFF\") => {\r\n    const correctColor = typeof hex === \"string\" && (hex.length === 6 || hex.length === 3) ? hex : backgroundColor;\r\n    return correctColor;\r\n};\r\n\r\nexport const selectAllOnClick = defaultValue => e => {\r\n    if (!defaultValue || e.target.value === defaultValue) {\r\n        e.target.focus();\r\n        e.target.select();\r\n    }\r\n};\r\n\r\nexport const getOffset = (alignType, fontSize) => {\r\n    if (alignType === \"baseline\") {\r\n        return 0;\r\n    }\r\n    return (parseFloat(fontSize.slice()) / 2) * (alignType === \"sub\" ? 1 : -1);\r\n};\r\n\r\nexport const getUnstyledText = styledText => {\r\n    const unstyledText = styledText.replace(/<\\/(.*?)>/gm, \"</div>\").replace(/(?!(?:<\\/(.*?)>|<br(.*?)>)$)<(.*?)>/gm, \"<div>\");\r\n    return unstyledText[0] !== \"<\" ? `<div>${unstyledText}</div>` : unstyledText;\r\n};\r\n\r\nexport const unicodeNumberToChar = unicodeNumber => {\r\n    return String.fromCharCode(parseInt(unicodeNumber, 16));\r\n};\r\n\r\nexport const unicodeCharToNumber = unicodeChar => {\r\n    return unicodeChar.charCodeAt(0).toString(16);\r\n};\r\n\r\nexport const scrollToBottom = className => {\r\n    setTimeout(() => { document.getElementsByClassName(className)[0].scrollTo({\r\n        top: Number.MAX_SAFE_INTEGER,\r\n        behavior: \"smooth\",\r\n    })}, 0);\r\n};\r\n\r\nexport const changeAndScroll = changeFunction => (...args) => {\r\n    changeFunction(...args);\r\n    scrollToBottom(\"content-rightSide\");\r\n};\r\n\r\nexport const selectAllEditableContent = className => e => {\r\n    if (e.target.className === className) {\r\n        window.getSelection().selectAllChildren(e.target.children[0]);\r\n    }\r\n};\r\n\r\nexport const getListChars = ({ isOrderedList, numberingStyle, listItem, unicodeChar }) => {\r\n    if (isOrderedList) {\r\n        return numberingSets[numberingStyle];\r\n    }\r\n    const newBullet = bulletNamesMap[listItem] || unicodeChar;\r\n    return Array(4).fill(newBullet);\r\n};\r\n\r\nexport const detectOS = () => {\r\n    if (navigator && navigator.appVersion) {\r\n        if (navigator.appVersion.indexOf(\"Win\") !== -1) {\r\n            return \"Windows\";\r\n        } else if (navigator.appVersion.indexOf(\"Mac\") !== -1) {\r\n            return \"MacOS\";\r\n        }\r\n    }\r\n};\r\n\r\nexport const focusInput = (inputRef, timeout = 300) => {\r\n    setTimeout(() => {\r\n        inputRef.current.focus();\r\n    }, timeout);\r\n};\r\n\r\nexport const getErrorSections = (requiredFields = [], ...sectionPropsSets) => {\r\n    return sectionPropsSets.map(sectionProps => {\r\n        return requiredFields.some(fieldName => {\r\n            return sectionProps.hasOwnProperty(fieldName) && !sectionProps[fieldName]\r\n        });\r\n    });\r\n};\r\n\r\nexport const getPreviewFont = (font, customFont) => {\r\n    if (font !== \"custom\" && isFontAvailable(font)) {\r\n        return font;\r\n    } else if (font === \"custom\" && customFont && isFontAvailable(customFont)) {\r\n        return customFont;\r\n    }\r\n    return `'${DEFAULT_FONT}', 'Roboto', sans-serif`;\r\n}\r\n\r\nexport const fillMissedFields = currentFormState => {\r\n    const formStateWithoutMissedFields = { ...currentFormState }; \r\n    \r\n    if (currentFormState.font === \"custom\" && !currentFormState.customFont) {\r\n        formStateWithoutMissedFields.font = DEFAULT_FONT;\r\n    };\r\n    \r\n    if (currentFormState.sideNumberFont === \"custom\" && !currentFormState.customSideNumberFont) {\r\n        formStateWithoutMissedFields.sideNumberFont = DEFAULT_FONT;\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n    for (let fieldName in autoFillingRequiredFields) {\r\n        if (!currentFormState[fieldName] && autoFillingRequiredFields[fieldName]) {\r\n            formStateWithoutMissedFields[fieldName] = autoFillingRequiredFields[fieldName];\r\n        }\r\n    }\r\n    return formStateWithoutMissedFields;\r\n};","import { getShortCutUtils } from \"../helpers\";\r\n\r\nexport const UPDATE_DEC_FORM = \"UPDATE_DEC_FORM\";\r\nexport const CLEAR_DEC_FORM = \"CLEAR_DEC_FORM\";\r\nexport const SHOW_DEC_DIALOG = \"SHOW_DEC_DIALOG\";\r\nexport const HIDE_DEC_DIALOG = \"HIDE_DEC_DIALOG\";\r\nexport const SWITCH_DEC_DIALOG_TAB = \"SWITCH_DEC_DIALOG_TAB\";\r\nexport const RESET_DEC_DIALOG_TAB = \"RESET_DEC_DIALOG_TAB\";\r\nexport const SWITCH_ON_DEC_DIALOG_EDIT_MODE = \"SWITCH_ON_DEC_DIALOG_EDIT_MOD\";\r\nexport const SWITCH_OFF_DEC_DIALOG_EDIT_MODE = \"SWITCH_OFF_DEC_DIALOG_EDIT_MODE\";\r\nexport const UPDATE_VALIDATION_ERROR = \"UPDATE_VALIDATION_ERROR\";\r\nexport const REMOVE_VALIDATION_ERROR = \"REMOVE_VALIDATION_ERROR\";\r\n\r\nexport const updateDecoratorForm = payload => {\r\n    return {\r\n        type: UPDATE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearDecoratorForm = payload => {\r\n    return {\r\n        type: CLEAR_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const showDecoratorDialog = () => {\r\n    return {\r\n        type: SHOW_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const hideDecoratorDialog = () => {\r\n    return {\r\n        type: HIDE_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const switchDecDialogTab = payload => {\r\n    return {\r\n        type: SWITCH_DEC_DIALOG_TAB,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const resetDecDialogTab = () => {\r\n    return {\r\n        type: RESET_DEC_DIALOG_TAB,\r\n    };\r\n}\r\n\r\nexport const switchOnDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_ON_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const switchOffDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_OFF_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const updateValidationError = payload => {\r\n    return {\r\n        type: UPDATE_VALIDATION_ERROR,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const removeValidationError = () => {\r\n    return {\r\n        type: REMOVE_VALIDATION_ERROR,\r\n    };\r\n};\r\n\r\nexport const openDialog = dispatch => dec => {\r\n    if (dec) {\r\n        dispatch(updateDecoratorForm(dec));\r\n        dispatch(switchOnDecDialogEditMode());\r\n    } \r\n    dispatch(showDecoratorDialog());\r\n};\r\n\r\nexport const closeDialog = dispatch => () => {\r\n    dispatch(hideDecoratorDialog());\r\n    dispatch(switchOffDecDialogEditMode());\r\n    dispatch(removeValidationError());\r\n    dispatch(resetDecDialogTab());\r\n    dispatch(clearDecoratorForm());\r\n};\r\n\r\nexport const setValue = dispatch => propName => (e, secondArg = \"\") => {\r\n    const newValue = (e && e.target.value !== \"\" && e.target.value !== undefined) ? e.target.value : secondArg;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newValue,\r\n    }));\r\n};\r\n\r\nexport const toggleValue = dispatch => propName => (e, secondArg) => {\r\n    const newValue = e ? e.target.checked : secondArg;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newValue,\r\n    }));\r\n};\r\n\r\nexport const setBullet = dispatch => propName => (e, secondArg) => {\r\n    const input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n\r\n    const newBullet = input.length > 1 ? input[input.length - 1] : input;\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: newBullet,\r\n    }));\r\n    return newBullet;\r\n};\r\n\r\nexport const setColor = dispatch => propName => (e, secondArg) => {\r\n    const input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n    \r\n    const filteredInput = input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i) \r\n                          ? input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i)[0].slice(0, 6)\r\n                          : \"\" ;\r\n    \r\n    dispatch(updateDecoratorForm({\r\n        [propName]: filteredInput,\r\n    }));\r\n    return filteredInput;\r\n};\r\n\r\nexport const setNumber = dispatch => propName => (e, secondArg) => {\r\n    let input = e ? (e.target.value || \"\") : (secondArg || \"\");\r\n\r\n    const filteredInput = input.replace(\",\", \".\").trim().match(/[0-9]+/i) \r\n                          ? input.replace(\",\", \".\").trim().match(/\\d+[.,]?\\d*/)[0]\r\n                          : \"\" ;\r\n\r\n    dispatch(updateDecoratorForm({\r\n        [propName]: filteredInput,\r\n    }));\r\n    return filteredInput;\r\n};\r\n\r\nexport const setShortCut = dispatch => (valuePropName, viewPropName, isMac) => e => {\r\n    const systemName = isMac ? \"MacOS\" : \"Windows\";\r\n    const shortCut = getShortCutUtils(systemName).convertEventToShortCut(e);\r\n    if (shortCut && shortCut.deleteKey) {\r\n        setTimeout(() => {\r\n            dispatch(updateDecoratorForm({ \r\n                [valuePropName]: \"\" \r\n            }));\r\n            dispatch(updateDecoratorForm({ \r\n                [viewPropName]: \"\" \r\n            }));\r\n        }, 100);\r\n    } else if (shortCut) {\r\n        dispatch(updateDecoratorForm({ \r\n            [valuePropName]: shortCut.value \r\n        }));\r\n        dispatch(updateDecoratorForm({ \r\n            [viewPropName]: shortCut.stringValue \r\n        }));\r\n    }\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport LabelWithAsterisk from \"../common/LabelWithAsterisk\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\nimport { getNamesSectionErrorState, focusInput } from \"../helpers\";\r\nimport { setValue, toggleValue, updateValidationError } from \"../actions\";\r\n\r\nclass NamesSection extends React.Component {\r\n    decKeyInputRef = React.createRef();\r\n    decNameEnInputRef = React.createRef();\r\n\r\n    focusOnEmptyField = () => {\r\n        if (!this.props.decKey) {\r\n            focusInput(this.decKeyInputRef);\r\n        } else if (!this.props.decNameEn) {\r\n            focusInput(this.decNameEnInputRef);\r\n        }\r\n    };\r\n\r\n    onGroupChange = group => (e, secondArg) => {\r\n        const value = e ? e.target.value : secondArg;\r\n        if (group.nameEn && value === group.nameEn) {\r\n            this.props.changeGroupToCreate(null, group);\r\n        } else {\r\n            this.props.changeGroupToCreate(null, \"\");\r\n        }\r\n        this.props.changeGroup(e, secondArg);\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.validationError) {\r\n            this.focusOnEmptyField();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.validationError && !prevprops.validationError) {\r\n            this.focusOnEmptyField();\r\n        }\r\n        if (this.props.validationError && !getNamesSectionErrorState(this.props.formState)) {\r\n            this.props.updateValidationError({ namesSection: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            validationError,\r\n            onSave,\r\n            newGroup, \r\n            isOpen, \r\n            hideDialog, \r\n            handleClick, \r\n            decKey, changeDecKey,\r\n            group,\r\n            active, changeActive,\r\n            decNameEn, changeDecNameEn,\r\n            decNameDe, changeDecNameDe,\r\n            decNameRu, changeDecNameRu,\r\n            decNameFr, changeDecNameFr,\r\n            decNameFrCa, changeDecNameFrCa,\r\n            decNameEs, changeDecNameEs,\r\n        } = this.props;\r\n\r\n        const newGroupName = newGroup.nameEn;\r\n        const isEditMode = !!newGroupName;\r\n\r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n                <LabelWithAsterisk>Key</LabelWithAsterisk>\r\n                <TextField \r\n                    value={decKey}\r\n                    onChange={changeDecKey}\r\n                    error={validationError && !decKey}\r\n                    inputRef={this.decKeyInputRef}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Group</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        value={group} \r\n                        onChange={this.onGroupChange(newGroup)}\r\n                        input={ <CustomInput /> }  \r\n                    >\r\n                        <option value=\"\">...</option>\r\n                        { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                        <option value=\"0\">Text</option>\r\n                        <option value=\"1\">Heading</option>\r\n                        <option value=\"2\">Heading Heading Heading Heading</option>\r\n                    </NativeSelect>\r\n                    { !(isEditMode && group !== newGroupName) && (\r\n                        <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                            { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                        </Button>\r\n                    ) }\r\n                </div>\r\n\r\n                <span>Active</span>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={active}\r\n                        onChange={changeActive} \r\n                        color=\"primary\" \r\n                    />\r\n                </div>\r\n\r\n                <LabelWithAsterisk>Name EN</LabelWithAsterisk>\r\n                <TextField \r\n                    value={decNameEn}\r\n                    onChange={changeDecNameEn}\r\n                    error={validationError && !decNameEn}\r\n                    inputRef={this.decNameEnInputRef}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name DE</span>\r\n                <TextField \r\n                    value={decNameDe}\r\n                    onChange={changeDecNameDe}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name RU</span>\r\n                <TextField \r\n                    value={decNameRu}\r\n                    onChange={changeDecNameRu}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name FR<br/><span className=\"smallText\">France</span></span>\r\n                <TextField \r\n                    value={decNameFr}\r\n                    onChange={changeDecNameFr}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name FR<br/><span className=\"smallText\">Canada</span></span>\r\n                <TextField \r\n                    value={decNameFrCa}\r\n                    onChange={changeDecNameFrCa}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name ES</span>\r\n                <TextField \r\n                    value={decNameEs}\r\n                    onChange={changeDecNameEs}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <NewGroupDialog \r\n                    isOpen={isOpen}\r\n                    hideDialog={hideDialog}\r\n                    onSave={onSave}\r\n                    isEditMode={isEditMode}\r\n                    currentGroup={newGroup}\r\n                    changeGroupSelect={this.onGroupChange}\r\n                    groupType=\"decorators\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return { \r\n        validationError: validationError.namesSection,\r\n        decKey: form.decKey,\r\n        group: form.group,\r\n        active: form.active,\r\n        decNameEn: form.decNameEn,\r\n        decNameDe: form.decNameDe,\r\n        decNameRu: form.decNameRu,\r\n        decNameFr: form.decNameFr,\r\n        decNameFrCa: form.decNameFrCa,\r\n        decNameEs: form.decNameEs,\r\n        savedNewGroup: form.groupToCreate,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        changeDecKey: setValue(dispatch)(\"decKey\"),\r\n        changeGroup: setValue(dispatch)(\"group\"),\r\n        changeGroupToCreate: setValue(dispatch)(\"groupToCreate\"),\r\n        changeActive: toggleValue(dispatch)(\"active\"),\r\n        changeDecNameEn: setValue(dispatch)(\"decNameEn\"),\r\n        changeDecNameDe: setValue(dispatch)(\"decNameDe\"),\r\n        changeDecNameRu: setValue(dispatch)(\"decNameRu\"),\r\n        changeDecNameFr: setValue(dispatch)(\"decNameFr\"),\r\n        changeDecNameFrCa: setValue(dispatch)(\"decNameFrCa\"),\r\n        changeDecNameEs: setValue(dispatch)(\"decNameEs\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(withNewGroupControl(NamesSection)));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport LabelWithAsterisk from \"../common/LabelWithAsterisk\";\r\nimport { getWordExportSectionErrorState } from \"../helpers\";\r\nimport { setValue, toggleValue, updateValidationError } from \"../actions\";\r\n\r\nconst WordExportSection = props => {\r\n    const { \r\n        validationError,\r\n        formState,\r\n        wordStyleName, changeWordStyleName,\r\n        softReturn, changeSoftReturn,\r\n    } = props;\r\n\r\n    if (validationError && !getWordExportSectionErrorState(formState)) {\r\n        this.props.updateValidationError({ wordExportSection: false });\r\n    }\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <LabelWithAsterisk>Style name in WORD</LabelWithAsterisk>\r\n            <TextField \r\n                value={wordStyleName}\r\n                onChange={changeWordStyleName}\r\n                error={validationError && !wordStyleName}\r\n                autoFocus={!wordStyleName}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n            \r\n            <span>Soft return</span>\r\n            <div>\r\n                <Checkbox \r\n                    checked={softReturn}\r\n                    onChange={changeSoftReturn}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return { \r\n        formState: form,\r\n        wordStyleName: form.wordStyleName, \r\n        softReturn: form.softReturn,\r\n        validationError: validationError.wordExportSection,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {       \r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        changeWordStyleName: setValue(dispatch)(\"wordStyleName\"),\r\n        changeSoftReturn: toggleValue(dispatch)(\"softReturn\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(WordExportSection));","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInputShort = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInputShort;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst BackSpaceActionInput = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"175px\",\r\n      width: \"175px\",\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default BackSpaceActionInput;","import PositioningSection from \"./PositioningSection\";\r\nexport default PositioningSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport { backSpaceActions, decoratorsList } from \"../../constants\";\r\nimport BackSpaceActionInput from \"./BackSpaceActionInput\";\r\nimport { setValue } from \"../../actions\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst PositioningSection = props => {\r\n    const {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithContentStyle, changeBackspaceActionWithContentStyle,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_positioning\">\r\n            <span id=\"r1c1\">Identational level</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={indentationalLevel}\r\n                    onChange={changeIndentationalLevel}\r\n                    id=\"r1c2\" \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n            <div id=\"r2\" className=\"sectionTitle\">\r\n                <span>BACKSPACE</span>\r\n            </div>\r\n\r\n            <span id=\"r3c1\">At the beginning of a section with content</span>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <div>\r\n                    <NativeSelect \r\n                        value={backspaceActionWithContent}\r\n                        onChange={changeBackspaceActionWithContent}\r\n                        id=\"r3c2\" \r\n                        input={ <BackSpaceActionInput /> }\r\n                    >\r\n                        {backSpaceActions.map(action => (\r\n                            <option value={action.key} key={`backSpace ${action.key}`}>{action.value}</option>\r\n                        ))}\r\n                    </NativeSelect>\r\n                </div>\r\n                <Fade in={backspaceActionWithContent === \"apply_other_pd\"}>\r\n                    <NativeSelect\r\n                        value={backspaceActionWithContentStyle}\r\n                        onChange={changeBackspaceActionWithContentStyle}\r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        <option value=\"default\">Global Fallback Style</option>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                </Fade>\r\n            </div>\r\n\r\n            <div id=\"r4\" className=\"sectionTitle\">\r\n                <span>RETURN</span>\r\n            </div>\r\n\r\n            <span id=\"r5c1\">Style of next section</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={returnActionNextSection}\r\n                    onChange={changeReturnActionNextSection}\r\n                    id=\"r5c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"default\">Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n\r\n            <span id=\"r6c1\">In empty section change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect \r\n                    value={returnActionEmptySection}\r\n                    onChange={changeReturnActionEmptySection}\r\n                    id=\"r6c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"default\">Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <div id=\"r7\" className=\"sectionTitle\">\r\n                <span>TAB / SHIFT+TAB</span>\r\n            </div>\r\n\r\n            <span id=\"r8c1\">TAB – change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={tabAction}\r\n                    onChange={changeTabAction}\r\n                    id=\"r8c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <span id=\"r9c1\">SHIFT+TAB – change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={shiftTabAction}\r\n                    onChange={changeShiftTabAction} \r\n                    id=\"r9c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        indentationalLevel: form.indentationalLevel,\r\n        backspaceActionWithContent: form.backspaceActionWithContent,\r\n        backspaceActionWithContentStyle: form.backspaceActionWithContentStyle,\r\n        returnActionNextSection: form.returnActionNextSection,\r\n        returnActionEmptySection: form.returnActionEmptySection,\r\n        tabAction: form.tabAction,\r\n        shiftTabAction: form.shiftTabAction,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeIndentationalLevel: setValue(dispatch)(\"indentationalLevel\"),\r\n        changeBackspaceActionWithContent: setValue(dispatch)(\"backspaceActionWithContent\"),\r\n        changeBackspaceActionWithContentStyle: setValue(dispatch)(\"backspaceActionWithContentStyle\"),\r\n        changeBackspaceActionWithoutContent: setValue(dispatch)(\"backspaceActionWithoutContent\"),\r\n        changeBackspaceActionWithoutContentStyle: setValue(dispatch)(\"backspaceActionWithoutContentStyle\"),\r\n        changeReturnActionNextSection: setValue(dispatch)(\"returnActionNextSection\"),\r\n        changeReturnActionEmptySection: setValue(dispatch)(\"returnActionEmptySectionStyle\"),\r\n        changeTabAction: setValue(dispatch)(\"tabAction\"),\r\n        changeShiftTabAction: setValue(dispatch)(\"shiftTabAction\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(PositioningSection));","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst ListPreview = (props) => {\r\n    const { \r\n        listPreviewStyle, \r\n        listChars, \r\n        prefix, \r\n        suffix, \r\n        suffixDistance, \r\n        sideNumberStyle,\r\n    } = props;\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n    const listItemsBeginnings = listChars.map(listChar => {\r\n        return (`${prefix}${listChar}${suffix}`);\r\n    });\r\n    const listItemBeginingStyle = {\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n        ...sideNumberStyle,\r\n    };\r\n\r\n    return (\r\n        <div className=\"preview preview_list\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div className=\"preview-content\">\r\n                <div className={demonstrationElementClassName}>\r\n                    <div\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        style={listPreviewStyle}\r\n                    >\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[0]}`}</span><span>The first list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[1]}`}</span><span>The second list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[2]}`}</span><span>The third list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[3]}`}</span><span>The fourth list item</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListPreview;","import ColorField from \"./ColorField\";\r\nexport default ColorField;","import React from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport { getCorrectColor, selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ColorField extends React.Component {\r\n    state = {\r\n        isOpen: this.props.isOpen,\r\n    };\r\n\r\n    hideColorPicker = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    showColorPicker = () => {\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    colorPickerHandler = changeColor => ({ hex }) => {\r\n        changeColor(null, hex);\r\n    };\r\n\r\n    render() {\r\n        const { colorCode, changeColorCode, defaultColorCode, required, bottomAligned } = this.props;\r\n        const { showColorPicker, hideColorPicker, colorPickerHandler } = this;\r\n        const correctColor = getCorrectColor(colorCode);\r\n        const colorError = correctColor !== colorCode;\r\n        const inputError = colorError && (required || !!colorCode);\r\n        const pickerColor = colorError ? \"\" : `#${correctColor}`;\r\n        const colorSampleStyle = {\r\n            backgroundColor: `#${correctColor}`,\r\n        };\r\n        const colorPickerClassName = `colorPicker${ bottomAligned ? \" colorPicker_bottomAligned\" : \"\"}`;\r\n\r\n        return (\r\n            <div className=\"colorField\">\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    className=\"numberInput\" \r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                    }}\r\n                    value={colorCode}\r\n                    onChange={changeColorCode}\r\n                    onClick={e => { \r\n                        selectAllOnClick(defaultColorCode || \"000\")(e); \r\n                        // this.showColorPicker(); \r\n                    }}\r\n                    error={inputError}\r\n                />\r\n                <div\r\n                    onClick={showColorPicker}\r\n                    className=\"colorSample\" \r\n                    style={colorSampleStyle}\r\n                />\r\n                {this.state.isOpen && (\r\n                    <div className={colorPickerClassName}>\r\n                        <div className=\"colorPicker-chromeBox\">\r\n                            <ChromePicker\r\n                                onChangeComplete={colorPickerHandler(changeColorCode)}\r\n                                color={pickerColor}\r\n                                disableAlpha\r\n                            />\r\n                        </div>\r\n                        <div className=\"colorPicker-popOver\"  onClick={hideColorPicker}></div>\r\n                    </div>\r\n                ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorField;","import FontSelectFields from \"./FontSelectFields\";\r\nexport default FontSelectFields;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport CustomInput from \"../CustomInput\";\r\nimport { fontSet, DEFAULT_FONT } from \"../../constants\";\r\nimport { isFontAvailable } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass FontSelectFields extends React.Component {\r\n    textInput = React.createRef();\r\n\r\n    focusTextInput = () => {\r\n        this.textInput.current.focus();\r\n    };\r\n\r\n    onFontChange = e => {\r\n        this.props.changeFont(e);\r\n        if (e.target.value === \"custom\") {\r\n            this.focusTextInput();\r\n            if (typeof this.props.extraFunction === \"function\") {\r\n                setTimeout(this.props.extraFunction, 500);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { font, customFont, changeCustomFont } = this.props;\r\n        const availableFonts = fontSet.filter(fontName => fontName === font || isFontAvailable(fontName));\r\n        const customFontFieldState = font === \"custom\" ? \"customFontField_shown\" : \"customFontField_hidden\";\r\n        return (\r\n            <>\r\n                <span >Font</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={font}\r\n                    onChange={this.onFontChange}\r\n                >\r\n                    <option value={DEFAULT_FONT}>Helvetica</option>\r\n                    { availableFonts.map(fontName => <option value={fontName} key={fontName}>{fontName}</option>) }\r\n                    <option value=\"custom\" className=\"highlightedOption\">Custom</option>\r\n                </NativeSelect>\r\n    \r\n                <div className={`customFontField ${customFontFieldState}`}>\r\n                    <span></span>\r\n                </div>\r\n                <div className={`customFontField ${customFontFieldState}`}>\r\n                    <TextField \r\n                        value={customFont}\r\n                        onChange={changeCustomFont}\r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        placeholder=\"Enter the font name\"\r\n                        inputRef={this.textInput}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FontSelectFields;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport ListPreview from \"../../common/Preview/ListPreview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport LabelWithAsterisk from \"../../common/LabelWithAsterisk\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport { listStyleTypes, bulletNamesMap, HOLDER } from \"../../constants\";\r\nimport { \r\n    updateValidationError,\r\n    setValue,\r\n    toggleValue,\r\n    setNumber,\r\n    setColor,\r\n    setBullet,\r\n} from \"../../actions\";\r\nimport { \r\n    selectAllOnClick, \r\n    scrollToBottom, \r\n    changeAndScroll, \r\n    getListSectionErrorState,\r\n    focusInput,\r\n    unicodeNumberToChar, \r\n    unicodeCharToNumber, \r\n} from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ListSection extends React.Component {\r\n    listNameInputRef = React.createRef();\r\n    unicodeCharInputRef = React.createRef();\r\n\r\n    onIsListChange = listName => e => {\r\n        if (e.target.checked) {\r\n            if (listName === HOLDER) {\r\n                this.props.changeListName(null, \"\");\r\n            }\r\n        } else if (listName === \"\") {\r\n            setTimeout(() => this.props.changeListName(null, HOLDER), 200);\r\n        }\r\n        this.props.changeIsList(e);\r\n\r\n        if (e.target.checked && listName === HOLDER) {\r\n            focusInput(this.listNameInputRef);\r\n        }       \r\n    };\r\n\r\n    onListTypeChange = suffix => e => {\r\n        const { value } = e.target;\r\n        this.props.changeListType(null, value);\r\n        if (value === \"ordered\" && suffix === \"\") {\r\n            this.props.changeSuffix(null, \".\");\r\n        } else if (value === \"unordered\" && suffix === \".\") {\r\n            this.props.changeSuffix(null, \"\");\r\n        }\r\n    };\r\n\r\n    onListItemChange = unicodeChar => e => {\r\n        this.props.changeListItem(e);\r\n        if (e.target.value === \"custom\" && !unicodeChar) {\r\n            focusInput(this.unicodeCharInputRef);\r\n        }\r\n    };\r\n\r\n    onUnicodeNumberChange = e => {\r\n        const newUnicodeNumber = this.props.changeUnicodeNumber(e);\r\n        const newUnicodeChar = newUnicodeNumber !== \"\" ? unicodeNumberToChar(newUnicodeNumber) : \"\";\r\n        this.props.changeUnicodeChar(null, newUnicodeChar);\r\n    };\r\n    \r\n    onUnicodeCharChange = e => {\r\n        const newUnicodeChar = this.props.changeUnicodeChar(e);\r\n        const newUnicodeNumber = newUnicodeChar !== \"\" ? unicodeCharToNumber(newUnicodeChar) : \"\";\r\n        this.props.changeUnicodeNumber(null, newUnicodeNumber);\r\n    };\r\n\r\n    onSideNumberChange = suffix => e => {\r\n        this.props.changeSideNumber(e);\r\n        if (e.target.checked && suffix === \".\") {\r\n            this.props.changeSuffix(null, \"\");\r\n        } else if (!e.target.checked && suffix === \"\") {\r\n            this.props.changeSuffix(null, \".\");\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.validationError) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.validationError && !prevprops.validationError) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n        if (this.props.validationError && !getListSectionErrorState(this.props.formState)) {\r\n            this.props.updateValidationError({ listSection: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            validationError,\r\n            listPreviewProps,\r\n            isList,\r\n            listName, changeListName,\r\n            orderLevel, changeOrderLevel,\r\n            prefix, changePrefix,\r\n            suffix, changeSuffix,\r\n            suffixDistance, changeSuffixDistance,\r\n            magicTabs, changeMagicTabs,\r\n            listType,\r\n            listItem,\r\n            unicodeNumber,\r\n            unicodeChar,\r\n            numberingStyle, changeNumberingStyle,\r\n            continueNumbering, changeContinueNumbering,\r\n            allowRestartNumbering, changeAllowRestartNumbering,\r\n            includePreviousFrom, changeIncludePreviousFrom,\r\n            sideNumber,\r\n            sideNumberFont, changeSideNumberFont,\r\n            customSideNumberFont, changeCustomSideNumberFont,\r\n            sideNumberAlignment, changeSideNumberAlignment,\r\n            sideNumberFontSize, changeSideNumberFontSize,\r\n            sideNumberFontColor, changeSideNumberFontColor,\r\n            sideNumberFillingColor, changeSideNumberFillingColor,\r\n            sideNumberWidth, changeSideNumberWidth,\r\n            sideNumberRadius, changeSideNumberRadius,\r\n        } = this.props;\r\n        \r\n        const mainListSettingsState = isList ? \"shown\" : \"hidden\";\r\n        const unorderedListSettingsState = (isList && listType === \"unordered\") ? \"shown\" : \"hidden\";\r\n        const orderedListSettingsState = (isList && listType === \"ordered\") ? \"shown\" : \"hidden\";\r\n        const sideNumberSettingsState = (isList && listType === \"ordered\" && sideNumber) ? \"shown\" : \"hidden\";\r\n    \r\n        return (\r\n            <>\r\n                <div className=\"dialogGrid dialogGrid_2cols\">\r\n                    <div>\r\n                        <div>\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth\">\r\n                                <div className=\"listSection-firstSpan\">\r\n                                    <span>Is it a list?</span>\r\n                                </div>\r\n                                <div>\r\n                                    <Checkbox \r\n                                        color=\"primary\" \r\n                                        checked={isList} \r\n                                        onChange={changeAndScroll(this.onIsListChange(listName))} \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${mainListSettingsState}`}>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth optionalSettings\">\r\n                                    <LabelWithAsterisk>List name</LabelWithAsterisk>\r\n                                    <TextField\r\n                                        value={listName}\r\n                                        onChange={changeListName} \r\n                                        error={validationError && !listName}\r\n                                        inputRef={this.listNameInputRef}\r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                    />\r\n    \r\n                                    <span>Order level</span>\r\n                                    <div>\r\n                                        <NativeSelect\r\n                                            value={orderLevel}\r\n                                            onChange={changeOrderLevel}\r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            <option value=\"\">...</option>\r\n                                            <option value=\"0\">0</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                        </NativeSelect>\r\n                                    </div>\r\n    \r\n                                    <span>Prefix</span>\r\n                                    <TextField\r\n                                        value={prefix}\r\n                                        onChange={changePrefix} \r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                    />\r\n    \r\n                                    <span>Suffix</span>\r\n                                    <TextField\r\n                                        value={suffix}\r\n                                        onChange={changeSuffix} \r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                        onClick={selectAllOnClick(\".\")}\r\n                                    />\r\n    \r\n                                    <span>Suffix distance</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <NativeSelect\r\n                                            value={suffixDistance}\r\n                                            onChange={changeSuffixDistance} \r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            <option value=\"0.25\">0.25</option>\r\n                                            <option value=\"0.5\">0.5</option>\r\n                                            <option value=\"0.75\">0.75</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"1.25\">1.25</option>\r\n                                            <option value=\"1.5\">1.5</option>\r\n                                            <option value=\"1.75\">1.75</option>\r\n                                            <option value=\"2\">2</option>\r\n                                        </NativeSelect>\r\n                                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                                    </div>\r\n    \r\n                                    <span>Magic Tabs</span>\r\n                                    <div>\r\n                                        <Checkbox \r\n                                            color=\"primary\" \r\n                                            checked={magicTabs} \r\n                                            onChange={changeMagicTabs} \r\n                                        />\r\n                                    </div>\r\n    \r\n                                    <span>Type of list</span>\r\n                                    <div>\r\n                                        <NativeSelect \r\n                                            value={listType} \r\n                                            onChange={changeAndScroll(this.onListTypeChange(suffix))} \r\n                                            input={ <CustomInput /> }\r\n                                        >\r\n                                            <option value={\"unordered\"}>Unordered</option>\r\n                                            <option value={\"ordered\"}>Ordered</option>\r\n                                        </NativeSelect>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`optionalSettings optionalSettings_${orderedListSettingsState}`}>\r\n                            <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                                <span>Numbering style</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={numberingStyle}\r\n                                        onChange={changeNumberingStyle}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        {listStyleTypes.map(style => (\r\n                                            <option value={style.value} key={style.value}>{style.name}</option>\r\n                                        ))}                                    \r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Continue numbering after interruption</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={continueNumbering}\r\n                                        onChange={changeContinueNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Allow restart numbering</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={allowRestartNumbering} \r\n                                        onChange={changeAllowRestartNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Include previous levels from</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={includePreviousFrom} \r\n                                        onChange={changeIncludePreviousFrom}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        <option value=\"\">...</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Side number</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={sideNumber}\r\n                                        onChange={changeAndScroll(this.onSideNumberChange(suffix))}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                            </div> \r\n    \r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${sideNumberSettingsState}`}>\r\n                                <div className=\"fontSettingsGrid listTypeSettings\">\r\n                                    <FontSelectFields \r\n                                        font={sideNumberFont}\r\n                                        changeFont={changeSideNumberFont}\r\n                                        customFont={customSideNumberFont}\r\n                                        changeCustomFont={changeCustomSideNumberFont}\r\n                                        extraFunction={() => { scrollToBottom(\"content-rightSide\"); }}\r\n                                    />\r\n                            \r\n                                    <span>Alignment</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberAlignment}\r\n                                        onChange={changeSideNumberAlignment}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"left\"}>Left</option>\r\n                                        <option value={\"center\"}>Center</option>\r\n                                        <option value={\"right\"}>Right</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Font size</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberFontSize}\r\n                                            onChange={changeSideNumberFontSize}\r\n                                            onClick={selectAllOnClick(\"12\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>      \r\n                            \r\n                                    <span>Font color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFontColor} \r\n                                        changeColorCode={changeSideNumberFontColor}\r\n                                        defaultColorCode={\"FFF\"}\r\n                                        bottomAligned\r\n                                    />\r\n                                        \r\n                                    <span>Filling color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFillingColor} \r\n                                        changeColorCode={changeSideNumberFillingColor}\r\n                                        defaultColorCode={\"1E88E5\"}\r\n                                        bottomAligned\r\n                                    />\r\n    \r\n                                    <span>Width</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberWidth}\r\n                                            onChange={changeSideNumberWidth}\r\n                                            onClick={selectAllOnClick(\"20\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                        \r\n                                    <span>Radius</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberRadius}\r\n                                            onChange={changeSideNumberRadius}\r\n                                            onClick={selectAllOnClick(\"10\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className={`listPreviewBox optionalSettings optionalSettings_${mainListSettingsState}`}>\r\n                        <ListPreview {...listPreviewProps} />\r\n                    </div>\r\n                </div>\r\n                <div className={`optionalSettings optionalSettings_${unorderedListSettingsState}`}>\r\n                    <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                        <div className=\"dialogGrid dialogGrid_2cols\">\r\n                            <span className=\"listSection-firstSpan\">List item</span>\r\n                            <div className=\"listItemSelect\">\r\n                                <NativeSelect \r\n                                    value={listItem} \r\n                                    onChange={this.onListItemChange(unicodeChar)} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    { \r\n                                        Object.entries(bulletNamesMap).map(([key, value]) => {\r\n                                            return (<option key={key} value={key}>{value}</option>) \r\n                                        })\r\n                                    }\r\n                                    <option value={\"custom\"} className=\"highlightedOption\">Custom</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </div>\r\n                        <Fade in={listItem === \"custom\"}>\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Unicode number</span>\r\n                                    <div>\r\n                                        <TextField  \r\n                                            value={unicodeNumber}\r\n                                            onChange={this.onUnicodeNumberChange}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"unicodeInput\" \r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">u+</InputAdornment>\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Char</span>\r\n                                    <div>\r\n                                        <TextField \r\n                                            value={unicodeChar}\r\n                                            onChange={this.onUnicodeCharChange}\r\n                                            onClick={selectAllOnClick()}\r\n                                            inputRef={this.unicodeCharInputRef}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"bulletInput\" \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                        </Fade>\r\n                    </div> \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return { \r\n        formState: form,\r\n        validationError: validationError.listSection,\r\n        isList: form.isList,\r\n        listName: form.listName, \r\n        orderLevel: form.orderLevel,\r\n        prefix: form.prefix,\r\n        suffix: form.suffix,\r\n        suffixDistance: form.suffixDistance,\r\n        magicTabs: form.magicTabs,\r\n        listType: form.listType,\r\n        listItem: form.listItem,\r\n        unicodeNumber: form.unicodeNumber,\r\n        unicodeChar: form.unicodeChar,\r\n        numberingStyle: form.numberingStyle,\r\n        continueNumbering: form.continueNumbering,\r\n        allowRestartNumbering: form.allowRestartNumbering,\r\n        includePreviousFrom: form.includePreviousFrom,\r\n        sideNumber: form.sideNumber,\r\n        sideNumberFont: form.sideNumberFont,\r\n        customSideNumberFont: form.customSideNumberFont,\r\n        sideNumberAlignment: form.sideNumberAlignment,\r\n        sideNumberFontSize: form.sideNumberFontSize,\r\n        sideNumberFontColor: form.sideNumberFontColor,\r\n        sideNumberFillingColor: form.sideNumberFillingColor,\r\n        sideNumberWidth: form.sideNumberWidth,\r\n        sideNumberRadius: form.sideNumberRadius,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        changeListName: setValue(dispatch)(\"listName\"),\r\n        changeIsList: toggleValue(dispatch)(\"isList\"),\r\n        changeOrderLevel: setValue(dispatch)(\"orderLevel\"),\r\n        changePrefix: setValue(dispatch)(\"prefix\"),\r\n        changeSuffix: setValue(dispatch)(\"suffix\"),\r\n        changeSuffixDistance: setValue(dispatch)(\"suffixDistance\"),\r\n        changeMagicTabs: toggleValue(dispatch)(\"magicTabs\"),\r\n        changeListType: setValue(dispatch)(\"listType\"),\r\n        changeListItem: setValue(dispatch)(\"listItem\"),\r\n        changeUnicodeNumber: setColor(dispatch)(\"unicodeNumber\"),\r\n        changeUnicodeChar: setBullet(dispatch)(\"unicodeChar\"),\r\n        changeNumberingStyle: setValue(dispatch)(\"numberingStyle\"),\r\n        changeContinueNumbering: toggleValue(dispatch)(\"continueNumbering\"),\r\n        changeAllowRestartNumbering: toggleValue(dispatch)(\"allowRestartNumbering\"),\r\n        changeIncludePreviousFrom: setValue(dispatch)(\"includePreviousFrom\"),\r\n        changeSideNumber: toggleValue(dispatch)(\"sideNumber\"),\r\n        changeSideNumberFont: setValue(dispatch)(\"sideNumberFont\"),\r\n        changeCustomSideNumberFont: setValue(dispatch)(\"customSideNumberFont\"),\r\n        changeSideNumberAlignment: setValue(dispatch)(\"sideNumberAlignment\"),\r\n        changeSideNumberFontSize: setNumber(dispatch)(\"sideNumberFontSize\"),\r\n        changeSideNumberFontColor: setColor(dispatch)(\"sideNumberFontColor\"),\r\n        changeSideNumberFillingColor: setColor(dispatch)(\"sideNumberFillingColor\"),\r\n        changeSideNumberWidth: setNumber(dispatch)(\"sideNumberWidth\"),\r\n        changeSideNumberRadius: setNumber(dispatch)(\"sideNumberRadius\"),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListSection);","import ListSection from \"./ListSection\";\r\nexport default ListSection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\nimport { setValue } from \"../actions\";\r\n\r\nclass ReferencingSection extends React.Component {\r\n    onXrefChange = xref => (e, secondArg) => {\r\n        const value = e ? e.target.value : secondArg;\r\n        if (xref.groupKey && xref.nameEn && value === xref.nameEn) {\r\n            this.props.changeReferenceGroupToCreate(null, xref);\r\n        } else {\r\n            this.props.changeReferenceGroupToCreate(null, \"\");\r\n        }\r\n        this.props.changeReferenceGroup(e, secondArg);\r\n    };\r\n\r\n    render() {\r\n        const { \r\n            newGroup, \r\n            isOpen, \r\n            hideDialog, \r\n            handleClick, \r\n            onSave,\r\n            referenceGroup, \r\n        } = this.props;\r\n        \r\n        const newGroupName = newGroup.nameEn;\r\n        const isEditMode = !!newGroupName;\r\n    \r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <span>Reference group</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        input={ <CustomInput /> } \r\n                        value={referenceGroup} \r\n                        onChange={this.onXrefChange(newGroup)} \r\n                    >\r\n                        { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                        <option value=\"\">none</option>\r\n                        <option value=\"0\">Reference group 1</option>\r\n                        <option value=\"1\">Reference group 2</option>\r\n                    </NativeSelect>\r\n                    {\r\n                        !(isEditMode && referenceGroup !== newGroupName) &&\r\n                        <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                            { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                        </Button>\r\n                     }\r\n                </div>\r\n                <NewGroupDialog \r\n                    isOpen={isOpen}\r\n                    hideDialog={hideDialog}\r\n                    onSave={onSave}\r\n                    isEditMode={isEditMode}\r\n                    currentGroup={newGroup}\r\n                    changeGroupSelect={this.onXrefChange}\r\n                    groupType=\"xref\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form }}) => {\r\n    return { \r\n        referenceGroup: form.referenceGroup,\r\n        savedNewGroup: form.referenceGroupToCreate,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeReferenceGroup: setValue(dispatch)(\"referenceGroup\"),\r\n        changeReferenceGroupToCreate: setValue(dispatch)(\"referenceGroupToCreate\"),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(withNewGroupControl(ReferencingSection)));","import { getShortCutUtils } from \"./helpers\";\r\n\r\nconst Handlers = update => class {    \r\n    static toggleValue = propName => e => {\r\n        update({\r\n            [propName]: e.target.checked\r\n        });\r\n    };\r\n\r\n    static setValue = propName => (e, secondArg = \"\") => {\r\n        const newValue = (e && e.target.value !== \"\" && e.target.value !== undefined) ? e.target.value : secondArg;\r\n        update({\r\n            [propName]: newValue,\r\n        });\r\n    };\r\n\r\n    static setBullet = propName => e => {\r\n        const newBullet = e.target.value.length > 1 ? e.target.value[e.target.value.length - 1] : e.target.value;\r\n        update({\r\n            [propName]: newBullet,\r\n        });\r\n        return newBullet;\r\n    };\r\n\r\n    static setColor = propName => prevValue => (e, secondArg) => {\r\n        let input = e ? (e.target.value || \"\") : secondArg;\r\n        \r\n        const filteredInput = input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i) \r\n                              ? input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i)[0].slice(0, 6)\r\n                              : \"\" ;\r\n        \r\n        if (filteredInput !== prevValue) {\r\n            update({\r\n                [propName]: filteredInput,\r\n            });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setNumber = propName => prevValue => e => {\r\n        console.log(prevValue, 11, e);\r\n        let input = e.target.value || \"\";\r\n\r\n        const filteredInput = input.replace(\",\", \".\").trim().match(/[0-9]+/i) \r\n                              ? input.replace(\",\", \".\").trim().match(/\\d+[.,]?\\d*/)[0]\r\n                              : \"\" ;\r\n\r\n        if (filteredInput !== prevValue) {\r\n          update({\r\n              [propName]: filteredInput,\r\n          });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setShortCut = (valuePropName, viewPropName, isMac) => e => {\r\n        const systemName = isMac ? \"MacOS\" : \"Windows\";\r\n        const shortCut = getShortCutUtils(systemName).convertEventToShortCut(e);\r\n        if (shortCut && shortCut.deleteKey) {\r\n          setTimeout(() => {\r\n            update({ [valuePropName]: \"\" });\r\n            update({ [viewPropName]: \"\" });\r\n          }, 100);\r\n        } else if (shortCut) {\r\n          update({ [valuePropName]: shortCut.value });\r\n          update({ [viewPropName]: shortCut.stringValue });\r\n        }\r\n    };\r\n};\r\n\r\nexport default Handlers;","import * as React from \"react\";\r\nimport deepEqual from \"fast-deep-equal\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, q = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(q[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, q[i]))\r\n              t[q[i]] = s[q[i]];\r\n      }\r\n  return t;\r\n};\r\n\r\nfunction normalizeHtml(str) {\r\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, \" \");\r\n}\r\nfunction findLastTextNode(node) {\r\n  if (node.nodeType === Node.TEXT_NODE)\r\n      return node;\r\n  let children = node.childNodes;\r\n  for (let i = children.length - 1; i >= 0; i--) {\r\n      let textNode = findLastTextNode(children[i]);\r\n      if (textNode !== null)\r\n          return textNode;\r\n  }\r\n  return null;\r\n}\r\nfunction replaceCaret(el) {\r\n  // Place the caret at the end of the element\r\n  const target = findLastTextNode(el);\r\n  // do not move caret if element was not focused\r\n  const isTargetFocused = document.activeElement === el;\r\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\r\n      var sel = window.getSelection();\r\n      if (sel !== null) {\r\n          var range = document.createRange();\r\n          range.setStart(target, target.nodeValue.length);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n      }\r\n      if (el instanceof HTMLElement)\r\n          el.focus();\r\n  }\r\n}\r\n/**\r\n* A simple component for an html element with editable contents.\r\n*/\r\nexport default class ContentEditable extends React.Component {\r\n  constructor() {\r\n      super(...arguments);\r\n      this.lastHtml = this.props.html;\r\n      this.el = typeof this.props.innerRef === \"function\" ? { current: null } : React.createRef();\r\n      this.getEl = () => (this.props.innerRef && typeof this.props.innerRef !== \"function\" ? this.props.innerRef : this.el).current;\r\n      this.emitChange = (originalEvt) => {\r\n          const el = this.getEl();\r\n          if (!el)\r\n              return;\r\n          const html = el.innerHTML;\r\n          if (this.props.onChange && html !== this.lastHtml) {\r\n              // Clone event with Object.assign to avoid\r\n              // \"Cannot assign to read only property 'target' of object\"\r\n              const evt = Object.assign({}, originalEvt, {\r\n                  target: {\r\n                      value: html\r\n                  }\r\n              });\r\n              this.props.onChange(evt);\r\n          }\r\n          this.lastHtml = html;\r\n      };\r\n  }\r\n  render() {\r\n      const _a = this.props, { tagName, html, innerRef } = _a, props = __rest(_a, [\"tagName\", \"html\", \"innerRef\"]);\r\n      return React.createElement(tagName || \"div\", Object.assign({}, props, { ref: typeof innerRef === \"function\" ? (current) => {\r\n              innerRef(current);\r\n              this.el.current = current;\r\n          } : innerRef || this.el, onInput: this.emitChange, onBlur: this.props.onBlur || this.emitChange, onKeyUp: this.props.onKeyUp || this.emitChange, onKeyDown: this.props.onKeyDown || this.emitChange, contentEditable: !this.props.disabled, dangerouslySetInnerHTML: { __html: html } }), this.props.children);\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n      const { props } = this;\r\n      const el = this.getEl();\r\n      // We need not rerender if the change of props simply reflects the user's edits.\r\n      // Rerendering in this case would make the cursor/caret jump\r\n      // Rerender if there is no element yet... (somehow?)\r\n      if (!el)\r\n          return true;\r\n      // ...or if html really changed... (programmatically, not by user edit)\r\n      if (normalizeHtml(nextProps.html) !== normalizeHtml(el.innerHTML)) {\r\n          return true;\r\n      }\r\n      // Handle additional properties\r\n      return props.disabled !== nextProps.disabled ||\r\n          props.tagName !== nextProps.tagName ||\r\n          props.className !== nextProps.className ||\r\n          props.innerRef !== nextProps.innerRef ||\r\n          !deepEqual(props.style, nextProps.style);\r\n  }\r\n  componentDidUpdate() {\r\n      const el = this.getEl();\r\n      if (!el)\r\n          return;\r\n      // Perhaps React (whose VDOM gets outdated because we often prevent\r\n      // rerendering) did not update the DOM. So we update it manually now.(?!(?:<br \\/>|<br>|<br\\/>)$)<(.*?)>\r\n      if (this.props.html !== el.innerHTML) {\r\n          el.innerHTML = this.lastHtml = this.props.html;\r\n      }\r\n      replaceCaret(el);\r\n  }\r\n}\r\nContentEditable.propTypes = {\r\n  html: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  tagName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n  ])\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport ContentEditable from \"../ContentEditable\";\r\nimport { getOffset, selectAllEditableContent } from \"../../helpers\"\r\n\r\nconst Preview = ({previewText, changePreviewText, previewStyle}) => {\r\n    const { verticalAlign, fontSize } = previewStyle;\r\n\r\n    const editableContentStyle = {\r\n        ...previewStyle, \r\n        outline: \"none\",\r\n        marginTop: `${parseFloat(previewStyle.marginTop) + getOffset(verticalAlign, fontSize)}pt`,\r\n        marginBottom: `${parseFloat(previewStyle.marginBottom) - getOffset(verticalAlign, fontSize)}pt`,\r\n    };\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n\r\n    return (\r\n        <div className=\"preview\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div \r\n                className=\"preview-content preview-content_withPointer\" \r\n                onClick={selectAllEditableContent(demonstrationElementClassName)}\r\n            >\r\n                <div className={demonstrationElementClassName}>\r\n                    <ContentEditable\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        onChange={changePreviewText} \r\n                        html={previewText}\r\n                        style={editableContentStyle}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preview;","import Preview from \"./Preview.js\";\r\nexport default Preview;","import TypographySection from \"./TypographySection\";\r\nexport default TypographySection;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport Handlers from \"../../Handlers\";\r\nimport Preview from \"../../common/Preview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport { selectAllOnClick } from \"../../helpers\";\r\nimport { updateDecoratorForm } from \"../../actions\";\r\n\r\n\r\nimport \"./style.css\";\r\n\r\n//class TypographySexion extends React.Component {\r\n//    handlers = Handlers(this.props.updateForm);\r\n//    setValue = this.handlers.setValue;\r\n//    toggleValue = this.handlers.toggleValue;\r\n//    setNumber = this.handlers.setNumber;\r\n//    setColor = this.handlers.setColor;\r\n//    setBullet = this.handlers.setBullet;\r\n//\r\n//    changeFont = setValue(\"font\");\r\n//    changeCustomFont = setValue(\"customFont\");\r\n//    changeAlignment = setValue(\"alignment\");\r\n//    changeFontSize = setNumber(\"fontSize\");\r\n//    changeFontColorName = setValue(\"fontColorName\");\r\n//    changeFontColor = setColor(\"fontColor\");\r\n//    changeBold = toggleValue(\"bold\");\r\n//    changeItalic = toggleValue(\"italic\");\r\n//    changeUnderlined = toggleValue(\"underlined\");\r\n//    changeStroke = toggleValue(\"stroke\");\r\n//    changeTextTransform = setValue(\"textTransform\");\r\n//    changeVerticalAlign = setValue(\"verticalAlign\");\r\n//    changeMarginTop = setNumber(\"marginTop\");\r\n//}\r\n\r\nconst TypographySection = (props) => {\r\n    const { \r\n        previewProps,\r\n        font, changeFont,\r\n        customFont, changeCustomFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"fontSettingsGrid\">\r\n                <FontSelectFields { ...{ font, changeFont, customFont, changeCustomFont }} />\r\n                \r\n                <span>Alignment</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={alignment}\r\n                    onChange={changeAlignment}\r\n                >\r\n                    <option value={\"left\"}>Left</option>\r\n                    <option value={\"center\"}>Center</option>\r\n                    <option value={\"right\"}>Right</option>\r\n                    <option value={\"justify\"}>Justified</option>\r\n                </NativeSelect>\r\n\r\n                <span>Font size</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={fontSize}\r\n                        onChange={changeFontSize}\r\n                        onClick={selectAllOnClick(\"12\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>      \r\n\r\n                <span>Font color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                    value={fontColorName}\r\n                    onChange={changeFontColorName}\r\n                    onClick={selectAllOnClick(\"Black\")}\r\n                />\r\n\r\n                <span>Font color HEX</span>\r\n                <ColorField \r\n                    colorCode={fontColor} \r\n                    changeColorCode={changeFontColor}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_indented\">\r\n            <span>Stylings</span>\r\n            <div className=\"checkBoxesSet\">\r\n                <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Bold\"\r\n                        labelPlacement=\"end\"\r\n                        checked={bold}\r\n                        onChange={changeBold}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Italic\"\r\n                        labelPlacement=\"end\"\r\n                        checked={italic}\r\n                        onChange={changeItalic}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Underlined\"\r\n                        labelPlacement=\"end\"\r\n                        checked={underlined}\r\n                        onChange={changeUnderlined}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_stroke\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Stroke\"\r\n                        labelPlacement=\"end\"\r\n                        checked={stroke}\r\n                        onChange={changeStroke}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <span>Text transform</span>\r\n            <RadioGroup \r\n                value={textTransform} \r\n                onChange={changeTextTransform} \r\n                row\r\n            >\r\n                <div className=\"labeledCheckbox labeledCheckbox_topIndented\">\r\n                    <FormControlLabel\r\n                        value=\"none\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"None\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_uppercase\">\r\n                    <FormControlLabel\r\n                        value=\"uppercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Uppercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_lowercase\">\r\n                    <FormControlLabel\r\n                        value=\"lowercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Lowercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_smallCaps\">\r\n                    <FormControlLabel\r\n                        value=\"small-caps\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Small caps\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n            </RadioGroup>\r\n\r\n            <span>Sub/Superscript</span>\r\n            <div>\r\n                <NativeSelect \r\n                value={verticalAlign} \r\n                onChange={changeVerticalAlign}\r\n                    input={ <CustomInput /> } \r\n                >\r\n                    <option value=\"baseline\">None</option>\r\n                    <option value=\"sub\">Subscript</option>\r\n                    <option value=\"super\">Superscript</option>\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport Preview from \"../common/Preview\";\r\nimport { selectAllOnClick } from \"../helpers\";\r\n\r\nconst DistancesSection = (props) => {\r\n    const {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    } = props;\r\n    \r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Margin top</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginTop}\r\n                        onChange={changeMarginTop}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>Margin bottom</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginBottom}\r\n                        onChange={changeMarginBottom}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>1st row indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={firstRowIndent}\r\n                        onChange={changeFirstRowIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Other rows indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={otherRowsIndent}\r\n                        onChange={changeOtherRowsIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Line spacing</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        input={ <CustomInputShort /> } \r\n                        value={lineSpacing} \r\n                        onChange={changeLineSpacing} \r\n                    >\r\n                        <option value=\"1.0\">1.0</option>\r\n                        <option className=\"highlightedOption\" value=\"1.15\">1.15</option>\r\n                        <option value=\"1.5\">1.5</option>\r\n                        <option value=\"2.0\">2.0</option>\r\n                        <option value=\"2.5\">2.5</option>\r\n                        <option value=\"3.0\">3.0</option>\r\n                        <option value=\"custom\">Custom</option>\r\n                    </NativeSelect> \r\n                    {\r\n                    lineSpacing === \"custom\" && \r\n                    (\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={customLineSpacing}\r\n                            onChange={changeCustomLineSpacing}\r\n                        />                                            \r\n                    )\r\n                }\r\n                </div>\r\n                   \r\n                    \r\n                <span>Word spacing</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={wordSpacing}\r\n                        onChange={changeWordSpacing}\r\n                        onClick={selectAllOnClick(\"0\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistancesSection;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst FrameTypeInput = withStyles(theme => ({\r\n    root: {\r\n      width: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      fontFamily: [\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default FrameTypeInput;","import FramesSection from \"./FramesSection\";\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport FrameTypeInput from \"../../sections/FramesSection/FrameTypeInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport { getCorrectColor, selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst FramesSection = (props) => {\r\n    const { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n     } = props;\r\n\r\n     const correctColor = getCorrectColor(borderColor);\r\n     const previewBorderWidth = borderThickness && !isNaN(parseFloat(borderThickness))\r\n                                ? `${borderThickness <= 15 ? borderThickness : 15}pt`\r\n                                : \"0\";\r\n\r\n     const previewStyle = {\r\n         borderLeft: leftBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginLeft: leftBorder ? \"0\" : previewBorderWidth, \r\n         borderRight: rightBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginRight: rightBorder ? \"0\" : previewBorderWidth, \r\n         borderTop: topBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginTop: topBorder ? \"0\" : previewBorderWidth, \r\n         borderBottom: bottomBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginBottom: bottomBorder ? \"0\" : previewBorderWidth, \r\n     };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"directionControlsContainer\">\r\n                <div className=\"directionsControls\" style={previewStyle}>\r\n                    <span className=\"directionLabel\">Left</span>\r\n                    <div className=\"centralColumn\">\r\n                        <span className=\"directionLabel\">Top</span>\r\n                        <div className=\"checkboxesKit crossGrid\">\r\n                            <div id=\"r1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={topBorder}  \r\n                                    onChange={changeTopBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={leftBorder}  \r\n                                    onChange={changeLeftBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c2\" className=\"gridCell\">\r\n                            </div>\r\n                            <div id=\"r2c3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={rightBorder}  \r\n                                    onChange={changeRightBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={bottomBorder}  \r\n                                    onChange={changeBottomBorder}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"directionLabel\">Bottom</span>\r\n                    </div>\r\n                    <span className=\"directionLabel\">Right</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <span>Frame color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    value={borderColorName}\r\n                    onChange={changeBorderColorName}\r\n                    onClick={selectAllOnClick(\"Red\")}\r\n                />\r\n\r\n                <span>Frame color HEX</span>\r\n                <ColorField \r\n                    colorCode={borderColor} \r\n                    changeColorCode={changeBorderColor}\r\n                    required\r\n                />\r\n\r\n                <span>Frame thickness</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={borderThickness}\r\n                        onChange={changeBorderThickness}\r\n                        onClick={selectAllOnClick(\"2\")}\r\n                     />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>                        \r\n\r\n                <span>Type of frame</span>\r\n                <div >\r\n                    <Select\r\n                      input={<FrameTypeInput />}\r\n                      value={borderType}\r\n                      onChange={changeBorderType}\r\n                    >\r\n                        <MenuItem value=\"solid\"><b>━━━━</b></MenuItem>\r\n                        <MenuItem value=\"dotted\">• • • • • • •</MenuItem>\r\n                        <MenuItem value=\"dashed\"><b>– – – – –</b></MenuItem>\r\n                        <MenuItem value=\"double\">══════</MenuItem>              \r\n                    </Select>\r\n                </div>\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox color=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport Preview from \"../common/Preview\";\r\nimport ColorField from \"../common/ColorField\";\r\n\r\nconst  FillingSection = (props) => {\r\n    const { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n     } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Filling color name</span>\r\n                <div>\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        className=\"mediumTextField\" \r\n                        value={fillingColorName}\r\n                        onChange={changeFillingColorName}\r\n                    />\r\n                </div>\r\n\r\n                <span>Filling color HEX</span>\r\n                <ColorField \r\n                    colorCode={fillingColor} \r\n                    changeColorCode={changeFillingColor}\r\n                />\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox \r\n                        color=\"primary\" \r\n                        checked={connectToPrevious} \r\n                        onChange={changeConnectToPrevious} \r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FillingSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\n\r\nconst TocSection = ({ tocIndentation, changeTocIndentation }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>ToC indentation</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={tocIndentation}\r\n                    onChange={changeTocIndentation} \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>                    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TocSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst ShortCutSection = (props) => {\r\n    const {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Windows</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutWinView}\r\n                    onKeyDown={changeShortCutWin} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n\r\n            <span>Mac</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutMacView}\r\n                    onKeyDown={changeShortCutMac} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />     \r\n            </div>          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShortCutSection;","import React from \"react\";\r\n\r\nconst TypographySection = () => {\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: pink,\r\n    },\r\n});\r\n\r\nexport default theme;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomTab;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomErrorTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n      textDecoration: \"red underline\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n        textDecoration: \"indianred underline\",\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomErrorTab;","import Tabs from \"@material-ui/core/Tabs\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTabs = withStyles(theme => ({\r\n    indicator: {\r\n        backgroundColor: \"#1890ff\",\r\n        opacity: 0.5,\r\n        width: \"190px\",\r\n        zIndex: 5,\r\n        display: \"none\",\r\n      }\r\n  }))(Tabs);\r\n\r\n  export default CustomTabs;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst CustomDialog = withStyles(theme => ({\r\n    root: {\r\n        minWidth: \"1250px\",\r\n        minHeight: \"1100px !important\",\r\n        height: \"100%\",\r\n    },\r\n    container: {\r\n        height: \"100vh\",\r\n        display: \"block\",\r\n    },\r\n    scrollBody: {\r\n        \"&:after\": {\r\n            height: \"100%\",\r\n        }\r\n    },\r\n    paperFullWidth: {\r\n        maxWidth: \"1280px\",\r\n        maxHeight: \"850px\",\r\n        minHeight: \"550px\",\r\n        width: \"calc(100% - 96px)\",\r\n        height: \"calc(100% - 96px)\",\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        border: \"none\",\r\n    },\r\n    paperScrollBody: {\r\n        verticalAlign: \"middle\",\r\n    },\r\n  }))(Dialog);\r\n  \r\n  export default CustomDialog;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport NamesSection from \"./sections/NamesSection\";\r\nimport WordExportSection from \"./sections/WordExportSection\";\r\nimport PositioningSection from \"./sections/PositioningSection\";\r\nimport ListSection from \"./sections/ListSection\";\r\nimport ReferencingSection from \"./sections/ReferencingSection\";\r\nimport TypographySection from \"./sections/TypographySection\";\r\nimport DistancesSection from \"./sections/DistancesSection\";\r\nimport FramesSection from \"./sections/FramesSection\";\r\nimport FillingSection from \"./sections/FillingSection\";\r\nimport TocSection from \"./sections/TocSection\";\r\nimport ShortCutsSection from \"./sections/ShortCutsSection\";\r\nimport TestSection from \"./sections/TestSection\";\r\n\r\nimport theme from \"./theme\";\r\nimport Handlers from \"./Handlers\";\r\nimport CustomTab from \"./common/CustomTab\";\r\nimport CustomErrorTab from \"./common/CustomErrorTab\";\r\nimport CustomTabs from \"./common/CustomTabs\";\r\nimport CustomDialog from \"./common/CustomDialog\";\r\nimport { alignmentsMap, HOLDER } from \"./constants\";\r\n\r\nimport { \r\n    fillMissedFields, \r\n    DecDataParser, \r\n    getTabsErrorState,\r\n    getCorrectColor, \r\n    getUnstyledText,\r\n    getListChars, \r\n    getTabNumberToSwitch,\r\n    getPreviewFont,\r\n} from \"./helpers\";\r\n\r\nimport {\r\n    updateDecoratorForm, \r\n    clearDecoratorForm, \r\n    switchDecDialogTab, \r\n    updateValidationError, \r\n} from \"./actions\";\r\n\r\nimport { saveDecoratorForm } from \"../../actions\"\r\n\r\nimport \"./style.css\";\r\n\r\nconst NewDecDialog = props => {\r\n    const { \r\n        isOpen, \r\n        closeDialog, \r\n        clearForm, \r\n        saveForm,\r\n        updateForm, \r\n        formState, \r\n        openedTab,\r\n        validationError, \r\n        isEditMode,\r\n        switchTab,\r\n        updateValidationError,\r\n    } = props;\r\n\r\n    const onClose = () => {\r\n        closeDialog();\r\n        clearForm();\r\n    };\r\n\r\n    const onSaveButtonClick = () => {\r\n        const tabsErrorState = getTabsErrorState(formState)\r\n        if (tabsErrorState) {\r\n            updateValidationError(tabsErrorState);\r\n            switchTab(getTabNumberToSwitch(tabsErrorState));\r\n        } else {\r\n            const formToSave = DecDataParser.parseToSend(fillMissedFields(formState));\r\n            saveForm(formToSave);\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    const { \r\n        setValue, \r\n        toggleValue, \r\n        setNumber, \r\n        setColor, \r\n        setShortCut \r\n    } = Handlers(updateForm, formState);\r\n\r\n    const { \r\n        previewText,\r\n        prefix,\r\n        suffix,\r\n        suffixDistance,\r\n        listType,\r\n        listItem,\r\n        unicodeChar,\r\n        numberingStyle,\r\n        sideNumber,\r\n        sideNumberFont,\r\n        customSideNumberFont,\r\n        sideNumberAlignment,\r\n        sideNumberFontSize,\r\n        sideNumberFontColor,\r\n        sideNumberFillingColor,\r\n        sideNumberWidth,\r\n        sideNumberRadius,\r\n        font,\r\n        customFont,\r\n        alignment,\r\n        fontSize,\r\n        fontColorName,\r\n        fontColor,\r\n        bold,\r\n        italic,\r\n        underlined,\r\n        stroke,\r\n        textTransform,\r\n        verticalAlign,\r\n        marginTop,\r\n        marginBottom,\r\n        firstRowIndent,\r\n        otherRowsIndent,\r\n        lineSpacing,\r\n        customLineSpacing,\r\n        wordSpacing,   \r\n        leftBorder,\r\n        rightBorder,\r\n        topBorder,\r\n        bottomBorder,\r\n        borderColorName,\r\n        borderColor,\r\n        borderThickness,\r\n        borderType,\r\n        fillingColorName,\r\n        fillingColor,\r\n        connectToPrevious,\r\n        tocIndentation,\r\n        shortCutWinView,\r\n        shortCutMacView,\r\n    } = formState;\r\n    console.log(0);\r\n\r\n    const changeFont = setValue(\"font\");\r\n    const changeCustomFont = setValue(\"customFont\");\r\n    const changeAlignment = setValue(\"alignment\");\r\n    const changeFontSize = setNumber(\"fontSize\");\r\n    const changeFontColorName = setValue(\"fontColorName\");\r\n    const changeFontColor = setColor(\"fontColor\");\r\n    const changeBold = toggleValue(\"bold\");\r\n    const changeItalic = toggleValue(\"italic\");\r\n    const changeUnderlined = toggleValue(\"underlined\");\r\n    const changeStroke = toggleValue(\"stroke\");\r\n    const changeTextTransform = setValue(\"textTransform\");\r\n    const changeVerticalAlign = setValue(\"verticalAlign\");\r\n    const changeMarginTop = setNumber(\"marginTop\");\r\n    const changeMarginBottom = setNumber(\"marginBottom\");\r\n    const changeFirstRowIndent = setNumber(\"firstRowIndent\");\r\n    const changeOtherRowsIndent = setNumber(\"otherRowsIndent\");\r\n    const changeLineSpacing = setValue(\"lineSpacing\");\r\n    const changeCustomLineSpacing = setNumber(\"customLineSpacing\");\r\n    const changeWordSpacing = setNumber(\"wordSpacing\");\r\n    const changeLeftBorder = toggleValue(\"leftBorder\");\r\n    const changeRightBorder = toggleValue(\"rightBorder\");\r\n    const changeTopBorder = toggleValue(\"topBorder\");\r\n    const changeBottomBorder = toggleValue(\"bottomBorder\");\r\n    const changeBorderColorName = setValue(\"borderColorName\");\r\n    const changeBorderColor = setColor(\"borderColor\");\r\n    const changeBorderThickness = setNumber(\"borderThickness\");\r\n    const changeFillingColorName = setValue(\"fillingColorName\");\r\n    const changeFillingColor = setColor(\"fillingColor\");\r\n    const changeConnectToPrevious = toggleValue(\"connectToPrevious\");\r\n    const changeTocIndentation = setValue(\"tocIndentation\");\r\n    const changeShortCutWin = setShortCut(\"shortCutWin\", \"shortCutWinView\");\r\n    const changeShortCutMac = setShortCut(\"shortCutMac\", \"shortCutMacView\", true);\r\n\r\n    const changePreviewText = e => {\r\n        const { value } = e.target;\r\n        if (value && value !== \"<div></div>\" && value !== \"<br>\") {\r\n            setValue(\"previewText\")(null, getUnstyledText(value));\r\n        } else {\r\n            setValue(\"previewText\")(null, `<div><br></div>`);\r\n        }\r\n    };\r\n\r\n    const changeBorderType = e => {\r\n        setValue(\"borderType\")(e);\r\n        if (e.target.value === \"double\" && borderThickness === \"2\") {\r\n            setValue(\"borderThickness\")(null, \"3\");\r\n        }\r\n        if (e.target.value !== \"double\" && borderThickness === \"3\") {\r\n            setValue(\"borderThickness\")(null, \"2\");\r\n        }\r\n    };\r\n\r\n    const previewFontColor = getCorrectColor(fontColor, \"f5f5f5\");\r\n    const previewFillingColor = getCorrectColor(fillingColor, \"f5f5f5\");\r\n    const previewAdditionalFillingColor = connectToPrevious ? previewFillingColor : \"f5f5f5\";\r\n    const indentsDifference = (firstRowIndent || 0) - (otherRowsIndent || 0);\r\n    const previewMarginLeft = otherRowsIndent ? `${otherRowsIndent >= 12 ? 12 : otherRowsIndent}cm` : 0;\r\n    const previewTextIndent = indentsDifference ? `${indentsDifference >= 12 ? 12 : indentsDifference}cm` : 0;\r\n\r\n    const previewStyle = {\r\n        fontSize: !fontSize ? \"0\" : `${fontSize <= 120 ? fontSize : 120}pt`,\r\n        color: `#${previewFontColor}`,\r\n        fontFamily: getPreviewFont(font, customFont),\r\n        alignItems: alignmentsMap[alignment],\r\n        textAlign: alignment,\r\n        fontWeight: bold ? \"bold\" : \"normal\",\r\n        fontStyle: italic ? \"italic\" : \"normal\",\r\n        textDecoration: `${underlined ? \"underline\" : \"\"}${stroke ? \" line-through\" : \"\"}`.trim() || \"none\",\r\n        verticalAlign,\r\n        textTransform: textTransform !== \"small-caps\" ? textTransform : \"none\",\r\n        fontVariant: textTransform === \"small-caps\" ? textTransform : \"normal\",\r\n        backgroundColor: `#${previewFillingColor}`,\r\n        backgroundImage:  `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        marginLeft: previewMarginLeft,\r\n        textIndent: previewTextIndent,\r\n        wordSpacing: `${wordSpacing || 0}pt`,\r\n        lineHeight: (lineSpacing !== \"custom\" ? lineSpacing : (!customLineSpacing ? \"1.15\" : `${customLineSpacing || 0}`)),\r\n        marginBottom: `${marginBottom || 0}pt`,\r\n        marginTop: `${marginTop || 0}pt`,\r\n    };\r\n\r\n    const previewProps = { previewText, changePreviewText, previewStyle };\r\n\r\n    const previewSideNumberFontColor = getCorrectColor(sideNumberFontColor, \"f5f5f5\");\r\n    const previewSideNumberFillingColor = getCorrectColor(sideNumberFillingColor, \"f5f5f5\");\r\n\r\n    const sideNumberStyle = (!sideNumber || listType === \"unordered\") ? {} : {\r\n        fontFamily: getPreviewFont(sideNumberFont, customSideNumberFont),\r\n        textAlign: sideNumberAlignment,\r\n        fontSize: !sideNumberFontSize ? \"0\" : `${sideNumberFontSize <= 120 ? sideNumberFontSize : 120}pt`,\r\n        color: `#${previewSideNumberFontColor}`,\r\n        backgroundColor: `#${previewSideNumberFillingColor}`,\r\n        minWidth: `${sideNumberWidth || 0}pt`,\r\n        borderRadius: `${sideNumberRadius || 0}pt`,\r\n    };\r\n\r\n    const listPreviewProps = { \r\n        listChars: getListChars({\r\n                isOrderedList: listType === \"ordered\", \r\n                numberingStyle, \r\n                listItem,\r\n                unicodeChar,\r\n            }),\r\n        listPreviewStyle: previewStyle,\r\n        prefix, \r\n        suffix, \r\n        suffixDistance,\r\n        sideNumberStyle,\r\n    };\r\n\r\n    const listSectionProps = { \r\n        listPreviewProps,\r\n    };\r\n\r\n    const typographySectionProps = { \r\n        previewProps,\r\n        font, changeFont,\r\n        customFont, changeCustomFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    };\r\n\r\n    const distancesSectionProps = {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    };\r\n\r\n    const framesSectionProps = { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n    };\r\n\r\n    const fillingSectionProps = { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n    };\r\n\r\n    const tocSectionProps = {\r\n        tocIndentation, changeTocIndentation,\r\n    };\r\n\r\n    const shortCutsSectionProps = {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    };\r\n        \r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CustomDialog\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                scroll=\"body\"\r\n                className=\"paragraphDecorators-dialog\"\r\n                fullWidth={true}\r\n                maxWidth={false}\r\n                id=\"dialog\"\r\n            >\r\n                <div className=\"header\">\r\n                    <DialogTitle className=\"header-title\">\r\n                        <p>Create new paragraph decorator</p>\r\n                    </DialogTitle>\r\n                    <div className=\"header-buttons\">\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            onClick={onClose}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={onSaveButtonClick}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            {isEditMode ? \"Save\" : \"Create\"}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <DialogContent className=\"content\">\r\n                    <div className=\"content-leftSide\">\r\n                        <CustomTabs \r\n                            className=\"dialogTabs\"\r\n                            value={openedTab} \r\n                            onChange={(e, tabNumber) => { switchTab(tabNumber) }} \r\n                            orientation=\"vertical\"\r\n                            color=\"primary\"\r\n                            indicatorColor=\"primary\"\r\n                        >\r\n                            { validationError.namesSection \r\n                                ? ( <CustomErrorTab className=\"dialogTab\" label=\"Names\" /> )\r\n                                :  ( <CustomTab className=\"dialogTab\" label=\"Names\" /> ) }\r\n\r\n                            { validationError.wordExportSection \r\n                                ? ( <CustomErrorTab className=\"dialogTab\" label=\"WORD export\" /> ) \r\n                                : ( <CustomTab className=\"dialogTab\" label=\"WORD export\" /> ) }\r\n\r\n                            <CustomTab className=\"dialogTab\" label=\"Positioning\" />\r\n\r\n                            { validationError.listSection \r\n                                ? ( <CustomErrorTab className=\"dialogTab\" label=\"List\" /> ) \r\n                                : ( <CustomTab className=\"dialogTab\" label=\"List\" /> ) }\r\n\r\n                            <CustomTab className=\"dialogTab\" label=\"Referencing\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Typography\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Distances\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Frames\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Filling\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"ToC\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Short cuts\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Test\" />\r\n                        </CustomTabs>\r\n                    </div>\r\n                    <div className=\"content-rightSide\">\r\n                        { openedTab === 0 && <NamesSection /> }\r\n                        { openedTab === 1 && <WordExportSection /> }\r\n                        { openedTab === 2 && <PositioningSection /> }\r\n                        { openedTab === 3 && <ListSection {...listSectionProps} /> }\r\n                        { openedTab === 4 && <ReferencingSection /> }\r\n                        { openedTab === 5 && <TypographySection {...typographySectionProps} /> }\r\n                        { openedTab === 6 && <DistancesSection {...distancesSectionProps} /> }\r\n                        { openedTab === 7 && <FramesSection {...framesSectionProps} /> }\r\n                        { openedTab === 8 && <FillingSection {...fillingSectionProps} /> }\r\n                        { openedTab === 9 && <TocSection {...tocSectionProps} /> }\r\n                        { openedTab === 10 && <ShortCutsSection {...shortCutsSectionProps} /> }\r\n                        { openedTab === 11 && <TestSection {...typographySectionProps} /> }\r\n                    </div>\r\n                </DialogContent>\r\n            </CustomDialog>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, openedTab, validationError, isEditMode }}) => {\r\n    return { \r\n        formState: form,\r\n        openedTab,\r\n        validationError, \r\n        isEditMode,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(updateDecoratorForm(payload)),\r\n        clearForm: () => dispatch(clearDecoratorForm()),\r\n        switchTab: payload => dispatch(switchDecDialogTab(payload)),\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        saveForm: payload => dispatch(saveDecoratorForm(payload)),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewDecDialog);","export const SAVE_DEC_FORM = \"SAVE_DEC_FORM\";\r\nexport const CLEAR_SAVED_DEC_FORM = \"CLEAR_SAVED_DEC_FORM\";\r\n\r\nexport const saveDecoratorForm = payload => {\r\n    return {\r\n        type: SAVE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearSavedDecoratorForm = () => {\r\n    return {\r\n        type: CLEAR_SAVED_DEC_FORM,\r\n    };\r\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport NewDecDialog from \"./components/NewDecDialog\";\nimport { openDialog, closeDialog } from \"./components/NewDecDialog/actions\";\nimport { clearSavedDecoratorForm } from \"./actions\";\nimport { DecDataParser } from \"./components/NewDecDialog/helpers\";\nimport theme from \"./components/NewDecDialog/theme\";\n\nimport \"./App.css\";\n\nconst App = props => {\n    const { isOpen, openDialog, closeDialog, savedForm, clearSavedForm } = props;\n\n    const openEditDialog = () => {\n        openDialog(DecDataParser.parseToEdit(savedForm || {}));\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"App\">\n                <div className=\"startButtons\">\n                    { !savedForm ? (\n                        <Button \n                            onClick={() => openDialog()}\n                            color=\"primary\"\n                        >Create new</Button>\n                    ) : (\n                        <>\n                            <Button \n                                onClick={() => openEditDialog()}\n                            >Edit saved</Button>\n                            <Button \n                                onClick={clearSavedForm}\n                                color=\"secondary\"\n                            >Delete saved</Button>\n                        </>\n                    )}\n                </div>\n                <NewDecDialog { ...{isOpen, closeDialog}} />\n            </div>\n        </ThemeProvider>\n    );\n};\n\nconst mapStateToProps = ({ savedForm, decoratorDialog: { isOpen }}) => {\n    return { isOpen, savedForm };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        openDialog: openDialog(dispatch),\n        closeDialog: closeDialog(dispatch),\n        clearSavedForm: () => dispatch(clearSavedDecoratorForm()),\n    };\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { SHOW_DEC_DIALOG, HIDE_DEC_DIALOG } from \"../../components/NewDecDialog/actions\";\r\n\r\nconst isOpenReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case SHOW_DEC_DIALOG:\r\n            return true;\r\n        case HIDE_DEC_DIALOG:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isOpenReducer;","import { UPDATE_DEC_FORM, CLEAR_DEC_FORM } from \"../../components/NewDecDialog/actions\";\r\nimport getInitialState from \"../../components/NewDecDialog/getInitialState\";\r\n\r\nconst initialState = getInitialState();\r\n\r\nconst decoratorFormReducer = (state = initialState, action) =>  {\r\n    switch (action.type) {\r\n        case UPDATE_DEC_FORM:\r\n            return { ...state, ...action.payload };\r\n        case CLEAR_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default decoratorFormReducer;","import { sampleText, emptyDecFormState } from \"./constants\";\r\n\r\nconst getInitialState = (currentDecFormState = {}) => {\r\n    return { \r\n        previewText: sampleText,\r\n        ...emptyDecFormState,\r\n        ...currentDecFormState,\r\n    };\r\n};\r\n\r\nexport default getInitialState;","import { \r\n    UPDATE_VALIDATION_ERROR, \r\n    REMOVE_VALIDATION_ERROR, \r\n} from \"../../components/NewDecDialog/actions\";\r\n\r\nimport { tabsErrorInitialState } from \"../../components/NewDecDialog/constants\";\r\n\r\nconst validationErrorReducer = (state = tabsErrorInitialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_VALIDATION_ERROR:\r\n            return { ...state, ...action.payload };\r\n        case REMOVE_VALIDATION_ERROR:\r\n            return tabsErrorInitialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default validationErrorReducer;","import { \r\n    SWITCH_ON_DEC_DIALOG_EDIT_MODE, \r\n    SWITCH_OFF_DEC_DIALOG_EDIT_MODE, \r\n} from \"../../components/NewDecDialog/actions\";\r\n\r\nconst isEditModeReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_ON_DEC_DIALOG_EDIT_MODE:\r\n            return true;\r\n        case SWITCH_OFF_DEC_DIALOG_EDIT_MODE:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isEditModeReducer;","import { \r\n    SWITCH_DEC_DIALOG_TAB,\r\n    RESET_DEC_DIALOG_TAB, \r\n} from \"../../components/NewDecDialog/actions\";\r\n\r\nconst initialState = 0;\r\n\r\nconst openedTabReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_DEC_DIALOG_TAB:\r\n            return action.payload;\r\n        case RESET_DEC_DIALOG_TAB:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default openedTabReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport isOpenReducer from \"./isOpenReducer\";\r\nimport decoratorFormReducer from \"./decoratorFormReducer\";\r\nimport validationErrorReducer from \"./validationErrorReducer\";\r\nimport isEditModeReducer from \"./isEditModeReducer\";\r\nimport openedTabReducer from \"./openedTabReducer\";\r\n\r\nconst decoratorDialogReducer = combineReducers({\r\n    isOpen: isOpenReducer,\r\n    openedTab: openedTabReducer,\r\n    validationError: validationErrorReducer,\r\n    isEditMode: isEditModeReducer,\r\n    form: decoratorFormReducer,\r\n});\r\n\r\nexport default decoratorDialogReducer;","import { SAVE_DEC_FORM, CLEAR_SAVED_DEC_FORM } from \"../actions\";\r\n\r\nconst initialState = null;\r\n\r\nexport const savedFormReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SAVE_DEC_FORM:\r\n            return action.payload;\r\n        case CLEAR_SAVED_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default savedFormReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport decoratorDialogReducer from \"./decoratorDialogReducer\";\r\nimport savedFormReducer from \"./savedFormReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    decoratorDialog: decoratorDialogReducer,\r\n    savedForm: savedFormReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}