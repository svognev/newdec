{"version":3,"sources":["components/NewDecDialog/helpers/DecDataParser.js","components/NewDecDialog/helpers/isFontAvailable.js","components/NewDecDialog/helpers/getShortCutUtils.js","components/NewDecDialog/constants/emptyDecFormState.js","components/NewDecDialog/constants/decoratorsList.js","components/NewDecDialog/constants/fontsSet.js","components/NewDecDialog/constants/validationData.js","components/NewDecDialog/constants/constants.js","components/NewDecDialog/helpers/validationFunctions.js","components/NewDecDialog/helpers/helpers.js","components/NewDecDialog/Handlers.js","components/NewDecDialog/common/CustomInput.js","components/NewDecDialog/common/NewGroupDialog.js","components/NewDecDialog/common/LabelWithAsterisk.js","components/NewDecDialog/hoc/withNewGroupControl.js","components/NewDecDialog/actions/index.js","components/NewDecDialog/sections/NamesSection.js","components/NewDecDialog/sections/WordExportSection.js","components/NewDecDialog/common/CustomInputShort.js","components/NewDecDialog/sections/PositioningSection/BackSpaceActionInput.js","components/NewDecDialog/sections/PositioningSection/index.js","components/NewDecDialog/sections/PositioningSection/PositioningSection.js","components/NewDecDialog/common/Preview/ListPreview.js","components/NewDecDialog/common/ColorField/index.js","components/NewDecDialog/common/ColorField/ColorField.js","components/NewDecDialog/common/FontSelectFields/index.js","components/NewDecDialog/common/FontSelectFields/FontSelectFields.js","components/NewDecDialog/sections/ListSection/index.js","components/NewDecDialog/sections/ListSection/ListSection.js","components/NewDecDialog/sections/ReferencingSection.js","components/NewDecDialog/common/ContentEditable.js","components/NewDecDialog/common/Preview/Preview.js","components/NewDecDialog/common/Preview/index.js","components/NewDecDialog/sections/TypographySection/index.js","components/NewDecDialog/sections/TypographySection/TypographySection.js","components/NewDecDialog/sections/DistancesSection.js","components/NewDecDialog/sections/FramesSection/FrameTypeInput.js","components/NewDecDialog/sections/FramesSection/index.js","components/NewDecDialog/sections/FramesSection/FramesSection.js","components/NewDecDialog/sections/FillingSection.js","components/NewDecDialog/sections/TocSection.js","components/NewDecDialog/sections/ShortCutsSection.js","components/NewDecDialog/sections/TestSection.js","components/NewDecDialog/theme.js","components/NewDecDialog/common/CustomTab.js","components/NewDecDialog/common/CustomErrorTab.js","components/NewDecDialog/common/CustomTabs.js","components/NewDecDialog/common/CustomDialog.js","components/NewDecDialog/index.js","actions.js","App.js","reducers/decoratorDialogReducer/isOpenReducer.js","reducers/decoratorDialogReducer/decoratorFormReducer.js","components/NewDecDialog/getInitialState.js","reducers/decoratorDialogReducer/validationErrorReducer.js","reducers/decoratorDialogReducer/isEditModeReducer.js","reducers/decoratorDialogReducer/openedTabReducer.js","reducers/decoratorDialogReducer/index.js","reducers/savedFormReducer.js","reducers/rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["DecDataParser","dec","mapDecFields","width","getShortCutUtils","systemName","e","keyCode","preventDefault","stopPropagation","ShortcutUtils","isDeadKey","prevent","deleteKey","shortCut","ctrlKey","shiftKey","altKey","metaKey","shortCutForView","convertShortcutToMeta","indexOf","isCmdPressed","value","stringValue","Object","keys","CMD_KEYS","forEach","key","keycode","removeDuplicateShortcuts","decorators","newPdShortcut","removed","decoratorKey","item","item_type","isEqual","keyboard_shortcut","childItems","child_items","itemKey","style","removeDuplicateShortcutsInInlineStyle","inlineStyles","styleKey","body","document","container","createElement","innerHTML","Array","join","cssText","getWidth","fontFamily","appendChild","clientWidth","removeChild","monoWidth","serifWidth","sansWidth","isFontAvailable","font","HOLDER","autoFillingRequiredFields","sideNumberFontSize","sideNumberFontColor","sideNumberFillingColor","sideNumberWidth","sideNumberRadius","fontSize","fontColor","marginTop","marginBottom","firstRowIndent","otherRowsIndent","wordSpacing","borderColor","borderThickness","emptyDecFormState","decKey","group","groupToCreate","active","decNameEn","decNameDe","decNameRu","decNameFr","decNameFrCa","decNameEs","wordStyleName","softReturn","indentationalLevel","backspaceActionWithContent","backspaceActionWithContentStyle","returnActionNextSection","returnActionEmptySection","tabAction","shiftTabAction","isList","listName","orderLevel","prefix","suffix","suffixDistance","magicTabs","listType","listItem","unicodeNumber","unicodeChar","numberingStyle","continueNumbering","allowRestartNumbering","includePreviousFrom","sideNumber","sideNumberFont","customSideNumberFont","sideNumberAlignment","referenceGroup","referenceGroupToCreate","customFont","alignment","fontColorName","bold","italic","underlined","stroke","textTransform","verticalAlign","lineSpacing","customLineSpacing","leftBorder","rightBorder","topBorder","bottomBorder","borderColorName","borderType","fillingColorName","fillingColor","connectToPrevious","tocIndentation","shortCutWin","shortCutWinView","shortCutMac","shortCutMacView","decoratorsList","name","fontSet","namesSectionRequiredFields","wordExportSectionRequiredFields","listSectionRequiredFields","tabsErrorInitialState","namesSection","wordExportSection","listSection","sectionsTabNumbers","tabName","tabNumber","alignmentsMap","center","left","right","justify","backSpaceActions","bulletNamesMap","bulletpoint","dash","star","listStyleTypes","numberingSets","decimal","sampleText","getNamesSectionErrorState","form","every","fieldName","getWordExportSectionErrorState","getListSectionErrorState","getCorrectColor","hex","backgroundColor","correctColor","length","selectAllOnClick","defaultValue","target","focus","select","getOffset","alignType","parseFloat","slice","scrollToBottom","className","setTimeout","getElementsByClassName","scrollTo","top","Number","MAX_SAFE_INTEGER","behavior","getListChars","isOrderedList","newBullet","fill","focusInput","inputRef","timeout","current","getPreviewFont","fillMissedFields","currentFormState","formStateWithoutMissedFields","Handlers","update","formState","toggleStateProperty","propName","checked","setStateProperty","secondArg","newValue","undefined","setBullet","setColor","input","filteredInput","replace","trim","match","setNumber","setShortCut","valuePropName","viewPropName","isMac","convertEventToShortCut","CustomInput","withStyles","theme","root","spacing","borderRadius","minWidth","position","palette","background","paper","border","padding","transition","transitions","create","boxShadow","InputBase","NewGroupDialog","state","props","currentGroup","groupType","nameEn","nameDe","nameRu","nameFr","nameFrCa","nameEs","groupKey","onInputChange","inputName","setState","onClose","hideDialog","onGroupSave","onSave","changeGroupSelect","groupToSave","this","isOpen","isEditMode","titleText","buttonText","Dialog","open","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","variant","margin","onChange","DialogActions","Button","onClick","color","React","Component","LabelWithAsterisk","children","withNewGroupControl","ViewComponent","groupSelect","newGroup","savedNewGroup","handleClick","changeDecoratorForm","payload","type","clearDecoratorForm","updateValidationError","openDialog","dispatch","closeDialog","NamesSection","handlers","updateForm","changeDecKey","changeGroup","changeGroupToCreate","changeActive","changeDecNameEn","changeDecNameDe","changeDecNameRu","changeDecNameFr","changeDecNameFrCa","changeDecNameEs","onGroupChange","args","decKeyInputRef","createRef","decNameEnInputRef","focusOnEmptyField","validationError","prevprops","newGroupName","error","NativeSelect","Checkbox","connect","decoratorDialog","WordExportSection","changeWordStyleName","changeSoftReturn","console","log","autoFocus","CustomInputShort","BackSpaceActionInput","PositioningSection","changeIndentationalLevel","changeBackspaceActionWithContent","changeBackspaceActionWithContentStyle","changeReturnActionNextSection","changeReturnActionEmptySection","changeTabAction","changeShiftTabAction","id","map","action","ListPreview","listPreviewStyle","listChars","sideNumberStyle","listItemsBeginnings","listChar","listItemBeginingStyle","marginRight","ColorField","hideColorPicker","showColorPicker","colorPickerHandler","changeColor","colorCode","changeColorCode","defaultColorCode","required","bottomAligned","colorError","inputError","pickerColor","colorSampleStyle","colorPickerClassName","InputProps","startAdornment","InputAdornment","onChangeComplete","disableAlpha","FontSelectFields","textInput","focusTextInput","onFontChange","changeFont","extraFunction","changeCustomFont","availableFonts","filter","fontName","customFontFieldState","placeholder","ListSection","listNameInputRef","unicodeCharInputRef","changeAndScroll","changeFunction","onIsListChange","changeIsList","onListItemChange","changeListItem","listPreviewProps","changeListName","changeOrderLevel","changePrefix","changeSuffix","changeSuffixDistance","changeMagicTabs","changeListType","changeUnicodeNumber","changeUnicodeChar","changeNumberingStyle","changeContinueNumbering","changeAllowRestartNumbering","changeIncludePreviousFrom","changeSideNumber","changeSideNumberFont","changeCustomSideNumberFont","changeSideNumberAlignment","changeSideNumberFontSize","changeSideNumberFontColor","changeSideNumberFillingColor","changeSideNumberWidth","changeSideNumberRadius","mainListSettingsState","unorderedListSettingsState","orderedListSettingsState","sideNumberSettingsState","entries","Fade","in","changeReferenceGroup","changeReferenceGroupToCreate","onXrefChange","xref","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","q","propertyIsEnumerable","normalizeHtml","str","replaceCaret","el","findLastTextNode","node","nodeType","Node","TEXT_NODE","childNodes","textNode","isTargetFocused","activeElement","nodeValue","sel","window","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","ContentEditable","arguments","lastHtml","html","innerRef","getEl","emitChange","originalEvt","evt","assign","_a","tagName","ref","onInput","onBlur","onKeyUp","onKeyDown","contentEditable","disabled","dangerouslySetInnerHTML","__html","nextProps","deepEqual","Preview","previewText","changePreviewText","previewStyle","editableContentStyle","outline","selectAllChildren","TypographySection","previewProps","changeAlignment","changeFontSize","changeFontColorName","changeFontColor","changeBold","changeItalic","changeUnderlined","changeStroke","changeTextTransform","changeVerticalAlign","FormControlLabel","control","label","labelPlacement","RadioGroup","row","Radio","DistancesSection","changeMarginTop","changeMarginBottom","changeFirstRowIndent","changeOtherRowsIndent","changeLineSpacing","changeCustomLineSpacing","changeWordSpacing","FrameTypeInput","FramesSection","changeLeftBorder","changeRightBorder","changeTopBorder","changeBottomBorder","changeBorderColorName","changeBorderColor","changeBorderThickness","changeBorderType","previewBorderWidth","isNaN","borderLeft","marginLeft","borderRight","borderTop","borderBottom","Select","MenuItem","FillingSection","changeFillingColorName","changeFillingColor","changeConnectToPrevious","TocSection","changeTocIndentation","ShortCutSection","changeShortCutWin","changeShortCutMac","createMuiTheme","primary","blue","secondary","pink","CustomTab","overflow","opacity","selected","Tab","CustomErrorTab","textDecoration","CustomTabs","indicator","zIndex","display","Tabs","CustomDialog","minHeight","height","scrollBody","paperFullWidth","maxHeight","flexDirection","paperScrollBody","openedTab","clearForm","switchTab","switchDecDialogTab","saveForm","saveDecoratorForm","backspaceActionWithoutContent","backspaceActionWithoutContentStyle","changeBackspaceActionWithoutContent","changeBackspaceActionWithoutContentStyle","previewFontColor","previewFillingColor","previewAdditionalFillingColor","indentsDifference","previewMarginLeft","previewTextIndent","alignItems","textAlign","fontWeight","fontStyle","fontVariant","backgroundImage","textIndent","lineHeight","styledText","unstyledText","getUnstyledText","previewSideNumberFontColor","previewSideNumberFillingColor","positioningSectionProps","listSectionProps","newUnicodeNumber","newUnicodeChar","String","fromCharCode","parseInt","unicodeNumberToChar","charCodeAt","toString","unicodeCharToNumber","referencingSectionProps","typographySectionProps","distancesSectionProps","framesSectionProps","fillingSectionProps","tocSectionProps","shortCutsSectionProps","ThemeProvider","aria-labelledby","scroll","tabsErrorState","tabsState","clone","getTabsErrorState","getTabNumberToSwitch","formToSave","parseToSend","orientation","indicatorColor","ShortCutsSection","TestSection","savedForm","clearSavedForm","parseToEdit","isOpenReducer","initialState","currentDecFormState","getInitialState","decoratorFormReducer","validationErrorReducer","isEditModeReducer","openedTabReducer","decoratorDialogReducer","combineReducers","savedFormReducer","rootReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0gBAAMA,E,yGACiBC,GACf,OAAOA,I,kCAGQA,GACf,OAAOA,M,KANTD,EASKE,aAAe,GAGXF,ICXXG,EDWWH,I,mCEgGAI,EAzGU,SAAAC,GAAe,IAAD,IACrC,OAAO,EAAP,yGAQmBC,GACf,OAAqB,MAAdA,EAAEC,UATb,8BAYiBD,GACbA,EAAEE,iBACFF,EAAEG,oBAdN,6CAiBgCH,GAC5B,GAAII,EAAcC,UAAUL,GAE1B,OADAI,EAAcE,QAAQN,GACf,CAAEO,WAAW,GAEtBH,EAAcE,QAAQN,GACtB,IAAMQ,EAAW,CACfP,QAASD,EAAEC,QACXQ,QAAST,EAAES,QACXC,SAAUV,EAAEU,SACZC,OAAQX,EAAEW,OACVC,SAAS,GAEQ,UAAfb,IACFS,EAASI,QAAUZ,EAAEY,SAEvB,IAEMC,EAAkBT,EAAcU,sBAAsBN,GAC5D,MAHmB,CAAC,EAAG,IAGRO,QAAQf,EAAEC,UAAY,EAC5B,CAAEM,WAAW,GACXM,EAAgBG,eAAqD,IAJ3D,CAAC,GAAI,GAAI,GAAI,IAIsBD,QAAQf,EAAEC,SACzD,CACLgB,MAAOT,EACPU,YAAaL,EAAgBK,aAG1B,OA5CX,gDA+CiD,IAAhBV,EAAe,uDAAJ,GACxC,OAAOJ,EAAcU,sBAAsBN,GAAUU,cAhDzD,8CAmD+C,IAAhBV,EAAe,uDAAJ,GAClCK,EAAkB,GAClBG,GAAe,EAUnB,OATAG,OAAOC,KAAKhB,EAAciB,UAAUC,QAAQ,SAACC,GACvCf,GAAYA,EAASe,KACvBP,GAAe,EACfH,GAAe,UAAOT,EAAciB,SAASE,GAA9B,UAGff,GAAYA,EAASP,UACvBY,GAAmBW,IAAQhB,EAASP,UAE/B,CAAEiB,YAAaL,EAAiBG,oBA/D3C,OACSK,SAAW,CAChBV,OAAuB,UAAfZ,EAAyB,SAAW,MAC5CU,QAAwB,UAAfV,EAAyB,UAAY,OAC9CW,SAAU,QACVE,QAAS,WALb,EAkESa,yBAA2B,SAAUC,EAAYC,GACtD,IAAIC,GAAU,EAoBd,OAnBAT,OAAOC,KAAKM,GAAYJ,QAAQ,SAACO,GAC/B,IAAMC,EAAOJ,EAAWG,GAExB,GAAiB,UADAC,EAAKC,UAEhBC,IAAQF,EAAKG,kBAAmBN,KAClCD,EAAWG,GAAcI,kBAAoB,KAC7CL,GAAU,OAEP,CACL,IAAMM,EAAaJ,EAAKK,YACxBhB,OAAOC,KAAKc,GAAYZ,QAAQ,SAACc,GAC/B,IAAMC,EAAQH,EAAWE,GACrBJ,IAAQK,EAAMJ,kBAAmBN,KACnCU,EAAMJ,kBAAoB,KAC1BL,GAAU,QAKXA,GAvFX,EA0FSU,sCAAwC,SAAUC,EAAcZ,GACrE,IAAIC,GAAU,EAQd,OAPAT,OAAOC,KAAKmB,GAAcjB,QAAQ,SAACkB,GACjC,IAAMV,EAAOS,EAAaC,GACtBR,IAAQF,EAAKG,kBAAmBN,KAClCY,EAAaC,GAAUP,kBAAoB,KAC3CL,GAAU,KAGPA,GAnGX,GDJMa,EAASC,SAATD,KAGFE,EAAYD,SAASE,cAAc,QACzCD,EAAUE,UAAYC,MAAM,KAAKC,KAAK,MACtCJ,EAAUN,MAAMW,QAAU,CACtB,oBACA,aACA,kBACA,iBACFD,KAAK,gBAEP,IAAME,EAAW,SAAAC,GAOb,OANAP,EAAUN,MAAMa,WAAaA,EAE7BT,EAAKU,YAAYR,GACjB9C,EAAQ8C,EAAUS,YAClBX,EAAKY,YAAYV,GAEV9C,GAGLyD,EAAaL,EAAS,aACtBM,EAAaN,EAAS,SACtBO,EAAaP,EAAS,cAQbQ,EANS,SAAAC,GACpB,OAAOJ,IAAcL,EAASS,EAAO,eACrCF,IAAcP,EAASS,EAAO,gBAC9BH,IAAeN,EAASS,EAAO,W,qOE7B5B,IAAMC,EAAS,gBAGTC,EAA4B,CACvCC,mBAAoB,KACpBC,oBAAqB,MACrBC,uBAAwB,SACxBC,gBAAiB,KACjBC,iBAAkB,KAClBC,SAAU,KACVC,UAAW,MACXC,UAAW,IACXC,aAAc,IACdC,eAAgB,IAChBC,gBAAiB,IACjBC,YAAa,IACbC,YAAa,MACbC,gBAAiB,KAGNC,E,qVAAiB,EAC5BC,OAAQ,GACRC,MAAO,GACPC,cAAe,GACfC,QAAQ,EACRC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,YAAa,GACbC,UAAW,GACXC,cAAe,GACfC,YAAY,EACZC,mBAAoB,GACpBC,2BAA4B,QAC5BC,gCAAiC,UACjCC,wBAAyB,UACzBC,yBAA0B,UAC1BC,UAAW,GACXC,eAAgB,GAChBC,QAAQ,EACRC,SAAUrC,EACVsC,WAAY,GACZC,OAAQ,GACRC,OAAQ,GACRC,eAAgB,OAChBC,WAAW,EACXC,SAAU,YACVC,SAAU,cACVC,cAAe,GACfC,YAAa,GACbC,eAAgB,UAChBC,mBAAmB,EACnBC,uBAAuB,EACvBC,oBAAqB,GACrBC,YAAY,EACZC,eAvD0B,YAwD1BC,qBAAsB,GACtBC,oBAAqB,SACrBC,eAAgB,GAChBC,uBAAwB,GACxBzD,KA5D0B,YA6D1B0D,WAAY,GACZC,UAAW,OACXC,cAAe,QACfC,MAAM,EACNC,QAAQ,EACRC,YAAY,EACZC,QAAQ,EACRC,cAAe,OACfC,cAAe,WACfC,YAAa,OACbC,kBAAmB,GACnBC,YAAY,EACZC,aAAa,EACbC,WAAW,EACXC,cAAc,EACdC,gBAAiB,MACjBC,WAAY,QACZC,iBAAkB,GAClBC,aAAc,GACdC,mBAAmB,EACnBC,eAAgB,GAChBC,YAAa,GACbC,gBAAiB,GACjBC,YAAa,GACbC,gBAAiB,IACdhF,GCzEUiF,EAdQ,CACnB,CAAEC,KAAM,MAAO7H,MAAO,IACtB,CAAE6H,KAAM,SAAU7H,MAAO,gBACzB,CAAE6H,KAAM,SAAU7H,MAAO,gBACzB,CAAE6H,KAAM,SAAU7H,MAAO,gBACzB,CAAE6H,KAAM,SAAU7H,MAAO,gBACzB,CAAE6H,KAAM,SAAU7H,MAAO,gBACzB,CAAE6H,KAAM,YAAa7H,MAAO,mBAC5B,CAAE6H,KAAM,YAAa7H,MAAO,mBAC5B,CAAE6H,KAAM,YAAa7H,MAAO,mBAC5B,CAAE6H,KAAM,YAAa7H,MAAO,mBAC5B,CAAE6H,KAAM,YAAa7H,MAAO,oBCAjB8H,EAXC,CACZ,kBACA,cACA,eACA,YACA,UACA,QACA,UACA,mBCRSC,EAA6B,CAAC,SAAU,aAExCC,EAAkC,CAAC,iBAEnCC,EAA4B,CAAC,YAQ7BC,GANc,UACpBH,EACAC,EACAC,GAG8B,CACjCE,cAAc,EACdC,mBAAmB,EACnBC,aAAa,IAGJC,EAAqB,CAC9B,CAAEC,QAAS,eAAgBC,UAAW,GACtC,CAAED,QAAS,oBAAqBC,UAAW,GAC3C,CAAED,QAAS,cAAeC,UAAW,ICrB5BC,EAAgB,CACzBC,OAAQ,SACRC,KAAM,aACNC,MAAO,WACPC,QAAS,cAGAC,EAAmB,CAC5B,CAAExI,IAAK,QAASN,MAAO,SACvB,CAAEM,IAAK,iBAAkBN,MAAO,kBAChC,CAAEM,IAAK,YAAaN,MAAO,aAC3B,CAAEM,IAAK,UAAWN,MAAO,YAGhB+I,EAAiB,CAC1BC,YAAa,SACbC,KAAM,SACNC,KAAM,UAGGC,EAAiB,CAC1B,CAAEtB,KAAM,UAAW7H,MAAO,WAC1B,CAAG6H,KAAM,UAAW7H,MAAO,eAC3B,CAAG6H,KAAM,UAAW7H,MAAO,eAC3B,CAAG6H,KAAM,aAAc7H,MAAO,eAC9B,CAAG6H,KAAM,aAAc7H,MAAO,gBAGrBoJ,EAAgB,CACzBC,QAAS,CAAC,IAAK,IAAK,IAAK,KACzB,cAAe,CAAC,IAAK,IAAK,IAAK,KAC/B,cAAe,CAAC,IAAK,IAAK,IAAK,KAC/B,cAAe,CAAC,IAAK,KAAM,MAAO,MAClC,cAAe,CAAC,IAAK,KAAM,MAAO,OAGzBC,EAAU,8MC1BVC,GAA4B,SAAAC,GACrC,OAAQzB,EAA2B0B,MAAM,SAAAC,GAAS,OAAIF,EAAKE,MAGlDC,GAAiC,SAAAH,GAC1C,OAAQxB,EAAgCyB,MAAM,SAAAC,GAAS,OAAIF,EAAKE,MAGvDE,GAA2B,SAAAJ,GACpC,OAAQvB,EAA0BwB,MAAM,SAAAC,GAAS,OAAIF,EAAKE,M,6NCVvD,IAAMG,GAAkB,SAACC,GAAkC,IAA7BC,EAA4B,uDAAV,MAC7CC,EAA8B,kBAARF,GAAoC,IAAfA,EAAIG,QAA+B,IAAfH,EAAIG,OAAsBF,EAAND,EACzF,OAAOE,GAGEE,GAAmB,SAAAC,GAAY,OAAI,SAAApL,GACvCoL,GAAgBpL,EAAEqL,OAAOpK,QAAUmK,IACpCpL,EAAEqL,OAAOC,QACTtL,EAAEqL,OAAOE,YAIJC,GAAY,SAACC,EAAWvH,GACjC,MAAkB,aAAduH,EACO,EAEHC,WAAWxH,EAASyH,SAAW,GAAoB,QAAdF,EAAsB,GAAK,IAgB/DG,GAAiB,SAAAC,GAC1BC,WAAW,WAAQpJ,SAASqJ,uBAAuBF,GAAW,GAAGG,SAAS,CACtEC,IAAKC,OAAOC,iBACZC,SAAU,YACT,IASIC,GAAe,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,cAAe5F,EAA4C,EAA5CA,eAAgBH,EAA4B,EAA5BA,SAAUE,EAAkB,EAAlBA,YACpE,GAAI6F,EACA,OAAOjC,EAAc3D,GAEzB,IAAM6F,EAAYvC,EAAezD,IAAaE,EAC9C,OAAO3D,MAAM,GAAG0J,KAAKD,IAaZE,GAAa,SAACC,GAA6B,IAAnBC,EAAkB,uDAAR,IAC3Cb,WAAW,WACPY,EAASE,QAAQtB,SAClBqB,IAWME,GAAiB,SAACnJ,EAAM0D,GACjC,MAAa,WAAT1D,GAAqBD,EAAgBC,GAC9BA,EACS,WAATA,GAAqB0D,GAAc3D,EAAgB2D,GACnDA,EAEL,IAAN,ON3FwB,YM2FxB,4BAGS0F,GAAmB,SAAAC,GAC5B,IAAMC,E,uVAA4B,IAAQD,GAW1C,IAAK,IAAIpC,IATqB,WAA1BoC,EAAiBrJ,MAAsBqJ,EAAiB3F,aACxD4F,EAA6BtJ,KNlGT,aMqGgB,WAApCqJ,EAAiBhG,gBAAgCgG,EAAiB/F,uBAClEgG,EAA6BjG,eNtGT,aM0GFnD,GACbmJ,EAAiBpC,IAAc/G,EAA0B+G,KAC1DqC,EAA6BrC,GAAa/G,EAA0B+G,IAG5E,OAAOqC,GC3CIC,GAnEE,SAACC,EAAQC,GAAT,uDACNC,oBAAsB,SAAAC,GAAQ,OAAI,SAAArN,GACrCkN,EAAO,eACFG,EAAWrN,EAAEqL,OAAOiC,YAHhB,EAONC,iBAAmB,SAAAF,GAAQ,OAAI,SAACrN,GAAuB,IAApBwN,EAAmB,uDAAP,GAC5CC,EAAYzN,GAAwB,KAAnBA,EAAEqL,OAAOpK,YAAmCyM,IAAnB1N,EAAEqL,OAAOpK,MAAuBjB,EAAEqL,OAAOpK,MAAQuM,EACjGN,EAAO,eACFG,EAAWI,MAVP,EAcNE,UAAY,SAAAN,GAAQ,OAAI,SAAArN,GAC3B,IAAMuM,EAAYvM,EAAEqL,OAAOpK,MAAMiK,OAAS,EAAIlL,EAAEqL,OAAOpK,MAAMjB,EAAEqL,OAAOpK,MAAMiK,OAAS,GAAKlL,EAAEqL,OAAOpK,MAInG,OAHAiM,EAAO,eACFG,EAAWd,IAETA,IAnBE,EAsBNqB,SAAW,SAAAP,GAAQ,OAAI,SAACrN,EAAGwN,GAC9B,IAAIK,EAAQ7N,EAAKA,EAAEqL,OAAOpK,OAAS,GAAMuM,EAEnCM,EAAgBD,EAAME,QAAQ,IAAK,IAAIC,OAAOC,MAAM,cAClCJ,EAAME,QAAQ,IAAK,IAAIC,OAAOC,MAAM,cAAc,GAAGtC,MAAM,EAAG,GAC9D,GAOxB,OALImC,IAAkBX,EAAUE,IAC5BH,EAAO,eACFG,EAAWS,IAGbA,IAlCE,EAqCNI,UAAY,SAAAb,GAAQ,OAAI,SAAArN,GAC3B,IAAI6N,EAAQ7N,EAAEqL,OAAOpK,OAAS,GAExB6M,EAAgBD,EAAME,QAAQ,IAAK,KAAKC,OAAOC,MAAM,WACnCJ,EAAME,QAAQ,IAAK,KAAKC,OAAOC,MAAM,eAAe,GACpD,GAOxB,OALIH,IAAkBX,EAAUE,IAC9BH,EAAO,eACFG,EAAWS,IAGXA,IAjDE,EAoDNK,YAAc,SAACC,EAAeC,EAAcC,GAA9B,OAAwC,SAAAtO,GACzD,IACMQ,EAAWV,EADEwO,EAAQ,QAAU,WACSC,uBAAuBvO,GACjEQ,GAAYA,EAASD,UACvBuL,WAAW,WACToB,EAAO,eAAGkB,EAAgB,KAC1BlB,EAAO,eAAGmB,EAAe,MACxB,KACM7N,IACT0M,EAAO,eAAGkB,EAAgB5N,EAASS,QACnCiM,EAAO,eAAGmB,EAAe7N,EAASU,iBA9D3B,G,kBCkCAsN,GAjCGC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,YAAa,CACXvK,UAAWsK,EAAME,QAAQ,KAG7Bf,MAAO,CACLgB,aAAc,EACdC,SAAU,QACVC,SAAU,WACV/D,gBAAiB0D,EAAMM,QAAQC,WAAWC,MAC1CC,OAAQ,oBACRjL,SAAU,GACVkL,QAAS,sBACTC,WAAYX,EAAMY,YAAYC,OAAO,CAAC,eAAgB,eACtDrM,WAAY,CACV,SACA,mBACA,QACA,cACAH,KAAK,KACP,UAAW,CACT8L,aAAc,EACdpK,YAAa,WAEf,UAAW,CACToK,aAAc,EACdpK,YAAa,UACb+K,UAAW,0BA5BCf,CA+BdgB,M,qPCqGSC,G,2MA5HXC,MAAQ,EAAKC,MAAMC,aACX,EAAKD,MAAMC,aACc,SAAzB,EAAKD,MAAME,UACX,CAAEC,OAAQ,GAAIC,OAAQ,GAAIC,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,GAAIC,OAAQ,IACxE,CAAEL,OAAQ,GAAIC,OAAQ,GAAIC,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,GAAIC,OAAQ,GAAIC,SAAU,I,EAE9FC,cAAgB,SAAAC,GAAS,OAAI,SAAAvQ,GACzB,EAAKwQ,SAAL,eACKD,EAAYvQ,EAAEqL,OAAOpK,U,EAI9BwP,QAAU,WAAO,IAAD,EACwB,EAAKb,MAAlCC,EADK,EACLA,aAAca,EADT,EACSA,WACrB,EAAKF,S,uVAAL,IAAmBX,IACnBa,K,EAGJC,YAAc,WAAO,IAAD,EAC6C,EAAKf,MAA1DgB,EADQ,EACRA,OAAQC,EADA,EACAA,kBAAmBH,EADnB,EACmBA,WAAYZ,EAD/B,EAC+BA,UAC/C,GAAI,EAAKH,MAAMI,OAAO/B,OAAO9C,SAAyB,SAAd4E,GAAwB,EAAKH,MAAMU,SAASrC,OAAO9C,QAAS,CAChG,IAAM4F,EAAc,CAChBf,OAAQ,EAAKJ,MAAMI,OAAO/B,OAC1BgC,OAAQ,EAAKL,MAAMK,OAAOhC,OAC1BiC,OAAQ,EAAKN,MAAMM,OAAOjC,OAC1BkC,OAAQ,EAAKP,MAAMO,OAAOlC,OAC1BmC,SAAU,EAAKR,MAAMQ,SAASnC,OAC9BoC,OAAQ,EAAKT,MAAMS,OAAOpC,QAEZ,SAAd8B,IACAgB,EAAYT,SAAW,EAAKV,MAAMU,SAASrC,QAE/C4C,EAAOE,GACPD,EAAkBC,EAAlBD,CAA+B,KAAM,EAAKlB,MAAMI,OAAO/B,QACvD0C,M,wEAIE,IAAD,EAC0BK,KAAKnB,MAA5BoB,EADH,EACGA,OAAQC,EADX,EACWA,WACRX,EAAwCS,KAAxCT,cAAeK,EAAyBI,KAAzBJ,YAAaF,EAAYM,KAAZN,QAC9BS,EAAS,UAAMD,EAAa,OAAS,SAA5B,gBAAqE,SAAzBF,KAAKnB,MAAME,UAAuB,aAAe,GAA7F,SACTqB,EAAaF,EAAa,OAAS,SACzC,OACI,kBAACG,GAAA,EAAD,CACIvF,UAAU,6BACVwF,KAAML,EACNP,QAASA,EACTa,WAAW,EACXC,SAAS,MAET,kBAACC,EAAA,EAAD,KAAcN,GACd,kBAACO,EAAA,EAAD,KACI,yBAAK5F,UAAU,+BAEkB,SAAzBkF,KAAKnB,MAAME,WAEX,oCACI,2CACA,kBAAC4B,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACPC,SAAUvB,EAAc,YACxBrP,MAAO8P,KAAKpB,MAAMU,YAI9B,yCACA,kBAACqB,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACPC,SAAUvB,EAAc,UACxBrP,MAAO8P,KAAKpB,MAAMI,SAEtB,yCACA,kBAAC2B,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACPC,SAAUvB,EAAc,UACxBrP,MAAO8P,KAAKpB,MAAMK,SAEtB,yCACA,kBAAC0B,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACPC,SAAUvB,EAAc,UACxBrP,MAAO8P,KAAKpB,MAAMM,SAEtB,wCAAa,6BAAK,0BAAMpE,UAAU,aAAhB,WAClB,kBAAC6F,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACPC,SAAUvB,EAAc,UACxBrP,MAAO8P,KAAKpB,MAAMO,SAEtB,wCAAa,6BAAK,0BAAMrE,UAAU,aAAhB,WAClB,kBAAC6F,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACPC,SAAUvB,EAAc,YACxBrP,MAAO8P,KAAKpB,MAAMQ,WAEtB,yCACA,kBAACuB,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACPC,SAAUvB,EAAc,UACxBrP,MAAO8P,KAAKpB,MAAMS,WAI9B,kBAAC0B,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAASvB,EAASwB,MAAM,WAAhC,UAGA,kBAACF,EAAA,EAAD,CAAQC,QAASrB,EAAasB,MAAM,WAC/Bd,S,GAtHIe,IAAMC,WCMpBC,GAbW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACI,yBAAKxG,UAAU,qBACX,yBAAKA,UAAU,8BACX,8BAAOwG,IAEX,yBAAKxG,UAAU,iCACX,0BAAMA,UAAU,kCAAhB,QC8BDyG,GArCa,SAACC,GACzB,kNACI5C,MAAQ,CACJqB,QAAQ,EACRwB,YAAa,GACbC,SAAU,EAAK7C,MAAM8C,eAAiB,IAJ9C,EAOIC,YAAc,WACV,EAAKnC,SAAS,YACV,MAAO,CACHQ,QAFsB,EAAbA,WARzB,EAeIJ,OAAS,SAAA6B,GACL,EAAKjC,SAAS,CAAEiC,cAhBxB,EAmBI5B,kBAAoB,SAACpD,GACjB,EAAK+C,SAAS,CACVgC,YAAa/E,KArBzB,EAyBIiD,WAAa,WACT,EAAKF,SAAS,CAAEQ,QAAQ,KA1BhC,wEA6Bc,IACE2B,EAAuD5B,KAAvD4B,YAAa/B,EAA0CG,KAA1CH,OAAQC,EAAkCE,KAAlCF,kBAAmBH,EAAeK,KAAfL,WAChD,OAAS,kBAAC6B,EAAD,iBAAmBxB,KAAKnB,MAAWmB,KAAKpB,MAAW,CAAEgD,cAAa/B,SAAQC,oBAAmBH,oBA/B9G,GAAqBwB,IAAMC,YCQlBS,GAAsB,SAAAC,GAC/B,MAAO,CACHC,KAbuB,kBAcvBD,YAIKE,GAAqB,SAAAF,GAC9B,MAAO,CACHC,KAnBsB,iBAoBtBD,YAyCKG,GAAwB,SAAAH,GACjC,MAAO,CACHC,KAxD+B,0BAyD/BD,YAUKI,GAAa,SAAAC,GAAQ,OAAI,SAAAvT,GAC9BA,IACAuT,EAASN,GAAoBjT,IAC7BuT,EA3BG,CACHJ,KA9CsC,mCA0E1CI,EAtDO,CACHJ,KAzBuB,sBAiFlBK,GAAc,SAAAD,GAAQ,OAAI,WACnCA,EApDO,CACHJ,KA9BuB,oBAkF3BI,EA5BO,CACHJ,KAnDuC,oCA+E3CI,EAhBO,CACHJ,KA9D+B,4BA8EnCI,EA1CO,CACHJ,KAzC4B,yBAmFhCI,EAASH,QCxEPK,G,2MACFC,SAAWpG,GAAS,EAAK2C,MAAM0D,Y,EAC/B/F,iBAAmB,EAAK8F,SAAS9F,iB,EACjCH,oBAAsB,EAAKiG,SAASjG,oB,EAEpCmG,aAAe,EAAKhG,iBAAiB,U,EACrCiG,YAAc,EAAKjG,iBAAiB,S,EACpCkG,oBAAsB,EAAKlG,iBAAiB,iB,EAC5CmG,aAAe,EAAKtG,oBAAoB,U,EACxCuG,gBAAkB,EAAKpG,iBAAiB,a,EACxCqG,gBAAkB,EAAKrG,iBAAiB,a,EACxCsG,gBAAkB,EAAKtG,iBAAiB,a,EACxCuG,gBAAkB,EAAKvG,iBAAiB,a,EACxCwG,kBAAoB,EAAKxG,iBAAiB,e,EAC1CyG,gBAAkB,EAAKzG,iBAAiB,a,EAExC0G,cAAgB,SAAApP,GAAK,OAAI,WAAa,IAAC,IAAD,qBAATqP,EAAS,yBAATA,EAAS,gBAClC,IAAMjT,EAAQiT,EAAK,GAAKA,EAAK,GAAG7I,OAAOpK,MAAQiT,EAAK,GAChDrP,EAAMkL,QAAU9O,IAAU4D,EAAMkL,OAChC,EAAK0D,oBAAoB,KAAM5O,GAE/B,EAAK4O,oBAAoB,KAAM,KAEnC,KAAKD,YAAL,QAAoBU,K,EAGxBC,eAAiBjC,IAAMkC,Y,EACvBC,kBAAoBnC,IAAMkC,Y,EAE1BE,kBAAoB,WACX,EAAK1E,MAAMzC,UAAUvI,OAEd,EAAKgL,MAAMzC,UAAUnI,WAC7ByH,GAAW,EAAK4H,mBAFhB5H,GAAW,EAAK0H,iB,mFAOhBpD,KAAKnB,MAAM2E,iBACXxD,KAAKuD,sB,yCAIME,GACXzD,KAAKnB,MAAM2E,kBAAoBC,EAAUD,iBACzCxD,KAAKuD,oBAELvD,KAAKnB,MAAM2E,kBAAoB/J,GAA0BuG,KAAKnB,MAAMzC,YACpE4D,KAAKnB,MAAMoD,sBAAsB,CAAE5J,cAAc,M,+BAI/C,IAAD,EASD2H,KAAKnB,MAPLzC,EAFC,EAEDA,UACAoH,EAHC,EAGDA,gBACA3D,EAJC,EAIDA,OACA6B,EALC,EAKDA,SACAzB,EANC,EAMDA,OACAN,EAPC,EAODA,WACAiC,EARC,EAQDA,YAIA/N,EASAuI,EATAvI,OACAC,EAQAsI,EARAtI,MACAE,EAOAoI,EAPApI,OACAC,EAMAmI,EANAnI,UACAC,EAKAkI,EALAlI,UACAC,EAIAiI,EAJAjI,UACAC,EAGAgI,EAHAhI,UACAC,EAEA+H,EAFA/H,YACAC,EACA8H,EADA9H,UAGEoP,EAAehC,EAAS1C,OACxBkB,IAAewD,EAErB,OACI,yBAAK5I,UAAU,6DACX,kBAAC,GAAD,YACA,kBAAC6F,EAAA,EAAD,CACIzQ,MAAO2D,EACPiN,SAAUd,KAAKwC,aACfmB,MAAOH,IAAoB3P,EAC3B8H,SAAUqE,KAAKoD,eACfxC,QAAQ,WACRC,OAAO,UAGX,uCACA,6BACI,kBAAC+C,EAAA,EAAD,CACI1T,MAAO4D,EACPgN,SAAUd,KAAKkD,cAAcxB,GAC7B5E,MAAQ,kBAAC,GAAD,OAER,4BAAQ5M,MAAM,IAAd,OACEgQ,GAAc,4BAAQpF,UAAU,oBAAoB5K,MAAOwT,GAAeA,GAC5E,4BAAQxT,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,sCAEAgQ,GAAcpM,IAAU4P,IACxB,kBAAC1C,EAAA,EAAD,CAAQE,MAAM,UAAUpG,UAAU,aAAamG,QAASW,GAClD1B,EAAa,iBAAmB,SAK9C,wCACA,6BACI,kBAAC2D,EAAA,EAAD,CACItH,QAASvI,EACT8M,SAAUd,KAAK2C,aACfzB,MAAM,aAId,kBAAC,GAAD,gBACA,kBAACP,EAAA,EAAD,CACIzQ,MAAO+D,EACP6M,SAAUd,KAAK4C,gBACfe,MAAOH,IAAoBvP,EAC3B0H,SAAUqE,KAAKsD,kBACf1C,QAAQ,WACRC,OAAO,UAGX,yCACA,kBAACF,EAAA,EAAD,CACIzQ,MAAOgE,EACP4M,SAAUd,KAAK6C,gBACfjC,QAAQ,WACRC,OAAO,UAGX,yCACA,kBAACF,EAAA,EAAD,CACIzQ,MAAOiE,EACP2M,SAAUd,KAAK8C,gBACflC,QAAQ,WACRC,OAAO,UAGX,wCAAa,6BAAK,0BAAM/F,UAAU,aAAhB,WAClB,kBAAC6F,EAAA,EAAD,CACIzQ,MAAOkE,EACP0M,SAAUd,KAAK+C,gBACfnC,QAAQ,WACRC,OAAO,UAGX,wCAAa,6BAAK,0BAAM/F,UAAU,aAAhB,WAClB,kBAAC6F,EAAA,EAAD,CACIzQ,MAAOmE,EACPyM,SAAUd,KAAKgD,kBACfpC,QAAQ,WACRC,OAAO,UAGX,yCACA,kBAACF,EAAA,EAAD,CACIzQ,MAAOoE,EACPwM,SAAUd,KAAKiD,gBACfrC,QAAQ,WACRC,OAAO,UAGX,kBAAC,GAAD,CACIZ,OAAQA,EACRN,WAAYA,EACZE,OAAQA,EACRK,WAAYA,EACZpB,aAAc4C,EACd5B,kBAAmBE,KAAKkD,cACxBnE,UAAU,oB,GAhLHoC,IAAMC,WAsMjB0C,eAfQ,SAAC,GAAmD,IAAD,IAAhDC,gBAAmBrK,EAA6B,EAA7BA,KAAM8J,EAAuB,EAAvBA,gBAChD,MAAO,CACHpH,UAAW1C,EACXiI,cAAejI,EAAK3F,cACpByP,gBAAiBA,EAAgBnL,eAId,SAAA8J,GACvB,MAAO,CACHI,WAAY,SAAAT,GAAO,OAAIK,EAASN,GAAoBC,KACpDG,sBAAuB,SAAAH,GAAO,OAAIK,EAASF,GAAsBH,OAIzDgC,CAA6CvC,GAAoBc,KC5M3E2B,G,2MACF1B,SAAWpG,GAAS,EAAK2C,MAAM0D,Y,EAC/B/F,iBAAmB,EAAK8F,SAAS9F,iB,EACjCH,oBAAsB,EAAKiG,SAASjG,oB,EAEpC4H,oBAAsB,EAAKzH,iBAAiB,iB,EAC5C0H,iBAAmB,EAAK7H,oBAAoB,c,oFAGpC2D,KAAKnB,MAAM2E,kBAAoB3J,GAA+BmG,KAAKnB,MAAMzC,YACzE4D,KAAKnB,MAAMoD,sBAAsB,CAAE3J,mBAAmB,M,+BAIpD,IAAD,EACkD0H,KAAKnB,MAApDtK,EADH,EACGA,cAAeC,EADlB,EACkBA,WAAYgP,EAD9B,EAC8BA,gBAGnC,OAFAW,QAAQC,IAAI,GAGR,yBAAKtJ,UAAU,+BACX,kBAAC,GAAD,2BACA,kBAAC6F,EAAA,EAAD,CACIzQ,MAAOqE,EACPuM,SAAUd,KAAKiE,oBACfN,MAAOH,IAAoBjP,EAC3B8P,UAAWb,IAAoBjP,EAC/BqM,QAAQ,WACRC,OAAO,UAGX,6CACA,6BACI,kBAACgD,EAAA,EAAD,CACItH,QAAS/H,EACTsM,SAAUd,KAAKkE,iBACfhD,MAAM,kB,GAnCEC,IAAMC,WA2DtB0C,eAhBQ,SAAC,GAAmD,IAAD,IAAhDC,gBAAmBrK,EAA6B,EAA7BA,KAAM8J,EAAuB,EAAvBA,gBAChD,MAAO,CACHpH,UAAW1C,EACXnF,cAAemF,EAAKnF,cACpBC,WAAYkF,EAAKlF,WACjBgP,gBAAiBA,EAAgBlL,oBAId,SAAA6J,GACvB,MAAO,CACHI,WAAY,SAAAT,GAAO,OAAIK,EAASN,GAAoBC,KACpDG,sBAAuB,SAAAH,GAAO,OAAIK,EAASF,GAAsBH,OAIzDgC,CAA6CE,ICjC5CM,GAjCQ5G,aAAW,SAAAC,GAAK,MAAK,CAC1CC,KAAM,CACJG,SAAU,QACV,YAAa,CACX1K,UAAWsK,EAAME,QAAQ,KAG7Bf,MAAO,CACLgB,aAAc,EACdE,SAAU,WACV/D,gBAAiB0D,EAAMM,QAAQC,WAAWC,MAC1CC,OAAQ,oBACRjL,SAAU,GACVkL,QAAS,sBACTC,WAAYX,EAAMY,YAAYC,OAAO,CAAC,eAAgB,eACtDrM,WAAY,CACV,SACA,mBACA,QACA,cACAH,KAAK,KACP,UAAW,CACT8L,aAAc,EACdpK,YAAa,WAEf,UAAW,CACToK,aAAc,EACdpK,YAAa,UACb+K,UAAW,0BA5BMf,CA+BnBgB,MCxBW6F,GAPY7G,aAAW,SAAAC,GAAK,MAAK,CAC9CC,KAAM,CACJG,SAAU,QACVjP,MAAO,WAHgB4O,CAKvB4G,ICPSE,I,OCUY,SAAC3F,GAAW,IAE/BpK,EAOAoK,EAPApK,mBAAoBgQ,EAOpB5F,EAPoB4F,yBACpB/P,EAMAmK,EANAnK,2BAA4BgQ,EAM5B7F,EAN4B6F,iCAC5B/P,EAKAkK,EALAlK,gCAAiCgQ,EAKjC9F,EALiC8F,sCACjC/P,EAIAiK,EAJAjK,wBAAyBgQ,EAIzB/F,EAJyB+F,8BACzB/P,EAGAgK,EAHAhK,yBAA0BgQ,EAG1BhG,EAH0BgG,+BAC1B/P,EAEA+J,EAFA/J,UAAWgQ,EAEXjG,EAFWiG,gBACX/P,EACA8J,EADA9J,eAAgBgQ,EAChBlG,EADgBkG,qBAGpB,OACI,yBAAKjK,UAAU,qCACX,0BAAMkK,GAAG,QAAT,sBACA,6BACI,kBAACpB,EAAA,EAAD,CACI1T,MAAOuE,EACPqM,SAAU2D,EACVO,GAAG,OACHlI,MAAQ,kBAAC,GAAD,OAER,4BAAQ5M,MAAM,IAAd,OACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAIR,yBAAK8U,GAAG,KAAKlK,UAAU,gBACnB,4CAGJ,0BAAMkK,GAAG,QAAT,8CACA,yBAAKlK,UAAU,+BACX,6BACI,kBAAC8I,EAAA,EAAD,CACI1T,MAAOwE,EACPoM,SAAU4D,EACVM,GAAG,OACHlI,MAAQ,kBAAC,GAAD,OAEP9D,EAAiBiM,IAAI,SAAAC,GAAM,OACxB,4BAAQhV,MAAOgV,EAAO1U,IAAKA,IAAG,oBAAe0U,EAAO1U,MAAQ0U,EAAOhV,WAI5C,mBAA/BwE,GACA,kBAACkP,EAAA,EAAD,CACI1T,MAAOyE,EACPmM,SAAU6D,EACV7H,MAAQ,kBAAC,GAAD,OAER,4BAAQ5M,MAAM,WAAd,yBACE4H,EAAemN,IAAI,SAAArW,GAAG,OAAI,4BAAQsB,MAAOtB,EAAIsB,MAAOM,IAAK5B,EAAIsB,OAAQtB,EAAImJ,UAKvF,yBAAKiN,GAAG,KAAKlK,UAAU,gBACnB,yCAGJ,0BAAMkK,GAAG,QAAT,yBACA,yBAAKlK,UAAU,6BACX,kBAAC8I,EAAA,EAAD,CACI1T,MAAO0E,EACPkM,SAAU8D,EACVI,GAAG,OACHlI,MAAQ,kBAAC,GAAD,OAER,4BAAQ5M,MAAM,WAAd,yBACE4H,EAAemN,IAAI,SAAArW,GAAG,OAAI,4BAAQsB,MAAOtB,EAAIsB,MAAOM,IAAK5B,EAAIsB,OAAQtB,EAAImJ,UAKnF,0BAAMiN,GAAG,QAAT,4CACA,yBAAKlK,UAAU,6BACX,kBAAC8I,EAAA,EAAD,CACI1T,MAAO2E,EACPiM,SAAU+D,EACVG,GAAG,OACHlI,MAAQ,kBAAC,GAAD,OAER,4BAAQ5M,MAAM,WAAd,yBACE4H,EAAemN,IAAI,SAAArW,GAAG,OAAI,4BAAQsB,MAAOtB,EAAIsB,MAAOM,IAAK5B,EAAIsB,OAAQtB,EAAImJ,UAInF,yBAAKiN,GAAG,KAAKlK,UAAU,gBACnB,kDAGJ,0BAAMkK,GAAG,QAAT,sCACA,yBAAKlK,UAAU,6BACX,kBAAC8I,EAAA,EAAD,CACI1T,MAAO4E,EACPgM,SAAUgE,EACVE,GAAG,OACHlI,MAAQ,kBAAC,GAAD,OAENhF,EAAemN,IAAI,SAAArW,GAAG,OAAI,4BAAQsB,MAAOtB,EAAIsB,MAAOM,IAAK5B,EAAIsB,OAAQtB,EAAImJ,UAInF,0BAAMiN,GAAG,QAAT,4CACA,yBAAKlK,UAAU,6BACX,kBAAC8I,EAAA,EAAD,CACI1T,MAAO6E,EACP+L,SAAUiE,EACVC,GAAG,OACHlI,MAAQ,kBAAC,GAAD,OAENhF,EAAemN,IAAI,SAAArW,GAAG,OAAI,4BAAQsB,MAAOtB,EAAIsB,MAAOM,IAAK5B,EAAIsB,OAAQtB,EAAImJ,a,kQC5H/F,IA2DeoN,GA3DK,SAACtG,GAAW,IAExBuG,EAMAvG,EANAuG,iBACAC,EAKAxG,EALAwG,UACAlQ,EAIA0J,EAJA1J,OACAC,EAGAyJ,EAHAzJ,OACAC,EAEAwJ,EAFAxJ,eACAiQ,EACAzG,EADAyG,gBAIEC,EAAsBF,EAAUJ,IAAI,SAAAO,GACtC,MAAM,GAAN,OAAWrQ,GAAX,OAAoBqQ,GAApB,OAA+BpQ,KAE7BqQ,E,uVAAqB,EACvBC,YAAY,GAAD,OAAKrQ,GAAkB,EAAvB,OACRiQ,GAGP,OACI,yBAAKxK,UAAU,wBACX,0BAAMA,UAAU,iBAAhB,WACA,yBAAKA,UAAU,mBACX,yBAAKA,UAbqB,wBActB,yBACIA,UAAS,UAfS,uBAeT,SACTxJ,MAAO8T,GAEP,6BACI,0BACItK,UAAU,oBACVxJ,MAAOmU,GAFX,UAGKF,EAAoB,KAAY,sDAEzC,6BACI,0BACIzK,UAAU,oBACVxJ,MAAOmU,GAFX,UAGKF,EAAoB,KAAY,uDAEzC,6BACI,0BACIzK,UAAU,oBACVxJ,MAAOmU,GAFX,UAGKF,EAAoB,KAAY,sDAEzC,6BACI,0BACIzK,UAAU,oBACVxJ,MAAOmU,GAFX,UAGKF,EAAoB,KAAY,4D,UCpDlDI,I,kNCUX/G,MAAQ,CACJqB,OAAQ,EAAKpB,MAAMoB,Q,EAGvB2F,gBAAkB,WACd,EAAKnG,SAAS,CAAEQ,QAAQ,K,EAG5B4F,gBAAkB,WACd,EAAKpG,SAAS,CAAEQ,QAAQ,K,EAG5B6F,mBAAqB,SAAAC,GAAW,OAAI,YAAc,IAAX/L,EAAU,EAAVA,IACnC+L,EAAY,KAAM/L,K,wEAGZ,IAAD,EAC6EgG,KAAKnB,MAA/EmH,EADH,EACGA,UAAWC,EADd,EACcA,gBAAiBC,EAD/B,EAC+BA,iBAAkBC,EADjD,EACiDA,SAAUC,EAD3D,EAC2DA,cACxDP,EAAyD7F,KAAzD6F,gBAAiBD,EAAwC5F,KAAxC4F,gBAAiBE,EAAuB9F,KAAvB8F,mBACpC5L,EAAeH,GAAgBiM,GAC/BK,EAAanM,IAAiB8L,EAC9BM,EAAaD,IAAeF,KAAcH,GAC1CO,EAAcF,EAAa,GAAH,WAAYnM,GACpCsM,EAAmB,CACrBvM,gBAAgB,IAAD,OAAMC,IAEnBuM,EAAoB,qBAAkBL,EAAgB,6BAA+B,IAE3F,OACI,yBAAKtL,UAAU,cACX,kBAAC6F,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACP/F,UAAU,cACV4L,WAAY,CACRC,eAAgB,kBAACC,GAAA,EAAD,CAAgB5I,SAAS,SAAzB,MAEpB9N,MAAO8V,EACPlF,SAAUmF,EACVhF,QAAS,SAAAhS,GACLmL,GAAiB8L,GAAoB,MAArC9L,CAA4CnL,IAGhD0U,MAAO2C,IAEX,yBACIrF,QAAS4E,EACT/K,UAAU,cACVxJ,MAAOkV,IAEVxG,KAAKpB,MAAMqB,QACR,yBAAKnF,UAAW2L,GACZ,yBAAK3L,UAAU,yBACX,kBAAC,gBAAD,CACI+L,iBAAkBf,EAAmBG,GACrC/E,MAAOqF,EACPO,cAAY,KAGpB,yBAAKhM,UAAU,sBAAuBmG,QAAS2E,U,GA5D9CzE,IAAMC,YCThB2F,I,kNCWXC,UAAY7F,IAAMkC,Y,EAElB4D,eAAiB,WACb,EAAKD,UAAUnL,QAAQtB,S,EAG3B2M,aAAe,SAAAjY,GACX,EAAK4P,MAAMsI,WAAWlY,GACC,WAAnBA,EAAEqL,OAAOpK,QACT,EAAK+W,iBACmC,oBAA7B,EAAKpI,MAAMuI,eAClBrM,WAAW,EAAK8D,MAAMuI,cAAe,O,wEAKvC,IAAD,EAC0CpH,KAAKnB,MAA5ClM,EADH,EACGA,KAAM0D,EADT,EACSA,WAAYgR,EADrB,EACqBA,iBACpBC,EAAiBtP,EAAQuP,OAAO,SAAAC,GAAQ,OAAIA,IAAa7U,GAAQD,EAAgB8U,KACjFC,EAAgC,WAAT9U,EAAoB,wBAA0B,yBAC3E,OACI,oCACI,sCACA,kBAACiR,EAAA,EAAD,CACI9G,MAAQ,kBAAC,GAAD,MACR5M,MAAOyC,EACPmO,SAAUd,KAAKkH,cAEf,4BAAQhX,MvBvCA,auBuCR,aACEoX,EAAerC,IAAI,SAAAuC,GAAQ,OAAI,4BAAQtX,MAAOsX,EAAUhX,IAAKgX,GAAWA,KAC1E,4BAAQtX,MAAM,SAAS4K,UAAU,qBAAjC,WAGJ,yBAAKA,UAAS,0BAAqB2M,IAC/B,gCAEJ,yBAAK3M,UAAS,0BAAqB2M,IAC/B,kBAAC9G,EAAA,EAAD,CACIzQ,MAAOmG,EACPyK,SAAUuG,EACVzG,QAAQ,WACRC,OAAO,QACPN,WAAS,EACTmH,YAAY,sBACZ/L,SAAUqE,KAAKgH,kB,GA7CR7F,IAAMC,YCVtBuG,I,kNCmBXC,iBAAmBzG,IAAMkC,Y,EACzBwE,oBAAsB1G,IAAMkC,Y,EAE5ByE,gBAAkB,SAAAC,GAAc,OAAI,SAAA9Y,GAChC8Y,EAAe9Y,GACf4L,GAAe,uB,EAGnBmN,eAAiB,SAAA/Y,GACb,EAAK6Y,gBAAgB,EAAKjJ,MAAMoJ,aAAhC,CAA8ChZ,GAC1CA,EAAEqL,OAAOiC,SAAW,EAAKsC,MAAM5J,WAAarC,GAC5C8I,GAAW,EAAKkM,mB,EAIxBM,iBAAmB,SAAAjZ,GACf,EAAK4P,MAAMsJ,eAAelZ,GACH,WAAnBA,EAAEqL,OAAOpK,OAAuB,EAAK2O,MAAMnJ,aAC3CgG,GAAW,EAAKmM,sB,wEAId,IAAD,EA8BD7H,KAAKnB,MA5BLuJ,EAFC,EAEDA,iBACApT,EAHC,EAGDA,OACAC,EAJC,EAIDA,SAAUoT,EAJT,EAISA,eACVnT,EALC,EAKDA,WAAYoT,EALX,EAKWA,iBACZnT,EANC,EAMDA,OAAQoT,EANP,EAMOA,aACRnT,EAPC,EAODA,OAAQoT,EAPP,EAOOA,aACRnT,EARC,EAQDA,eAAgBoT,EARf,EAQeA,qBAChBnT,EATC,EASDA,UAAWoT,EATV,EASUA,gBACXnT,EAVC,EAUDA,SAAUoT,EAVT,EAUSA,eACVnT,EAXC,EAWDA,SACAC,EAZC,EAYDA,cAAemT,EAZd,EAYcA,oBACflT,EAbC,EAaDA,YAAamT,EAbZ,EAaYA,kBACblT,EAdC,EAcDA,eAAgBmT,EAdf,EAceA,qBAChBlT,EAfC,EAeDA,kBAAmBmT,EAflB,EAekBA,wBACnBlT,EAhBC,EAgBDA,sBAAuBmT,EAhBtB,EAgBsBA,4BACvBlT,EAjBC,EAiBDA,oBAAqBmT,EAjBpB,EAiBoBA,0BACrBlT,EAlBC,EAkBDA,WAAYmT,EAlBX,EAkBWA,iBACZlT,EAnBC,EAmBDA,eAAgBmT,EAnBf,EAmBeA,qBAChBlT,EApBC,EAoBDA,qBAAsBmT,EApBrB,EAoBqBA,2BACtBlT,EArBC,EAqBDA,oBAAqBmT,EArBpB,EAqBoBA,0BACrBvW,EAtBC,EAsBDA,mBAAoBwW,EAtBnB,EAsBmBA,yBACpBvW,EAvBC,EAuBDA,oBAAqBwW,EAvBpB,EAuBoBA,0BACrBvW,EAxBC,EAwBDA,uBAAwBwW,EAxBvB,EAwBuBA,6BACxBvW,EAzBC,EAyBDA,gBAAiBwW,EAzBhB,EAyBgBA,sBACjBvW,EA1BC,EA0BDA,iBAAkBwW,EA1BjB,EA0BiBA,uBACclG,GA3B/B,EA2BDA,gBAAmBjL,YACnB0J,GA5BC,EA4BDA,sBACA7F,GA7BC,EA6BDA,UAGI0L,GAAsD9H,KAAtD8H,gBAAiBE,GAAqChI,KAArCgI,eAAgBE,GAAqBlI,KAArBkI,iBAErC1E,KAAoB1J,GAAyBsC,KAC7C6F,GAAsB,CAAE1J,aAAa,IAGzC,IAAMoR,GAAwB3U,EAAS,QAAU,SAC3C4U,GAA8B5U,GAAuB,cAAbO,EAA4B,QAAU,SAC9EsU,GAA4B7U,GAAuB,YAAbO,EAA0B,QAAU,SAC1EuU,GAA2B9U,GAAuB,YAAbO,GAA0BQ,EAAc,QAAU,SAE7F,OACI,oCACI,yBAAK+E,UAAU,+BACX,6BACI,6BACI,yBAAKA,UAAU,sDACX,yBAAKA,UAAU,yBACX,gDAEJ,6BACI,kBAAC+I,EAAA,EAAD,CACI3C,MAAM,UACN3E,QAASvH,EACT8L,SAAUkH,OAItB,yBAAKlN,UAAS,kEAA6D6O,KACvE,yBAAK7O,UAAU,uEACX,kBAAC,GAAD,kBACA,kBAAC6F,EAAA,EAAD,CACIzQ,MAAO+E,EACP6L,SAAUuH,EACV1E,MAAOH,KAAoBvO,EAC3B0G,SAAUqE,KAAK4H,iBACfhH,QAAQ,WACRC,OAAO,UAGX,6CACA,6BACI,kBAAC+C,EAAA,EAAD,CACI1T,MAAOgF,EACP4L,SAAUwH,EACVxL,MAAQ,kBAAC,GAAD,OAER,4BAAQ5M,MAAM,IAAd,OACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAIR,wCACA,kBAACyQ,EAAA,EAAD,CACIzQ,MAAOiF,EACP2L,SAAUyH,EACV3H,QAAQ,WACRC,OAAO,UAGX,wCACA,kBAACF,EAAA,EAAD,CACIzQ,MAAOkF,EACP0L,SAAU0H,EACV5H,QAAQ,WACRC,OAAO,QACPI,QAAS7G,GAAiB,OAG9B,iDACA,yBAAKU,UAAU,sBACX,kBAAC8I,EAAA,EAAD,CACI1T,MAAOmF,EACPyL,SAAU2H,EACV3L,MAAQ,kBAAC,GAAD,OAER,4BAAQ5M,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,KAAd,MAEJ,kBAAC0W,GAAA,EAAD,CAAgBhG,QAAQ,SAAS5C,SAAS,OAA1C,OAGJ,4CACA,6BACI,kBAAC6F,EAAA,EAAD,CACI3C,MAAM,UACN3E,QAASjH,EACTwL,SAAU4H,KAIlB,8CACA,6BACI,kBAAC9E,EAAA,EAAD,CACI1T,MAAOqF,EACPuL,SAAUgH,GAAgBa,GAC1B7L,MAAQ,kBAAC,GAAD,OAER,4BAAQ5M,MAAO,aAAf,aACA,4BAAQA,MAAO,WAAf,gBAMpB,yBAAK4K,UAAS,4CAAuC+O,KACjD,yBAAK/O,UAAU,gDACX,iDACA,6BACI,kBAAC8I,EAAA,EAAD,CACI1T,MAAOyF,EACPmL,SAAUgI,EACVhM,MAAQ,kBAAC,GAAD,OAEPzD,EAAe4L,IAAI,SAAA3T,GAAK,OACrB,4BAAQpB,MAAOoB,EAAMpB,MAAOM,IAAKc,EAAMpB,OAAQoB,EAAMyG,UAKjE,uEACA,6BACI,kBAAC8L,EAAA,EAAD,CACItH,QAAS3G,EACTkL,SAAUiI,EACV7H,MAAM,aAId,yDACA,6BACI,kBAAC2C,EAAA,EAAD,CACItH,QAAS1G,EACTiL,SAAUkI,EACV9H,MAAM,aAId,8DACA,6BACI,kBAAC0C,EAAA,EAAD,CACI1T,MAAO4F,EACPgL,SAAUmI,EACVnM,MAAQ,kBAAC,GAAD,OAER,4BAAQ5M,MAAM,IAAd,OACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAIR,6CACA,6BACI,kBAAC2T,EAAA,EAAD,CACItH,QAASxG,EACT+K,SAAUgH,GAAgBoB,GAC1BhI,MAAM,cAKlB,yBAAKpG,UAAS,kEAA6DgP,KACvE,yBAAKhP,UAAU,qCACX,kBAAC,GAAD,CACInI,KAAMqD,EACNmR,WAAYgC,EACZ9S,WAAYJ,EACZoR,iBAAkB+B,EAClBhC,cAAe,WAAQvM,GAAe,wBAG1C,2CACA,kBAAC+I,EAAA,EAAD,CACI1T,MAAOgG,EACP4K,SAAUuI,EACVvM,MAAQ,kBAAC,GAAD,OAER,4BAAQ5M,MAAO,QAAf,QACA,4BAAQA,MAAO,UAAf,UACA,4BAAQA,MAAO,SAAf,UAGJ,2CACA,yBAAK4K,UAAU,sBACX,kBAAC6F,EAAA,EAAD,CACIzQ,MAAO4C,EACPgO,SAAUwI,EACVrI,QAAS7G,GAAiB,MAC1BwG,QAAQ,WACRC,OAAO,QACP/F,UAAU,gBAEd,kBAAC8L,GAAA,EAAD,CAAgBhG,QAAQ,SAAS5C,SAAS,OAA1C,OAGJ,4CACA,kBAAC,GAAD,CACIgI,UAAWjT,EACXkT,gBAAiBsD,EACjBrD,iBAAkB,MAClBE,eAAa,IAGjB,+CACA,kBAAC,GAAD,CACIJ,UAAWhT,EACXiT,gBAAiBuD,EACjBtD,iBAAkB,SAClBE,eAAa,IAGjB,uCACA,yBAAKtL,UAAU,sBACX,kBAAC6F,EAAA,EAAD,CACIzQ,MAAO+C,EACP6N,SAAU2I,EACVxI,QAAS7G,GAAiB,MAC1BwG,QAAQ,WACRC,OAAO,QACP/F,UAAU,gBAEd,kBAAC8L,GAAA,EAAD,CAAgBhG,QAAQ,SAAS5C,SAAS,OAA1C,OAGJ,wCACA,yBAAKlD,UAAU,sBACX,kBAAC6F,EAAA,EAAD,CACIzQ,MAAOgD,EACP4N,SAAU4I,EACVzI,QAAS7G,GAAiB,MAC1BwG,QAAQ,WACRC,OAAO,QACP/F,UAAU,gBAEd,kBAAC8L,GAAA,EAAD,CAAgBhG,QAAQ,SAAS5C,SAAS,OAA1C,WAOpB,yBAAKlD,UAAS,2DAAsD6O,KAChE,kBAAC,GAAgBvB,KAGzB,yBAAKtN,UAAS,4CAAuC8O,KACjD,yBAAK9O,UAAU,gDACX,yBAAKA,UAAU,+BACX,0BAAMA,UAAU,yBAAhB,aACA,yBAAKA,UAAU,kBACX,kBAAC8I,EAAA,EAAD,CACI1T,MAAOsF,EACPsL,SAAUoH,GACVpL,MAAQ,kBAAC,GAAD,OAGJ1M,OAAO2Z,QAAQ9Q,GAAgBgM,IAAI,YAAmB,IAAD,oBAAhBzU,EAAgB,KAAXN,EAAW,KACjD,OAAQ,4BAAQM,IAAKA,EAAKN,MAAOM,GAAMN,KAG/C,4BAAQA,MAAO,SAAU4K,UAAU,qBAAnC,aAIZ,kBAACkP,GAAA,EAAD,CAAMC,GAAiB,WAAbzU,GACN,yBAAKsF,UAAU,uDACX,yBAAKA,UAAU,uDACX,gDACA,6BACI,kBAAC6F,EAAA,EAAD,CACIzQ,MAAOuF,EACPqL,SAAU8H,EACVhI,QAAQ,WACRC,OAAO,QACP/F,UAAU,eACV4L,WAAY,CACRC,eAAgB,kBAACC,GAAA,EAAD,CAAgB5I,SAAS,SAAzB,WAKhC,yBAAKlD,UAAU,uDACX,sCACA,6BACI,kBAAC6F,EAAA,EAAD,CACIzQ,MAAOwF,EACPoL,SAAU+H,EACV5H,QAAS7G,KACTuB,SAAUqE,KAAK6H,oBACfjH,QAAQ,WACRC,OAAO,QACP/F,UAAU,2B,GAzW5BqG,IAAMC,YCgDjBG,MA1DY,SAAC1C,GAAW,IAE/B6C,EAOA7C,EAPA6C,SACAzB,EAMApB,EANAoB,OACAN,EAKAd,EALAc,WACAiC,EAIA/C,EAJA+C,YACA/B,EAGAhB,EAHAgB,OACA1J,EAEA0I,EAFA1I,eAAgB+T,EAEhBrL,EAFgBqL,qBAChBC,EACAtL,EADAsL,6BAGEzG,EAAehC,EAAS1C,OACxBkB,IAAewD,EAEf0G,EAAe,SAAAC,GAAI,OAAI,WAAc,IAAD,uBAATlH,EAAS,yBAATA,EAAS,gBACtC,IAAMjT,EAAQiT,EAAK,GAAKA,EAAK,GAAG7I,OAAOpK,MAAQiT,EAAK,GAChDkH,EAAK/K,UAAY+K,EAAKrL,QAAU9O,IAAUma,EAAKrL,OAC/CmL,EAA6B,KAAME,GAEnCF,EAA6B,KAAM,IAEvCD,EAAoB,WAApB,EAAwB/G,KAG5B,OACI,yBAAKrI,UAAU,+BACX,iDACA,6BACI,kBAAC8I,EAAA,EAAD,CACI9G,MAAQ,kBAAC,GAAD,MACR5M,MAAOiG,EACP2K,SAAUsJ,EAAa1I,IAErBxB,GAAc,4BAAQpF,UAAU,oBAAoB5K,MAAOwT,GAAeA,GAC5E,4BAAQxT,MAAM,IAAd,QACA,4BAAQA,MAAM,KAAd,qBACA,4BAAQA,MAAM,KAAd,wBAGEgQ,GAAc/J,IAAmBuN,IACnC,kBAAC1C,EAAA,EAAD,CAAQE,MAAM,UAAUpG,UAAU,aAAamG,QAASW,GAClD1B,EAAa,iBAAmB,SAI9C,kBAAC,GAAD,CACID,OAAQA,EACRN,WAAYA,EACZE,OAAQA,EACRK,WAAYA,EACZpB,aAAc4C,EACd5B,kBAAmBsK,EACnBrL,UAAU,Y,mDCzDtBuL,GAAkC,SAAUC,EAAGtb,GACjD,IAAIub,EAAI,GACR,IAAK,IAAIC,KAAKF,EAAOna,OAAOsa,UAAUC,eAAeC,KAAKL,EAAGE,IAAMxb,EAAEe,QAAQya,GAAK,IAC9ED,EAAEC,GAAKF,EAAEE,IACb,GAAS,MAALF,GAAqD,oBAAjCna,OAAOya,sBAC3B,IAAK,IAAIC,EAAI,EAAGC,EAAI3a,OAAOya,sBAAsBN,GAAIO,EAAIL,EAAEtQ,OAAQ2Q,IAC3D7b,EAAEe,QAAQ+a,EAAED,IAAM,GAAK1a,OAAOsa,UAAUM,qBAAqBJ,KAAKL,EAAGQ,EAAED,MACvEN,EAAEO,EAAED,IAAMP,EAAEQ,EAAED,KAE1B,OAAON,GAGT,SAASS,GAAcC,GACrB,OAAOA,GAAOA,EAAIlO,QAAQ,wBAAyB,KAarD,SAASmO,GAAaC,GAEpB,IAAM9Q,EAbR,SAAS+Q,EAAiBC,GACxB,GAAIA,EAAKC,WAAaC,KAAKC,UACvB,OAAOH,EAEX,IADA,IAAIhK,EAAWgK,EAAKI,WACXZ,EAAIxJ,EAASnH,OAAS,EAAG2Q,GAAK,EAAGA,IAAK,CAC3C,IAAIa,EAAWN,EAAiB/J,EAASwJ,IACzC,GAAiB,OAAba,EACA,OAAOA,EAEf,OAAO,KAIQN,CAAiBD,GAE1BQ,EAAkBja,SAASka,gBAAkBT,EACnD,GAAe,OAAX9Q,GAAwC,OAArBA,EAAOwR,WAAsBF,EAAiB,CACjE,IAAIG,EAAMC,OAAOC,eACjB,GAAY,OAARF,EAAc,CACd,IAAIG,EAAQva,SAASwa,cACrBD,EAAME,SAAS9R,EAAQA,EAAOwR,UAAU3R,QACxC+R,EAAMG,UAAS,GACfN,EAAIO,kBACJP,EAAIQ,SAASL,GAEbd,aAAcoB,aACdpB,EAAG7Q,S,IAMQkS,G,YACnB,aAAe,IAAD,8BACV,6CAASC,aACJC,SAAW,EAAK9N,MAAM+N,KAC3B,EAAKxB,GAAoC,oBAAxB,EAAKvM,MAAMgO,SAA0B,CAAEhR,QAAS,MAASsF,cAC1E,EAAK2L,MAAQ,kBAAO,EAAKjO,MAAMgO,UAA2C,oBAAxB,EAAKhO,MAAMgO,SAA0B,EAAKhO,MAAMgO,SAAW,EAAKzB,IAAIvP,SACtH,EAAKkR,WAAa,SAACC,GACf,IAAM5B,EAAK,EAAK0B,QAChB,GAAK1B,EAAL,CAEA,IAAMwB,EAAOxB,EAAGtZ,UAChB,GAAI,EAAK+M,MAAMiC,UAAY8L,IAAS,EAAKD,SAAU,CAG/C,IAAMM,EAAM7c,OAAO8c,OAAO,GAAIF,EAAa,CACvC1S,OAAQ,CACJpK,MAAO0c,KAGf,EAAK/N,MAAMiC,SAASmM,GAExB,EAAKN,SAAWC,IApBV,E,sEAuBJ,IAAD,OACCO,EAAKnN,KAAKnB,MAASuO,EAA4BD,EAA5BC,QAASR,EAAmBO,EAAnBP,KAAMC,EAAaM,EAAbN,SAAiBhO,EAAQyL,GAAO6C,EAAI,CAAC,UAAW,OAAQ,aAChG,OAAOhM,gBAAoBiM,GAAW,MAAOhd,OAAO8c,OAAO,GAAIrO,EAAO,CAAEwO,IAAyB,oBAAbR,EAA0B,SAAChR,GACvGgR,EAAShR,GACT,EAAKuP,GAAGvP,QAAUA,GAClBgR,GAAY7M,KAAKoL,GAAIkC,QAAStN,KAAK+M,WAAYQ,OAAQvN,KAAKnB,MAAM0O,QAAUvN,KAAK+M,WAAYS,QAASxN,KAAKnB,MAAM2O,SAAWxN,KAAK+M,WAAYU,UAAWzN,KAAKnB,MAAM4O,WAAazN,KAAK+M,WAAYW,iBAAkB1N,KAAKnB,MAAM8O,SAAUC,wBAAyB,CAAEC,OAAQjB,KAAW5M,KAAKnB,MAAMyC,Y,4CAEvRwM,GAAY,IACtBjP,EAAUmB,KAAVnB,MACFuM,EAAKpL,KAAK8M,QAIhB,OAAK1B,IAGDH,GAAc6C,EAAUlB,QAAU3B,GAAcG,EAAGtZ,aAIhD+M,EAAM8O,WAAaG,EAAUH,UAChC9O,EAAMuO,UAAYU,EAAUV,SAC5BvO,EAAM/D,YAAcgT,EAAUhT,WAC9B+D,EAAMgO,WAAaiB,EAAUjB,WAC5BkB,KAAUlP,EAAMvN,MAAOwc,EAAUxc,W,2CAGtC,IAAM8Z,EAAKpL,KAAK8M,QACX1B,IAIDpL,KAAKnB,MAAM+N,OAASxB,EAAGtZ,YACvBsZ,EAAGtZ,UAAYkO,KAAK2M,SAAW3M,KAAKnB,MAAM+N,MAE9CzB,GAAaC,Q,GA3D0BjK,a,6NC9C7C,ICJe6M,GDIC,SAAC,GAAoD,ItB2C7BlT,EsB3CtBmT,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,kBAAmBC,EAAkB,EAAlBA,aACtCtX,EAA4BsX,EAA5BtX,cAAe1D,EAAagb,EAAbhb,SAEjBib,E,uVAAoB,IACnBD,EADmB,CAEtBE,QAAS,OACThb,UAAU,GAAD,OAAKsH,WAAWwT,EAAa9a,WAAaoH,GAAU5D,EAAe1D,GAAnE,MACTG,aAAa,GAAD,OAAKqH,WAAWwT,EAAa7a,cAAgBmH,GAAU5D,EAAe1D,GAAtE,QAKhB,OACI,yBAAK2H,UAAU,WACX,0BAAMA,UAAU,iBAAhB,WACA,yBACIA,UAAU,8CACVmG,StB0BwBnG,EsBjCE,uBtBiCW,SAAA7L,GAC7CA,EAAEqL,OAAOQ,YAAcA,GACvBkR,OAAOC,eAAeqC,kBAAkBrf,EAAEqL,OAAOgH,SAAS,OsB1BlD,yBAAKxG,UATqB,wBAUtB,kBAAC,GAAD,CACIA,UAAS,UAXS,uBAWT,SACTgG,SAAUoN,EACVtB,KAAMqB,EACN3c,MAAO8c,QE5BhBG,I,OCiBW,SAAC1P,GAAW,IAE9B2P,EAaA3P,EAbA2P,aACA7b,EAYAkM,EAZAlM,KAAMwU,EAYNtI,EAZMsI,WACN9Q,EAWAwI,EAXAxI,WAAYgR,EAWZxI,EAXYwI,iBACZ/Q,EAUAuI,EAVAvI,UAAWmY,EAUX5P,EAVW4P,gBACXtb,EASA0L,EATA1L,SAAUub,EASV7P,EATU6P,eACVnY,EAQAsI,EARAtI,cAAeoY,EAQf9P,EARe8P,oBACfvb,EAOAyL,EAPAzL,UAAWwb,EAOX/P,EAPW+P,gBACXpY,EAMAqI,EANArI,KAAMqY,EAMNhQ,EANMgQ,WACNpY,EAKAoI,EALApI,OAAQqY,EAKRjQ,EALQiQ,aACRpY,EAIAmI,EAJAnI,WAAYqY,EAIZlQ,EAJYkQ,iBACZpY,EAGAkI,EAHAlI,OAAQqY,EAGRnQ,EAHQmQ,aACRpY,EAEAiI,EAFAjI,cAAeqY,EAEfpQ,EAFeoQ,oBACfpY,EACAgI,EADAhI,cAAeqY,EACfrQ,EADeqQ,oBAGnB,OACI,oCACA,yBAAKpU,UAAU,+BACX,yBAAKA,UAAU,oBACX,kBAAC,GAAsB,CAAEnI,OAAMwU,aAAY9Q,aAAYgR,qBAEvD,2CACA,kBAACzD,EAAA,EAAD,CACI9G,MAAQ,kBAAC,GAAD,MACR5M,MAAOoG,EACPwK,SAAU2N,GAEV,4BAAQve,MAAO,QAAf,QACA,4BAAQA,MAAO,UAAf,UACA,4BAAQA,MAAO,SAAf,SACA,4BAAQA,MAAO,WAAf,cAGJ,2CACA,yBAAK4K,UAAU,sBACX,kBAAC6F,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACP/F,UAAU,cACV5K,MAAOiD,EACP2N,SAAU4N,EACVzN,QAAS7G,GAAiB,QAE9B,kBAACwM,GAAA,EAAD,CAAgBhG,QAAQ,SAAS5C,SAAS,OAA1C,OAGJ,iDACA,kBAAC2C,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACP3Q,MAAOqG,EACPuK,SAAU6N,EACV1N,QAAS7G,GAAiB,WAG9B,gDACA,kBAAC,GAAD,CACI4L,UAAW5S,EACX6S,gBAAiB2I,EACjBzI,UAAQ,KAGhB,yBAAKrL,UAAU,eACX,kBAAC,GAAY0T,KAGrB,yBAAK1T,UAAU,mDACX,0CACA,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,wCACX,kBAACqU,GAAA,EAAD,CACIC,QAAS,kBAACvL,EAAA,EAAD,CAAU3C,MAAM,YACzBmO,MAAM,OACNC,eAAe,MACf/S,QAAS/F,EACTsK,SAAU+N,KAGlB,yBAAK/T,UAAU,0CACX,kBAACqU,GAAA,EAAD,CACIC,QAAS,kBAACvL,EAAA,EAAD,CAAU3C,MAAM,YACzBmO,MAAM,SACNC,eAAe,MACf/S,QAAS9F,EACTqK,SAAUgO,KAGlB,yBAAKhU,UAAU,8CACX,kBAACqU,GAAA,EAAD,CACIC,QAAS,kBAACvL,EAAA,EAAD,CAAU3C,MAAM,YACzBmO,MAAM,aACNC,eAAe,MACf/S,QAAS7F,EACToK,SAAUiO,KAGlB,yBAAKjU,UAAU,0CACX,kBAACqU,GAAA,EAAD,CACIC,QAAS,kBAACvL,EAAA,EAAD,CAAU3C,MAAM,YACzBmO,MAAM,SACNC,eAAe,MACf/S,QAAS5F,EACTmK,SAAUkO,MAKtB,gDACA,kBAACO,GAAA,EAAD,CACIrf,MAAO0G,EACPkK,SAAUmO,EACVO,KAAG,GAEH,yBAAK1U,UAAU,+CACX,kBAACqU,GAAA,EAAD,CACIjf,MAAM,OACNkf,QAAS,kBAACK,GAAA,EAAD,CAAOvO,MAAM,YACtBmO,MAAM,OACNC,eAAe,SAGvB,yBAAKxU,UAAU,6CACX,kBAACqU,GAAA,EAAD,CACIjf,MAAM,YACNkf,QAAS,kBAACK,GAAA,EAAD,CAAOvO,MAAM,YACtBmO,MAAM,YACNC,eAAe,SAGvB,yBAAKxU,UAAU,6CACX,kBAACqU,GAAA,EAAD,CACIjf,MAAM,YACNkf,QAAS,kBAACK,GAAA,EAAD,CAAOvO,MAAM,YACtBmO,MAAM,YACNC,eAAe,SAGvB,yBAAKxU,UAAU,6CACX,kBAACqU,GAAA,EAAD,CACIjf,MAAM,aACNkf,QAAS,kBAACK,GAAA,EAAD,CAAOvO,MAAM,YACtBmO,MAAM,aACNC,eAAe,UAK3B,iDACA,6BACI,kBAAC1L,EAAA,EAAD,CACA1T,MAAO2G,EACPiK,SAAUoO,EACNpS,MAAQ,kBAAC,GAAD,OAER,4BAAQ5M,MAAM,YAAd,QACA,4BAAQA,MAAM,OAAd,aACA,4BAAQA,MAAM,SAAd,qBCnDLwf,GAnHU,SAAC7Q,GAAW,IAE7B2P,EAQA3P,EARA2P,aACAnb,EAOAwL,EAPAxL,UAAWsc,EAOX9Q,EAPW8Q,gBACXrc,EAMAuL,EANAvL,aAAcsc,EAMd/Q,EANc+Q,mBACdrc,EAKAsL,EALAtL,eAAgBsc,EAKhBhR,EALgBgR,qBAChBrc,EAIAqL,EAJArL,gBAAiBsc,EAIjBjR,EAJiBiR,sBACjBhZ,EAGA+H,EAHA/H,YAAaiZ,EAGblR,EAHakR,kBACbhZ,EAEA8H,EAFA9H,kBAAmBiZ,EAEnBnR,EAFmBmR,wBACnBvc,EACAoL,EADApL,YAAawc,EACbpR,EADaoR,kBAGjB,OACI,yBAAKnV,UAAU,2DACX,yBAAKA,UAAU,kCACX,4CACA,yBAAKA,UAAU,sBACX,kBAAC6F,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACP/F,UAAU,cACV5K,MAAOmD,EACPyN,SAAU6O,EACV1O,QAAS7G,GAAiB,OAE9B,kBAACwM,GAAA,EAAD,CAAgBhG,QAAQ,SAAS5C,SAAS,OAA1C,OAGJ,+CACA,yBAAKlD,UAAU,sBACX,kBAAC6F,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACP/F,UAAU,cACV5K,MAAOoD,EACPwN,SAAU8O,EACV3O,QAAS7G,GAAiB,OAE9B,kBAACwM,GAAA,EAAD,CAAgBhG,QAAQ,SAAS5C,SAAS,OAA1C,OAGJ,gDACA,yBAAKlD,UAAU,sBACX,kBAAC6F,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACP/F,UAAU,cACV5K,MAAOqD,EACPuN,SAAU+O,IAEd,kBAACjJ,GAAA,EAAD,CAAgBhG,QAAQ,SAAS5C,SAAS,OAA1C,OAGJ,mDACA,yBAAKlD,UAAU,sBACX,kBAAC6F,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACP/F,UAAU,cACV5K,MAAOsD,EACPsN,SAAUgP,IAEd,kBAAClJ,GAAA,EAAD,CAAgBhG,QAAQ,SAAS5C,SAAS,OAA1C,OAGJ,8CACA,6BACI,kBAAC4F,EAAA,EAAD,CACI9G,MAAQ,kBAAC,GAAD,MACR5M,MAAO4G,EACPgK,SAAUiP,GAEV,4BAAQ7f,MAAM,OAAd,OACA,4BAAQ4K,UAAU,oBAAoB5K,MAAM,QAA5C,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,WAGY,WAAhB4G,GAEI,kBAAC6J,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACP/F,UAAU,cACV5K,MAAO6G,EACP+J,SAAUkP,KAOtB,8CACA,yBAAKlV,UAAU,sBACX,kBAAC6F,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACP/F,UAAU,cACV5K,MAAOuD,EACPqN,SAAUmP,EACVhP,QAAS7G,GAAiB,OAE9B,kBAACwM,GAAA,EAAD,CAAgBhG,QAAQ,SAAS5C,SAAS,OAA1C,QAGR,yBAAKlD,UAAU,eACX,kBAAC,GAAY0T,M,oBCrGZ0B,GAfMxS,aAAW,SAAAC,GAAK,MAAK,CACxCC,KAAM,CACJ9O,MAAO,QACP,YAAa,CACXuE,UAAWsK,EAAME,QAAQ,KAG7Bf,MAAO,CACL3K,WAAY,CACV,QACA,cACAH,KAAK,QAXU0L,CAajB4G,ICfS6L,I,OCaO,SAACtR,GAAW,IAE1B7H,EAQC6H,EARD7H,WAAYoZ,EAQXvR,EARWuR,iBACZnZ,EAOC4H,EAPD5H,YAAaoZ,EAOZxR,EAPYwR,kBACbnZ,EAMC2H,EAND3H,UAAWoZ,EAMVzR,EANUyR,gBACXnZ,EAKC0H,EALD1H,aAAcoZ,EAKb1R,EALa0R,mBACdnZ,EAICyH,EAJDzH,gBAAiBoZ,EAIhB3R,EAJgB2R,sBACjB9c,EAGCmL,EAHDnL,YAAa+c,EAGZ5R,EAHY4R,kBACb9c,EAECkL,EAFDlL,gBAAiB+c,EAEhB7R,EAFgB6R,sBACjBrZ,EACCwH,EADDxH,WAAYsZ,EACX9R,EADW8R,iBAGTzW,EAAeH,GAAgBrG,GAC/Bkd,EAAqBjd,IAAoBkd,MAAMlW,WAAWhH,IAArC,UACKA,GAAmB,GAAKA,EAAkB,GAD/C,MAEE,IAEvBwa,EAAe,CACjB2C,WAAY9Z,EAAU,UAAM4Z,EAAN,YAA4BvZ,EAA5B,aAA2C6C,GAAiB,OAClF6W,WAAY/Z,EAAa,IAAM4Z,EAC/BI,YAAa/Z,EAAW,UAAM2Z,EAAN,YAA4BvZ,EAA5B,aAA2C6C,GAAiB,OACpFwL,YAAazO,EAAc,IAAM2Z,EACjCK,UAAW/Z,EAAS,UAAM0Z,EAAN,YAA4BvZ,EAA5B,aAA2C6C,GAAiB,OAChF7G,UAAW6D,EAAY,IAAM0Z,EAC7BM,aAAc/Z,EAAY,UAAMyZ,EAAN,YAA4BvZ,EAA5B,aAA2C6C,GAAiB,OACtF5G,aAAc6D,EAAe,IAAMyZ,GAGxC,OACI,yBAAK9V,UAAU,+BACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,qBAAqBxJ,MAAO6c,GACvC,0BAAMrT,UAAU,kBAAhB,QACA,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,kBAAhB,OACA,yBAAKA,UAAU,2BACX,yBAAKkK,GAAG,KAAKlK,UAAU,YACnB,kBAAC+I,EAAA,EAAD,CACI3C,MAAM,UACN3E,QAASrF,EACT4J,SAAUwP,KAGlB,yBAAKtL,GAAG,OAAOlK,UAAU,YACrB,kBAAC+I,EAAA,EAAD,CACI3C,MAAM,UACN3E,QAASvF,EACT8J,SAAUsP,KAGlB,yBAAKpL,GAAG,OAAOlK,UAAU,aAEzB,yBAAKkK,GAAG,OAAOlK,UAAU,YACrB,kBAAC+I,EAAA,EAAD,CACI3C,MAAM,UACN3E,QAAStF,EACT6J,SAAUuP,KAGlB,yBAAKrL,GAAG,KAAKlK,UAAU,YACnB,kBAAC+I,EAAA,EAAD,CACI3C,MAAM,UACN3E,QAASpF,EACT2J,SAAUyP,MAItB,0BAAMzV,UAAU,kBAAhB,WAEJ,0BAAMA,UAAU,kBAAhB,WAGR,yBAAKA,UAAU,+BACX,kDACA,kBAAC6F,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACP3Q,MAAOkH,EACP0J,SAAU0P,EACVvP,QAAS7G,GAAiB,SAG9B,iDACA,kBAAC,GAAD,CACI4L,UAAWtS,EACXuS,gBAAiBwK,EACjBtK,UAAQ,IAGZ,iDACA,yBAAKrL,UAAU,sBACX,kBAAC6F,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACP/F,UAAU,cACV5K,MAAOyD,EACPmN,SAAU4P,EACVzP,QAAS7G,GAAiB,OAE9B,kBAACwM,GAAA,EAAD,CAAgBhG,QAAQ,SAAS5C,SAAS,OAA1C,OAGJ,+CACA,6BACI,kBAACmT,GAAA,EAAD,CACErU,MAAO,kBAAC,GAAD,MACP5M,MAAOmH,EACPyJ,SAAU6P,GAER,kBAACS,GAAA,EAAD,CAAUlhB,MAAM,SAAQ,wDACxB,kBAACkhB,GAAA,EAAD,CAAUlhB,MAAM,UAAhB,oDACA,kBAACkhB,GAAA,EAAD,CAAUlhB,MAAM,UAAS,kEACzB,kBAACkhB,GAAA,EAAD,CAAUlhB,MAAM,UAAhB,0CAIR,qDACA,6BACI,kBAAC2T,EAAA,EAAD,CAAU3C,MAAM,iBC/ErBmQ,GA7CS,SAACxS,GAAW,IAE5B2P,EAIC3P,EAJD2P,aACAlX,EAGCuH,EAHDvH,iBAAkBga,EAGjBzS,EAHiByS,uBAClB/Z,EAECsH,EAFDtH,aAAcga,EAEb1S,EAFa0S,mBACd/Z,EACCqH,EADDrH,kBAAmBga,EAClB3S,EADkB2S,wBAGvB,OACI,yBAAK1W,UAAU,2DACX,yBAAKA,UAAU,kCACX,oDACA,6BACI,kBAAC6F,EAAA,EAAD,CACIC,QAAQ,WACRC,OAAO,QACP/F,UAAU,kBACV5K,MAAOoH,EACPwJ,SAAUwQ,KAIlB,mDACA,kBAAC,GAAD,CACItL,UAAWzO,EACX0O,gBAAiBsL,IAGrB,qDACA,6BACI,kBAAC1N,EAAA,EAAD,CACI3C,MAAM,UACN3E,QAAS/E,EACTsJ,SAAU0Q,MAItB,yBAAK1W,UAAU,eACX,kBAAC,GAAY0T,MCjBdiD,GAvBI,SAAC,GAA8C,IAA5Cha,EAA2C,EAA3CA,eAAgBia,EAA2B,EAA3BA,qBAClC,OACI,yBAAK5W,UAAU,+BACX,iDACA,6BACI,kBAAC8I,EAAA,EAAD,CACI1T,MAAOuH,EACPqJ,SAAU4Q,EACV5U,MAAQ,kBAAC,GAAD,OAER,4BAAQ5M,MAAM,IAAd,OACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,SCaLyhB,GA/BS,SAAC9S,GAAW,IAE5BlH,EAEAkH,EAFAlH,gBAAiBia,EAEjB/S,EAFiB+S,kBACjB/Z,EACAgH,EADAhH,gBAAiBga,EACjBhT,EADiBgT,kBAGrB,OACI,yBAAK/W,UAAU,+BACX,yCACA,yBAAKA,UAAU,kBACX,kBAAC6F,EAAA,EAAD,CACIzQ,MAAOyH,EACP8V,UAAWmE,EACXhR,QAAQ,WACRC,OAAO,WAIf,qCACA,yBAAK/F,UAAU,kBACX,kBAAC6F,EAAA,EAAD,CACIzQ,MAAO2H,EACP4V,UAAWoE,EACXjR,QAAQ,WACRC,OAAO,aCjBZ0N,GATW,WAEtB,OACI,yBAAKzT,UAAU,iC,oDCMR6C,GAPDmU,aAAe,CACzB7T,QAAS,CACP8T,QAASC,KACTC,UAAWC,Q,UC4BAC,GA9BCzU,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACJwU,SAAU,UACVnY,gBAAiB,QACjBqE,WAAY,OAEZ,WAAY,CACVA,WAAY,QAGd,UAAW,CACT4C,MAAO,QAET,aAAc,CACZjH,gBAAiB,UACjBiH,MAAO,QACPmR,QAAS,GAEX,iBAAkB,CAChBpY,gBAAiB,QACjBqE,WAAY,QAEd,0BAA2B,CACzBrE,gBAAiB,YAGrBqY,SAAU,KA1BI5U,CA4BZ,SAAAmB,GAAK,OAAI,kBAAC0T,GAAA,EAAQ1T,KCIP2T,GAhCM9U,aAAW,SAAAC,GAAK,MAAK,CACxCC,KAAM,CACJwU,SAAU,UACVnY,gBAAiB,QACjBqE,WAAY,OACZmU,eAAgB,gBAEhB,WAAY,CACVnU,WAAY,QAGd,UAAW,CACT4C,MAAO,QAET,aAAc,CACZjH,gBAAiB,UACjBiH,MAAO,QACPmR,QAAS,EACTI,eAAgB,uBAElB,iBAAkB,CAChBxY,gBAAiB,QACjBqE,WAAY,QAEd,0BAA2B,CACzBrE,gBAAiB,YAGrBqY,SAAU,KA5BS5U,CA8BjB,SAAAmB,GAAK,OAAI,kBAAC0T,GAAA,EAAQ1T,K,UCtBP6T,GAVEhV,aAAW,SAAAC,GAAK,MAAK,CACpCgV,UAAW,CACP1Y,gBAAiB,UACjBoY,QAAS,GACTvjB,MAAO,QACP8jB,OAAQ,EACRC,QAAS,UANEnV,CAQboV,MCsBWC,GA9BIrV,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACFG,SAAU,SACViV,UAAW,oBACXC,OAAQ,QAEZrhB,UAAW,CACPqhB,OAAQ,QACRJ,QAAS,SAEbK,WAAY,CACR,UAAW,CACPD,OAAQ,SAGhBE,eAAgB,CACZ3S,SAAU,SACV4S,UAAW,QACXJ,UAAW,QACXlkB,MAAO,oBACPmkB,OAAQ,oBACRJ,QAAS,cACTQ,cAAe,SACfjV,OAAQ,QAEZkV,gBAAiB,CACbzc,cAAe,YA1BF6G,CA4Bf2C,MCihBSyD,I,OAAAA,YAnBS,SAAC,GAA0E,IAAD,IAAvEC,gBACvB,MAAO,CACH3H,UAF0F,EAApD1C,KAGtC6Z,UAH0F,EAA9CA,UAI5C/P,gBAJ0F,EAAnCA,gBAKvDtD,WAL0F,EAAlBA,aASrD,SAAAiC,GACvB,MAAO,CACHI,WAAY,SAAAT,GAAO,OAAIK,EAASN,GAAoBC,KACpD0R,UAAW,kBAAMrR,EAASH,OAC1ByR,UAAW,SAAA3R,GAAO,OAAIK,EjCrgBI,SAAAL,GAC9B,MAAO,CACHC,KAnC6B,wBAoC7BD,WiCkgB+B4R,CAAmB5R,KAClDG,sBAAuB,SAAAH,GAAO,OAAIK,EAASF,GAAsBH,KACjE6R,SAAU,SAAA7R,GAAO,OAAIK,ECziBI,SAAAL,GAC7B,MAAO,CACHC,KALqB,gBAMrBD,WDsiB8B8R,CAAkB9R,OAIzCgC,CA3fM,SAAAjF,GAAU,IAEvBoB,EAWApB,EAXAoB,OACAmC,EAUAvD,EAVAuD,YACAoR,EASA3U,EATA2U,UACAG,EAQA9U,EARA8U,SACApR,EAOA1D,EAPA0D,WACAnG,EAMAyC,EANAzC,UACAmX,EAKA1U,EALA0U,UACA/P,EAIA3E,EAJA2E,gBACAtD,EAGArB,EAHAqB,WACAuT,EAEA5U,EAFA4U,UACAxR,EACApD,EADAoD,sBAGEvC,EAAU,WACZ0C,IACAoR,KAjBsB,EAuCtBtX,GAASqG,EAAYnG,GANrBI,EAjCsB,EAiCtBA,iBACAH,EAlCsB,EAkCtBA,oBACAc,EAnCsB,EAmCtBA,UACAN,EApCsB,EAoCtBA,SACAD,EArCsB,EAqCtBA,UACAQ,EAtCsB,EAsCtBA,YAIA6Q,EAqEA7R,EArEA6R,YACAxZ,EAoEA2H,EApEA3H,mBACAC,EAmEA0H,EAnEA1H,2BACAC,EAkEAyH,EAlEAzH,gCACAkf,EAiEAzX,EAjEAyX,8BACAC,EAgEA1X,EAhEA0X,mCACAlf,EA+DAwH,EA/DAxH,wBACAC,EA8DAuH,EA9DAvH,yBACAC,EA6DAsH,EA7DAtH,UACAC,EA4DAqH,EA5DArH,eACAC,EA2DAoH,EA3DApH,OACAC,EA0DAmH,EA1DAnH,SACAC,EAyDAkH,EAzDAlH,WACAC,EAwDAiH,EAxDAjH,OACAC,EAuDAgH,EAvDAhH,OACAC,EAsDA+G,EAtDA/G,eACAC,EAqDA8G,EArDA9G,UACAC,EAoDA6G,EApDA7G,SACAC,EAmDA4G,EAnDA5G,SACAC,EAkDA2G,EAlDA3G,cACAC,EAiDA0G,EAjDA1G,YACAC,EAgDAyG,EAhDAzG,eACAC,EA+CAwG,EA/CAxG,kBACAC,GA8CAuG,EA9CAvG,sBACAC,GA6CAsG,EA7CAtG,oBACAC,GA4CAqG,EA5CArG,WACAC,GA2CAoG,EA3CApG,eACAC,GA0CAmG,EA1CAnG,qBACAC,GAyCAkG,EAzCAlG,oBACApD,GAwCAsJ,EAxCAtJ,mBACAC,GAuCAqJ,EAvCArJ,oBACAC,GAsCAoJ,EAtCApJ,uBACAC,GAqCAmJ,EArCAnJ,gBACAC,GAoCAkJ,EApCAlJ,iBACAiD,GAmCAiG,EAnCAjG,eACAC,GAkCAgG,EAlCAhG,uBACAzD,GAiCAyJ,EAjCAzJ,KACA0D,GAgCA+F,EAhCA/F,WACAC,GA+BA8F,EA/BA9F,UACAnD,GA8BAiJ,EA9BAjJ,SACAoD,GA6BA6F,EA7BA7F,cACAnD,GA4BAgJ,EA5BAhJ,UACAoD,GA2BA4F,EA3BA5F,KACAC,GA0BA2F,EA1BA3F,OACAC,GAyBA0F,EAzBA1F,WACAC,GAwBAyF,EAxBAzF,OACAC,GAuBAwF,EAvBAxF,cACAC,GAsBAuF,EAtBAvF,cACAxD,GAqBA+I,EArBA/I,UACAC,GAoBA8I,EApBA9I,aACAC,GAmBA6I,EAnBA7I,eACAC,GAkBA4I,EAlBA5I,gBACAsD,GAiBAsF,EAjBAtF,YACAC,GAgBAqF,EAhBArF,kBACAtD,GAeA2I,EAfA3I,YACAuD,GAcAoF,EAdApF,WACAC,GAaAmF,EAbAnF,YACAC,GAYAkF,EAZAlF,UACAC,GAWAiF,EAXAjF,aACAC,GAUAgF,EAVAhF,gBACA1D,GASA0I,EATA1I,YACAC,GAQAyI,EARAzI,gBACA0D,GAOA+E,EAPA/E,WACAC,GAMA8E,EANA9E,iBACAC,GAKA6E,EALA7E,aACAC,GAIA4E,EAJA5E,kBACAC,GAGA2E,EAHA3E,eACAE,GAEAyE,EAFAzE,gBACAE,GACAuE,EADAvE,gBAEJsM,QAAQC,IAAI,GAEZ,IAAMK,GAA2BjI,EAAiB,sBAC5CkI,GAAmClI,EAAiB,8BACpDmI,GAAwCnI,EAAiB,mCACzDuX,GAAsCvX,EAAiB,iCACvDwX,GAA2CxX,EAAiB,sCAC5DoI,GAAgCpI,EAAiB,2BACjDqI,GAAiCrI,EAAiB,iCAClDsI,GAAkBtI,EAAiB,aACnCuI,GAAuBvI,EAAiB,kBACxC6L,GAAiB7L,EAAiB,YAClC8L,GAAmB9L,EAAiB,cACpC+L,GAAe/L,EAAiB,UAChCgM,GAAehM,EAAiB,UAChCiM,GAAuBjM,EAAiB,kBACxCkM,GAAkBrM,EAAoB,aACtC8L,GAAiB3L,EAAiB,YAClCsM,GAAuBtM,EAAiB,kBACxCuM,GAA0B1M,EAAoB,qBAC9C2M,GAA8B3M,EAAoB,yBAClD4M,GAA4BzM,EAAiB,uBAC7C2M,GAAuB3M,EAAiB,kBACxC4M,GAA6B5M,EAAiB,wBAC9C6M,GAA4B7M,EAAiB,uBAC7C8M,GAA2BnM,EAAU,sBACrCoM,GAA4B1M,EAAS,uBACrC2M,GAA+B3M,EAAS,0BACxC4M,GAAwBtM,EAAU,mBAClCuM,GAAyBvM,EAAU,oBACnC+M,GAAuB1N,EAAiB,kBACxC2N,GAA+B3N,EAAiB,0BAChD2K,GAAa3K,EAAiB,QAC9B6K,GAAmB7K,EAAiB,cACpCiS,GAAkBjS,EAAiB,aACnCkS,GAAiBvR,EAAU,YAC3BwR,GAAsBnS,EAAiB,iBACvCoS,GAAkB/R,EAAS,aAC3BgS,GAAaxS,EAAoB,QACjCyS,GAAezS,EAAoB,UACnC0S,GAAmB1S,EAAoB,cACvC2S,GAAe3S,EAAoB,UACnC4S,GAAsBzS,EAAiB,iBACvC0S,GAAsB1S,EAAiB,iBACvCmT,GAAkBxS,EAAU,aAC5ByS,GAAqBzS,EAAU,gBAC/B0S,GAAuB1S,EAAU,kBACjC2S,GAAwB3S,EAAU,mBAClC4S,GAAoBvT,EAAiB,eACrCwT,GAA0B7S,EAAU,qBACpC8S,GAAoB9S,EAAU,eAC9BiT,GAAmB/T,EAAoB,cACvCgU,GAAoBhU,EAAoB,eACxCiU,GAAkBjU,EAAoB,aACtCkU,GAAqBlU,EAAoB,gBACzCmU,GAAwBhU,EAAiB,mBACzCiU,GAAoB5T,EAAS,eAC7B6T,GAAwBvT,EAAU,mBAClCmU,GAAyB9U,EAAiB,oBAC1C+U,GAAqB1U,EAAS,gBAC9B2U,GAA0BnV,EAAoB,qBAC9CqV,GAAuBlV,EAAiB,kBACxCoV,GAAoBxU,EAAY,cAAe,mBAC/CyU,GAAoBzU,EAAY,cAAe,mBAAmB,GA+DlE6W,GAAmBla,GAAgB3G,GAAW,UAC9C8gB,GAAsBna,GAAgBxC,GAAc,UACpD4c,GAAgC3c,GAAoB0c,GAAsB,SAC1EE,IAAqB7gB,IAAkB,IAAMC,IAAmB,GAChE6gB,GAAoB7gB,GAAe,UAAMA,IAAmB,GAAK,GAAKA,GAAnC,MAAyD,EAC5F8gB,GAAoBF,GAAiB,UAAMA,IAAqB,GAAK,GAAKA,GAArC,MAA6D,EAElGjG,GAAe,CACjBhb,SAAWA,GAAD,UAAqBA,IAAY,IAAMA,GAAW,IAAlD,MAAY,IACtB+N,MAAM,IAAD,OAAM+S,IACX9hB,WAAY2J,GAAenJ,GAAM0D,IACjCke,WAAY5b,EAAcrC,IAC1Bke,UAAWle,GACXme,WAAYje,GAAO,OAAS,SAC5Bke,UAAWje,GAAS,SAAW,SAC/Bgc,eAAgB,UAAG/b,GAAa,YAAc,IAA9B,OAAmCC,GAAS,gBAAkB,IAAKsG,QAAU,OAC7FpG,iBACAD,cAAiC,eAAlBA,GAAiCA,GAAgB,OAChE+d,YAA+B,eAAlB/d,GAAiCA,GAAgB,SAC9DqD,gBAAgB,IAAD,OAAMia,IACrBU,gBAAgB,oBAAD,OAAuBT,GAAvB,cAA0DA,GAA1D,KACfpD,WAAYsD,GACZQ,WAAYP,GACZ7gB,YAAY,GAAD,OAAKA,IAAe,EAApB,MACXqhB,WAA6B,WAAhBhe,GAA2BA,GAAgBC,GAAD,UAAiCA,IAAqB,GAAjC,OAC5EzD,aAAa,GAAD,OAAKA,IAAgB,EAArB,MACZD,UAAU,GAAD,OAAKA,IAAa,EAAlB,OAGPmb,GAAe,CAAEP,cAAaC,kBA1FV,SAAAjf,GAAM,IACpBiB,EAAUjB,EAAEqL,OAAZpK,MACJA,GAAmB,gBAAVA,GAAqC,SAAVA,EACpCsM,EAAiB,cAAjBA,CAAgC,KvC7Mb,SAAAuY,GAC3B,IAAMC,EAAeD,EAAW/X,QAAQ,cAAe,UAAUA,QAAQ,wCAAyC,SAClH,MAA2B,MAApBgY,EAAa,GAAb,eAAkCA,EAAlC,UAAyDA,EuC2MlBC,CAAgB/kB,IAEtDsM,EAAiB,cAAjBA,CAAgC,KAAhC,oBAqF+C2R,iBAEjD+G,GAA6Bnb,GAAgBhH,GAAqB,UAClEoiB,GAAgCpb,GAAgB/G,GAAwB,UAExEsS,GAAoBvP,IAA2B,cAAbR,EAAiC,CACrEpD,WAAY2J,GAAe9F,GAAgBC,IAC3Cue,UAAWte,GACX/C,SAAWL,GAAD,UAA+BA,IAAsB,IAAMA,GAAqB,IAAhF,MAAsB,IAChCoO,MAAM,IAAD,OAAMgU,IACXjb,gBAAgB,IAAD,OAAMkb,IACrBpX,SAAS,GAAD,OAAK9K,IAAmB,EAAxB,MACR6K,aAAa,GAAD,OAAK5K,IAAoB,EAAzB,OAPoD,GAwB9DkiB,GAA0B,CAC5B3gB,qBAAoBgQ,4BACpB/P,6BAA4BgQ,oCAC5B/P,kCAAiCgQ,yCACjCkP,gCAA+BE,uCAC/BD,qCAAoCE,4CACpCpf,0BAAyBgQ,iCACzB/P,2BAA0BgQ,kCAC1B/P,YAAWgQ,mBACX/P,iBAAgBgQ,yBAGdsQ,GAAmB,CACrBjN,iBA3BqB,CACrB/C,UAAW/J,GAAa,CAChBC,cAA4B,YAAbhG,EACfI,iBACAH,WACAE,gBAER0P,iBAAkB+I,GAClBhZ,SACAC,SACAC,iBACAiQ,oBAiBAtQ,SAAQiT,aA5HS,SAAAhZ,GACbA,EAAEqL,OAAOiC,QACLtH,IAAarC,GACbyV,GAAe,KAAM,IAEL,KAAbpT,GACP8F,WAAW,kBAAMsN,GAAe,KAAMzV,IAAS,KAEnDyJ,EAAoB,SAApBA,CAA8BpN,IAqH9BgG,WAAUoT,kBACVnT,aAAYoT,oBACZnT,SAAQoT,gBACRnT,SAAQoT,gBACRnT,iBAAgBoT,wBAChBnT,YAAWoT,mBACXnT,WAAUoT,eAxHS,SAAA1Z,GAAM,IACjBiB,EAAUjB,EAAEqL,OAAZpK,MACRsM,EAAiB,WAAjBA,CAA6B,KAAMtM,GACrB,YAAVA,GAAkC,KAAXkF,EACvBoH,EAAiB,SAAjBA,CAA2B,KAAM,KAChB,cAAVtM,GAAoC,MAAXkF,GAChCoH,EAAiB,SAAjBA,CAA2B,KAAM,KAmHrChH,WAAU2S,kBACV1S,gBAAemT,oBAhHS,SAAA3Z,GACxB,IAAMqmB,EAAmBzY,EAAS,gBAATA,CAA0B5N,GAC7CsmB,EAAsC,KAArBD,EvCrOI,SAAA7f,GAC/B,OAAO+f,OAAOC,aAAaC,SAASjgB,EAAe,KuCoOEkgB,CAAoBL,GAAoB,GACzF9Y,EAAiB,cAAjBA,CAAgC,KAAM+Y,IA8GtC7f,cAAamT,kBA3GS,SAAA5Z,GACtB,IAAMsmB,EAAiB3Y,EAAU,cAAVA,CAAyB3N,GAC1CqmB,EAAsC,KAAnBC,EvCvOE,SAAA7f,GAC/B,OAAOA,EAAYkgB,WAAW,GAAGC,SAAS,IuCsOWC,CAAoBP,GAAkB,GACvF/Y,EAAiB,gBAAjBA,CAAkC,KAAM8Y,IAyGxC3f,iBAAgBmT,wBAChBlT,oBAAmBmT,2BACnBlT,yBAAuBmT,+BACvBlT,uBAAqBmT,6BACrBlT,cAAYmT,iBA1GS,SAAAja,GACrBoN,EAAoB,aAApBA,CAAkCpN,GAC9BA,EAAEqL,OAAOiC,SAAsB,MAAXnH,EACpBoH,EAAiB,SAAjBA,CAA2B,KAAM,IACzBvN,EAAEqL,OAAOiC,SAAsB,KAAXnH,GAC5BoH,EAAiB,SAAjBA,CAA2B,KAAM,MAsGrCxG,kBAAgBmT,wBAChBlT,wBAAsBmT,8BACtBlT,uBAAqBmT,6BACrBvW,sBAAoBwW,4BACpBvW,uBAAqBwW,6BACrBvW,0BAAwBwW,gCACxBvW,mBAAiBwW,yBACjBvW,oBAAkBwW,0BAClBlG,kBAAiBvB,wBACjB7F,aAGE2Z,GAA0B,CAC5B5f,kBAAgB+T,wBAChBvI,cAAevL,GACf+T,iCAGE6L,GAAyB,CAC3BxH,gBACA7b,QAAMwU,cACN9Q,cAAYgR,oBACZ/Q,aAAWmY,mBACXtb,YAAUub,kBACVnY,iBAAeoY,uBACfvb,aAAWwb,mBACXpY,QAAMqY,cACNpY,UAAQqY,gBACRpY,cAAYqY,oBACZpY,UAAQqY,gBACRpY,iBAAeqY,uBACfpY,iBAAeqY,wBAGb+G,GAAwB,CAC1BzH,gBACAnb,aAAWsc,mBACXrc,gBAAcsc,sBACdrc,kBAAgBsc,wBAChBrc,mBAAiBsc,yBACjBhZ,eAAaiZ,qBACbhZ,qBAAmBiZ,2BACnBvc,eAAawc,sBAGXiG,GAAqB,CACvBlf,cAAYoZ,oBACZnZ,eAAaoZ,qBACbnZ,aAAWoZ,mBACXnZ,gBAAcoZ,sBACdnZ,mBAAiBoZ,yBACjB9c,eAAa+c,qBACb9c,mBAAiB+c,yBACjBrZ,cAAYsZ,iBAvJS,SAAA1hB,GACrBuN,EAAiB,aAAjBA,CAA+BvN,GACR,WAAnBA,EAAEqL,OAAOpK,OAA0C,MAApByD,IAC/B6I,EAAiB,kBAAjBA,CAAoC,KAAM,KAEvB,WAAnBvN,EAAEqL,OAAOpK,OAA0C,MAApByD,IAC/B6I,EAAiB,kBAAjBA,CAAoC,KAAM,OAoJ5C2Z,GAAsB,CACxB3H,gBACAlX,oBAAkBga,0BAClB/Z,gBAAcga,sBACd/Z,qBAAmBga,4BAGjB4E,GAAkB,CACpB3e,kBAAgBia,yBAGd2E,GAAwB,CAC1B1e,mBAAiBia,qBACjB/Z,mBAAiBga,sBAGrB,OACI,kBAACyE,EAAA,EAAD,CAAe3Y,MAAOA,IAClB,kBAAC,GAAD,CACI2C,KAAML,EACNP,QAASA,EACT6W,kBAAgB,oBAChBC,OAAO,OACP1b,UAAU,6BACVyF,WAAW,EACXC,UAAU,EACVwE,GAAG,UAEH,yBAAKlK,UAAU,UACX,kBAAC2F,EAAA,EAAD,CAAa3F,UAAU,gBACnB,8DAEJ,yBAAKA,UAAU,kBACX,kBAACkG,EAAA,EAAD,CACIJ,QAAQ,YACRM,MAAM,UACND,QAASvB,EACT5E,UAAU,gBAJd,UAQA,kBAACkG,EAAA,EAAD,CACIJ,QAAQ,YACRM,MAAM,UACND,QAtZE,WACtB,IAAMwV,ExCpDmB,SAAA/c,GAC7B,IAAMgd,EAAYC,gBAAMve,GAcxB,IAAK,IAAIK,KAZLgB,GAA0BC,KAC1Bgd,EAAUre,cAAe,GAGzBwB,GAA+BH,KAC/Bgd,EAAUpe,mBAAoB,GAG9BwB,GAAyBJ,KACzBgd,EAAUne,aAAc,GAGRme,EAChB,GAAIA,EAAUje,GACV,OAAOie,EAIf,OAAO,EwC+BoBE,CAAkBxa,GACzC,GAAIqa,EACAxU,EAAsBwU,GACtBhD,ExC/BwB,SAAAgD,GAAmB,IAAD,uBAClD,YAAqCje,EAArC,+CAAyD,CAAC,IAAD,UAA5CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,UAClB,GAAI+d,EAAehe,GACf,OAAOC,GAHmC,mFwC+BhCme,CAAqBJ,QAC5B,CACH,IAAMK,EAAanoB,EAAcooB,YAAYhb,GAAiBK,IAC9DuX,EAASmD,GACTpX,MA+YgB5E,UAAU,gBAEToF,EAAa,OAAS,YAKnC,kBAACQ,EAAA,EAAD,CAAe5F,UAAU,WACrB,yBAAKA,UAAU,oBACX,kBAAC,GAAD,CACIA,UAAU,aACV5K,MAAOqjB,EACPzS,SAAU,SAAC7R,EAAGyJ,GAAgB+a,EAAU/a,IACxCse,YAAY,WACZ9V,MAAM,UACN+V,eAAe,WAEbzT,EAAgBnL,aACV,kBAAC,GAAD,CAAgByC,UAAU,YAAYuU,MAAM,UAC3C,kBAAC,GAAD,CAAWvU,UAAU,YAAYuU,MAAM,UAE9C7L,EAAgBlL,kBACV,kBAAC,GAAD,CAAgBwC,UAAU,YAAYuU,MAAM,gBAC5C,kBAAC,GAAD,CAAWvU,UAAU,YAAYuU,MAAM,gBAE/C,kBAAC,GAAD,CAAWvU,UAAU,YAAYuU,MAAM,gBAErC7L,EAAgBjL,YACV,kBAAC,GAAD,CAAgBuC,UAAU,YAAYuU,MAAM,SAC5C,kBAAC,GAAD,CAAWvU,UAAU,YAAYuU,MAAM,SAE/C,kBAAC,GAAD,CAAWvU,UAAU,YAAYuU,MAAM,gBACvC,kBAAC,GAAD,CAAWvU,UAAU,YAAYuU,MAAM,eACvC,kBAAC,GAAD,CAAWvU,UAAU,YAAYuU,MAAM,cACvC,kBAAC,GAAD,CAAWvU,UAAU,YAAYuU,MAAM,WACvC,kBAAC,GAAD,CAAWvU,UAAU,YAAYuU,MAAM,YACvC,kBAAC,GAAD,CAAWvU,UAAU,YAAYuU,MAAM,QACvC,kBAAC,GAAD,CAAWvU,UAAU,YAAYuU,MAAM,eACvC,kBAAC,GAAD,CAAWvU,UAAU,YAAYuU,MAAM,WAG/C,yBAAKvU,UAAU,qBACK,IAAdyY,GAAmB,kBAAC,GAAD,MACL,IAAdA,GAAmB,kBAAC,GAAD,MACL,IAAdA,GAAmB,kBAAC,GAAuB6B,IAC7B,IAAd7B,GAAmB,kBAAC,GAAgB8B,IACtB,IAAd9B,GAAmB,kBAAC,GAAuBwC,IAC7B,IAAdxC,GAAmB,kBAAC,GAAsByC,IAC5B,IAAdzC,GAAmB,kBAAC,GAAqB0C,IAC3B,IAAd1C,GAAmB,kBAAC,GAAkB2C,IACxB,IAAd3C,GAAmB,kBAAC,GAAmB4C,IACzB,IAAd5C,GAAmB,kBAAC,GAAe6C,IACrB,KAAd7C,GAAoB,kBAAC2D,GAAqBb,IAC5B,KAAd9C,GAAoB,kBAAC4D,GAAgBnB,WEzdhDlS,I,OAAAA,YAZS,SAAC,GAA+C,IAA7CsT,EAA4C,EAA5CA,UACvB,MAAO,CAAEnX,OAD0D,EAAjC8D,gBAAmB9D,OACpCmX,cAGM,SAAAjV,GACvB,MAAO,CACHD,WAAYA,GAAWC,GACvBC,YAAaA,GAAYD,GACzBkV,eAAgB,kBAAMlV,ED7CnB,CACHJ,KAX4B,4BC2DrB+B,CA9CH,SAAAjF,GAAU,IACVoB,EAA+DpB,EAA/DoB,OAAQiC,EAAuDrD,EAAvDqD,WAAYE,EAA2CvD,EAA3CuD,YAAagV,EAA8BvY,EAA9BuY,UAAWC,EAAmBxY,EAAnBwY,eAMpD,OACI,kBAACf,EAAA,EAAD,CAAe3Y,MAAOA,IAClB,yBAAK7C,UAAU,OACX,yBAAKA,UAAU,gBACRsc,EAMC,oCACI,kBAACpW,EAAA,EAAD,CACIC,QAAS,WAfjCiB,EAAWvT,EAAc2oB,YAAYF,GAAa,OAc9B,cAGA,kBAACpW,EAAA,EAAD,CACIC,QAASoW,EACTnW,MAAM,aAFV,iBATJ,kBAACF,EAAA,EAAD,CACIC,QAAS,kBAAMiB,KACfhB,MAAM,WAFV,eAgBR,kBAAC,GAAkB,CAACjB,SAAQmC,qB,SC7B7BmV,GAXO,WAA2B,IAA1B3Y,IAAyB,yDAAXsG,EAAW,uCAC5C,OAAQA,EAAOnD,MACX,IpCFuB,kBoCGnB,OAAO,EACX,IpCHuB,kBoCInB,OAAO,EACX,QACI,OAAOnD,I,8mCCNnB,IAAM4Y,GCDkB,WAA+B,IAA9BC,EAA6B,uDAAP,GAC3C,OAAO,IACHxJ,YAAazU,GACV5F,EAFP,GAGO6jB,GDHUC,GAaNC,GAXc,WAAoC,IAAnC/Y,EAAkC,uDAA1B4Y,GAActS,EAAY,uCAC5D,OAAQA,EAAOnD,MACX,IrCPuB,kBqCQnB,OAAO,MAAKnD,EAAZ,GAAsBsG,EAAOpD,SACjC,IrCRsB,iBqCSlB,OAAO0V,GACX,QACI,OAAO5Y,I,ujBELnB,IAWegZ,GAXgB,WAA4C,IAA3ChZ,EAA0C,uDAAlCxG,EAAuB8M,EAAW,uCACtE,OAAQA,EAAOnD,MACX,IvCD+B,0BuCE3B,OAAO,MAAKnD,EAAZ,GAAsBsG,EAAOpD,SACjC,IvCF+B,0BuCG3B,OAAO1J,EACX,QACI,OAAOwG,ICEJiZ,GAXW,WAA4B,IAA3BjZ,EAA0B,wDAAXsG,EAAW,uCACjD,OAAQA,EAAOnD,MACX,IxCDsC,gCwCElC,OAAO,EACX,IxCFuC,kCwCGnC,OAAO,EACX,QACI,OAAOnD,ICMJkZ,GAXU,WAAmC,IAAlClZ,EAAiC,uDAFtC,EAE2BsG,EAAW,uCACvD,OAAQA,EAAOnD,MACX,IzCL6B,wByCMzB,OAAOmD,EAAOpD,QAClB,IzCN4B,uByCOxB,OAPS,EAQb,QACI,OAAOlD,ICEJmZ,GARgBC,aAAgB,CAC3C/X,OAAQsX,GACRhE,UAAWuE,GACXtU,gBAAiBoU,GACjB1X,WAAY2X,GACZne,KAAMie,KCEKM,GAXiB,WAAmC,IAAlCrZ,EAAiC,uDAF7C,KAEkCsG,EAAW,uCAC9D,OAAQA,EAAOnD,MACX,ITNqB,gBSOjB,OAAOmD,EAAOpD,QAClB,ITP4B,uBSQxB,OAPS,KAQb,QACI,OAAOlD,ICDJsZ,GALKF,aAAgB,CAChCjU,gBAAiBgU,GACjBX,UAAWa,KCJAE,gBACXD,GACAlM,OAAOoM,8BAAgCpM,OAAOoM,gCCO9BC,QACW,cAA7BrM,OAAOsM,SAASC,UAEe,UAA7BvM,OAAOsM,SAASC,UAEhBvM,OAAOsM,SAASC,SAASrb,MACvB,2D,OCRNsb,IAASC,OAAO,kBAAC,IAAD,CAAUC,MAAOA,IAAO,kBAAC,GAAD,OAAmB/mB,SAASgnB,eAAe,SDuH7E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.6a9b50d7.chunk.js","sourcesContent":["class DecDataParser {\r\n    static parseToSend(dec) {\r\n        return dec;\r\n    }\r\n\r\n    static parseToEdit(dec) {\r\n        return dec;\r\n    }\r\n\r\n    static mapDecFields = {};\r\n}\r\n\r\nexport default DecDataParser;","const { body } = document;\r\nlet width;\r\n\r\nconst container = document.createElement('span');\r\ncontainer.innerHTML = Array(100).join('wi');\r\ncontainer.style.cssText = [\r\n    'position:absolute',\r\n    'width:auto',\r\n    'font-size:128px',\r\n    'left:-99999px'\r\n].join(' !important;');\r\n\r\nconst getWidth = fontFamily => {\r\n    container.style.fontFamily = fontFamily;\r\n\r\n    body.appendChild(container);\r\n    width = container.clientWidth;\r\n    body.removeChild(container);\r\n\r\n    return width;\r\n};\r\n\r\nconst monoWidth  = getWidth('monospace');\r\nconst serifWidth = getWidth('serif');\r\nconst sansWidth  = getWidth('sans-serif');\r\n\r\nconst isFontAvailable = font => {\r\n    return monoWidth !== getWidth(font + ',monospace') ||\r\n    sansWidth !== getWidth(font + ',sans-serif') ||\r\n    serifWidth !== getWidth(font + ',serif');\r\n};\r\n\r\nexport default isFontAvailable;","import keycode from \"keycode\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nconst getShortCutUtils = systemName => {\r\n  return class ShortcutUtils {  \r\n    static CMD_KEYS = {\r\n      altKey: systemName === \"MacOS\" ? \"Option\" : \"Alt\",\r\n      ctrlKey: systemName === \"MacOS\" ? \"Control\" : \"Ctrl\",\r\n      shiftKey: \"Shift\",\r\n      metaKey: \"Command\",\r\n    };\r\n  \r\n    static isDeadKey(e) {\r\n      return e.keyCode === 229;\r\n    }\r\n  \r\n    static prevent(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  \r\n    static convertEventToShortCut(e) {\r\n      if (ShortcutUtils.isDeadKey(e)) {\r\n        ShortcutUtils.prevent(e);\r\n        return { deleteKey: true };\r\n      }\r\n      ShortcutUtils.prevent(e);\r\n      const shortCut = {\r\n        keyCode: e.keyCode,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n        altKey: e.altKey,\r\n        metaKey: false,\r\n      };\r\n      if (systemName === \"MacOS\") {\r\n        shortCut.metaKey = e.metaKey;\r\n      }\r\n      const deleteKeys = [8, 46];\r\n      const cmdKeysCodes = [16, 91, 18, 17];\r\n      const shortCutForView = ShortcutUtils.convertShortcutToMeta(shortCut);\r\n      if (deleteKeys.indexOf(e.keyCode) > -1) {\r\n        return { deleteKey: true };\r\n      } else if (shortCutForView.isCmdPressed && cmdKeysCodes.indexOf(e.keyCode) === -1) {\r\n        return {\r\n          value: shortCut,\r\n          stringValue: shortCutForView.stringValue,\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n  \r\n    static convertShortcutToString(shortCut = {}) {\r\n      return ShortcutUtils.convertShortcutToMeta(shortCut).stringValue;\r\n    }\r\n  \r\n    static convertShortcutToMeta(shortCut = {}) {\r\n      let shortCutForView = \"\";\r\n      let isCmdPressed = false;\r\n      Object.keys(ShortcutUtils.CMD_KEYS).forEach((key) => {\r\n        if (shortCut && shortCut[key]) {\r\n          isCmdPressed = true;\r\n          shortCutForView += `${ShortcutUtils.CMD_KEYS[key]} + `;\r\n        }\r\n      });\r\n      if (shortCut && shortCut.keyCode) {\r\n        shortCutForView += keycode(shortCut.keyCode);\r\n      }\r\n      return { stringValue: shortCutForView, isCmdPressed };\r\n    }\r\n  \r\n    static removeDuplicateShortcuts = function (decorators, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(decorators).forEach((decoratorKey) => {\r\n        const item = decorators[decoratorKey];\r\n        const itemType = item.item_type;\r\n        if (itemType === \"style\") {\r\n          if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n            decorators[decoratorKey].keyboard_shortcut = null;\r\n            removed = true;\r\n          }\r\n        } else {\r\n          const childItems = item.child_items;\r\n          Object.keys(childItems).forEach((itemKey) => {\r\n            const style = childItems[itemKey];\r\n            if (isEqual(style.keyboard_shortcut, newPdShortcut)) {\r\n              style.keyboard_shortcut = null;\r\n              removed = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  \r\n    static removeDuplicateShortcutsInInlineStyle = function (inlineStyles, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(inlineStyles).forEach((styleKey) => {\r\n        const item = inlineStyles[styleKey];\r\n        if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n          inlineStyles[styleKey].keyboard_shortcut = null;\r\n          removed = true;\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  }\r\n};\r\n\r\nexport default getShortCutUtils;\r\n\r\n","export const HOLDER = \"HOLDER-POLDER\";\r\nexport const DEFAULT_FONT = \"Helvetica\";\r\n\r\nexport const autoFillingRequiredFields = {\r\n  sideNumberFontSize: \"12\",\r\n  sideNumberFontColor: \"FFF\",\r\n  sideNumberFillingColor: \"1E88E5\",\r\n  sideNumberWidth: \"20\",\r\n  sideNumberRadius: \"10\",\r\n  fontSize: \"12\",\r\n  fontColor: \"000\",\r\n  marginTop: \"6\",\r\n  marginBottom: \"6\",\r\n  firstRowIndent: \"0\",\r\n  otherRowsIndent: \"0\",\r\n  wordSpacing: \"0\",   \r\n  borderColor: \"f00\",\r\n  borderThickness: \"2\",\r\n};\r\n\r\nexport const emptyDecFormState = {\r\n  decKey: \"\",\r\n  group: \"\",\r\n  groupToCreate: \"\",\r\n  active: false,\r\n  decNameEn: \"\",\r\n  decNameDe: \"\",\r\n  decNameRu: \"\",\r\n  decNameFr: \"\",\r\n  decNameFrCa: \"\",\r\n  decNameEs: \"\",\r\n  wordStyleName: \"\",\r\n  softReturn: false,\r\n  indentationalLevel: \"\",\r\n  backspaceActionWithContent: \"merge\",\r\n  backspaceActionWithContentStyle: \"default\",\r\n  returnActionNextSection: \"default\",\r\n  returnActionEmptySection: \"default\",\r\n  tabAction: \"\",\r\n  shiftTabAction: \"\",\r\n  isList: false,\r\n  listName: HOLDER,\r\n  orderLevel: \"\",\r\n  prefix: \"\",\r\n  suffix: \"\",\r\n  suffixDistance: \"0.25\",\r\n  magicTabs: false,\r\n  listType: \"unordered\",\r\n  listItem: \"bulletpoint\",\r\n  unicodeNumber: \"\",\r\n  unicodeChar: \"\",\r\n  numberingStyle: \"decimal\",\r\n  continueNumbering: false,\r\n  allowRestartNumbering: false,\r\n  includePreviousFrom: \"\",\r\n  sideNumber: false,\r\n  sideNumberFont: DEFAULT_FONT,\r\n  customSideNumberFont: \"\",\r\n  sideNumberAlignment: \"center\",\r\n  referenceGroup: \"\",\r\n  referenceGroupToCreate: \"\",\r\n  font: DEFAULT_FONT,\r\n  customFont: \"\",\r\n  alignment: \"left\",\r\n  fontColorName: \"Black\",\r\n  bold: false,\r\n  italic: false,\r\n  underlined: false,\r\n  stroke: false,\r\n  textTransform: \"none\",\r\n  verticalAlign: \"baseline\",\r\n  lineSpacing: \"1.15\",\r\n  customLineSpacing: \"\",\r\n  leftBorder: false,\r\n  rightBorder: false,\r\n  topBorder: false,\r\n  bottomBorder: false,\r\n  borderColorName: \"Red\",\r\n  borderType: \"solid\",\r\n  fillingColorName: \"\",\r\n  fillingColor: \"\",\r\n  connectToPrevious: false,\r\n  tocIndentation: \"\",\r\n  shortCutWin: \"\",\r\n  shortCutWinView: \"\",\r\n  shortCutMac: \"\",\r\n  shortCutMacView: \"\",\r\n  ...autoFillingRequiredFields,\r\n};","const decoratorsList = [\r\n    { name: \"...\", value: \"\" },\r\n    { name: \"Text 1\", value: \"quick_text_1\" },\r\n    { name: \"Text 2\", value: \"quick_text_2\" },\r\n    { name: \"Text 3\", value: \"quick_text_3\" },\r\n    { name: \"Text 4\", value: \"quick_text_4\" },\r\n    { name: \"Text 5\", value: \"quick_text_5\" },\r\n    { name: \"Heading 1\", value: \"quick_heading_1\" },\r\n    { name: \"Heading 2\", value: \"quick_heading_2\" },\r\n    { name: \"Heading 3\", value: \"quick_heading_3\" },\r\n    { name: \"Heading 4\", value: \"quick_heading_4\" },\r\n    { name: \"Heading 5\", value: \"quick_heading_5\" },\r\n];\r\n\r\nexport default decoratorsList;","const fontSet = [ \r\n    \"Source Sans Pro\", \r\n    \"Dejavu Sans\", \r\n    \"Dejavu Serif\", \r\n    \"Open Sans\", \r\n    \"Georgia\", \r\n    \"Arial\", \r\n    \"Verdana\", \r\n    \"Times New Roman\",\r\n];\r\n\r\nexport default fontSet;","export const namesSectionRequiredFields = [\"decKey\", \"decNameEn\"];\r\n\r\nexport const wordExportSectionRequiredFields = [\"wordStyleName\"];\r\n\r\nexport const listSectionRequiredFields = [\"listName\"];\r\n\r\nexport const requiredFields = [ \r\n    ...namesSectionRequiredFields, \r\n    ...wordExportSectionRequiredFields, \r\n    ...listSectionRequiredFields, \r\n];\r\n\r\nexport const tabsErrorInitialState = {\r\n    namesSection: false,\r\n    wordExportSection: false,\r\n    listSection: false,\r\n};\r\n\r\nexport const sectionsTabNumbers = [\r\n    { tabName: \"namesSection\", tabNumber: 0 },\r\n    { tabName: \"wordExportSection\", tabNumber: 1},\r\n    { tabName: \"listSection\", tabNumber: 3 },\r\n];","export const alignmentsMap = {\r\n    center: \"center\",\r\n    left: \"flex-start\",\r\n    right: \"flex-end\",\r\n    justify: \"flex-start\",\r\n};\r\n\r\nexport const backSpaceActions = [\r\n    { key: 'merge', value: 'Merge' },\r\n    { key: 'apply_other_pd', value: 'Apply other PD' },\r\n    { key: 'remove_pd', value: 'Remove PD' },\r\n    { key: 'nothing', value: 'Nothing' }\r\n];\r\n\r\nexport const bulletNamesMap = {\r\n    bulletpoint: \"•\",\r\n    dash: \"—\",\r\n    star: \"★\",\r\n};\r\n\r\nexport const listStyleTypes = [\r\n    { name: '1, 2, 3', value: 'decimal' },\r\n    {  name: 'A, B, C', value: 'upper-alpha' },\r\n    {  name: 'a, b, c', value: 'lower-alpha' },\r\n    {  name: 'I, II, III', value: 'upper-roman' },\r\n    {  name: 'i, ii, iii', value: 'lower-roman' },\r\n];\r\n\r\nexport const numberingSets = {\r\n    decimal: [\"1\", \"2\", \"3\", \"4\"],\r\n    \"upper-alpha\": [\"A\", \"B\", \"C\", \"D\"],\r\n    \"lower-alpha\": [\"a\", \"b\", \"c\", \"d\"],\r\n    \"upper-roman\": [\"I\", \"II\", \"III\", \"IV\"],\r\n    \"lower-roman\": [\"i\", \"ii\", \"iii\", \"iv\"],\r\n};\r\n\r\nexport const sampleText = `<div>Sample Text. You can change it.</div><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ornare maximus vehicula. Duis nisi velit, dictum id mauris vitae, lobortis pretium quam.</div>`;\r\n","import { clone } from \"lodash\";\r\n\r\nimport {\r\n    namesSectionRequiredFields,\r\n    wordExportSectionRequiredFields,\r\n    listSectionRequiredFields,\r\n    tabsErrorInitialState,\r\n    sectionsTabNumbers,\r\n} from \"../constants\";\r\n\r\nexport const getNamesSectionErrorState = form => {\r\n    return !namesSectionRequiredFields.every(fieldName => form[fieldName]);\r\n};\r\n\r\nexport const getWordExportSectionErrorState = form => {\r\n    return !wordExportSectionRequiredFields.every(fieldName => form[fieldName]);\r\n}\r\n\r\nexport const getListSectionErrorState = form => {\r\n    return !listSectionRequiredFields.every(fieldName => form[fieldName]);\r\n}\r\n\r\nexport const getTabsErrorState = form => {\r\n    const tabsState = clone(tabsErrorInitialState);\r\n\r\n    if (getNamesSectionErrorState(form)) {\r\n        tabsState.namesSection = true;\r\n    }\r\n\r\n    if (getWordExportSectionErrorState(form)) {\r\n        tabsState.wordExportSection = true;\r\n    }\r\n\r\n    if (getListSectionErrorState(form)) {\r\n        tabsState.listSection = true;\r\n    }\r\n\r\n    for (let tabName in tabsState) {\r\n        if (tabsState[tabName]) {\r\n            return tabsState;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport const getTabNumberToSwitch = tabsErrorState => {\r\n    for (const { tabName, tabNumber } of sectionsTabNumbers) {\r\n        if (tabsErrorState[tabName]) {\r\n            return tabNumber;\r\n        }\r\n    }\r\n};","import { \r\n    numberingSets, \r\n    bulletNamesMap, \r\n    autoFillingRequiredFields, \r\n    DEFAULT_FONT, \r\n    sectionsTabNumbers,\r\n} from \"../constants\";\r\nimport isFontAvailable from \"./isFontAvailable\";\r\n\r\nexport const getCorrectColor = (hex, backgroundColor = \"FFF\") => {\r\n    const correctColor = typeof hex === \"string\" && (hex.length === 6 || hex.length === 3) ? hex : backgroundColor;\r\n    return correctColor;\r\n};\r\n\r\nexport const selectAllOnClick = defaultValue => e => {\r\n    if (!defaultValue || e.target.value === defaultValue) {\r\n        e.target.focus();\r\n        e.target.select();\r\n    }\r\n};\r\n\r\nexport const getOffset = (alignType, fontSize) => {\r\n    if (alignType === \"baseline\") {\r\n        return 0;\r\n    }\r\n    return (parseFloat(fontSize.slice()) / 2) * (alignType === \"sub\" ? 1 : -1);\r\n};\r\n\r\nexport const getUnstyledText = styledText => {\r\n    const unstyledText = styledText.replace(/<\\/(.*?)>/gm, \"</div>\").replace(/(?!(?:<\\/(.*?)>|<br(.*?)>)$)<(.*?)>/gm, \"<div>\");\r\n    return unstyledText[0] !== \"<\" ? `<div>${unstyledText}</div>` : unstyledText;\r\n};\r\n\r\nexport const unicodeNumberToChar = unicodeNumber => {\r\n    return String.fromCharCode(parseInt(unicodeNumber, 16));\r\n};\r\n\r\nexport const unicodeCharToNumber = unicodeChar => {\r\n    return unicodeChar.charCodeAt(0).toString(16);\r\n};\r\n\r\nexport const scrollToBottom = className => {\r\n    setTimeout(() => { document.getElementsByClassName(className)[0].scrollTo({\r\n        top: Number.MAX_SAFE_INTEGER,\r\n        behavior: \"smooth\",\r\n    })}, 0);\r\n};\r\n\r\nexport const selectAllEditableContent = className => e => {\r\n    if (e.target.className === className) {\r\n        window.getSelection().selectAllChildren(e.target.children[0]);\r\n    }\r\n};\r\n\r\nexport const getListChars = ({ isOrderedList, numberingStyle, listItem, unicodeChar }) => {\r\n    if (isOrderedList) {\r\n        return numberingSets[numberingStyle];\r\n    }\r\n    const newBullet = bulletNamesMap[listItem] || unicodeChar;\r\n    return Array(4).fill(newBullet);\r\n};\r\n\r\nexport const detectOS = () => {\r\n    if (navigator && navigator.appVersion) {\r\n        if (navigator.appVersion.indexOf(\"Win\") !== -1) {\r\n            return \"Windows\";\r\n        } else if (navigator.appVersion.indexOf(\"Mac\") !== -1) {\r\n            return \"MacOS\";\r\n        }\r\n    }\r\n};\r\n\r\nexport const focusInput = (inputRef, timeout = 300) => {\r\n    setTimeout(() => {\r\n        inputRef.current.focus();\r\n    }, timeout);\r\n};\r\n\r\nexport const getErrorSections = (requiredFields = [], ...sectionPropsSets) => {\r\n    return sectionPropsSets.map(sectionProps => {\r\n        return requiredFields.some(fieldName => {\r\n            return sectionProps.hasOwnProperty(fieldName) && !sectionProps[fieldName]\r\n        });\r\n    });\r\n};\r\n\r\nexport const getPreviewFont = (font, customFont) => {\r\n    if (font !== \"custom\" && isFontAvailable(font)) {\r\n        return font;\r\n    } else if (font === \"custom\" && customFont && isFontAvailable(customFont)) {\r\n        return customFont;\r\n    }\r\n    return `'${DEFAULT_FONT}', 'Roboto', sans-serif`;\r\n}\r\n\r\nexport const fillMissedFields = currentFormState => {\r\n    const formStateWithoutMissedFields = { ...currentFormState }; \r\n    \r\n    if (currentFormState.font === \"custom\" && !currentFormState.customFont) {\r\n        formStateWithoutMissedFields.font = DEFAULT_FONT;\r\n    };\r\n    \r\n    if (currentFormState.sideNumberFont === \"custom\" && !currentFormState.customSideNumberFont) {\r\n        formStateWithoutMissedFields.sideNumberFont = DEFAULT_FONT;\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n    for (let fieldName in autoFillingRequiredFields) {\r\n        if (!currentFormState[fieldName] && autoFillingRequiredFields[fieldName]) {\r\n            formStateWithoutMissedFields[fieldName] = autoFillingRequiredFields[fieldName];\r\n        }\r\n    }\r\n    return formStateWithoutMissedFields;\r\n};","import { getShortCutUtils } from \"./helpers\";\r\n\r\nconst Handlers = (update, formState) => class {    \r\n    static toggleStateProperty = propName => e => {\r\n        update({\r\n            [propName]: e.target.checked\r\n        });\r\n    };\r\n\r\n    static setStateProperty = propName => (e, secondArg = \"\") => {\r\n        const newValue = (e && e.target.value !== \"\" && e.target.value !== undefined) ? e.target.value : secondArg;\r\n        update({\r\n            [propName]: newValue,\r\n        });\r\n    };\r\n\r\n    static setBullet = propName => e => {\r\n        const newBullet = e.target.value.length > 1 ? e.target.value[e.target.value.length - 1] : e.target.value;\r\n        update({\r\n            [propName]: newBullet,\r\n        });\r\n        return newBullet;\r\n    };\r\n\r\n    static setColor = propName => (e, secondArg) => {\r\n        let input = e ? (e.target.value || \"\") : secondArg;\r\n        \r\n        const filteredInput = input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i) \r\n                              ? input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i)[0].slice(0, 6)\r\n                              : \"\" ;\r\n        \r\n        if (filteredInput !== formState[propName]) {\r\n            update({\r\n                [propName]: filteredInput,\r\n            });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setNumber = propName => e => {\r\n        let input = e.target.value || \"\";\r\n\r\n        const filteredInput = input.replace(\",\", \".\").trim().match(/[0-9]+/i) \r\n                              ? input.replace(\",\", \".\").trim().match(/\\d+[.,]?\\d*/)[0]\r\n                              : \"\" ;\r\n\r\n        if (filteredInput !== formState[propName]) {\r\n          update({\r\n              [propName]: filteredInput,\r\n          });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setShortCut = (valuePropName, viewPropName, isMac) => e => {\r\n        const systemName = isMac ? \"MacOS\" : \"Windows\";\r\n        const shortCut = getShortCutUtils(systemName).convertEventToShortCut(e);\r\n        if (shortCut && shortCut.deleteKey) {\r\n          setTimeout(() => {\r\n            update({ [valuePropName]: \"\" });\r\n            update({ [viewPropName]: \"\" });\r\n          }, 100);\r\n        } else if (shortCut) {\r\n          update({ [valuePropName]: shortCut.value });\r\n          update({ [viewPropName]: shortCut.stringValue });\r\n        }\r\n    };\r\n};\r\n\r\nexport default Handlers;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInput = withStyles(theme => ({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      minWidth: \"183px\",\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInput;","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass NewGroupDialog extends React.Component {\r\n\r\n    state = this.props.currentGroup \r\n          ? this.props.currentGroup \r\n          : this.props.groupType !== \"xref\" \r\n          ? { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", }\r\n          : { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", groupKey: \"\", };\r\n    \r\n    onInputChange = inputName => e => {\r\n        this.setState({ \r\n            [inputName]: e.target.value \r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        const {currentGroup, hideDialog } = this.props;\r\n        this.setState({ ...currentGroup });\r\n        hideDialog()\r\n    };\r\n\r\n    onGroupSave = () => {\r\n        const { onSave, changeGroupSelect, hideDialog, groupType } = this.props;\r\n        if (this.state.nameEn.trim().length && (groupType !== \"xref\" || this.state.groupKey.trim().length)) {\r\n            const groupToSave = {\r\n                nameEn: this.state.nameEn.trim(),\r\n                nameDe: this.state.nameDe.trim(),\r\n                nameRu: this.state.nameRu.trim(),\r\n                nameFr: this.state.nameFr.trim(),\r\n                nameFrCa: this.state.nameFrCa.trim(),\r\n                nameEs: this.state.nameEs.trim(),\r\n            };\r\n            if (groupType === \"xref\") {\r\n                groupToSave.groupKey = this.state.groupKey.trim();\r\n            }\r\n            onSave(groupToSave);\r\n            changeGroupSelect(groupToSave)(null, this.state.nameEn.trim());\r\n            hideDialog();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isOpen, isEditMode } = this.props;\r\n        const { onInputChange, onGroupSave, onClose } = this;\r\n        const titleText = `${isEditMode ? \"Edit\" : \"Create\"} new ${this.props.groupType === \"xref\" ? \"reference \" : \"\"}group`\r\n        const buttonText = isEditMode ? \"Save\" : \"Create\";\r\n        return (\r\n            <Dialog\r\n                className=\"paragraphDecorators-dialog\"\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <DialogTitle>{titleText}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        {\r\n                            this.props.groupType === \"xref\" \r\n                            &&\r\n                            <>\r\n                                <span>Group Key</span>\r\n                                <TextField \r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                    onChange={onInputChange(\"groupKey\")}\r\n                                    value={this.state.groupKey}\r\n                                />\r\n                            </>\r\n                        }\r\n                        <span>Name EN</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEn\")}\r\n                            value={this.state.nameEn}\r\n                        />\r\n                        <span>Name DE</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameDe\")} \r\n                            value={this.state.nameDe}\r\n                        />                        \r\n                        <span>Name RU</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameRu\")} \r\n                            value={this.state.nameRu}\r\n                        />                        \r\n                        <span>Name FR<br/><span className=\"smallText\">France</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFr\")} \r\n                            value={this.state.nameFr}\r\n                        />\r\n                        <span>Name FR<br/><span className=\"smallText\">Canada</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFrCa\")} \r\n                            value={this.state.nameFrCa}\r\n                        />\r\n                        <span>Name ES</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEs\")} \r\n                            value={this.state.nameEs}\r\n                        />                  \r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color=\"default\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={onGroupSave} color=\"primary\">\r\n                        {buttonText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n};\r\n\r\nexport default NewGroupDialog;","import React from \"react\";\r\n\r\nconst LabelWithAsterisk = ({ children }) => {\r\n    return (\r\n        <div className=\"labelWithAsterisk\">\r\n            <div className=\"labelWithAsterisk-labelBox\">\r\n                <span>{children}</span>\r\n            </div>\r\n            <div className=\"labelWithAsterisk-asteriskBox\">\r\n                <span className=\"labelWithAsterisk-asteriskMark\">*</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LabelWithAsterisk;","import React from \"react\";\r\n\r\nconst withNewGroupControl = (ViewComponent) => {\r\n    return class extends React.Component {\r\n        state = {\r\n            isOpen: false,\r\n            groupSelect: \"\",\r\n            newGroup: this.props.savedNewGroup || \"\",\r\n        }\r\n        \r\n        handleClick = () => {\r\n            this.setState(({ isOpen }) => {\r\n                return {\r\n                    isOpen: !isOpen\r\n                };\r\n            });\r\n        }\r\n    \r\n        onSave = newGroup => {\r\n            this.setState({ newGroup });\r\n        }\r\n    \r\n        changeGroupSelect = (newValue) => {\r\n            this.setState({\r\n                groupSelect: newValue,\r\n            });\r\n        }\r\n\r\n        hideDialog = () => {\r\n            this.setState({ isOpen: false });\r\n        }\r\n        \r\n        render() {\r\n            const { handleClick, onSave, changeGroupSelect, hideDialog } = this; \r\n            return ( <ViewComponent {...this.props} {...this.state} {...{ handleClick, onSave, changeGroupSelect, hideDialog }} /> );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withNewGroupControl;","export const CHANGE_DEC_FORM = \"CHANGE_DEC_FORM\";\r\nexport const CLEAR_DEC_FORM = \"CLEAR_DEC_FORM\";\r\nexport const SHOW_DEC_DIALOG = \"SHOW_DEC_DIALOG\";\r\nexport const HIDE_DEC_DIALOG = \"HIDE_DEC_DIALOG\";\r\nexport const SWITCH_DEC_DIALOG_TAB = \"SWITCH_DEC_DIALOG_TAB\";\r\nexport const RESET_DEC_DIALOG_TAB = \"RESET_DEC_DIALOG_TAB\";\r\nexport const SWITCH_ON_DEC_DIALOG_EDIT_MODE = \"SWITCH_ON_DEC_DIALOG_EDIT_MOD\";\r\nexport const SWITCH_OFF_DEC_DIALOG_EDIT_MODE = \"SWITCH_OFF_DEC_DIALOG_EDIT_MODE\";\r\nexport const UPDATE_VALIDATION_ERROR = \"UPDATE_VALIDATION_ERROR\";\r\nexport const REMOVE_VALIDATION_ERROR = \"REMOVE_VALIDATION_ERROR\";\r\n\r\nexport const changeDecoratorForm = payload => {\r\n    return {\r\n        type: CHANGE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearDecoratorForm = payload => {\r\n    return {\r\n        type: CLEAR_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const showDecoratorDialog = () => {\r\n    return {\r\n        type: SHOW_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const hideDecoratorDialog = () => {\r\n    return {\r\n        type: HIDE_DEC_DIALOG,\r\n    };\r\n};\r\n\r\nexport const switchDecDialogTab = payload => {\r\n    return {\r\n        type: SWITCH_DEC_DIALOG_TAB,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const resetDecDialogTab = () => {\r\n    return {\r\n        type: RESET_DEC_DIALOG_TAB,\r\n    };\r\n}\r\n\r\nexport const switchOnDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_ON_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const switchOffDecDialogEditMode = () => {\r\n    return {\r\n        type: SWITCH_OFF_DEC_DIALOG_EDIT_MODE,\r\n    };\r\n};\r\n\r\nexport const updateValidationError = payload => {\r\n    return {\r\n        type: UPDATE_VALIDATION_ERROR,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const removeValidationError = () => {\r\n    return {\r\n        type: REMOVE_VALIDATION_ERROR,\r\n    };\r\n};\r\n\r\nexport const openDialog = dispatch => dec => {\r\n    if (dec) {\r\n        dispatch(changeDecoratorForm(dec));\r\n        dispatch(switchOnDecDialogEditMode());\r\n    } \r\n    dispatch(showDecoratorDialog());\r\n};\r\n\r\nexport const closeDialog = dispatch => () => {\r\n    dispatch(hideDecoratorDialog());\r\n    dispatch(switchOffDecDialogEditMode());\r\n    dispatch(removeValidationError());\r\n    dispatch(resetDecDialogTab());\r\n    dispatch(clearDecoratorForm());\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Handlers from \"../Handlers\";\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport LabelWithAsterisk from \"../common/LabelWithAsterisk\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\nimport { getNamesSectionErrorState, focusInput } from \"../helpers\";\r\nimport { changeDecoratorForm, updateValidationError } from \"../actions\";\r\n\r\nclass NamesSection extends React.Component {\r\n    handlers = Handlers(this.props.updateForm);\r\n    setStateProperty = this.handlers.setStateProperty;\r\n    toggleStateProperty = this.handlers.toggleStateProperty;\r\n\r\n    changeDecKey = this.setStateProperty(\"decKey\");\r\n    changeGroup = this.setStateProperty(\"group\");\r\n    changeGroupToCreate = this.setStateProperty(\"groupToCreate\");\r\n    changeActive = this.toggleStateProperty(\"active\");\r\n    changeDecNameEn = this.setStateProperty(\"decNameEn\");\r\n    changeDecNameDe = this.setStateProperty(\"decNameDe\");\r\n    changeDecNameRu = this.setStateProperty(\"decNameRu\");\r\n    changeDecNameFr = this.setStateProperty(\"decNameFr\");\r\n    changeDecNameFrCa = this.setStateProperty(\"decNameFrCa\");\r\n    changeDecNameEs = this.setStateProperty(\"decNameEs\");\r\n\r\n    onGroupChange = group => (...args) => {\r\n        const value = args[0] ? args[0].target.value : args[1];\r\n        if (group.nameEn && value === group.nameEn) {\r\n            this.changeGroupToCreate(null, group);\r\n        } else {\r\n            this.changeGroupToCreate(null, \"\");\r\n        }\r\n        this.changeGroup(...args);\r\n    };\r\n\r\n    decKeyInputRef = React.createRef();\r\n    decNameEnInputRef = React.createRef();\r\n\r\n    focusOnEmptyField = () => {\r\n        if (!this.props.formState.decKey) {\r\n            focusInput(this.decKeyInputRef);\r\n        } else if (!this.props.formState.decNameEn) {\r\n            focusInput(this.decNameEnInputRef);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.validationError) {\r\n            this.focusOnEmptyField();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.validationError && !prevprops.validationError) {\r\n            this.focusOnEmptyField();\r\n        }\r\n        if (this.props.validationError && !getNamesSectionErrorState(this.props.formState)) {\r\n            this.props.updateValidationError({ namesSection: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            formState,\r\n            validationError,\r\n            onSave,\r\n            newGroup, \r\n            isOpen, \r\n            hideDialog, \r\n            handleClick, \r\n        } = this.props;\r\n\r\n        const {\r\n            decKey,\r\n            group,\r\n            active,\r\n            decNameEn,\r\n            decNameDe,\r\n            decNameRu,\r\n            decNameFr,\r\n            decNameFrCa,\r\n            decNameEs,\r\n        } = formState;\r\n\r\n        const newGroupName = newGroup.nameEn;\r\n        const isEditMode = !!newGroupName;\r\n\r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n                <LabelWithAsterisk>Key</LabelWithAsterisk>\r\n                <TextField \r\n                    value={decKey}\r\n                    onChange={this.changeDecKey}\r\n                    error={validationError && !decKey}\r\n                    inputRef={this.decKeyInputRef}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Group</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        value={group} \r\n                        onChange={this.onGroupChange(newGroup)}\r\n                        input={ <CustomInput /> }  \r\n                    >\r\n                        <option value=\"\">...</option>\r\n                        { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                        <option value=\"0\">Text</option>\r\n                        <option value=\"1\">Heading</option>\r\n                        <option value=\"2\">Heading Heading Heading Heading</option>\r\n                    </NativeSelect>\r\n                    { !(isEditMode && group !== newGroupName) && (\r\n                        <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                            { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                        </Button>\r\n                    ) }\r\n                </div>\r\n\r\n                <span>Active</span>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={active}\r\n                        onChange={this.changeActive} \r\n                        color=\"primary\" \r\n                    />\r\n                </div>\r\n\r\n                <LabelWithAsterisk>Name EN</LabelWithAsterisk>\r\n                <TextField \r\n                    value={decNameEn}\r\n                    onChange={this.changeDecNameEn}\r\n                    error={validationError && !decNameEn}\r\n                    inputRef={this.decNameEnInputRef}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name DE</span>\r\n                <TextField \r\n                    value={decNameDe}\r\n                    onChange={this.changeDecNameDe}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name RU</span>\r\n                <TextField \r\n                    value={decNameRu}\r\n                    onChange={this.changeDecNameRu}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name FR<br/><span className=\"smallText\">France</span></span>\r\n                <TextField \r\n                    value={decNameFr}\r\n                    onChange={this.changeDecNameFr}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name FR<br/><span className=\"smallText\">Canada</span></span>\r\n                <TextField \r\n                    value={decNameFrCa}\r\n                    onChange={this.changeDecNameFrCa}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <span>Name ES</span>\r\n                <TextField \r\n                    value={decNameEs}\r\n                    onChange={this.changeDecNameEs}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n\r\n                <NewGroupDialog \r\n                    isOpen={isOpen}\r\n                    hideDialog={hideDialog}\r\n                    onSave={onSave}\r\n                    isEditMode={isEditMode}\r\n                    currentGroup={newGroup}\r\n                    changeGroupSelect={this.onGroupChange}\r\n                    groupType=\"decorators\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return { \r\n        formState: form,\r\n        savedNewGroup: form.groupToCreate,\r\n        validationError: validationError.namesSection,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(changeDecoratorForm(payload)),\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(withNewGroupControl(NamesSection)));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Handlers from \"../Handlers\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport LabelWithAsterisk from \"../common/LabelWithAsterisk\";\r\nimport { getWordExportSectionErrorState } from \"../helpers\";\r\nimport { changeDecoratorForm, updateValidationError } from \"../actions\";\r\n\r\nclass WordExportSection extends React.Component {\r\n    handlers = Handlers(this.props.updateForm);\r\n    setStateProperty = this.handlers.setStateProperty;\r\n    toggleStateProperty = this.handlers.toggleStateProperty;\r\n\r\n    changeWordStyleName = this.setStateProperty(\"wordStyleName\");\r\n    changeSoftReturn = this.toggleStateProperty(\"softReturn\");\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.validationError && !getWordExportSectionErrorState(this.props.formState)) {\r\n            this.props.updateValidationError({ wordExportSection: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { wordStyleName, softReturn, validationError } = this.props;\r\n        console.log(2);\r\n\r\n        return (\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <LabelWithAsterisk>Style name in WORD</LabelWithAsterisk>\r\n                <TextField \r\n                    value={wordStyleName}\r\n                    onChange={this.changeWordStyleName}\r\n                    error={validationError && !wordStyleName}\r\n                    autoFocus={validationError && !wordStyleName}\r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />\r\n                \r\n                <span>Soft return</span>\r\n                <div>\r\n                    <Checkbox \r\n                        checked={softReturn}\r\n                        onChange={this.changeSoftReturn}\r\n                        color=\"primary\" \r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, validationError }}) => {\r\n    return { \r\n        formState: form,\r\n        wordStyleName: form.wordStyleName, \r\n        softReturn: form.softReturn,\r\n        validationError: validationError.wordExportSection,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(changeDecoratorForm(payload)),\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n    };\r\n};\r\n  \r\nexport default (connect(mapStateToProps, mapDispatchToProps)(WordExportSection));","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInputShort = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInputShort;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst BackSpaceActionInput = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"175px\",\r\n      width: \"175px\",\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default BackSpaceActionInput;","import PositioningSection from \"./PositioningSection\";\r\nexport default PositioningSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport { backSpaceActions, decoratorsList } from \"../../constants\";\r\nimport BackSpaceActionInput from \"./BackSpaceActionInput\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst PositioningSection = (props) => {\r\n    const {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithContentStyle, changeBackspaceActionWithContentStyle,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_positioning\">\r\n            <span id=\"r1c1\">Identational level</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={indentationalLevel}\r\n                    onChange={changeIndentationalLevel}\r\n                    id=\"r1c2\" \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n            <div id=\"r2\" className=\"sectionTitle\">\r\n                <span>BACKSPACE</span>\r\n            </div>\r\n\r\n            <span id=\"r3c1\">At the beginning of a section with content</span>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <div>\r\n                    <NativeSelect \r\n                        value={backspaceActionWithContent}\r\n                        onChange={changeBackspaceActionWithContent}\r\n                        id=\"r3c2\" \r\n                        input={ <BackSpaceActionInput /> }\r\n                    >\r\n                        {backSpaceActions.map(action => (\r\n                            <option value={action.key} key={`backSpace ${action.key}`}>{action.value}</option>\r\n                        ))}\r\n                    </NativeSelect>\r\n                </div>\r\n                {   backspaceActionWithContent === \"apply_other_pd\" && (\r\n                    <NativeSelect\r\n                        value={backspaceActionWithContentStyle}\r\n                        onChange={changeBackspaceActionWithContentStyle}\r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        <option value=\"default\">Global Fallback Style</option>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                ) }\r\n            </div>\r\n\r\n            <div id=\"r4\" className=\"sectionTitle\">\r\n                <span>RETURN</span>\r\n            </div>\r\n\r\n            <span id=\"r5c1\">Style of next section</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={returnActionNextSection}\r\n                    onChange={changeReturnActionNextSection}\r\n                    id=\"r5c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"default\">Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n\r\n            <span id=\"r6c1\">In empty section change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect \r\n                    value={returnActionEmptySection}\r\n                    onChange={changeReturnActionEmptySection}\r\n                    id=\"r6c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    <option value=\"default\">Global Fallback Style</option>\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <div id=\"r7\" className=\"sectionTitle\">\r\n                <span>TAB / SHIFT+TAB</span>\r\n            </div>\r\n\r\n            <span id=\"r8c1\">TAB – change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={tabAction}\r\n                    onChange={changeTabAction}\r\n                    id=\"r8c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n\r\n            <span id=\"r9c1\">SHIFT+TAB – change current style to</span>\r\n            <div className=\"positioning-styleInputBox\">\r\n                <NativeSelect\r\n                    value={shiftTabAction}\r\n                    onChange={changeShiftTabAction} \r\n                    id=\"r9c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PositioningSection;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst ListPreview = (props) => {\r\n    const { \r\n        listPreviewStyle, \r\n        listChars, \r\n        prefix, \r\n        suffix, \r\n        suffixDistance, \r\n        sideNumberStyle,\r\n    } = props;\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n    const listItemsBeginnings = listChars.map(listChar => {\r\n        return (`${prefix}${listChar}${suffix}`);\r\n    });\r\n    const listItemBeginingStyle = {\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n        ...sideNumberStyle,\r\n    };\r\n\r\n    return (\r\n        <div className=\"preview preview_list\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div className=\"preview-content\">\r\n                <div className={demonstrationElementClassName}>\r\n                    <div\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        style={listPreviewStyle}\r\n                    >\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[0]}`}</span><span>The first list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[1]}`}</span><span>The second list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[2]}`}</span><span>The third list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[3]}`}</span><span>The fourth list item</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListPreview;","import ColorField from \"./ColorField\";\r\nexport default ColorField;","import React from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport { getCorrectColor, selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ColorField extends React.Component {\r\n    state = {\r\n        isOpen: this.props.isOpen,\r\n    };\r\n\r\n    hideColorPicker = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    showColorPicker = () => {\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    colorPickerHandler = changeColor => ({ hex }) => {\r\n        changeColor(null, hex);\r\n    };\r\n\r\n    render() {\r\n        const { colorCode, changeColorCode, defaultColorCode, required, bottomAligned } = this.props;\r\n        const { showColorPicker, hideColorPicker, colorPickerHandler } = this;\r\n        const correctColor = getCorrectColor(colorCode);\r\n        const colorError = correctColor !== colorCode;\r\n        const inputError = colorError && (required || !!colorCode);\r\n        const pickerColor = colorError ? \"\" : `#${correctColor}`;\r\n        const colorSampleStyle = {\r\n            backgroundColor: `#${correctColor}`,\r\n        };\r\n        const colorPickerClassName = `colorPicker${ bottomAligned ? \" colorPicker_bottomAligned\" : \"\"}`;\r\n\r\n        return (\r\n            <div className=\"colorField\">\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    className=\"numberInput\" \r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                    }}\r\n                    value={colorCode}\r\n                    onChange={changeColorCode}\r\n                    onClick={e => { \r\n                        selectAllOnClick(defaultColorCode || \"000\")(e); \r\n                        // this.showColorPicker(); \r\n                    }}\r\n                    error={inputError}\r\n                />\r\n                <div\r\n                    onClick={showColorPicker}\r\n                    className=\"colorSample\" \r\n                    style={colorSampleStyle}\r\n                />\r\n                {this.state.isOpen && (\r\n                    <div className={colorPickerClassName}>\r\n                        <div className=\"colorPicker-chromeBox\">\r\n                            <ChromePicker\r\n                                onChangeComplete={colorPickerHandler(changeColorCode)}\r\n                                color={pickerColor}\r\n                                disableAlpha\r\n                            />\r\n                        </div>\r\n                        <div className=\"colorPicker-popOver\"  onClick={hideColorPicker}></div>\r\n                    </div>\r\n                ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorField;","import FontSelectFields from \"./FontSelectFields\";\r\nexport default FontSelectFields;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport CustomInput from \"../CustomInput\";\r\nimport { fontSet, DEFAULT_FONT } from \"../../constants\";\r\nimport { isFontAvailable } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass FontSelectFields extends React.Component {\r\n    textInput = React.createRef();\r\n\r\n    focusTextInput = () => {\r\n        this.textInput.current.focus();\r\n    };\r\n\r\n    onFontChange = e => {\r\n        this.props.changeFont(e);\r\n        if (e.target.value === \"custom\") {\r\n            this.focusTextInput();\r\n            if (typeof this.props.extraFunction === \"function\") {\r\n                setTimeout(this.props.extraFunction, 500);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { font, customFont, changeCustomFont } = this.props;\r\n        const availableFonts = fontSet.filter(fontName => fontName === font || isFontAvailable(fontName));\r\n        const customFontFieldState = font === \"custom\" ? \"customFontField_shown\" : \"customFontField_hidden\";\r\n        return (\r\n            <>\r\n                <span >Font</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={font}\r\n                    onChange={this.onFontChange}\r\n                >\r\n                    <option value={DEFAULT_FONT}>Helvetica</option>\r\n                    { availableFonts.map(fontName => <option value={fontName} key={fontName}>{fontName}</option>) }\r\n                    <option value=\"custom\" className=\"highlightedOption\">Custom</option>\r\n                </NativeSelect>\r\n    \r\n                <div className={`customFontField ${customFontFieldState}`}>\r\n                    <span></span>\r\n                </div>\r\n                <div className={`customFontField ${customFontFieldState}`}>\r\n                    <TextField \r\n                        value={customFont}\r\n                        onChange={changeCustomFont}\r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        placeholder=\"Enter the font name\"\r\n                        inputRef={this.textInput}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FontSelectFields;","import ListSection from \"./ListSection\";\r\nexport default ListSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport ListPreview from \"../../common/Preview/ListPreview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport LabelWithAsterisk from \"../../common/LabelWithAsterisk\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport { listStyleTypes, bulletNamesMap, HOLDER } from \"../../constants\"\r\nimport { selectAllOnClick, scrollToBottom, getListSectionErrorState,focusInput } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ListSection extends React.Component {\r\n    listNameInputRef = React.createRef();\r\n    unicodeCharInputRef = React.createRef();\r\n\r\n    changeAndScroll = changeFunction => e => {\r\n        changeFunction(e);\r\n        scrollToBottom(\"content-rightSide\");\r\n    };\r\n\r\n    onIsListChange = e => {\r\n        this.changeAndScroll(this.props.changeIsList)(e);\r\n        if (e.target.checked && this.props.listName === HOLDER) {\r\n            focusInput(this.listNameInputRef);\r\n        }\r\n    };\r\n\r\n    onListItemChange = e => {\r\n        this.props.changeListItem(e);\r\n        if (e.target.value === \"custom\" && !this.props.unicodeChar) {\r\n            focusInput(this.unicodeCharInputRef);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            listPreviewProps,\r\n            isList,\r\n            listName, changeListName,\r\n            orderLevel, changeOrderLevel,\r\n            prefix, changePrefix,\r\n            suffix, changeSuffix,\r\n            suffixDistance, changeSuffixDistance,\r\n            magicTabs, changeMagicTabs,\r\n            listType, changeListType, \r\n            listItem,\r\n            unicodeNumber, changeUnicodeNumber,\r\n            unicodeChar, changeUnicodeChar,\r\n            numberingStyle, changeNumberingStyle,\r\n            continueNumbering, changeContinueNumbering,\r\n            allowRestartNumbering, changeAllowRestartNumbering,\r\n            includePreviousFrom, changeIncludePreviousFrom,\r\n            sideNumber, changeSideNumber,\r\n            sideNumberFont, changeSideNumberFont,\r\n            customSideNumberFont, changeCustomSideNumberFont,\r\n            sideNumberAlignment, changeSideNumberAlignment,\r\n            sideNumberFontSize, changeSideNumberFontSize,\r\n            sideNumberFontColor, changeSideNumberFontColor,\r\n            sideNumberFillingColor, changeSideNumberFillingColor,\r\n            sideNumberWidth, changeSideNumberWidth,\r\n            sideNumberRadius, changeSideNumberRadius,\r\n            validationError: { listSection: validationError },\r\n            updateValidationError,\r\n            formState,\r\n        } = this.props;\r\n\r\n        const { changeAndScroll, onIsListChange, onListItemChange } = this;\r\n\r\n        if (validationError && !getListSectionErrorState(formState)) {\r\n            updateValidationError({ listSection: false });\r\n        }\r\n        \r\n        const mainListSettingsState = isList ? \"shown\" : \"hidden\";\r\n        const unorderedListSettingsState = (isList && listType === \"unordered\") ? \"shown\" : \"hidden\";\r\n        const orderedListSettingsState = (isList && listType === \"ordered\") ? \"shown\" : \"hidden\";\r\n        const sideNumberSettingsState = (isList && listType === \"ordered\" && sideNumber) ? \"shown\" : \"hidden\";\r\n    \r\n        return (\r\n            <>\r\n                <div className=\"dialogGrid dialogGrid_2cols\">\r\n                    <div>\r\n                        <div>\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth\">\r\n                                <div className=\"listSection-firstSpan\">\r\n                                    <span>Is it a list?</span>\r\n                                </div>\r\n                                <div>\r\n                                    <Checkbox \r\n                                        color=\"primary\" \r\n                                        checked={isList} \r\n                                        onChange={onIsListChange} \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${mainListSettingsState}`}>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth optionalSettings\">\r\n                                    <LabelWithAsterisk>List name</LabelWithAsterisk>\r\n                                    <TextField\r\n                                        value={listName}\r\n                                        onChange={changeListName} \r\n                                        error={validationError && !listName}\r\n                                        inputRef={this.listNameInputRef}\r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                    />\r\n    \r\n                                    <span>Order level</span>\r\n                                    <div>\r\n                                        <NativeSelect\r\n                                            value={orderLevel}\r\n                                            onChange={changeOrderLevel}\r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            <option value=\"\">...</option>\r\n                                            <option value=\"0\">0</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                        </NativeSelect>\r\n                                    </div>\r\n    \r\n                                    <span>Prefix</span>\r\n                                    <TextField\r\n                                        value={prefix}\r\n                                        onChange={changePrefix} \r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                    />\r\n    \r\n                                    <span>Suffix</span>\r\n                                    <TextField\r\n                                        value={suffix}\r\n                                        onChange={changeSuffix} \r\n                                        variant=\"outlined\" \r\n                                        margin=\"dense\" \r\n                                        onClick={selectAllOnClick(\".\")}\r\n                                    />\r\n    \r\n                                    <span>Suffix distance</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <NativeSelect\r\n                                            value={suffixDistance}\r\n                                            onChange={changeSuffixDistance} \r\n                                            input={ <CustomInputShort /> }\r\n                                        >\r\n                                            <option value=\"0.25\">0.25</option>\r\n                                            <option value=\"0.5\">0.5</option>\r\n                                            <option value=\"0.75\">0.75</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"1.25\">1.25</option>\r\n                                            <option value=\"1.5\">1.5</option>\r\n                                            <option value=\"1.75\">1.75</option>\r\n                                            <option value=\"2\">2</option>\r\n                                        </NativeSelect>\r\n                                        <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                                    </div>\r\n    \r\n                                    <span>Magic Tabs</span>\r\n                                    <div>\r\n                                        <Checkbox \r\n                                            color=\"primary\" \r\n                                            checked={magicTabs} \r\n                                            onChange={changeMagicTabs} \r\n                                        />\r\n                                    </div>\r\n    \r\n                                    <span>Type of list</span>\r\n                                    <div>\r\n                                        <NativeSelect \r\n                                            value={listType} \r\n                                            onChange={changeAndScroll(changeListType)} \r\n                                            input={ <CustomInput /> }\r\n                                        >\r\n                                            <option value={\"unordered\"}>Unordered</option>\r\n                                            <option value={\"ordered\"}>Ordered</option>\r\n                                        </NativeSelect>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`optionalSettings optionalSettings_${orderedListSettingsState}`}>\r\n                            <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                                <span>Numbering style</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={numberingStyle}\r\n                                        onChange={changeNumberingStyle}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        {listStyleTypes.map(style => (\r\n                                            <option value={style.value} key={style.value}>{style.name}</option>\r\n                                        ))}                                    \r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Continue numbering after interruption</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={continueNumbering}\r\n                                        onChange={changeContinueNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Allow restart numbering</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={allowRestartNumbering} \r\n                                        onChange={changeAllowRestartNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Include previous levels from</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={includePreviousFrom} \r\n                                        onChange={changeIncludePreviousFrom}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        <option value=\"\">...</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Side number</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={sideNumber}\r\n                                        onChange={changeAndScroll(changeSideNumber)}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                            </div> \r\n    \r\n                            <div className={`optionalSettings optionalSettings_main optionalSettings_${sideNumberSettingsState}`}>\r\n                                <div className=\"fontSettingsGrid listTypeSettings\">\r\n                                    <FontSelectFields \r\n                                        font={sideNumberFont}\r\n                                        changeFont={changeSideNumberFont}\r\n                                        customFont={customSideNumberFont}\r\n                                        changeCustomFont={changeCustomSideNumberFont}\r\n                                        extraFunction={() => { scrollToBottom(\"content-rightSide\"); }}\r\n                                    />\r\n                            \r\n                                    <span>Alignment</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberAlignment}\r\n                                        onChange={changeSideNumberAlignment}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"left\"}>Left</option>\r\n                                        <option value={\"center\"}>Center</option>\r\n                                        <option value={\"right\"}>Right</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Font size</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberFontSize}\r\n                                            onChange={changeSideNumberFontSize}\r\n                                            onClick={selectAllOnClick(\"12\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>      \r\n                            \r\n                                    <span>Font color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFontColor} \r\n                                        changeColorCode={changeSideNumberFontColor}\r\n                                        defaultColorCode={\"FFF\"}\r\n                                        bottomAligned\r\n                                    />\r\n                                        \r\n                                    <span>Filling color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFillingColor} \r\n                                        changeColorCode={changeSideNumberFillingColor}\r\n                                        defaultColorCode={\"1E88E5\"}\r\n                                        bottomAligned\r\n                                    />\r\n    \r\n                                    <span>Width</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberWidth}\r\n                                            onChange={changeSideNumberWidth}\r\n                                            onClick={selectAllOnClick(\"20\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                        \r\n                                    <span>Radius</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberRadius}\r\n                                            onChange={changeSideNumberRadius}\r\n                                            onClick={selectAllOnClick(\"10\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className={`listPreviewBox optionalSettings optionalSettings_${mainListSettingsState}`}>\r\n                        <ListPreview {...listPreviewProps} />\r\n                    </div>\r\n                </div>\r\n                <div className={`optionalSettings optionalSettings_${unorderedListSettingsState}`}>\r\n                    <div className=\"dialogGrid dialogGrid_2cols listTypeSettings\">\r\n                        <div className=\"dialogGrid dialogGrid_2cols\">\r\n                            <span className=\"listSection-firstSpan\">List item</span>\r\n                            <div className=\"listItemSelect\">\r\n                                <NativeSelect \r\n                                    value={listItem} \r\n                                    onChange={onListItemChange} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    { \r\n                                        Object.entries(bulletNamesMap).map(([key, value]) => {\r\n                                            return (<option key={key} value={key}>{value}</option>) \r\n                                        })\r\n                                    }\r\n                                    <option value={\"custom\"} className=\"highlightedOption\">Custom</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </div>\r\n                        <Fade in={listItem === \"custom\"}>\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Unicode number</span>\r\n                                    <div>\r\n                                        <TextField  \r\n                                            value={unicodeNumber}\r\n                                            onChange={changeUnicodeNumber}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"unicodeInput\" \r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">u+</InputAdornment>\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Char</span>\r\n                                    <div>\r\n                                        <TextField \r\n                                            value={unicodeChar}\r\n                                            onChange={changeUnicodeChar}\r\n                                            onClick={selectAllOnClick()}\r\n                                            inputRef={this.unicodeCharInputRef}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"bulletInput\" \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                        </Fade>\r\n                    </div> \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\n\r\nconst ReferencingSection = (props) => {\r\n    const { \r\n        newGroup, \r\n        isOpen, \r\n        hideDialog, \r\n        handleClick, \r\n        onSave,\r\n        referenceGroup, changeReferenceGroup,\r\n        changeReferenceGroupToCreate,\r\n    } = props;\r\n    \r\n    const newGroupName = newGroup.nameEn;\r\n    const isEditMode = !!newGroupName;\r\n\r\n    const onXrefChange = xref => (...args) => {\r\n        const value = args[0] ? args[0].target.value : args[1];\r\n        if (xref.groupKey && xref.nameEn && value === xref.nameEn) {\r\n            changeReferenceGroupToCreate(null, xref);\r\n        } else {\r\n            changeReferenceGroupToCreate(null, \"\");\r\n        }\r\n        changeReferenceGroup(...args);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Reference group</span>\r\n            <div>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> } \r\n                    value={referenceGroup} \r\n                    onChange={onXrefChange(newGroup)} \r\n                >\r\n                    { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                    <option value=\"\">none</option>\r\n                    <option value=\"0\">Reference group 1</option>\r\n                    <option value=\"1\">Reference group 2</option>\r\n                </NativeSelect>\r\n                {\r\n                    !(isEditMode && referenceGroup !== newGroupName) &&\r\n                    <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                        { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                    </Button>\r\n                 }\r\n            </div>\r\n            <NewGroupDialog \r\n                isOpen={isOpen}\r\n                hideDialog={hideDialog}\r\n                onSave={onSave}\r\n                isEditMode={isEditMode}\r\n                currentGroup={newGroup}\r\n                changeGroupSelect={onXrefChange}\r\n                groupType=\"xref\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withNewGroupControl(ReferencingSection);","import * as React from \"react\";\r\nimport deepEqual from \"fast-deep-equal\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, q = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(q[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, q[i]))\r\n              t[q[i]] = s[q[i]];\r\n      }\r\n  return t;\r\n};\r\n\r\nfunction normalizeHtml(str) {\r\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, \" \");\r\n}\r\nfunction findLastTextNode(node) {\r\n  if (node.nodeType === Node.TEXT_NODE)\r\n      return node;\r\n  let children = node.childNodes;\r\n  for (let i = children.length - 1; i >= 0; i--) {\r\n      let textNode = findLastTextNode(children[i]);\r\n      if (textNode !== null)\r\n          return textNode;\r\n  }\r\n  return null;\r\n}\r\nfunction replaceCaret(el) {\r\n  // Place the caret at the end of the element\r\n  const target = findLastTextNode(el);\r\n  // do not move caret if element was not focused\r\n  const isTargetFocused = document.activeElement === el;\r\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\r\n      var sel = window.getSelection();\r\n      if (sel !== null) {\r\n          var range = document.createRange();\r\n          range.setStart(target, target.nodeValue.length);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n      }\r\n      if (el instanceof HTMLElement)\r\n          el.focus();\r\n  }\r\n}\r\n/**\r\n* A simple component for an html element with editable contents.\r\n*/\r\nexport default class ContentEditable extends React.Component {\r\n  constructor() {\r\n      super(...arguments);\r\n      this.lastHtml = this.props.html;\r\n      this.el = typeof this.props.innerRef === \"function\" ? { current: null } : React.createRef();\r\n      this.getEl = () => (this.props.innerRef && typeof this.props.innerRef !== \"function\" ? this.props.innerRef : this.el).current;\r\n      this.emitChange = (originalEvt) => {\r\n          const el = this.getEl();\r\n          if (!el)\r\n              return;\r\n          const html = el.innerHTML;\r\n          if (this.props.onChange && html !== this.lastHtml) {\r\n              // Clone event with Object.assign to avoid\r\n              // \"Cannot assign to read only property 'target' of object\"\r\n              const evt = Object.assign({}, originalEvt, {\r\n                  target: {\r\n                      value: html\r\n                  }\r\n              });\r\n              this.props.onChange(evt);\r\n          }\r\n          this.lastHtml = html;\r\n      };\r\n  }\r\n  render() {\r\n      const _a = this.props, { tagName, html, innerRef } = _a, props = __rest(_a, [\"tagName\", \"html\", \"innerRef\"]);\r\n      return React.createElement(tagName || \"div\", Object.assign({}, props, { ref: typeof innerRef === \"function\" ? (current) => {\r\n              innerRef(current);\r\n              this.el.current = current;\r\n          } : innerRef || this.el, onInput: this.emitChange, onBlur: this.props.onBlur || this.emitChange, onKeyUp: this.props.onKeyUp || this.emitChange, onKeyDown: this.props.onKeyDown || this.emitChange, contentEditable: !this.props.disabled, dangerouslySetInnerHTML: { __html: html } }), this.props.children);\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n      const { props } = this;\r\n      const el = this.getEl();\r\n      // We need not rerender if the change of props simply reflects the user's edits.\r\n      // Rerendering in this case would make the cursor/caret jump\r\n      // Rerender if there is no element yet... (somehow?)\r\n      if (!el)\r\n          return true;\r\n      // ...or if html really changed... (programmatically, not by user edit)\r\n      if (normalizeHtml(nextProps.html) !== normalizeHtml(el.innerHTML)) {\r\n          return true;\r\n      }\r\n      // Handle additional properties\r\n      return props.disabled !== nextProps.disabled ||\r\n          props.tagName !== nextProps.tagName ||\r\n          props.className !== nextProps.className ||\r\n          props.innerRef !== nextProps.innerRef ||\r\n          !deepEqual(props.style, nextProps.style);\r\n  }\r\n  componentDidUpdate() {\r\n      const el = this.getEl();\r\n      if (!el)\r\n          return;\r\n      // Perhaps React (whose VDOM gets outdated because we often prevent\r\n      // rerendering) did not update the DOM. So we update it manually now.(?!(?:<br \\/>|<br>|<br\\/>)$)<(.*?)>\r\n      if (this.props.html !== el.innerHTML) {\r\n          el.innerHTML = this.lastHtml = this.props.html;\r\n      }\r\n      replaceCaret(el);\r\n  }\r\n}\r\nContentEditable.propTypes = {\r\n  html: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  tagName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n  ])\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport ContentEditable from \"../ContentEditable\";\r\nimport { getOffset, selectAllEditableContent } from \"../../helpers\"\r\n\r\nconst Preview = ({previewText, changePreviewText, previewStyle}) => {\r\n    const { verticalAlign, fontSize } = previewStyle;\r\n\r\n    const editableContentStyle = {\r\n        ...previewStyle, \r\n        outline: \"none\",\r\n        marginTop: `${parseFloat(previewStyle.marginTop) + getOffset(verticalAlign, fontSize)}pt`,\r\n        marginBottom: `${parseFloat(previewStyle.marginBottom) - getOffset(verticalAlign, fontSize)}pt`,\r\n    };\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n\r\n    return (\r\n        <div className=\"preview\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div \r\n                className=\"preview-content preview-content_withPointer\" \r\n                onClick={selectAllEditableContent(demonstrationElementClassName)}\r\n            >\r\n                <div className={demonstrationElementClassName}>\r\n                    <ContentEditable\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        onChange={changePreviewText} \r\n                        html={previewText}\r\n                        style={editableContentStyle}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preview;","import Preview from \"./Preview.js\";\r\nexport default Preview;","import TypographySection from \"./TypographySection\";\r\nexport default TypographySection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport Preview from \"../../common/Preview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport FontSelectFields from \"../../common/FontSelectFields\";\r\nimport { selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst TypographySection = (props) => {\r\n    const { \r\n        previewProps,\r\n        font, changeFont,\r\n        customFont, changeCustomFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"fontSettingsGrid\">\r\n                <FontSelectFields { ...{ font, changeFont, customFont, changeCustomFont }} />\r\n                \r\n                <span>Alignment</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={alignment}\r\n                    onChange={changeAlignment}\r\n                >\r\n                    <option value={\"left\"}>Left</option>\r\n                    <option value={\"center\"}>Center</option>\r\n                    <option value={\"right\"}>Right</option>\r\n                    <option value={\"justify\"}>Justified</option>\r\n                </NativeSelect>\r\n\r\n                <span>Font size</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={fontSize}\r\n                        onChange={changeFontSize}\r\n                        onClick={selectAllOnClick(\"12\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>      \r\n\r\n                <span>Font color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                    value={fontColorName}\r\n                    onChange={changeFontColorName}\r\n                    onClick={selectAllOnClick(\"Black\")}\r\n                />\r\n\r\n                <span>Font color HEX</span>\r\n                <ColorField \r\n                    colorCode={fontColor} \r\n                    changeColorCode={changeFontColor}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_indented\">\r\n            <span>Stylings</span>\r\n            <div className=\"checkBoxesSet\">\r\n                <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Bold\"\r\n                        labelPlacement=\"end\"\r\n                        checked={bold}\r\n                        onChange={changeBold}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Italic\"\r\n                        labelPlacement=\"end\"\r\n                        checked={italic}\r\n                        onChange={changeItalic}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Underlined\"\r\n                        labelPlacement=\"end\"\r\n                        checked={underlined}\r\n                        onChange={changeUnderlined}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_stroke\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Stroke\"\r\n                        labelPlacement=\"end\"\r\n                        checked={stroke}\r\n                        onChange={changeStroke}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <span>Text transform</span>\r\n            <RadioGroup \r\n                value={textTransform} \r\n                onChange={changeTextTransform} \r\n                row\r\n            >\r\n                <div className=\"labeledCheckbox labeledCheckbox_topIndented\">\r\n                    <FormControlLabel\r\n                        value=\"none\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"None\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_uppercase\">\r\n                    <FormControlLabel\r\n                        value=\"uppercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Uppercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_lowercase\">\r\n                    <FormControlLabel\r\n                        value=\"lowercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Lowercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_smallCaps\">\r\n                    <FormControlLabel\r\n                        value=\"small-caps\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Small caps\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n            </RadioGroup>\r\n\r\n            <span>Sub/Superscript</span>\r\n            <div>\r\n                <NativeSelect \r\n                value={verticalAlign} \r\n                onChange={changeVerticalAlign}\r\n                    input={ <CustomInput /> } \r\n                >\r\n                    <option value=\"baseline\">None</option>\r\n                    <option value=\"sub\">Subscript</option>\r\n                    <option value=\"super\">Superscript</option>\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport Preview from \"../common/Preview\";\r\nimport { selectAllOnClick } from \"../helpers\";\r\n\r\nconst DistancesSection = (props) => {\r\n    const {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    } = props;\r\n    \r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Margin top</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginTop}\r\n                        onChange={changeMarginTop}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>Margin bottom</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginBottom}\r\n                        onChange={changeMarginBottom}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>1st row indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={firstRowIndent}\r\n                        onChange={changeFirstRowIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Other rows indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={otherRowsIndent}\r\n                        onChange={changeOtherRowsIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Line spacing</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        input={ <CustomInputShort /> } \r\n                        value={lineSpacing} \r\n                        onChange={changeLineSpacing} \r\n                    >\r\n                        <option value=\"1.0\">1.0</option>\r\n                        <option className=\"highlightedOption\" value=\"1.15\">1.15</option>\r\n                        <option value=\"1.5\">1.5</option>\r\n                        <option value=\"2.0\">2.0</option>\r\n                        <option value=\"2.5\">2.5</option>\r\n                        <option value=\"3.0\">3.0</option>\r\n                        <option value=\"custom\">Custom</option>\r\n                    </NativeSelect> \r\n                    {\r\n                    lineSpacing === \"custom\" && \r\n                    (\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={customLineSpacing}\r\n                            onChange={changeCustomLineSpacing}\r\n                        />                                            \r\n                    )\r\n                }\r\n                </div>\r\n                   \r\n                    \r\n                <span>Word spacing</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={wordSpacing}\r\n                        onChange={changeWordSpacing}\r\n                        onClick={selectAllOnClick(\"0\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistancesSection;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\n\r\nconst FrameTypeInput = withStyles(theme => ({\r\n    root: {\r\n      width: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      fontFamily: [\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n    },\r\n  }))(CustomInputShort);\r\n  \r\n  export default FrameTypeInput;","import FramesSection from \"./FramesSection\";\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport FrameTypeInput from \"../../sections/FramesSection/FrameTypeInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport { getCorrectColor, selectAllOnClick } from \"../../helpers\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst FramesSection = (props) => {\r\n    const { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n     } = props;\r\n\r\n     const correctColor = getCorrectColor(borderColor);\r\n     const previewBorderWidth = borderThickness && !isNaN(parseFloat(borderThickness))\r\n                                ? `${borderThickness <= 15 ? borderThickness : 15}pt`\r\n                                : \"0\";\r\n\r\n     const previewStyle = {\r\n         borderLeft: leftBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginLeft: leftBorder ? \"0\" : previewBorderWidth, \r\n         borderRight: rightBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginRight: rightBorder ? \"0\" : previewBorderWidth, \r\n         borderTop: topBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginTop: topBorder ? \"0\" : previewBorderWidth, \r\n         borderBottom: bottomBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginBottom: bottomBorder ? \"0\" : previewBorderWidth, \r\n     };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"directionControlsContainer\">\r\n                <div className=\"directionsControls\" style={previewStyle}>\r\n                    <span className=\"directionLabel\">Left</span>\r\n                    <div className=\"centralColumn\">\r\n                        <span className=\"directionLabel\">Top</span>\r\n                        <div className=\"checkboxesKit crossGrid\">\r\n                            <div id=\"r1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={topBorder}  \r\n                                    onChange={changeTopBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={leftBorder}  \r\n                                    onChange={changeLeftBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c2\" className=\"gridCell\">\r\n                            </div>\r\n                            <div id=\"r2c3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={rightBorder}  \r\n                                    onChange={changeRightBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={bottomBorder}  \r\n                                    onChange={changeBottomBorder}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"directionLabel\">Bottom</span>\r\n                    </div>\r\n                    <span className=\"directionLabel\">Right</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <span>Frame color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    value={borderColorName}\r\n                    onChange={changeBorderColorName}\r\n                    onClick={selectAllOnClick(\"Red\")}\r\n                />\r\n\r\n                <span>Frame color HEX</span>\r\n                <ColorField \r\n                    colorCode={borderColor} \r\n                    changeColorCode={changeBorderColor}\r\n                    required\r\n                />\r\n\r\n                <span>Frame thickness</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={borderThickness}\r\n                        onChange={changeBorderThickness}\r\n                        onClick={selectAllOnClick(\"2\")}\r\n                     />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>                        \r\n\r\n                <span>Type of frame</span>\r\n                <div >\r\n                    <Select\r\n                      input={<FrameTypeInput />}\r\n                      value={borderType}\r\n                      onChange={changeBorderType}\r\n                    >\r\n                        <MenuItem value=\"solid\"><b>━━━━</b></MenuItem>\r\n                        <MenuItem value=\"dotted\">• • • • • • •</MenuItem>\r\n                        <MenuItem value=\"dashed\"><b>– – – – –</b></MenuItem>\r\n                        <MenuItem value=\"double\">══════</MenuItem>              \r\n                    </Select>\r\n                </div>\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox color=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport Preview from \"../common/Preview\";\r\nimport ColorField from \"../common/ColorField\";\r\n\r\nconst  FillingSection = (props) => {\r\n    const { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n     } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Filling color name</span>\r\n                <div>\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        className=\"mediumTextField\" \r\n                        value={fillingColorName}\r\n                        onChange={changeFillingColorName}\r\n                    />\r\n                </div>\r\n\r\n                <span>Filling color HEX</span>\r\n                <ColorField \r\n                    colorCode={fillingColor} \r\n                    changeColorCode={changeFillingColor}\r\n                />\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox \r\n                        color=\"primary\" \r\n                        checked={connectToPrevious} \r\n                        onChange={changeConnectToPrevious} \r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FillingSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\n\r\nconst TocSection = ({ tocIndentation, changeTocIndentation }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>ToC indentation</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={tocIndentation}\r\n                    onChange={changeTocIndentation} \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>                    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TocSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst ShortCutSection = (props) => {\r\n    const {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Windows</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutWinView}\r\n                    onKeyDown={changeShortCutWin} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n\r\n            <span>Mac</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutMacView}\r\n                    onKeyDown={changeShortCutMac} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />     \r\n            </div>          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShortCutSection;","import React from \"react\";\r\n\r\nconst TypographySection = () => {\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: pink,\r\n    },\r\n});\r\n\r\nexport default theme;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomTab;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomErrorTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n      textDecoration: \"red underline\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n        textDecoration: \"indianred underline\",\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomErrorTab;","import Tabs from \"@material-ui/core/Tabs\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTabs = withStyles(theme => ({\r\n    indicator: {\r\n        backgroundColor: \"#1890ff\",\r\n        opacity: 0.5,\r\n        width: \"190px\",\r\n        zIndex: 5,\r\n        display: \"none\",\r\n      }\r\n  }))(Tabs);\r\n\r\n  export default CustomTabs;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst CustomDialog = withStyles(theme => ({\r\n    root: {\r\n        minWidth: \"1250px\",\r\n        minHeight: \"1100px !important\",\r\n        height: \"100%\",\r\n    },\r\n    container: {\r\n        height: \"100vh\",\r\n        display: \"block\",\r\n    },\r\n    scrollBody: {\r\n        \"&:after\": {\r\n            height: \"100%\",\r\n        }\r\n    },\r\n    paperFullWidth: {\r\n        maxWidth: \"1280px\",\r\n        maxHeight: \"850px\",\r\n        minHeight: \"550px\",\r\n        width: \"calc(100% - 96px)\",\r\n        height: \"calc(100% - 96px)\",\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        border: \"none\",\r\n    },\r\n    paperScrollBody: {\r\n        verticalAlign: \"middle\",\r\n    },\r\n  }))(Dialog);\r\n  \r\n  export default CustomDialog;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport NamesSection from \"./sections/NamesSection\";\r\nimport WordExportSection from \"./sections/WordExportSection\";\r\nimport PositioningSection from \"./sections/PositioningSection\";\r\nimport ListSection from \"./sections/ListSection\";\r\nimport ReferencingSection from \"./sections/ReferencingSection\";\r\nimport TypographySection from \"./sections/TypographySection\";\r\nimport DistancesSection from \"./sections/DistancesSection\";\r\nimport FramesSection from \"./sections/FramesSection\";\r\nimport FillingSection from \"./sections/FillingSection\";\r\nimport TocSection from \"./sections/TocSection\";\r\nimport ShortCutsSection from \"./sections/ShortCutsSection\";\r\nimport TestSection from \"./sections/TestSection\";\r\n\r\nimport theme from \"./theme\";\r\nimport Handlers from \"./Handlers\";\r\nimport CustomTab from \"./common/CustomTab\";\r\nimport CustomErrorTab from \"./common/CustomErrorTab\";\r\nimport CustomTabs from \"./common/CustomTabs\";\r\nimport CustomDialog from \"./common/CustomDialog\";\r\nimport { alignmentsMap, HOLDER } from \"./constants\";\r\n\r\nimport { \r\n    fillMissedFields, \r\n    DecDataParser, \r\n    getTabsErrorState,\r\n    getCorrectColor, \r\n    getUnstyledText, \r\n    unicodeNumberToChar, \r\n    unicodeCharToNumber, \r\n    getListChars, \r\n    getTabNumberToSwitch,\r\n    getPreviewFont,\r\n} from \"./helpers\";\r\n\r\nimport {\r\n    changeDecoratorForm, \r\n    clearDecoratorForm, \r\n    switchDecDialogTab, \r\n    updateValidationError, \r\n} from \"./actions\";\r\n\r\nimport { saveDecoratorForm } from \"../../actions\"\r\n\r\nimport \"./style.css\";\r\n\r\nconst NewDecDialog = props => {\r\n    const { \r\n        isOpen, \r\n        closeDialog, \r\n        clearForm, \r\n        saveForm,\r\n        updateForm, \r\n        formState, \r\n        openedTab,\r\n        validationError, \r\n        isEditMode,\r\n        switchTab,\r\n        updateValidationError,\r\n    } = props;\r\n\r\n    const onClose = () => {\r\n        closeDialog();\r\n        clearForm();\r\n    };\r\n\r\n    const onSaveButtonClick = () => {\r\n        const tabsErrorState = getTabsErrorState(formState)\r\n        if (tabsErrorState) {\r\n            updateValidationError(tabsErrorState);\r\n            switchTab(getTabNumberToSwitch(tabsErrorState));\r\n        } else {\r\n            const formToSave = DecDataParser.parseToSend(fillMissedFields(formState));\r\n            saveForm(formToSave);\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    const { \r\n        setStateProperty, \r\n        toggleStateProperty, \r\n        setNumber, \r\n        setColor, \r\n        setBullet, \r\n        setShortCut \r\n    } = Handlers(updateForm, formState);\r\n\r\n    const { \r\n        previewText,\r\n        indentationalLevel,\r\n        backspaceActionWithContent,\r\n        backspaceActionWithContentStyle,\r\n        backspaceActionWithoutContent,\r\n        backspaceActionWithoutContentStyle,\r\n        returnActionNextSection,\r\n        returnActionEmptySection,\r\n        tabAction,\r\n        shiftTabAction,\r\n        isList,\r\n        listName,\r\n        orderLevel,\r\n        prefix,\r\n        suffix,\r\n        suffixDistance,\r\n        magicTabs,\r\n        listType,\r\n        listItem,\r\n        unicodeNumber,\r\n        unicodeChar,\r\n        numberingStyle,\r\n        continueNumbering,\r\n        allowRestartNumbering,\r\n        includePreviousFrom,\r\n        sideNumber,\r\n        sideNumberFont,\r\n        customSideNumberFont,\r\n        sideNumberAlignment,\r\n        sideNumberFontSize,\r\n        sideNumberFontColor,\r\n        sideNumberFillingColor,\r\n        sideNumberWidth,\r\n        sideNumberRadius,\r\n        referenceGroup,\r\n        referenceGroupToCreate,\r\n        font,\r\n        customFont,\r\n        alignment,\r\n        fontSize,\r\n        fontColorName,\r\n        fontColor,\r\n        bold,\r\n        italic,\r\n        underlined,\r\n        stroke,\r\n        textTransform,\r\n        verticalAlign,\r\n        marginTop,\r\n        marginBottom,\r\n        firstRowIndent,\r\n        otherRowsIndent,\r\n        lineSpacing,\r\n        customLineSpacing,\r\n        wordSpacing,   \r\n        leftBorder,\r\n        rightBorder,\r\n        topBorder,\r\n        bottomBorder,\r\n        borderColorName,\r\n        borderColor,\r\n        borderThickness,\r\n        borderType,\r\n        fillingColorName,\r\n        fillingColor,\r\n        connectToPrevious,\r\n        tocIndentation,\r\n        shortCutWinView,\r\n        shortCutMacView,\r\n    } = formState;\r\n    console.log(0);\r\n\r\n    const changeIndentationalLevel = setStateProperty(\"indentationalLevel\")\r\n    const changeBackspaceActionWithContent = setStateProperty(\"backspaceActionWithContent\");\r\n    const changeBackspaceActionWithContentStyle = setStateProperty(\"backspaceActionWithContentStyle\");\r\n    const changeBackspaceActionWithoutContent = setStateProperty(\"backspaceActionWithoutContent\");\r\n    const changeBackspaceActionWithoutContentStyle = setStateProperty(\"backspaceActionWithoutContentStyle\");\r\n    const changeReturnActionNextSection = setStateProperty(\"returnActionNextSection\");\r\n    const changeReturnActionEmptySection = setStateProperty(\"returnActionEmptySectionStyle\")\r\n    const changeTabAction = setStateProperty(\"tabAction\");\r\n    const changeShiftTabAction = setStateProperty(\"shiftTabAction\");\r\n    const changeListName = setStateProperty(\"listName\");\r\n    const changeOrderLevel = setStateProperty(\"orderLevel\");\r\n    const changePrefix = setStateProperty(\"prefix\");\r\n    const changeSuffix = setStateProperty(\"suffix\");\r\n    const changeSuffixDistance = setStateProperty(\"suffixDistance\");\r\n    const changeMagicTabs = toggleStateProperty(\"magicTabs\");\r\n    const changeListItem = setStateProperty(\"listItem\");\r\n    const changeNumberingStyle = setStateProperty(\"numberingStyle\");\r\n    const changeContinueNumbering = toggleStateProperty(\"continueNumbering\");\r\n    const changeAllowRestartNumbering = toggleStateProperty(\"allowRestartNumbering\");\r\n    const changeIncludePreviousFrom = setStateProperty(\"includePreviousFrom\");\r\n    const changeSideNumberFont = setStateProperty(\"sideNumberFont\");\r\n    const changeCustomSideNumberFont = setStateProperty(\"customSideNumberFont\");\r\n    const changeSideNumberAlignment = setStateProperty(\"sideNumberAlignment\");\r\n    const changeSideNumberFontSize = setNumber(\"sideNumberFontSize\");\r\n    const changeSideNumberFontColor = setColor(\"sideNumberFontColor\");\r\n    const changeSideNumberFillingColor = setColor(\"sideNumberFillingColor\");\r\n    const changeSideNumberWidth = setNumber(\"sideNumberWidth\");\r\n    const changeSideNumberRadius = setNumber(\"sideNumberRadius\");\r\n    const changeReferenceGroup = setStateProperty(\"referenceGroup\");\r\n    const changeReferenceGroupToCreate = setStateProperty(\"referenceGroupToCreate\");\r\n    const changeFont = setStateProperty(\"font\");\r\n    const changeCustomFont = setStateProperty(\"customFont\");\r\n    const changeAlignment = setStateProperty(\"alignment\");\r\n    const changeFontSize = setNumber(\"fontSize\");\r\n    const changeFontColorName = setStateProperty(\"fontColorName\");\r\n    const changeFontColor = setColor(\"fontColor\");\r\n    const changeBold = toggleStateProperty(\"bold\");\r\n    const changeItalic = toggleStateProperty(\"italic\");\r\n    const changeUnderlined = toggleStateProperty(\"underlined\");\r\n    const changeStroke = toggleStateProperty(\"stroke\");\r\n    const changeTextTransform = setStateProperty(\"textTransform\");\r\n    const changeVerticalAlign = setStateProperty(\"verticalAlign\");\r\n    const changeMarginTop = setNumber(\"marginTop\");\r\n    const changeMarginBottom = setNumber(\"marginBottom\");\r\n    const changeFirstRowIndent = setNumber(\"firstRowIndent\");\r\n    const changeOtherRowsIndent = setNumber(\"otherRowsIndent\");\r\n    const changeLineSpacing = setStateProperty(\"lineSpacing\");\r\n    const changeCustomLineSpacing = setNumber(\"customLineSpacing\");\r\n    const changeWordSpacing = setNumber(\"wordSpacing\");\r\n    const changeLeftBorder = toggleStateProperty(\"leftBorder\");\r\n    const changeRightBorder = toggleStateProperty(\"rightBorder\");\r\n    const changeTopBorder = toggleStateProperty(\"topBorder\");\r\n    const changeBottomBorder = toggleStateProperty(\"bottomBorder\");\r\n    const changeBorderColorName = setStateProperty(\"borderColorName\");\r\n    const changeBorderColor = setColor(\"borderColor\");\r\n    const changeBorderThickness = setNumber(\"borderThickness\");\r\n    const changeFillingColorName = setStateProperty(\"fillingColorName\");\r\n    const changeFillingColor = setColor(\"fillingColor\");\r\n    const changeConnectToPrevious = toggleStateProperty(\"connectToPrevious\");\r\n    const changeTocIndentation = setStateProperty(\"tocIndentation\");\r\n    const changeShortCutWin = setShortCut(\"shortCutWin\", \"shortCutWinView\");\r\n    const changeShortCutMac = setShortCut(\"shortCutMac\", \"shortCutMacView\", true);\r\n\r\n    const changePreviewText = e => {\r\n        const { value } = e.target;\r\n        if (value && value !== \"<div></div>\" && value !== \"<br>\") {\r\n            setStateProperty(\"previewText\")(null, getUnstyledText(value));\r\n        } else {\r\n            setStateProperty(\"previewText\")(null, `<div><br></div>`);\r\n        }\r\n    };\r\n\r\n    const changeIsList = e => {\r\n        if (e.target.checked) {\r\n            if (listName === HOLDER) {\r\n                changeListName(null, \"\");\r\n            }\r\n        } else if (listName === \"\"){\r\n            setTimeout(() => changeListName(null, HOLDER), 200);\r\n        }\r\n        toggleStateProperty(\"isList\")(e);\r\n    };\r\n\r\n    const changeListType = e => {\r\n        const { value } = e.target;\r\n        setStateProperty(\"listType\")(null, value);\r\n        if (value === \"ordered\" && suffix === \"\") {\r\n            setStateProperty(\"suffix\")(null, \".\");\r\n        } else if (value === \"unordered\" && suffix === \".\") {\r\n            setStateProperty(\"suffix\")(null, \"\");\r\n        }\r\n    };\r\n\r\n    const changeUnicodeNumber = e => {\r\n        const newUnicodeNumber = setColor(\"unicodeNumber\")(e);\r\n        const newUnicodeChar = newUnicodeNumber !== \"\" ? unicodeNumberToChar(newUnicodeNumber) : \"\";\r\n        setStateProperty(\"unicodeChar\")(null, newUnicodeChar);\r\n    };\r\n    \r\n    const changeUnicodeChar = e => {\r\n        const newUnicodeChar = setBullet(\"unicodeChar\")(e);\r\n        const newUnicodeNumber = newUnicodeChar !== \"\" ? unicodeCharToNumber(newUnicodeChar) : \"\";\r\n        setStateProperty(\"unicodeNumber\")(null, newUnicodeNumber);\r\n    };\r\n\r\n    const changeSideNumber = e => {\r\n        toggleStateProperty(\"sideNumber\")(e);\r\n        if (e.target.checked && suffix === \".\") {\r\n            setStateProperty(\"suffix\")(null, \"\");\r\n        } else if (!e.target.checked && suffix === \"\") {\r\n            setStateProperty(\"suffix\")(null, \".\");\r\n        }\r\n    };\r\n\r\n    const changeBorderType = e => {\r\n        setStateProperty(\"borderType\")(e);\r\n        if (e.target.value === \"double\" && borderThickness === \"2\") {\r\n            setStateProperty(\"borderThickness\")(null, \"3\");\r\n        }\r\n        if (e.target.value !== \"double\" && borderThickness === \"3\") {\r\n            setStateProperty(\"borderThickness\")(null, \"2\");\r\n        }\r\n    };\r\n\r\n    const previewFontColor = getCorrectColor(fontColor, \"f5f5f5\");\r\n    const previewFillingColor = getCorrectColor(fillingColor, \"f5f5f5\");\r\n    const previewAdditionalFillingColor = connectToPrevious ? previewFillingColor : \"f5f5f5\";\r\n    const indentsDifference = (firstRowIndent || 0) - (otherRowsIndent || 0);\r\n    const previewMarginLeft = otherRowsIndent ? `${otherRowsIndent >= 12 ? 12 : otherRowsIndent}cm` : 0;\r\n    const previewTextIndent = indentsDifference ? `${indentsDifference >= 12 ? 12 : indentsDifference}cm` : 0;\r\n\r\n    const previewStyle = {\r\n        fontSize: !fontSize ? \"0\" : `${fontSize <= 120 ? fontSize : 120}pt`,\r\n        color: `#${previewFontColor}`,\r\n        fontFamily: getPreviewFont(font, customFont),\r\n        alignItems: alignmentsMap[alignment],\r\n        textAlign: alignment,\r\n        fontWeight: bold ? \"bold\" : \"normal\",\r\n        fontStyle: italic ? \"italic\" : \"normal\",\r\n        textDecoration: `${underlined ? \"underline\" : \"\"}${stroke ? \" line-through\" : \"\"}`.trim() || \"none\",\r\n        verticalAlign,\r\n        textTransform: textTransform !== \"small-caps\" ? textTransform : \"none\",\r\n        fontVariant: textTransform === \"small-caps\" ? textTransform : \"normal\",\r\n        backgroundColor: `#${previewFillingColor}`,\r\n        backgroundImage:  `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        marginLeft: previewMarginLeft,\r\n        textIndent: previewTextIndent,\r\n        wordSpacing: `${wordSpacing || 0}pt`,\r\n        lineHeight: (lineSpacing !== \"custom\" ? lineSpacing : (!customLineSpacing ? \"1.15\" : `${customLineSpacing || 0}`)),\r\n        marginBottom: `${marginBottom || 0}pt`,\r\n        marginTop: `${marginTop || 0}pt`,\r\n    };\r\n\r\n    const previewProps = { previewText, changePreviewText, previewStyle };\r\n\r\n    const previewSideNumberFontColor = getCorrectColor(sideNumberFontColor, \"f5f5f5\");\r\n    const previewSideNumberFillingColor = getCorrectColor(sideNumberFillingColor, \"f5f5f5\");\r\n\r\n    const sideNumberStyle = (!sideNumber || listType === \"unordered\") ? {} : {\r\n        fontFamily: getPreviewFont(sideNumberFont, customSideNumberFont),\r\n        textAlign: sideNumberAlignment,\r\n        fontSize: !sideNumberFontSize ? \"0\" : `${sideNumberFontSize <= 120 ? sideNumberFontSize : 120}pt`,\r\n        color: `#${previewSideNumberFontColor}`,\r\n        backgroundColor: `#${previewSideNumberFillingColor}`,\r\n        minWidth: `${sideNumberWidth || 0}pt`,\r\n        borderRadius: `${sideNumberRadius || 0}pt`,\r\n    };\r\n\r\n    const listPreviewProps = { \r\n        listChars: getListChars({\r\n                isOrderedList: listType === \"ordered\", \r\n                numberingStyle, \r\n                listItem,\r\n                unicodeChar,\r\n            }),\r\n        listPreviewStyle: previewStyle,\r\n        prefix, \r\n        suffix, \r\n        suffixDistance,\r\n        sideNumberStyle,\r\n    };\r\n\r\n    const positioningSectionProps = {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithContentStyle, changeBackspaceActionWithContentStyle,\r\n        backspaceActionWithoutContent, changeBackspaceActionWithoutContent,\r\n        backspaceActionWithoutContentStyle, changeBackspaceActionWithoutContentStyle,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    };\r\n\r\n    const listSectionProps = { \r\n        listPreviewProps,\r\n        isList, changeIsList, \r\n        listName, changeListName,\r\n        orderLevel, changeOrderLevel,\r\n        prefix, changePrefix,\r\n        suffix, changeSuffix,\r\n        suffixDistance, changeSuffixDistance,\r\n        magicTabs, changeMagicTabs,\r\n        listType, changeListType, \r\n        listItem, changeListItem,\r\n        unicodeNumber, changeUnicodeNumber,\r\n        unicodeChar, changeUnicodeChar,\r\n        numberingStyle, changeNumberingStyle,\r\n        continueNumbering, changeContinueNumbering,\r\n        allowRestartNumbering, changeAllowRestartNumbering,\r\n        includePreviousFrom, changeIncludePreviousFrom,\r\n        sideNumber, changeSideNumber,\r\n        sideNumberFont, changeSideNumberFont,\r\n        customSideNumberFont, changeCustomSideNumberFont,\r\n        sideNumberAlignment, changeSideNumberAlignment,\r\n        sideNumberFontSize, changeSideNumberFontSize,\r\n        sideNumberFontColor, changeSideNumberFontColor,\r\n        sideNumberFillingColor, changeSideNumberFillingColor,\r\n        sideNumberWidth, changeSideNumberWidth,\r\n        sideNumberRadius, changeSideNumberRadius,\r\n        validationError, updateValidationError,\r\n        formState,\r\n    };\r\n\r\n    const referencingSectionProps = {\r\n        referenceGroup, changeReferenceGroup,\r\n        savedNewGroup: referenceGroupToCreate, \r\n        changeReferenceGroupToCreate,\r\n    };\r\n\r\n    const typographySectionProps = { \r\n        previewProps,\r\n        font, changeFont,\r\n        customFont, changeCustomFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    };\r\n\r\n    const distancesSectionProps = {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    };\r\n\r\n    const framesSectionProps = { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n    };\r\n\r\n    const fillingSectionProps = { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n    };\r\n\r\n    const tocSectionProps = {\r\n        tocIndentation, changeTocIndentation,\r\n    };\r\n\r\n    const shortCutsSectionProps = {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    };\r\n        \r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CustomDialog\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                scroll=\"body\"\r\n                className=\"paragraphDecorators-dialog\"\r\n                fullWidth={true}\r\n                maxWidth={false}\r\n                id=\"dialog\"\r\n            >\r\n                <div className=\"header\">\r\n                    <DialogTitle className=\"header-title\">\r\n                        <p>Create new paragraph decorator</p>\r\n                    </DialogTitle>\r\n                    <div className=\"header-buttons\">\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            onClick={onClose}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={onSaveButtonClick}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            {isEditMode ? \"Save\" : \"Create\"}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <DialogContent className=\"content\">\r\n                    <div className=\"content-leftSide\">\r\n                        <CustomTabs \r\n                            className=\"dialogTabs\"\r\n                            value={openedTab} \r\n                            onChange={(e, tabNumber) => { switchTab(tabNumber) }} \r\n                            orientation=\"vertical\"\r\n                            color=\"primary\"\r\n                            indicatorColor=\"primary\"\r\n                        >\r\n                            { validationError.namesSection \r\n                                ? ( <CustomErrorTab className=\"dialogTab\" label=\"Names\" /> )\r\n                                :  ( <CustomTab className=\"dialogTab\" label=\"Names\" /> ) }\r\n\r\n                            { validationError.wordExportSection \r\n                                ? ( <CustomErrorTab className=\"dialogTab\" label=\"WORD export\" /> ) \r\n                                : ( <CustomTab className=\"dialogTab\" label=\"WORD export\" /> ) }\r\n\r\n                            <CustomTab className=\"dialogTab\" label=\"Positioning\" />\r\n\r\n                            { validationError.listSection \r\n                                ? ( <CustomErrorTab className=\"dialogTab\" label=\"List\" /> ) \r\n                                : ( <CustomTab className=\"dialogTab\" label=\"List\" /> ) }\r\n\r\n                            <CustomTab className=\"dialogTab\" label=\"Referencing\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Typography\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Distances\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Frames\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Filling\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"ToC\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Short cuts\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Test\" />\r\n                        </CustomTabs>\r\n                    </div>\r\n                    <div className=\"content-rightSide\">\r\n                        { openedTab === 0 && <NamesSection /> }\r\n                        { openedTab === 1 && <WordExportSection /> }\r\n                        { openedTab === 2 && <PositioningSection {...positioningSectionProps} /> }\r\n                        { openedTab === 3 && <ListSection {...listSectionProps} />}\r\n                        { openedTab === 4 && <ReferencingSection {...referencingSectionProps} /> }\r\n                        { openedTab === 5 && <TypographySection {...typographySectionProps} /> }\r\n                        { openedTab === 6 && <DistancesSection {...distancesSectionProps} /> }\r\n                        { openedTab === 7 && <FramesSection {...framesSectionProps} /> }\r\n                        { openedTab === 8 && <FillingSection {...fillingSectionProps} /> }\r\n                        { openedTab === 9 && <TocSection {...tocSectionProps} /> }\r\n                        { openedTab === 10 && <ShortCutsSection {...shortCutsSectionProps} /> }\r\n                        { openedTab === 11 && <TestSection {...typographySectionProps} /> }\r\n                    </div>\r\n                </DialogContent>\r\n            </CustomDialog>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ decoratorDialog: { form, openedTab, validationError, isEditMode }}) => {\r\n    return { \r\n        formState: form,\r\n        openedTab,\r\n        validationError, \r\n        isEditMode,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(changeDecoratorForm(payload)),\r\n        clearForm: () => dispatch(clearDecoratorForm()),\r\n        switchTab: payload => dispatch(switchDecDialogTab(payload)),\r\n        updateValidationError: payload => dispatch(updateValidationError(payload)),\r\n        saveForm: payload => dispatch(saveDecoratorForm(payload)),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewDecDialog);","export const SAVE_DEC_FORM = \"SAVE_DEC_FORM\";\r\nexport const CLEAR_SAVED_DEC_FORM = \"CLEAR_SAVED_DEC_FORM\";\r\n\r\nexport const saveDecoratorForm = payload => {\r\n    return {\r\n        type: SAVE_DEC_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const clearSavedDecoratorForm = () => {\r\n    return {\r\n        type: CLEAR_SAVED_DEC_FORM,\r\n    };\r\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport NewDecDialog from \"./components/NewDecDialog\";\nimport { openDialog, closeDialog } from \"./components/NewDecDialog/actions\";\nimport { clearSavedDecoratorForm } from \"./actions\";\nimport { DecDataParser } from \"./components/NewDecDialog/helpers\";\nimport theme from \"./components/NewDecDialog/theme\";\n\nimport \"./App.css\";\n\nconst App = props => {\n    const { isOpen, openDialog, closeDialog, savedForm, clearSavedForm } = props;\n\n    const openEditDialog = () => {\n        openDialog(DecDataParser.parseToEdit(savedForm || {}));\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"App\">\n                <div className=\"startButtons\">\n                    { !savedForm ? (\n                        <Button \n                            onClick={() => openDialog()}\n                            color=\"primary\"\n                        >Create new</Button>\n                    ) : (\n                        <>\n                            <Button \n                                onClick={() => openEditDialog()}\n                            >Edit saved</Button>\n                            <Button \n                                onClick={clearSavedForm}\n                                color=\"secondary\"\n                            >Delete saved</Button>\n                        </>\n                    )}\n                </div>\n                <NewDecDialog { ...{isOpen, closeDialog}} />\n            </div>\n        </ThemeProvider>\n    );\n};\n\nconst mapStateToProps = ({ savedForm, decoratorDialog: { isOpen }}) => {\n    return { isOpen, savedForm };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        openDialog: openDialog(dispatch),\n        closeDialog: closeDialog(dispatch),\n        clearSavedForm: () => dispatch(clearSavedDecoratorForm()),\n    };\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { SHOW_DEC_DIALOG, HIDE_DEC_DIALOG } from \"../../components/NewDecDialog/actions\";\r\n\r\nconst isOpenReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case SHOW_DEC_DIALOG:\r\n            return true;\r\n        case HIDE_DEC_DIALOG:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isOpenReducer;","import { CHANGE_DEC_FORM, CLEAR_DEC_FORM } from \"../../components/NewDecDialog/actions\";\r\nimport getInitialState from \"../../components/NewDecDialog/getInitialState\";\r\n\r\nconst initialState = getInitialState();\r\n\r\nconst decoratorFormReducer = (state = initialState, action) =>  {\r\n    switch (action.type) {\r\n        case CHANGE_DEC_FORM:\r\n            return { ...state, ...action.payload };\r\n        case CLEAR_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default decoratorFormReducer;","import { sampleText, emptyDecFormState } from \"./constants\";\r\n\r\nconst getInitialState = (currentDecFormState = {}) => {\r\n    return { \r\n        previewText: sampleText,\r\n        ...emptyDecFormState,\r\n        ...currentDecFormState,\r\n    };\r\n};\r\n\r\nexport default getInitialState;","import { \r\n    UPDATE_VALIDATION_ERROR, \r\n    REMOVE_VALIDATION_ERROR, \r\n} from \"../../components/NewDecDialog/actions\";\r\n\r\nimport { tabsErrorInitialState } from \"../../components/NewDecDialog/constants\";\r\n\r\nconst validationErrorReducer = (state = tabsErrorInitialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_VALIDATION_ERROR:\r\n            return { ...state, ...action.payload };\r\n        case REMOVE_VALIDATION_ERROR:\r\n            return tabsErrorInitialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default validationErrorReducer;","import { \r\n    SWITCH_ON_DEC_DIALOG_EDIT_MODE, \r\n    SWITCH_OFF_DEC_DIALOG_EDIT_MODE, \r\n} from \"../../components/NewDecDialog/actions\";\r\n\r\nconst isEditModeReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_ON_DEC_DIALOG_EDIT_MODE:\r\n            return true;\r\n        case SWITCH_OFF_DEC_DIALOG_EDIT_MODE:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isEditModeReducer;","import { \r\n    SWITCH_DEC_DIALOG_TAB,\r\n    RESET_DEC_DIALOG_TAB, \r\n} from \"../../components/NewDecDialog/actions\";\r\n\r\nconst initialState = 0;\r\n\r\nconst openedTabReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_DEC_DIALOG_TAB:\r\n            return action.payload;\r\n        case RESET_DEC_DIALOG_TAB:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default openedTabReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport isOpenReducer from \"./isOpenReducer\";\r\nimport decoratorFormReducer from \"./decoratorFormReducer\";\r\nimport validationErrorReducer from \"./validationErrorReducer\";\r\nimport isEditModeReducer from \"./isEditModeReducer\";\r\nimport openedTabReducer from \"./openedTabReducer\";\r\n\r\nconst decoratorDialogReducer = combineReducers({\r\n    isOpen: isOpenReducer,\r\n    openedTab: openedTabReducer,\r\n    validationError: validationErrorReducer,\r\n    isEditMode: isEditModeReducer,\r\n    form: decoratorFormReducer,\r\n});\r\n\r\nexport default decoratorDialogReducer;","import { SAVE_DEC_FORM, CLEAR_SAVED_DEC_FORM } from \"../actions\";\r\n\r\nconst initialState = null;\r\n\r\nexport const savedFormReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SAVE_DEC_FORM:\r\n            return action.payload;\r\n        case CLEAR_SAVED_DEC_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default savedFormReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport decoratorDialogReducer from \"./decoratorDialogReducer\";\r\nimport savedFormReducer from \"./savedFormReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    decoratorDialog: decoratorDialogReducer,\r\n    savedForm: savedFormReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}