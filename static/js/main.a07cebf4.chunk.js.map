{"version":3,"sources":["components/NewDecDialog/common/CustomInput.js","components/NewDecDialog/common/NewGroupDialog.js","components/NewDecDialog/hoc/withNewGroupControl.js","components/NewDecDialog/sections/NamesSection.js","components/NewDecDialog/sections/WordExportSection.js","components/NewDecDialog/common/CustomInputShort.js","components/NewDecDialog/constants.js","components/NewDecDialog/sections/PositioningSection/index.js","components/NewDecDialog/sections/PositioningSection/PositioningSection.js","components/NewDecDialog/common/Preview/ListPreview.js","components/NewDecDialog/utils/utils.js","components/NewDecDialog/sections/ListSection.js","components/NewDecDialog/sections/ReferencingSection.js","components/NewDecDialog/common/ContentEditable.js","components/NewDecDialog/common/Preview/Preview.js","components/NewDecDialog/common/Preview/index.js","components/NewDecDialog/common/ColorField/index.js","components/NewDecDialog/common/ColorField/ColorField.js","components/NewDecDialog/sections/TypographySection/index.js","components/NewDecDialog/sections/TypographySection/TypographySection.js","components/NewDecDialog/sections/DistancesSection.js","components/NewDecDialog/sections/FramesSection/FrameTypeInput.js","components/NewDecDialog/sections/FramesSection/index.js","components/NewDecDialog/sections/FramesSection/FramesSection.js","components/NewDecDialog/sections/FillingSection.js","components/NewDecDialog/sections/TocSection.js","components/NewDecDialog/sections/ShortCutsSection.js","components/NewDecDialog/sections/TestSection.js","components/NewDecDialog/utils/getShortCutUtils.js","components/NewDecDialog/Handlers.js","components/NewDecDialog/theme.js","components/NewDecDialog/common/CustomTab.js","components/NewDecDialog/common/CustomTabs.js","components/NewDecDialog/common/CustomDialog.js","components/NewDecDialog/index.js","components/NewDecDialog/actions/index.js","App.js","reducers/initialState.js","reducers/decoratorFormReducer.js","store.js","serviceWorker.js","index.js"],"names":["CustomInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","minWidth","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","NewGroupDialog","state","props","currentGroup","groupType","nameEN","nameDE","nameRU","nameFR","groupKey","onInputChange","inputName","e","setState","target","value","onClose","hideDialog","onGroupSave","onSave","changeGroupSelect","trim","length","groupToSave","this","isOpen","isEditMode","titleText","buttonText","Dialog","className","open","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","variant","margin","onChange","DialogActions","Button","onClick","color","React","Component","withNewGroupControl","ViewComponent","groupSelect","newGroup","handleClick","newValue","decKey","changeDecKey","group","changeGroup","active","changeActive","styleNameEn","changeStyleNameEn","styleNameDe","changeStyleNameDe","styleNameRu","changeStyleNameRu","styleNameFr","changeStyleNameFr","changeGroupToCreate","newGroupName","onGroupChange","args","NativeSelect","Checkbox","checked","WordExportSection","wordStyleName","changeWordStyleName","softReturn","changeSoftReturn","CustomInputShort","listStyleType","name","backSpaceActions","key","returnOnEmptySectionActions","decoratorsList","alignmentsMap","center","left","right","justify","numberingSets","decimal","bulletNamesMap","bulletpoint","dash","star","PositioningSection","indentationalLevel","changeIndentationalLevel","backspaceActionWithContent","changeBackspaceActionWithContent","backspaceActionWithoutContent","changeBackspaceActionWithoutContent","returnActionNextSection","changeReturnActionNextSection","returnActionEmptySection","changeReturnActionEmptySection","tabAction","changeTabAction","shiftTabAction","changeShiftTabAction","id","map","action","dec","ListPreview","listPreviewStyle","listChars","prefix","suffix","suffixDistance","sideNumberStyle","listItemsBeginnings","listChar","listItemBeginingStyle","marginRight","style","getCorrectColor","hex","correctColor","selectAllOnClick","defaultValue","focus","select","getOffset","alignType","parseFloat","slice","scrollToBottom","setTimeout","document","getElementsByClassName","scrollTo","top","Number","MAX_SAFE_INTEGER","behavior","getListChars","isOrderedList","numberingStyle","listItem","unicodeChar","newBullet","Array","fill","ListSection","listPreviewProps","isList","changeIsList","listName","changeListName","orderLevel","changeOrderLevel","changePrefix","changeSuffix","changeSuffixDistance","magicTabs","changeMagicTabs","listType","changeListType","changeListItem","unicodeNumber","changeUnicodeNumber","changeUnicodeChar","changeNumberingStyle","continueNumbering","changeContinueNumbering","allowRestartNumbering","changeAllowRestartNumbering","includePreviousFrom","changeIncludePreviousFrom","sideNumber","changeSideNumber","sideNumberFont","changeSideNumberFont","sideNumberAlignment","changeSideNumberAlignment","sideNumberFontSize","changeSideNumberFontSize","sideNumberFontColor","changeSideNumberFontColor","sideNumberFillingColor","changeSideNumberFillingColor","sideNumberWidth","changeSideNumberWidth","sideNumberRadius","changeSideNumberRadius","fontColorSampleStyle","fillingColorSampleStyle","InputAdornment","InputProps","startAdornment","Object","entries","referenceGroup","changeReferenceGroup","changeReferenceGroupToCreate","onXrefChange","xref","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","q","propertyIsEnumerable","normalizeHtml","str","replace","replaceCaret","el","findLastTextNode","node","nodeType","Node","TEXT_NODE","children","childNodes","textNode","isTargetFocused","activeElement","nodeValue","sel","window","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","ContentEditable","arguments","lastHtml","html","innerRef","current","getEl","emitChange","originalEvt","innerHTML","evt","assign","_a","tagName","ref","onInput","onBlur","onKeyUp","onKeyDown","contentEditable","disabled","dangerouslySetInnerHTML","__html","nextProps","deepEqual","Preview","previewText","changePreviewText","previewStyle","verticalAlign","editableContentStyle","outline","marginBottom","selectAllChildren","ColorField","hideColorPicker","showColorPicker","colorPickerHandler","changeColor","colorCode","changeColorCode","required","colorError","inputError","pickerColor","colorSampleStyle","error","onChangeComplete","disableAlpha","TypographySection","previewProps","font","changeFont","alignment","changeAlignment","changeFontSize","fontColorName","changeFontColorName","fontColor","changeFontColor","bold","changeBold","italic","changeItalic","underlined","changeUnderlined","stroke","changeStroke","textTransform","changeTextTransform","changeVerticalAlign","FormControlLabel","control","label","labelPlacement","RadioGroup","row","Radio","DistancesSection","changeMarginTop","changeMarginBottom","firstRowIndent","changeFirstRowIndent","otherRowsIndent","changeOtherRowsIndent","lineSpacing","changeLineSpacing","customLineSpacing","changeCustomLineSpacing","wordSpacing","changeWordSpacing","FrameTypeInput","width","FramesSection","leftBorder","changeLeftBorder","rightBorder","changeRightBorder","topBorder","changeTopBorder","bottomBorder","changeBottomBorder","borderColorName","changeBorderColorName","changeBorderColor","borderThickness","changeBorderThickness","borderType","changeBorderType","previewBorderWidth","isNaN","borderLeft","marginLeft","borderRight","borderTop","borderBottom","Select","MenuItem","FillingSection","fillingColorName","changeFillingColorName","fillingColor","changeFillingColor","connectToPrevious","changeConnectToPrevious","TocSection","tocIndentation","changeTocIndentation","ShortCutSection","shortCutWinView","changeShortCutWin","shortCutMacView","changeShortCutMac","getShortCutUtils","systemName","keyCode","preventDefault","stopPropagation","ShortcutUtils","isDeadKey","prevent","deleteKey","shortCut","ctrlKey","shiftKey","altKey","metaKey","shortCutForView","convertShortcutToMeta","isCmdPressed","stringValue","keys","CMD_KEYS","forEach","keycode","removeDuplicateShortcuts","decorators","newPdShortcut","removed","decoratorKey","item","item_type","isEqual","keyboard_shortcut","childItems","child_items","itemKey","removeDuplicateShortcutsInInlineStyle","inlineStyles","styleKey","Handlers","update","formState","toggleStateProperty","propName","setStateProperty","secondArg","undefined","setBullet","setColor","filteredInput","match","setNumber","setShortCut","valuePropName","viewPropName","isMac","convertEventToShortCut","createMuiTheme","primary","blue","secondary","pink","CustomTab","overflow","opacity","selected","Tab","CustomTabs","indicator","zIndex","display","Tabs","CustomDialog","minHeight","height","container","scrollBody","paperFullWidth","maxHeight","flexDirection","paperScrollBody","connect","dispatch","updateForm","payload","type","changeDecoratorForm","openedTab","groupToCreate","referenceGroupToCreate","changeOpenedTab","previewFontColor","previewFillingColor","previewAdditionalFillingColor","indentsDifference","previewMarginLeft","previewTextIndent","alignItems","textAlign","fontWeight","fontStyle","textDecoration","fontVariant","backgroundImage","textIndent","lineHeight","styledText","unstyledText","getUnstyledText","previewSideNumberFontColor","previewSideNumberFillingColor","namesSectionProps","wordExportProps","positioningSectionProps","listSectionProps","newUnicodeNumber","newUnicodeChar","String","fromCharCode","parseInt","unicodeNumberToChar","charCodeAt","toString","unicodeCharToNumber","referencingSectionProps","typographySectionProps","distancesSectionProps","framesSectionProps","fillingSectionProps","tocSectionProps","shortCutsSectionProps","ThemeProvider","aria-labelledby","scroll","orientation","indicatorColor","ShortCutsSection","TestSection","App","clearForm","initialState","shortCutWin","shortCutMac","decoratorFormReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a07cebf4.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInput = withStyles(theme => ({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      minWidth: \"183px\",\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInput;","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass NewGroupDialog extends React.Component {\r\n\r\n    state = this.props.currentGroup \r\n          ? this.props.currentGroup \r\n          : this.props.groupType !== \"xref\" \r\n          ? { nameEN: \"\", nameDE: \"\", nameRU: \"\", nameFR: \"\" }\r\n          : { nameEN: \"\", nameDE: \"\", nameRU: \"\", nameFR: \"\", groupKey: \"\" };\r\n    \r\n    onInputChange = inputName => e => {\r\n        this.setState({ \r\n            [inputName]: e.target.value \r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        const {currentGroup, hideDialog } = this.props;\r\n        this.setState({ ...currentGroup });\r\n        hideDialog()\r\n    };\r\n\r\n    onGroupSave = () => {\r\n        const { onSave, changeGroupSelect, hideDialog, groupType } = this.props;\r\n        if (this.state.nameEN.trim().length && (groupType !== \"xref\" || this.state.groupKey.trim().length)) {\r\n            const groupToSave = {\r\n                nameEN: this.state.nameEN.trim(),\r\n                nameDE: this.state.nameDE.trim(),\r\n                nameRU: this.state.nameRU.trim(),\r\n                nameFR: this.state.nameFR.trim(),\r\n            };\r\n            if (groupType === \"xref\") {\r\n                groupToSave.groupKey = this.state.groupKey.trim();\r\n            }\r\n            onSave(groupToSave);\r\n            changeGroupSelect(groupToSave)(null, this.state.nameEN.trim());\r\n            hideDialog();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isOpen, isEditMode } = this.props;\r\n        const { onInputChange, onGroupSave, onClose } = this;\r\n        const titleText = `${isEditMode ? \"Edit\" : \"Create\"} new ${this.props.groupType === \"xref\" ? \"reference \" : \"\"}group`\r\n        const buttonText = isEditMode ? \"Save\" : \"Create\";\r\n        return (\r\n            <Dialog\r\n                className=\"paragraphDecorators-dialog\"\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <DialogTitle>{titleText}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        {\r\n                            this.props.groupType === \"xref\" \r\n                            &&\r\n                            <>\r\n                                <span>Group Key</span>\r\n                                <TextField \r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                    onChange={onInputChange(\"groupKey\")}\r\n                                    value={this.state.groupKey}\r\n                                />\r\n                            </>\r\n                        }\r\n                        <span>Name EN</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEN\")}\r\n                            value={this.state.nameEN}\r\n                        />\r\n                        <span>Name DE</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameDE\")} \r\n                            value={this.state.nameDE}\r\n                        />                        \r\n                        <span>Name RU</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameRU\")} \r\n                            value={this.state.nameRU}\r\n                        />                        \r\n                        <span>Name FR</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFR\")} \r\n                            value={this.state.nameFR}\r\n                        />                    \r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color=\"default\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={onGroupSave} color=\"primary\">\r\n                        {buttonText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n};\r\n\r\nexport default NewGroupDialog;","import React from \"react\";\r\n\r\nconst withNewGroupControl = (ViewComponent) => {\r\n    return class extends React.Component {\r\n        state = {\r\n            isOpen: false,\r\n            groupSelect: \"\",\r\n            newGroup: this.props.newGroup || \"\",\r\n        }\r\n        \r\n        handleClick = () => {\r\n            this.setState(({ isOpen }) => {\r\n                return {\r\n                    isOpen: !isOpen\r\n                };\r\n            });\r\n        }\r\n    \r\n        onSave = newGroup => {\r\n            this.setState({ newGroup });\r\n        }\r\n    \r\n        changeGroupSelect = (newValue) => {\r\n            this.setState({\r\n                groupSelect: newValue,\r\n            });\r\n        }\r\n\r\n        hideDialog = () => {\r\n            this.setState({ isOpen: false });\r\n        }\r\n        \r\n        render() {\r\n            const { handleClick, onSave, changeGroupSelect, hideDialog } = this; \r\n            return ( <ViewComponent {...this.props} {...this.state} {...{ handleClick, onSave, changeGroupSelect, hideDialog }} /> );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withNewGroupControl;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\n\r\nconst NamesSection = (props) => {\r\n    const { \r\n        newGroup, \r\n        isOpen, \r\n        hideDialog, \r\n        handleClick, \r\n        onSave, \r\n        decKey, changeDecKey,\r\n        group, changeGroup,\r\n        active, changeActive,\r\n        styleNameEn, changeStyleNameEn,\r\n        styleNameDe, changeStyleNameDe,\r\n        styleNameRu, changeStyleNameRu,\r\n        styleNameFr, changeStyleNameFr,\r\n        changeGroupToCreate,\r\n    } = props;\r\n    \r\n    const newGroupName = newGroup.nameEN;\r\n    const isEditMode = !!newGroupName;\r\n\r\n    const onGroupChange = group => (...args) => {\r\n        const value = args[0] ? args[0].target.value : args[1];\r\n        if (group.nameEN && value === group.nameEN) {\r\n            changeGroupToCreate(null, group);\r\n        } else {\r\n            changeGroupToCreate(null, \"\");\r\n        }\r\n        changeGroup(...args);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n            <span>Key</span>\r\n            <TextField \r\n                value={decKey}\r\n                onChange={changeDecKey}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Group</span>\r\n            <div>\r\n                <NativeSelect \r\n                    value={group} \r\n                    onChange={onGroupChange(newGroup)}\r\n                    input={ <CustomInput /> }  \r\n                >\r\n                    <option value=\"\">...</option>\r\n                    { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                    <option value=\"0\">Text</option>\r\n                    <option value=\"1\">Heading</option>\r\n                    <option value=\"2\">Heading Heading Heading Heading</option>\r\n                </NativeSelect>\r\n                { !(isEditMode && group !== newGroupName) && (\r\n                    <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                        { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                    </Button>\r\n                ) }\r\n            </div>\r\n\r\n            <span>Active</span>\r\n            <div>\r\n                <Checkbox\r\n                    checked={active}\r\n                    onChange={changeActive} \r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n\r\n            <span>Style name (English)</span>\r\n            <TextField \r\n                value={styleNameEn}\r\n                onChange={changeStyleNameEn}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Style name (German)</span>\r\n            <TextField \r\n                value={styleNameDe}\r\n                onChange={changeStyleNameDe}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Style name (Russian)</span>\r\n            <TextField \r\n                value={styleNameRu}\r\n                onChange={changeStyleNameRu}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Style name (French)</span>\r\n            <TextField \r\n                value={styleNameFr}\r\n                onChange={changeStyleNameFr}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <NewGroupDialog \r\n                isOpen={isOpen}\r\n                hideDialog={hideDialog}\r\n                onSave={onSave}\r\n                isEditMode={isEditMode}\r\n                currentGroup={newGroup}\r\n                changeGroupSelect={onGroupChange}\r\n                groupType=\"decorators\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withNewGroupControl(NamesSection);","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst WordExportSection = ({ wordStyleName, changeWordStyleName, softReturn, changeSoftReturn }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Style name in WORD</span>\r\n            <TextField \r\n                value={wordStyleName}\r\n                onChange={changeWordStyleName}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n            \r\n            <span>Soft return</span>\r\n            <div>\r\n                <Checkbox \r\n                    checked={softReturn}\r\n                    onChange={changeSoftReturn}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WordExportSection;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInputShort = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInputShort;","export const listStyleType = [\r\n  {\r\n    name: '1, 2, 3',\r\n    value: 'decimal',\r\n  },\r\n  {\r\n    name: 'A, B, C',\r\n    value: 'upper-alpha',\r\n  },\r\n  {\r\n    name: 'a, b, c',\r\n    value: 'lower-alpha',\r\n  },\r\n  {\r\n    name: 'I, II, III',\r\n    value: 'upper-roman',\r\n  },\r\n  {\r\n    name: 'i, ii, iii',\r\n    value: 'lower-roman',\r\n  },\r\n];\r\n\r\nexport const backSpaceActions = [\r\n  { key: 'merge', value: 'Merge' },\r\n  { key: 'apply_other_pd', value: 'Apply other PD' },\r\n  { key: 'remove_pd', value: 'Remove PD' },\r\n  { key: 'nothing', value: 'Nothing' }\r\n];\r\n\r\nexport const returnOnEmptySectionActions = [\r\n  { key: 'apply_other_pd', value: 'Apply other PD' },\r\n  { key: 'create_new_section', value: 'Create new section' },\r\n  { key: 'apply_default_pd', value: 'Apply default PD' },\r\n  { key: 'nothing', value: 'Nothing' }\r\n];\r\n\r\nexport const decoratorsList = [\r\n    { name: \"...\", value: \"\" },\r\n    { name: \"Text 0\", value: \"quick_text_0\" },\r\n    { name: \"Text 1\", value: \"quick_text_1\" },\r\n    { name: \"Text 2\", value: \"quick_text_2\" },\r\n    { name: \"Text 3\", value: \"quick_text_3\" },\r\n    { name: \"Text 4\", value: \"quick_text_4\" },\r\n    { name: \"Text 5\", value: \"quick_text_5\" },\r\n];\r\n\r\nexport const alignmentsMap = {\r\n  center: \"center\",\r\n  left: \"flex-start\",\r\n  right: \"flex-end\",\r\n  justify: \"flex-start\",\r\n};\r\n\r\nexport const numberingSets = {\r\n  decimal: [\"1\", \"2\", \"3\", \"4\"],\r\n  \"upper-alpha\": [\"A\", \"B\", \"C\", \"D\"],\r\n  \"lower-alpha\": [\"a\", \"b\", \"c\", \"d\"],\r\n  \"upper-roman\": [\"I\", \"II\", \"III\", \"IV\"],\r\n  \"lower-roman\": [\"i\", \"ii\", \"iii\", \"iv\"],\r\n};\r\n\r\nexport const bulletNamesMap = {\r\n  bulletpoint: \"•\",\r\n  dash: \"—\",\r\n  star: \"★\",\r\n};\r\n\r\nexport const sampleText = `<div>Sample Text. You can change it.</div><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ornare maximus vehicula. Duis nisi velit, dictum id mauris vitae, lobortis pretium quam.</div>`;","import PositioningSection from \"./PositioningSection\";\r\nexport default PositioningSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport { backSpaceActions, returnOnEmptySectionActions, decoratorsList } from \"../../constants\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst PositioningSection = (props) => {\r\n    const {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithoutContent, changeBackspaceActionWithoutContent,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_positioning\">\r\n            <span id=\"r1c1\">Identational level</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={indentationalLevel}\r\n                    onChange={changeIndentationalLevel}\r\n                    id=\"r1c2\" \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n            <div id=\"r2\" className=\"sectionTitle\">\r\n                <span>BACKSPACE</span>\r\n            </div>\r\n\r\n            <span id=\"r3c1\">At the beginning of a section with content</span>\r\n            <NativeSelect \r\n                value={backspaceActionWithContent}\r\n                onChange={changeBackspaceActionWithContent}\r\n                id=\"r3c2\" \r\n                input={ <CustomInput /> }\r\n            >\r\n                {backSpaceActions.map(action => (\r\n                    <option value={action.key} key={`backSpace ${action.key}`}>{action.value}</option>\r\n                ))}\r\n            </NativeSelect>\r\n\r\n            <span id=\"r4c1\">At the beginning of a section WITHOUT content</span>\r\n            <NativeSelect\r\n                value={backspaceActionWithoutContent}\r\n                onChange={changeBackspaceActionWithoutContent}\r\n                id=\"r4c2\" \r\n                input={ <CustomInput /> }\r\n            >\r\n                {returnOnEmptySectionActions.map(action => (\r\n                    <option value={action.key} key={`backSpace ${action.key}`}>{action.value}</option>\r\n                ))}\r\n            </NativeSelect>\r\n\r\n            <div id=\"r5\" className=\"sectionTitle\">\r\n                <span>RETURN</span>\r\n            </div>\r\n\r\n            <span id=\"r6c1\">Style of next section</span>\r\n            <NativeSelect\r\n                value={returnActionNextSection}\r\n                onChange={changeReturnActionNextSection}\r\n                id=\"r6c2\" \r\n                input={ <CustomInput /> }\r\n            >\r\n                <option value=\"default\">Global Fallback Style</option>\r\n                { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n            </NativeSelect>\r\n\r\n            <span id=\"r7c1\">In empty section change current style to</span>\r\n            <NativeSelect \r\n                value={returnActionEmptySection}\r\n                onChange={changeReturnActionEmptySection}\r\n                id=\"r7c2\" \r\n                input={ <CustomInput /> }\r\n            >\r\n                <option value=\"default\">Global Fallback Style</option>\r\n                { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n            </NativeSelect>\r\n\r\n            <div id=\"r8\" className=\"sectionTitle\">\r\n                <span>TAB / SHIFT+TAB</span>\r\n            </div>\r\n\r\n            <span id=\"r9c1\">TAB – change current style to</span>\r\n            <NativeSelect\r\n                value={tabAction}\r\n                onChange={changeTabAction}\r\n                id=\"r9c2\" \r\n                input={ <CustomInput /> }\r\n            >\r\n                { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n            </NativeSelect>\r\n\r\n            <span id=\"r10c1\">SHIFT+TAB – change current style to</span>\r\n            <NativeSelect\r\n                value={shiftTabAction}\r\n                onChange={changeShiftTabAction} \r\n                id=\"r10c2\" \r\n                input={ <CustomInput /> }\r\n            >\r\n                { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n            </NativeSelect>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PositioningSection;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst ListPreview = (props) => {\r\n    const { \r\n        listPreviewStyle, \r\n        listChars, \r\n        prefix, \r\n        suffix, \r\n        suffixDistance, \r\n        sideNumberStyle,\r\n    } = props;\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n    const listItemsBeginnings = listChars.map(listChar => {\r\n        return (`${prefix}${listChar}${suffix}`);\r\n    });\r\n    const listItemBeginingStyle = {\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n        ...sideNumberStyle,\r\n    };\r\n\r\n    return (\r\n        <div className=\"preview preview_list\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div className=\"preview-content\">\r\n                <div className={demonstrationElementClassName}>\r\n                    <div\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        style={listPreviewStyle}\r\n                    >\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[0]}`}</span><span>The first list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[1]}`}</span><span>The second list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[2]}`}</span><span>The third list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[3]}`}</span><span>The fourth list item</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListPreview;","import { numberingSets, bulletNamesMap } from \"../constants\";\r\n\r\nexport const getCorrectColor = (hex, backgroundColor = \"FFF\") => {\r\n    const correctColor = typeof hex === \"string\" && (hex.length === 6 || hex.length === 3) ? hex : backgroundColor;\r\n    return correctColor;\r\n};\r\n\r\nexport const selectAllOnClick = defaultValue => e => {\r\n    if (!defaultValue || e.target.value === defaultValue) {\r\n        e.target.focus();\r\n        e.target.select();\r\n    }\r\n};\r\n\r\nexport const getOffset = (alignType, fontSize) => {\r\n    if (alignType === \"baseline\") {\r\n        return 0;\r\n    }\r\n    return (parseFloat(fontSize.slice()) / 2) * (alignType === \"sub\" ? 1 : -1);\r\n};\r\n\r\nexport const getUnstyledText = styledText => {\r\n    const unstyledText = styledText.replace(/<\\/(.*?)>/gm, \"</div>\").replace(/(?!(?:<\\/(.*?)>|<br(.*?)>)$)<(.*?)>/gm, \"<div>\");\r\n    return unstyledText[0] !== \"<\" ? `<div>${unstyledText}</div>` : unstyledText;\r\n};\r\n\r\nexport const unicodeNumberToChar = unicodeNumber => {\r\n    return String.fromCharCode(parseInt(unicodeNumber, 16));\r\n};\r\n\r\nexport const unicodeCharToNumber = unicodeChar => {\r\n    return unicodeChar.charCodeAt(0).toString(16);\r\n};\r\n\r\nexport const scrollToBottom = className => {\r\n    setTimeout(() => { document.getElementsByClassName(className)[0].scrollTo({\r\n        top: Number.MAX_SAFE_INTEGER,\r\n        behavior: \"smooth\",\r\n    })}, 0);\r\n};\r\n\r\nexport const selectAllEditableContent = className => e => {\r\n    if (e.target.className === className) {\r\n        window.getSelection().selectAllChildren(e.target.children[0]);\r\n    }\r\n};\r\n\r\nexport const getListChars = ({ isOrderedList, numberingStyle, listItem, unicodeChar }) => {\r\n    if (isOrderedList) {\r\n        return numberingSets[numberingStyle];\r\n    }\r\n    const newBullet = bulletNamesMap[listItem] || unicodeChar;\r\n    return Array(4).fill(newBullet);\r\n};\r\n\r\nexport const detectOS = () => {\r\n    if (navigator && navigator.appVersion) {\r\n        if (navigator.appVersion.indexOf(\"Win\") !== -1) {\r\n            return \"Windows\";\r\n        } else if (navigator.appVersion.indexOf(\"Mac\") !== -1) {\r\n            return \"MacOS\";\r\n        }\r\n    }\r\n};","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport ListPreview from \"../common/Preview/ListPreview\";\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport { listStyleType, bulletNamesMap } from \"../constants\"\r\nimport { getCorrectColor, selectAllOnClick, scrollToBottom } from \"../utils\";\r\n\r\nconst ListSection = (props) => {\r\n    const {\r\n        listPreviewProps,\r\n        isList, changeIsList, \r\n        listName, changeListName,\r\n        orderLevel, changeOrderLevel,\r\n        prefix, changePrefix,\r\n        suffix, changeSuffix,\r\n        suffixDistance, changeSuffixDistance,\r\n        magicTabs, changeMagicTabs,\r\n        listType, changeListType, \r\n        listItem, changeListItem,\r\n        unicodeNumber, changeUnicodeNumber,\r\n        unicodeChar, changeUnicodeChar,\r\n        numberingStyle, changeNumberingStyle,\r\n        continueNumbering, changeContinueNumbering,\r\n        allowRestartNumbering, changeAllowRestartNumbering,\r\n        includePreviousFrom, changeIncludePreviousFrom,\r\n        sideNumber, changeSideNumber,\r\n        sideNumberFont, changeSideNumberFont,\r\n        sideNumberAlignment, changeSideNumberAlignment,\r\n        sideNumberFontSize, changeSideNumberFontSize,\r\n        sideNumberFontColor, changeSideNumberFontColor,\r\n        sideNumberFillingColor, changeSideNumberFillingColor,\r\n        sideNumberWidth, changeSideNumberWidth,\r\n        sideNumberRadius, changeSideNumberRadius,\r\n    } = props;\r\n\r\n    const onListTypeChange = (...args) => {\r\n        changeListType(...args);\r\n        scrollToBottom(\"content-rightSide\");\r\n    };\r\n\r\n    const onSideNumberChange = (...args) => {\r\n        changeSideNumber(...args);\r\n        scrollToBottom(\"content-rightSide\");\r\n    };\r\n\r\n    const fontColorSampleStyle = {\r\n        backgroundColor: `#${getCorrectColor(sideNumberFontColor)}`,\r\n    };\r\n\r\n    const fillingColorSampleStyle = {\r\n        backgroundColor: `#${getCorrectColor(sideNumberFillingColor)}`,\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <div>\r\n                    <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth\">\r\n                    <div className=\"listSection-firstSpan\">\r\n                        <span>Is it a list?</span>\r\n                    </div>\r\n                    <div>\r\n                        <Checkbox \r\n                            color=\"primary\" \r\n                            checked={isList} \r\n                            onChange={changeIsList} \r\n                        />\r\n                    </div>\r\n                    { isList && (\r\n                        <>\r\n                            <span>List name</span>\r\n                            <TextField\r\n                                value={listName}\r\n                                onChange={changeListName} \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                            />\r\n\r\n                            <span>Order level</span>\r\n                            <div>\r\n                                <NativeSelect\r\n                                    value={orderLevel}\r\n                                    onChange={changeOrderLevel}\r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    <option value=\"\">...</option>\r\n                                    <option value=\"0\">0</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n\r\n                            <span>Prefix</span>\r\n                            <TextField\r\n                                value={prefix}\r\n                                onChange={changePrefix} \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                            />\r\n\r\n                            <span>Suffix</span>\r\n                            <TextField\r\n                                value={suffix}\r\n                                onChange={changeSuffix} \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                                onClick={selectAllOnClick(\".\")}\r\n                            />\r\n\r\n                            <span>Suffix distance</span>\r\n                            <div className=\"inputWithAdornment\">\r\n                                <NativeSelect\r\n                                    value={suffixDistance}\r\n                                    onChange={changeSuffixDistance} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    <option value=\"0.25\">0.25</option>\r\n                                    <option value=\"0.5\">0.5</option>\r\n                                    <option value=\"0.75\">0.75</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"1.25\">1.25</option>\r\n                                    <option value=\"1.5\">1.5</option>\r\n                                    <option value=\"1.75\">1.75</option>\r\n                                    <option value=\"2\">2</option>\r\n                                </NativeSelect>\r\n                                <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                            </div>\r\n\r\n                            <span>Magic Tabs</span>\r\n                            <div>\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={magicTabs} \r\n                                    onChange={changeMagicTabs} \r\n                                />\r\n                            </div>\r\n\r\n                            <span>Type of list</span>\r\n                            <div>\r\n                                <NativeSelect \r\n                                    value={listType} \r\n                                    onChange={onListTypeChange} \r\n                                    input={ <CustomInput /> }\r\n                                >\r\n                                    <option value={\"unordered\"}>Unordered</option>\r\n                                    <option value={\"ordered\"}>Ordered</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </>\r\n                    ) }\r\n                </div>\r\n                    { isList && listType === \"ordered\" && (\r\n                        <div className=\"listSection-typeSettings\">\r\n                            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                                <span>Numbering style</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={numberingStyle}\r\n                                        onChange={changeNumberingStyle}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        {listStyleType.map(style => (\r\n                                          <option value={style.value} key={style.value}>{style.name}</option>\r\n                                        ))}                                    \r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Continue numbering after interruption</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={continueNumbering}\r\n                                        onChange={changeContinueNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Allow restart numbering</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={allowRestartNumbering} \r\n                                        onChange={changeAllowRestartNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Include previous levels from</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={includePreviousFrom} \r\n                                        onChange={changeIncludePreviousFrom}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        <option value=\"\">...</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Side number</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={sideNumber}\r\n                                        onChange={onSideNumberChange}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                            </div> \r\n\r\n                            { sideNumber && (\r\n                                <div className=\"dialogGrid dialogGrid_2minCols listSection-typeSettings\">\r\n                                    <span>Font</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberFont}\r\n                                        onChange={changeSideNumberFont}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"Roboto, slab-serif\"}>Roboto</option>\r\n                                        <option value={\"'Source Serif Pro', serif\"}>Source Serif</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Alignment</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberAlignment}\r\n                                        onChange={changeSideNumberAlignment}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"left\"}>Left</option>\r\n                                        <option value={\"center\"}>Center</option>\r\n                                        <option value={\"right\"}>Right</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Font size</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberFontSize}\r\n                                            onChange={changeSideNumberFontSize}\r\n                                            onClick={selectAllOnClick(\"12\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>      \r\n                            \r\n                                    <span>Font color</span>\r\n                                    <div className=\"colorField\">\r\n                                        <TextField \r\n                                            value={sideNumberFontColor}\r\n                                            onChange={changeSideNumberFontColor}\r\n                                            onClick={selectAllOnClick(\"FFF\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\" \r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                                            }}\r\n                                        />\r\n                                        <div className=\"colorSample\" style={fontColorSampleStyle}></div>\r\n                                    </div>\r\n                                        \r\n                                    <span>Filling color</span>\r\n                                    <div className=\"colorField\">\r\n                                        <TextField \r\n                                            value={sideNumberFillingColor}\r\n                                            onChange={changeSideNumberFillingColor}\r\n                                            onClick={selectAllOnClick(\"1E88E5\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\" \r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                                            }}\r\n                                        />\r\n                                        <div className=\"colorSample\" style={fillingColorSampleStyle}></div>\r\n                                    </div>\r\n                                        \r\n                                    <span>Width</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberWidth}\r\n                                            onChange={changeSideNumberWidth}\r\n                                            onClick={selectAllOnClick(\"20\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                        \r\n                                    <span>Radius</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberRadius}\r\n                                            onChange={changeSideNumberRadius}\r\n                                            onClick={selectAllOnClick(\"10\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                </div> \r\n                            ) }\r\n                        </div>\r\n                    ) }\r\n                </div>\r\n                { isList && <div className=\"listPreviewBox\"><ListPreview {...listPreviewProps} /></div> }\r\n            </div>\r\n            { isList && listType === \"unordered\" && (\r\n                <div className=\"listSection-typeSettings\">\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        <div className=\"dialogGrid dialogGrid_2cols\">\r\n                            <span className=\"listSection-firstSpan\">List item</span>\r\n                            <div className=\"listItemSelect\">\r\n                                <NativeSelect \r\n                                    value={listItem} \r\n                                    onChange={changeListItem} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    { \r\n                                        Object.entries(bulletNamesMap).map(([key, value]) => {\r\n                                            return (<option key={key} value={key}>{value}</option>) \r\n                                        })\r\n                                    }\r\n                                    <option value={\"individual\"}>Custom</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </div>\r\n                        {   listItem === \"individual\" && (\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Unicode number</span>\r\n                                    <div>\r\n                                        <TextField \r\n                                            value={unicodeNumber}\r\n                                            onChange={changeUnicodeNumber}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"unicodeInput\" \r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">u+</InputAdornment>\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Char</span>\r\n                                    <div>\r\n                                        <TextField \r\n                                            value={unicodeChar}\r\n                                            onChange={changeUnicodeChar}\r\n                                            onClick={selectAllOnClick()}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"bulletInput\" \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                        ) }\r\n                    </div> \r\n                </div> \r\n            ) }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\n\r\nconst ReferencingSection = (props) => {\r\n    const { \r\n        newGroup, \r\n        isOpen, \r\n        hideDialog, \r\n        handleClick, \r\n        onSave,\r\n        referenceGroup, changeReferenceGroup,\r\n        changeReferenceGroupToCreate,\r\n    } = props;\r\n    \r\n    const newGroupName = newGroup.nameEN;\r\n    const isEditMode = !!newGroupName;\r\n\r\n    const onXrefChange = xref => (...args) => {\r\n        const value = args[0] ? args[0].target.value : args[1];\r\n        if (xref.groupKey && xref.nameEN && value === xref.nameEN) {\r\n            changeReferenceGroupToCreate(null, xref);\r\n        } else {\r\n            changeReferenceGroupToCreate(null, \"\");\r\n        }\r\n        changeReferenceGroup(...args);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Reference group</span>\r\n            <div>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> } \r\n                    value={referenceGroup} \r\n                    onChange={onXrefChange(newGroup)} \r\n                >\r\n                    { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                    <option value=\"\">none</option>\r\n                    <option value=\"0\">Reference group 1</option>\r\n                    <option value=\"1\">Reference group 2</option>\r\n                </NativeSelect>\r\n                {\r\n                    !(isEditMode && referenceGroup !== newGroupName) &&\r\n                    <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                        { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                    </Button>\r\n                 }\r\n            </div>\r\n            <NewGroupDialog \r\n                isOpen={isOpen}\r\n                hideDialog={hideDialog}\r\n                onSave={onSave}\r\n                isEditMode={isEditMode}\r\n                currentGroup={newGroup}\r\n                changeGroupSelect={onXrefChange}\r\n                groupType=\"xref\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withNewGroupControl(ReferencingSection);","import * as React from \"react\";\r\nimport deepEqual from \"fast-deep-equal\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, q = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(q[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, q[i]))\r\n              t[q[i]] = s[q[i]];\r\n      }\r\n  return t;\r\n};\r\n\r\nfunction normalizeHtml(str) {\r\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, \" \");\r\n}\r\nfunction findLastTextNode(node) {\r\n  if (node.nodeType === Node.TEXT_NODE)\r\n      return node;\r\n  let children = node.childNodes;\r\n  for (let i = children.length - 1; i >= 0; i--) {\r\n      let textNode = findLastTextNode(children[i]);\r\n      if (textNode !== null)\r\n          return textNode;\r\n  }\r\n  return null;\r\n}\r\nfunction replaceCaret(el) {\r\n  // Place the caret at the end of the element\r\n  const target = findLastTextNode(el);\r\n  // do not move caret if element was not focused\r\n  const isTargetFocused = document.activeElement === el;\r\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\r\n      var sel = window.getSelection();\r\n      if (sel !== null) {\r\n          var range = document.createRange();\r\n          range.setStart(target, target.nodeValue.length);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n      }\r\n      if (el instanceof HTMLElement)\r\n          el.focus();\r\n  }\r\n}\r\n/**\r\n* A simple component for an html element with editable contents.\r\n*/\r\nexport default class ContentEditable extends React.Component {\r\n  constructor() {\r\n      super(...arguments);\r\n      this.lastHtml = this.props.html;\r\n      this.el = typeof this.props.innerRef === \"function\" ? { current: null } : React.createRef();\r\n      this.getEl = () => (this.props.innerRef && typeof this.props.innerRef !== \"function\" ? this.props.innerRef : this.el).current;\r\n      this.emitChange = (originalEvt) => {\r\n          const el = this.getEl();\r\n          if (!el)\r\n              return;\r\n          const html = el.innerHTML;\r\n          if (this.props.onChange && html !== this.lastHtml) {\r\n              // Clone event with Object.assign to avoid\r\n              // \"Cannot assign to read only property 'target' of object\"\r\n              const evt = Object.assign({}, originalEvt, {\r\n                  target: {\r\n                      value: html\r\n                  }\r\n              });\r\n              this.props.onChange(evt);\r\n          }\r\n          this.lastHtml = html;\r\n      };\r\n  }\r\n  render() {\r\n      const _a = this.props, { tagName, html, innerRef } = _a, props = __rest(_a, [\"tagName\", \"html\", \"innerRef\"]);\r\n      return React.createElement(tagName || \"div\", Object.assign({}, props, { ref: typeof innerRef === \"function\" ? (current) => {\r\n              innerRef(current);\r\n              this.el.current = current;\r\n          } : innerRef || this.el, onInput: this.emitChange, onBlur: this.props.onBlur || this.emitChange, onKeyUp: this.props.onKeyUp || this.emitChange, onKeyDown: this.props.onKeyDown || this.emitChange, contentEditable: !this.props.disabled, dangerouslySetInnerHTML: { __html: html } }), this.props.children);\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n      const { props } = this;\r\n      const el = this.getEl();\r\n      // We need not rerender if the change of props simply reflects the user's edits.\r\n      // Rerendering in this case would make the cursor/caret jump\r\n      // Rerender if there is no element yet... (somehow?)\r\n      if (!el)\r\n          return true;\r\n      // ...or if html really changed... (programmatically, not by user edit)\r\n      if (normalizeHtml(nextProps.html) !== normalizeHtml(el.innerHTML)) {\r\n          return true;\r\n      }\r\n      // Handle additional properties\r\n      return props.disabled !== nextProps.disabled ||\r\n          props.tagName !== nextProps.tagName ||\r\n          props.className !== nextProps.className ||\r\n          props.innerRef !== nextProps.innerRef ||\r\n          !deepEqual(props.style, nextProps.style);\r\n  }\r\n  componentDidUpdate() {\r\n      const el = this.getEl();\r\n      if (!el)\r\n          return;\r\n      // Perhaps React (whose VDOM gets outdated because we often prevent\r\n      // rerendering) did not update the DOM. So we update it manually now.(?!(?:<br \\/>|<br>|<br\\/>)$)<(.*?)>\r\n      if (this.props.html !== el.innerHTML) {\r\n          el.innerHTML = this.lastHtml = this.props.html;\r\n      }\r\n      replaceCaret(el);\r\n  }\r\n}\r\nContentEditable.propTypes = {\r\n  html: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  tagName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n  ])\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport ContentEditable from \"../ContentEditable\";\r\nimport { getOffset, selectAllEditableContent } from \"../../utils\"\r\n\r\nconst Preview = ({previewText, changePreviewText, previewStyle}) => {\r\n    const { verticalAlign, fontSize } = previewStyle;\r\n\r\n    const editableContentStyle = {\r\n        ...previewStyle, \r\n        outline: \"none\",\r\n        marginTop: `${parseFloat(previewStyle.marginTop) + getOffset(verticalAlign, fontSize)}pt`,\r\n        marginBottom: `${parseFloat(previewStyle.marginBottom) - getOffset(verticalAlign, fontSize)}pt`,\r\n    };\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n\r\n    return (\r\n        <div className=\"preview\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div \r\n                className=\"preview-content preview-content_withPointer\" \r\n                onClick={selectAllEditableContent(demonstrationElementClassName)}\r\n            >\r\n                <div className={demonstrationElementClassName}>\r\n                    <ContentEditable\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        onChange={changePreviewText} \r\n                        html={previewText}\r\n                        style={editableContentStyle}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preview;","import Preview from \"./Preview.js\";\r\nexport default Preview;","import ColorField from \"./ColorField\";\r\nexport default ColorField;","import React from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport { getCorrectColor, selectAllOnClick } from \"../../utils\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ColorField extends React.Component {\r\n    state = {\r\n        isOpen: this.props.isOpen,\r\n    };\r\n\r\n    hideColorPicker = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    showColorPicker = () => {\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    colorPickerHandler = changeColor => ({ hex }) => {\r\n        changeColor(null, hex);\r\n    };\r\n\r\n    render() {\r\n        const { colorCode, changeColorCode, required } = this.props;\r\n        const { showColorPicker, hideColorPicker, colorPickerHandler } = this;\r\n        const correctColor = getCorrectColor(colorCode);\r\n        const colorError = correctColor !== colorCode;\r\n        const inputError = colorError && (required || !!colorCode);\r\n        const pickerColor = colorError ? \"\" : `#${correctColor}`;\r\n        const colorSampleStyle = {\r\n            backgroundColor: `#${correctColor}`,\r\n        };\r\n\r\n        return (\r\n            <div className=\"colorField\">\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    className=\"numberInput\" \r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                    }}\r\n                    value={colorCode}\r\n                    onChange={changeColorCode}\r\n                    onClick={e => { \r\n                        selectAllOnClick(\"000\")(e); \r\n                        // this.showColorPicker(); \r\n                    }}\r\n                    error={inputError}\r\n                />\r\n                <div\r\n                    onClick={showColorPicker}\r\n                    className=\"colorSample\" \r\n                    style={colorSampleStyle}\r\n                />\r\n                {this.state.isOpen && (\r\n                    <div className=\"colorPicker-outerBox\">\r\n                        <div className=\"colorPicker-innerBox\">\r\n                            <ChromePicker\r\n                                onChangeComplete={colorPickerHandler(changeColorCode)}\r\n                                color={pickerColor}\r\n                                disableAlpha\r\n                            />\r\n                        </div>\r\n                        <div className=\"colorPicker-popOver\"  onClick={hideColorPicker}></div>\r\n                    </div>\r\n                ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorField;","import TypographySection from \"./TypographySection\";\r\nexport default TypographySection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport Preview from \"../../common/Preview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport { selectAllOnClick } from \"../../utils\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst TypographySection = (props) => {\r\n    const { \r\n        previewProps,\r\n        font, changeFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Font</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={font}\r\n                    onChange={changeFont}\r\n                >\r\n                    <option value={\"Roboto, slab-serif\"}>Roboto</option>\r\n                    <option value={\"'Source Serif Pro', serif\"}>Source Serif</option>\r\n                </NativeSelect>\r\n\r\n                <span>Alignment</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={alignment}\r\n                    onChange={changeAlignment}\r\n                >\r\n                    <option value={\"left\"}>Left</option>\r\n                    <option value={\"center\"}>Center</option>\r\n                    <option value={\"right\"}>Right</option>\r\n                    <option value={\"justify\"}>Justified</option>\r\n                </NativeSelect>\r\n\r\n                <span>Font size</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={fontSize}\r\n                        onChange={changeFontSize}\r\n                        onClick={selectAllOnClick(\"12\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>      \r\n\r\n                <span>Font color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                    value={fontColorName}\r\n                    onChange={changeFontColorName}\r\n                    onClick={selectAllOnClick(\"Black\")}\r\n                />\r\n\r\n                <span>Font color HEX</span>\r\n                <ColorField \r\n                    colorCode={fontColor} \r\n                    changeColorCode={changeFontColor}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_indented\">\r\n            <span>Stylings</span>\r\n            <div className=\"checkBoxesSet\">\r\n                <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Bold\"\r\n                        labelPlacement=\"end\"\r\n                        checked={bold}\r\n                        onChange={changeBold}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Italic\"\r\n                        labelPlacement=\"end\"\r\n                        checked={italic}\r\n                        onChange={changeItalic}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Underlined\"\r\n                        labelPlacement=\"end\"\r\n                        checked={underlined}\r\n                        onChange={changeUnderlined}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_stroke\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Stroke\"\r\n                        labelPlacement=\"end\"\r\n                        checked={stroke}\r\n                        onChange={changeStroke}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <span>Text transform</span>\r\n            <RadioGroup \r\n                value={textTransform} \r\n                onChange={changeTextTransform} \r\n                row\r\n            >\r\n                <div className=\"labeledCheckbox labeledCheckbox_topIndented\">\r\n                    <FormControlLabel\r\n                        value=\"none\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"None\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_uppercase\">\r\n                    <FormControlLabel\r\n                        value=\"uppercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Uppercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_lowercase\">\r\n                    <FormControlLabel\r\n                        value=\"lowercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Lowercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_smallCaps\">\r\n                    <FormControlLabel\r\n                        value=\"small-caps\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Small caps\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n            </RadioGroup>\r\n\r\n            <span>Sub/Superscript</span>\r\n            <div>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> } \r\n                    value={verticalAlign} \r\n                    onChange={changeVerticalAlign} \r\n                >\r\n                    <option value=\"baseline\">None</option>\r\n                    <option value=\"sub\">Subscript</option>\r\n                    <option value=\"super\">Superscript</option>\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport Preview from \"../common/Preview\";\r\nimport { selectAllOnClick } from \"../utils\";\r\n\r\nconst DistancesSection = (props) => {\r\n    const {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    } = props;\r\n    \r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Margin top</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginTop}\r\n                        onChange={changeMarginTop}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>Margin bottom</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginBottom}\r\n                        onChange={changeMarginBottom}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>1st row indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={firstRowIndent}\r\n                        onChange={changeFirstRowIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Other rows indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={otherRowsIndent}\r\n                        onChange={changeOtherRowsIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Line spacing</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        input={ <CustomInputShort /> } \r\n                        value={lineSpacing} \r\n                        onChange={changeLineSpacing} \r\n                    >\r\n                        <option value=\"1.0\">1.0</option>\r\n                        <option className=\"highlightedOption\" value=\"1.15\">1.15</option>\r\n                        <option value=\"1.5\">1.5</option>\r\n                        <option value=\"2.0\">2.0</option>\r\n                        <option value=\"2.5\">2.5</option>\r\n                        <option value=\"3.0\">3.0</option>\r\n                        <option value=\"custom\">Custom</option>\r\n                    </NativeSelect> \r\n                    {\r\n                    lineSpacing === \"custom\" && \r\n                    (\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={customLineSpacing}\r\n                            onChange={changeCustomLineSpacing}\r\n                        />                                            \r\n                    )\r\n                }\r\n                </div>\r\n                   \r\n                    \r\n                <span>Word spacing</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={wordSpacing}\r\n                        onChange={changeWordSpacing}\r\n                        onClick={selectAllOnClick(\"0\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistancesSection;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst FrameTypeInput = withStyles(theme => ({\r\n    root: {\r\n      width: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default FrameTypeInput;","import FramesSection from \"./FramesSection\";\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport FrameTypeInput from \"../../sections/FramesSection/FrameTypeInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport { getCorrectColor, selectAllOnClick } from \"../../utils\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst FramesSection = (props) => {\r\n    const { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n     } = props;\r\n\r\n     const correctColor = getCorrectColor(borderColor);\r\n     const previewBorderWidth = borderThickness && !isNaN(parseFloat(borderThickness))\r\n                                ? `${borderThickness <= 15 ? borderThickness : 15}pt`\r\n                                : \"0\";\r\n\r\n     const previewStyle = {\r\n         borderLeft: leftBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginLeft: leftBorder ? \"0\" : previewBorderWidth, \r\n         borderRight: rightBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginRight: rightBorder ? \"0\" : previewBorderWidth, \r\n         borderTop: topBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginTop: topBorder ? \"0\" : previewBorderWidth, \r\n         borderBottom: bottomBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginBottom: bottomBorder ? \"0\" : previewBorderWidth, \r\n     };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"directionControlsContainer\">\r\n                <div className=\"directionsControls\" style={previewStyle}>\r\n                    <span className=\"directionLabel\">Left</span>\r\n                    <div className=\"centralColumn\">\r\n                        <span className=\"directionLabel\">Top</span>\r\n                        <div className=\"checkboxesKit crossGrid\">\r\n                            <div id=\"r1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={topBorder}  \r\n                                    onChange={changeTopBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={leftBorder}  \r\n                                    onChange={changeLeftBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c2\" className=\"gridCell\">\r\n                            </div>\r\n                            <div id=\"r2c3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={rightBorder}  \r\n                                    onChange={changeRightBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={bottomBorder}  \r\n                                    onChange={changeBottomBorder}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"directionLabel\">Bottom</span>\r\n                    </div>\r\n                    <span className=\"directionLabel\">Right</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <span>Frame color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    value={borderColorName}\r\n                    onChange={changeBorderColorName}\r\n                    onClick={selectAllOnClick(\"Red\")}\r\n                />\r\n\r\n                <span>Frame color HEX</span>\r\n                <ColorField \r\n                    colorCode={borderColor} \r\n                    changeColorCode={changeBorderColor}\r\n                    required\r\n                />\r\n\r\n                <span>Frame thickness</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={borderThickness}\r\n                        onChange={changeBorderThickness}\r\n                        onClick={selectAllOnClick(\"2\")}\r\n                     />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>                        \r\n\r\n                <span>Type of frame</span>\r\n                <div >\r\n                    <Select\r\n                      input={<FrameTypeInput />}\r\n                      value={borderType}\r\n                      onChange={changeBorderType}\r\n                    >\r\n                        <MenuItem value=\"solid\"><b>━━━━</b></MenuItem>\r\n                        <MenuItem value=\"dotted\">• • • • • • •</MenuItem>\r\n                        <MenuItem value=\"dashed\"><b>– – – – –</b></MenuItem>\r\n                        <MenuItem value=\"double\">══════</MenuItem>              \r\n                    </Select>\r\n                </div>\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox color=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport Preview from \"../common/Preview\";\r\nimport ColorField from \"../common/ColorField\";\r\n\r\nconst  FillingSection = (props) => {\r\n    const { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n     } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Filling color name</span>\r\n                <div>\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        className=\"mediumTextField\" \r\n                        value={fillingColorName}\r\n                        onChange={changeFillingColorName}\r\n                    />\r\n                </div>\r\n\r\n                <span>Filling color HEX</span>\r\n                <ColorField \r\n                    colorCode={fillingColor} \r\n                    changeColorCode={changeFillingColor}\r\n                />\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox \r\n                        color=\"primary\" \r\n                        checked={connectToPrevious} \r\n                        onChange={changeConnectToPrevious} \r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FillingSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\n\r\nconst TocSection = ({ tocIndentation, changeTocIndentation }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>ToC indentation</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={tocIndentation}\r\n                    onChange={changeTocIndentation} \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>                    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TocSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst ShortCutSection = (props) => {\r\n    const {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Windows</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutWinView}\r\n                    onKeyDown={changeShortCutWin} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n\r\n            <span>Mac</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutMacView}\r\n                    onKeyDown={changeShortCutMac} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />     \r\n            </div>          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShortCutSection;","import React from \"react\";\r\n\r\nconst TypographySection = () => {\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import keycode from \"keycode\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nconst getShortCutUtils = systemName => {\r\n  return class ShortcutUtils {  \r\n    static CMD_KEYS = {\r\n      altKey: systemName === \"MacOS\" ? \"Option\" : \"Alt\",\r\n      ctrlKey: systemName === \"MacOS\" ? \"Control\" : \"Ctrl\",\r\n      shiftKey: \"Shift\",\r\n      metaKey: \"Command\",\r\n    };\r\n  \r\n    static isDeadKey(e) {\r\n      return e.keyCode === 229;\r\n    }\r\n  \r\n    static prevent(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  \r\n    static convertEventToShortCut(e) {\r\n      if (ShortcutUtils.isDeadKey(e)) {\r\n        ShortcutUtils.prevent(e);\r\n        return { deleteKey: true };\r\n      }\r\n      ShortcutUtils.prevent(e);\r\n      const shortCut = {\r\n        keyCode: e.keyCode,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n        altKey: e.altKey,\r\n        metaKey: false,\r\n      };\r\n      if (systemName === \"MacOS\") {\r\n        shortCut.metaKey = e.metaKey;\r\n      }\r\n      const deleteKeys = [8, 46];\r\n      const cmdKeysCodes = [16, 91, 18, 17];\r\n      const shortCutForView = ShortcutUtils.convertShortcutToMeta(shortCut);\r\n      if (deleteKeys.indexOf(e.keyCode) > -1) {\r\n        return { deleteKey: true };\r\n      } else if (shortCutForView.isCmdPressed && cmdKeysCodes.indexOf(e.keyCode) === -1) {\r\n        return {\r\n          value: shortCut,\r\n          stringValue: shortCutForView.stringValue,\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n  \r\n    static convertShortcutToString(shortCut = {}) {\r\n      return ShortcutUtils.convertShortcutToMeta(shortCut).stringValue;\r\n    }\r\n  \r\n    static convertShortcutToMeta(shortCut = {}) {\r\n      let shortCutForView = \"\";\r\n      let isCmdPressed = false;\r\n      Object.keys(ShortcutUtils.CMD_KEYS).forEach((key) => {\r\n        if (shortCut && shortCut[key]) {\r\n          isCmdPressed = true;\r\n          shortCutForView += `${ShortcutUtils.CMD_KEYS[key]} + `;\r\n        }\r\n      });\r\n      if (shortCut && shortCut.keyCode) {\r\n        shortCutForView += keycode(shortCut.keyCode);\r\n      }\r\n      return { stringValue: shortCutForView, isCmdPressed };\r\n    }\r\n  \r\n    static removeDuplicateShortcuts = function (decorators, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(decorators).forEach((decoratorKey) => {\r\n        const item = decorators[decoratorKey];\r\n        const itemType = item.item_type;\r\n        if (itemType === \"style\") {\r\n          if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n            decorators[decoratorKey].keyboard_shortcut = null;\r\n            removed = true;\r\n          }\r\n        } else {\r\n          const childItems = item.child_items;\r\n          Object.keys(childItems).forEach((itemKey) => {\r\n            const style = childItems[itemKey];\r\n            if (isEqual(style.keyboard_shortcut, newPdShortcut)) {\r\n              style.keyboard_shortcut = null;\r\n              removed = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  \r\n    static removeDuplicateShortcutsInInlineStyle = function (inlineStyles, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(inlineStyles).forEach((styleKey) => {\r\n        const item = inlineStyles[styleKey];\r\n        if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n          inlineStyles[styleKey].keyboard_shortcut = null;\r\n          removed = true;\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  }\r\n};\r\n\r\nexport default getShortCutUtils;\r\n\r\n","import getShortCutUtils from \"./utils/getShortCutUtils\";\r\n\r\nconst Handlers = (update, formState) => class {    \r\n    static toggleStateProperty = propName => e => {\r\n        update({\r\n            [propName]: e.target.checked\r\n        });\r\n    };\r\n\r\n    static setStateProperty = propName => (e, secondArg = \"\") => {\r\n        const newValue = (e && e.target.value !== \"\" && e.target.value !== undefined) ? e.target.value : secondArg;\r\n        update({\r\n            [propName]: newValue,\r\n        });\r\n    };\r\n\r\n    static setBullet = propName => e => {\r\n        const newBullet = e.target.value.length > 1 ? e.target.value[e.target.value.length - 1] : e.target.value;\r\n        update({\r\n            [propName]: newBullet,\r\n        });\r\n        return newBullet;\r\n    };\r\n\r\n    static setColor = propName => (e, secondArg) => {\r\n        let input = e ? (e.target.value || \"\") : secondArg;\r\n        \r\n        const filteredInput = input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i) \r\n                              ? input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i)[0].slice(0, 6)\r\n                              : \"\" ;\r\n        \r\n        if (filteredInput !== formState[propName]) {\r\n            update({\r\n                [propName]: filteredInput,\r\n            });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setNumber = propName => e => {\r\n        let input = e.target.value || \"\";\r\n\r\n        const filteredInput = input.replace(\",\", \".\").trim().match(/[0-9]+/i) \r\n                              ? input.replace(\",\", \".\").trim().match(/\\d+[.,]?\\d*/)[0]\r\n                              : \"\" ;\r\n\r\n        if (filteredInput !== formState[propName]) {\r\n          update({\r\n              [propName]: filteredInput,\r\n          });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setShortCut = (valuePropName, viewPropName, isMac) => e => {\r\n        const systemName = isMac ? \"MacOS\" : \"Windows\";\r\n        const shortCut = getShortCutUtils(systemName).convertEventToShortCut(e);\r\n        if (shortCut && shortCut.deleteKey) {\r\n          setTimeout(() => {\r\n            update({ [valuePropName]: \"\" });\r\n            update({ [viewPropName]: \"\" });\r\n          }, 100);\r\n        } else if (shortCut) {\r\n          update({ [valuePropName]: shortCut.value });\r\n          update({ [viewPropName]: shortCut.stringValue });\r\n        }\r\n    };\r\n};\r\n\r\nexport default Handlers;","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: pink,\r\n    },\r\n});\r\n\r\nexport default theme;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomTab;","import Tabs from \"@material-ui/core/Tabs\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTabs = withStyles(theme => ({\r\n    indicator: {\r\n        backgroundColor: \"#1890ff\",\r\n        opacity: 0.5,\r\n        width: \"190px\",\r\n        zIndex: 5,\r\n        display: \"none\",\r\n      }\r\n  }))(Tabs);\r\n\r\n  export default CustomTabs;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst CustomDialog = withStyles(theme => ({\r\n    root: {\r\n        minWidth: \"1250px\",\r\n        minHeight: \"1100px !important\",\r\n        height: \"100%\",\r\n    },\r\n    container: {\r\n        height: \"100vh\",\r\n        display: \"block\",\r\n    },\r\n    scrollBody: {\r\n        \"&:after\": {\r\n            height: \"100%\",\r\n        }\r\n    },\r\n    paperFullWidth: {\r\n        maxWidth: \"1280px\",\r\n        maxHeight: \"850px\",\r\n        minHeight: \"550px\",\r\n        width: \"calc(100% - 96px)\",\r\n        height: \"calc(100% - 96px)\",\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        border: \"none\",\r\n    },\r\n    paperScrollBody: {\r\n        verticalAlign: \"middle\",\r\n    },\r\n  }))(Dialog);\r\n  \r\n  export default CustomDialog;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport NamesSection from \"./sections/NamesSection\";\r\nimport WordExportSection from \"./sections/WordExportSection\";\r\nimport PositioningSection from \"./sections/PositioningSection\";\r\nimport ListSection from \"./sections/ListSection\";\r\nimport ReferencingSection from \"./sections/ReferencingSection\";\r\nimport TypographySection from \"./sections/TypographySection\";\r\nimport DistancesSection from \"./sections/DistancesSection\";\r\nimport FramesSection from \"./sections/FramesSection\";\r\nimport FillingSection from \"./sections/FillingSection\";\r\nimport TocSection from \"./sections/TocSection\";\r\nimport ShortCutsSection from \"./sections/ShortCutsSection\";\r\nimport TestSection from \"./sections/TestSection\";\r\n\r\nimport { changeDecoratorForm } from \"./actions\";\r\nimport Handlers from \"./Handlers\";\r\nimport theme from \"./theme\";\r\nimport CustomTab from \"./common/CustomTab\";\r\nimport CustomTabs from \"./common/CustomTabs\";\r\nimport CustomDialog from \"./common/CustomDialog\";\r\nimport { alignmentsMap } from \"./constants\";\r\nimport { \r\n    getCorrectColor, \r\n    getUnstyledText, \r\n    unicodeNumberToChar, \r\n    unicodeCharToNumber, \r\n    getListChars, \r\n} from \"./utils\";\r\n\r\n\r\nimport \"./style.css\";\r\n\r\nconst NewDecDialog = (props) => {\r\n    const { isOpen, onClose, updateForm, formState } = props;\r\n\r\n    const { \r\n        setStateProperty, \r\n        toggleStateProperty, \r\n        setNumber, \r\n        setColor, \r\n        setBullet, \r\n        setShortCut \r\n    } = Handlers(updateForm, formState);\r\n\r\n    const { \r\n        openedTab,\r\n        previewText,\r\n        decKey,\r\n        group,\r\n        groupToCreate,\r\n        active,\r\n        styleNameEn,\r\n        styleNameDe,\r\n        styleNameRu,\r\n        styleNameFr,\r\n        wordStyleName,\r\n        softReturn,\r\n        indentationalLevel,\r\n        backspaceActionWithContent,\r\n        backspaceActionWithoutContent,\r\n        returnActionNextSection,\r\n        returnActionEmptySection,\r\n        tabAction,\r\n        shiftTabAction,\r\n        isList,\r\n        listName,\r\n        orderLevel,\r\n        prefix,\r\n        suffix,\r\n        suffixDistance,\r\n        magicTabs,\r\n        listType,\r\n        listItem,\r\n        unicodeNumber,\r\n        unicodeChar,\r\n        numberingStyle,\r\n        continueNumbering,\r\n        allowRestartNumbering,\r\n        includePreviousFrom,\r\n        sideNumber,\r\n        sideNumberFont,\r\n        sideNumberAlignment,\r\n        sideNumberFontSize,\r\n        sideNumberFontColor,\r\n        sideNumberFillingColor,\r\n        sideNumberWidth,\r\n        sideNumberRadius,\r\n        referenceGroup,\r\n        referenceGroupToCreate,\r\n        font,\r\n        alignment,\r\n        fontSize,\r\n        fontColorName,\r\n        fontColor,\r\n        bold,\r\n        italic,\r\n        underlined,\r\n        stroke,\r\n        textTransform,\r\n        verticalAlign,\r\n        marginTop,\r\n        marginBottom,\r\n        firstRowIndent,\r\n        otherRowsIndent,\r\n        lineSpacing,\r\n        customLineSpacing,\r\n        wordSpacing,   \r\n        leftBorder,\r\n        rightBorder,\r\n        topBorder,\r\n        bottomBorder,\r\n        borderColorName,\r\n        borderColor,\r\n        borderThickness,\r\n        borderType,\r\n        fillingColorName,\r\n        fillingColor,\r\n        connectToPrevious,\r\n        tocIndentation,\r\n        shortCutWinView,\r\n        shortCutMacView,\r\n    } = formState;\r\n\r\n    const changeOpenedTab = setStateProperty(\"openedTab\");\r\n    const changeDecKey = setStateProperty(\"decKey\");\r\n    const changeGroup = setStateProperty(\"group\");\r\n    const changeGroupToCreate = setStateProperty(\"groupToCreate\");\r\n    const changeActive = toggleStateProperty(\"active\");\r\n    const changeStyleNameEn = setStateProperty(\"styleNameEn\");\r\n    const changeStyleNameDe = setStateProperty(\"styleNameDe\");\r\n    const changeStyleNameRu = setStateProperty(\"styleNameRu\");\r\n    const changeStyleNameFr = setStateProperty(\"styleNameFr\");\r\n    const changeWordStyleName = setStateProperty(\"wordStyleName\");\r\n    const changeSoftReturn = toggleStateProperty(\"softReturn\");\r\n    const changeIndentationalLevel = setStateProperty(\"indentationalLevel\")\r\n    const changeBackspaceActionWithContent = setStateProperty(\"backspaceActionWithContent\");\r\n    const changeBackspaceActionWithoutContent = setStateProperty(\"backspaceActionWithoutContent\")\r\n    const changeReturnActionNextSection = setStateProperty(\"returnActionNextSection\");\r\n    const changeReturnActionEmptySection = setStateProperty(\"returnActionEmptySectionStyle\")\r\n    const changeTabAction = setStateProperty(\"tabAction\");\r\n    const changeShiftTabAction = setStateProperty(\"shiftTabAction\");\r\n    const changeIsList = toggleStateProperty(\"isList\");\r\n    const changeListName = setStateProperty(\"listName\");\r\n    const changeOrderLevel = setStateProperty(\"orderLevel\");\r\n    const changePrefix = setStateProperty(\"prefix\");\r\n    const changeSuffix = setStateProperty(\"suffix\");\r\n    const changeSuffixDistance = setStateProperty(\"suffixDistance\");\r\n    const changeMagicTabs = toggleStateProperty(\"magicTabs\");\r\n    const changeListItem = setStateProperty(\"listItem\");\r\n    const changeNumberingStyle = setStateProperty(\"numberingStyle\");\r\n    const changeContinueNumbering = toggleStateProperty(\"continueNumbering\");\r\n    const changeAllowRestartNumbering = toggleStateProperty(\"allowRestartNumbering\");\r\n    const changeIncludePreviousFrom = setStateProperty(\"includePreviousFrom\");\r\n    const changeSideNumberFont = setStateProperty(\"sideNumberFont\");\r\n    const changeSideNumberAlignment = setStateProperty(\"sideNumberAlignment\");\r\n    const changeSideNumberFontSize = setNumber(\"sideNumberFontSize\");\r\n    const changeSideNumberFontColor = setColor(\"sideNumberFontColor\");\r\n    const changeSideNumberFillingColor = setColor(\"sideNumberFillingColor\");\r\n    const changeSideNumberWidth = setNumber(\"sideNumberWidth\");\r\n    const changeSideNumberRadius = setNumber(\"sideNumberRadius\");\r\n    const changeReferenceGroup = setStateProperty(\"referenceGroup\");\r\n    const changeReferenceGroupToCreate = setStateProperty(\"referenceGroupToCreate\");\r\n    const changeFont = setStateProperty(\"font\");\r\n    const changeAlignment = setStateProperty(\"alignment\");\r\n    const changeFontSize = setNumber(\"fontSize\");\r\n    const changeFontColorName = setStateProperty(\"fontColorName\");\r\n    const changeFontColor = setColor(\"fontColor\");\r\n    const changeBold = toggleStateProperty(\"bold\");\r\n    const changeItalic = toggleStateProperty(\"italic\");\r\n    const changeUnderlined = toggleStateProperty(\"underlined\");\r\n    const changeStroke = toggleStateProperty(\"stroke\");\r\n    const changeTextTransform = setStateProperty(\"textTransform\");\r\n    const changeVerticalAlign = setStateProperty(\"verticalAlign\");\r\n    const changeMarginTop = setNumber(\"marginTop\");\r\n    const changeMarginBottom = setNumber(\"marginBottom\");\r\n    const changeFirstRowIndent = setNumber(\"firstRowIndent\");\r\n    const changeOtherRowsIndent = setNumber(\"otherRowsIndent\");\r\n    const changeLineSpacing = setStateProperty(\"lineSpacing\");\r\n    const changeCustomLineSpacing = setNumber(\"customLineSpacing\");\r\n    const changeWordSpacing = setNumber(\"wordSpacing\");\r\n    const changeLeftBorder = toggleStateProperty(\"leftBorder\");\r\n    const changeRightBorder = toggleStateProperty(\"rightBorder\");\r\n    const changeTopBorder = toggleStateProperty(\"topBorder\");\r\n    const changeBottomBorder = toggleStateProperty(\"bottomBorder\");\r\n    const changeBorderColorName = setStateProperty(\"borderColorName\");\r\n    const changeBorderColor = setColor(\"borderColor\");\r\n    const changeBorderThickness = setNumber(\"borderThickness\");\r\n    const changeFillingColorName = setStateProperty(\"fillingColorName\");\r\n    const changeFillingColor = setColor(\"fillingColor\");\r\n    const changeConnectToPrevious = toggleStateProperty(\"connectToPrevious\");\r\n    const changeTocIndentation = setStateProperty(\"tocIndentation\");\r\n    const changeShortCutWin = setShortCut(\"shortCutWin\", \"shortCutWinView\");\r\n    const changeShortCutMac = setShortCut(\"shortCutMac\", \"shortCutMacView\", true);\r\n\r\n    const changePreviewText = e => {\r\n        const { value } = e.target;\r\n        if (value && value !== \"<div></div>\" && value !== \"<br>\") {\r\n            setStateProperty(\"previewText\")(null, getUnstyledText(value));\r\n        } else {\r\n            setStateProperty(\"previewText\")(null, `<div><br></div>`);\r\n        }\r\n    };\r\n\r\n    const changeListType = e => {\r\n        const { value } = e.target;\r\n        setStateProperty(\"listType\")(null, value);\r\n        if (value === \"ordered\" && suffix === \"\") {\r\n            setStateProperty(\"suffix\")(null, \".\");\r\n        } else if (value === \"unordered\" && suffix === \".\") {\r\n            setStateProperty(\"suffix\")(null, \"\");\r\n        }\r\n    };\r\n\r\n    const changeUnicodeNumber = e => {\r\n        const newUnicodeNumber = setColor(\"unicodeNumber\")(e);\r\n        const newUnicodeChar = newUnicodeNumber !== \"\" ? unicodeNumberToChar(newUnicodeNumber) : \"\";\r\n        setStateProperty(\"unicodeChar\")(null, newUnicodeChar);\r\n    };\r\n    \r\n    const changeUnicodeChar = e => {\r\n        const newUnicodeChar = setBullet(\"unicodeChar\")(e);\r\n        const newUnicodeNumber = newUnicodeChar !== \"\" ? unicodeCharToNumber(newUnicodeChar) : \"\";\r\n        setStateProperty(\"unicodeNumber\")(null, newUnicodeNumber);\r\n    };\r\n\r\n    const changeSideNumber = e => {\r\n        toggleStateProperty(\"sideNumber\")(e);\r\n        if (e.target.checked && suffix === \".\") {\r\n            setStateProperty(\"suffix\")(null, \"\");\r\n        } else if (!e.target.checked && suffix === \"\") {\r\n            setStateProperty(\"suffix\")(null, \".\");\r\n        }\r\n    };\r\n\r\n    const changeBorderType = e => {\r\n        setStateProperty(\"borderType\")(e);\r\n        if (e.target.value === \"double\" && borderThickness === \"2\") {\r\n            setStateProperty(\"borderThickness\")(null, \"3\");\r\n        }\r\n        if (e.target.value !== \"double\" && borderThickness === \"3\") {\r\n            setStateProperty(\"borderThickness\")(null, \"2\");\r\n        }\r\n        };\r\n\r\n    const previewFontColor = getCorrectColor(fontColor, \"f5f5f5\");\r\n    const previewFillingColor = getCorrectColor(fillingColor, \"f5f5f5\");\r\n    const previewAdditionalFillingColor = connectToPrevious ? previewFillingColor : \"f5f5f5\";\r\n    const indentsDifference = (firstRowIndent || 0) - (otherRowsIndent || 0);\r\n    const previewMarginLeft = otherRowsIndent ? `${otherRowsIndent >= 12 ? 12 : otherRowsIndent}cm` : 0;\r\n    const previewTextIndent = indentsDifference ? `${indentsDifference >= 12 ? 12 : indentsDifference}cm` : 0;\r\n\r\n    const previewStyle = {\r\n        fontSize: !fontSize ? \"0\" : `${fontSize <= 120 ? fontSize : 120}pt`,\r\n        color: `#${previewFontColor}`,\r\n        fontFamily: font,\r\n        alignItems: alignmentsMap[alignment],\r\n        textAlign: alignment,\r\n        fontWeight: bold ? \"bold\" : \"normal\",\r\n        fontStyle: italic ? \"italic\" : \"normal\",\r\n        textDecoration: `${underlined ? \"underline\" : \"\"}${stroke ? \" line-through\" : \"\"}`.trim() || \"none\",\r\n        verticalAlign,\r\n        textTransform: textTransform !== \"small-caps\" ? textTransform : \"none\",\r\n        fontVariant: textTransform === \"small-caps\" ? textTransform : \"normal\",\r\n        backgroundColor: `#${previewFillingColor}`,\r\n        backgroundImage:  `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        marginLeft: previewMarginLeft,\r\n        textIndent: previewTextIndent,\r\n        wordSpacing: `${wordSpacing || 0}pt`,\r\n        lineHeight: (lineSpacing !== \"custom\" ? lineSpacing : (!customLineSpacing ? \"1.15\" : `${customLineSpacing || 0}`)),\r\n        marginBottom: `${marginBottom || 0}pt`,\r\n        marginTop: `${marginTop || 0}pt`,\r\n    };\r\n\r\n    const previewProps = { previewText, changePreviewText, previewStyle };\r\n\r\n    const previewSideNumberFontColor = getCorrectColor(sideNumberFontColor, \"f5f5f5\");\r\n    const previewSideNumberFillingColor = getCorrectColor(sideNumberFillingColor, \"f5f5f5\");\r\n\r\n    const sideNumberStyle = (!sideNumber || listType === \"unordered\") ? {} : {\r\n        fontFamily: sideNumberFont,\r\n        textAlign: sideNumberAlignment,\r\n        fontSize: !sideNumberFontSize ? \"0\" : `${sideNumberFontSize <= 120 ? sideNumberFontSize : 120}pt`,\r\n        color: `#${previewSideNumberFontColor}`,\r\n        backgroundColor: `#${previewSideNumberFillingColor}`,\r\n        minWidth: `${sideNumberWidth || 0}pt`,\r\n        borderRadius: `${sideNumberRadius || 0}pt`,\r\n    };\r\n\r\n    const listPreviewProps = { \r\n        listChars: getListChars({\r\n                isOrderedList: listType === \"ordered\", \r\n                numberingStyle, \r\n                listItem,\r\n                unicodeChar,\r\n            }),\r\n        listPreviewStyle: previewStyle,\r\n        prefix, \r\n        suffix, \r\n        suffixDistance,\r\n        sideNumberStyle,\r\n    };\r\n\r\n    const namesSectionProps = {\r\n        decKey, changeDecKey,\r\n        group, changeGroup,\r\n        newGroup: groupToCreate, changeGroupToCreate,\r\n        active, changeActive,\r\n        styleNameEn, changeStyleNameEn,\r\n        styleNameDe, changeStyleNameDe,\r\n        styleNameRu, changeStyleNameRu,\r\n        styleNameFr, changeStyleNameFr,\r\n    }; \r\n\r\n    const wordExportProps = {\r\n        wordStyleName, changeWordStyleName,\r\n        softReturn, changeSoftReturn,\r\n    };\r\n\r\n    const positioningSectionProps = {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithoutContent, changeBackspaceActionWithoutContent,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    };\r\n\r\n    const listSectionProps = { \r\n        listPreviewProps,\r\n        isList, changeIsList, \r\n        listName, changeListName,\r\n        orderLevel, changeOrderLevel,\r\n        prefix, changePrefix,\r\n        suffix, changeSuffix,\r\n        suffixDistance, changeSuffixDistance,\r\n        magicTabs, changeMagicTabs,\r\n        listType, changeListType, \r\n        listItem, changeListItem,\r\n        unicodeNumber, changeUnicodeNumber,\r\n        unicodeChar, changeUnicodeChar,\r\n        numberingStyle, changeNumberingStyle,\r\n        continueNumbering, changeContinueNumbering,\r\n        allowRestartNumbering, changeAllowRestartNumbering,\r\n        includePreviousFrom, changeIncludePreviousFrom,\r\n        sideNumber, changeSideNumber,\r\n        sideNumberFont, changeSideNumberFont,\r\n        sideNumberAlignment, changeSideNumberAlignment,\r\n        sideNumberFontSize, changeSideNumberFontSize,\r\n        sideNumberFontColor, changeSideNumberFontColor,\r\n        sideNumberFillingColor, changeSideNumberFillingColor,\r\n        sideNumberWidth, changeSideNumberWidth,\r\n        sideNumberRadius, changeSideNumberRadius,\r\n    };\r\n\r\n    const referencingSectionProps = {\r\n        referenceGroup, changeReferenceGroup,\r\n        newGroup: referenceGroupToCreate, changeReferenceGroupToCreate,\r\n    };\r\n\r\n    const typographySectionProps = { \r\n        previewProps,\r\n        font, changeFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    };\r\n\r\n    const distancesSectionProps = {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    };\r\n\r\n    const framesSectionProps = { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n    };\r\n\r\n    const fillingSectionProps = { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n    };\r\n\r\n    const tocSectionProps = {\r\n        tocIndentation, changeTocIndentation,\r\n    };\r\n\r\n    const shortCutsSectionProps = {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    };\r\n    \r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CustomDialog\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                scroll=\"body\"\r\n                className=\"paragraphDecorators-dialog\"\r\n                fullWidth={true}\r\n                maxWidth={false}\r\n                id=\"dialog\"\r\n            >\r\n                <div className=\"header\">\r\n                    <DialogTitle className=\"header-title\">\r\n                        <p>Create new paragraph decorator</p>\r\n                    </DialogTitle>\r\n                    <div className=\"header-buttons\">\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            onClick={onClose}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {}}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <DialogContent className=\"content\">\r\n                    <div className=\"content-leftSide\">\r\n                        <CustomTabs \r\n                            className=\"dialogTabs\"\r\n                            value={openedTab} \r\n                            onChange={changeOpenedTab} \r\n                            orientation=\"vertical\"\r\n                            color=\"primary\"\r\n                            indicatorColor=\"primary\"\r\n                        >\r\n                            <CustomTab className=\"dialogTab\" label=\"Names\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"WORD export\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Positioning\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"List\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Referencing\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Typography\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Distances\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Frames\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Filling\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"ToC\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Short cuts\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Test\" />\r\n                        </CustomTabs>\r\n                    </div>\r\n                    <div className=\"content-rightSide\">\r\n                        { openedTab === 0 && <NamesSection {...namesSectionProps} /> }\r\n                        { openedTab === 1 && <WordExportSection {...wordExportProps} /> }\r\n                        { openedTab === 2 && <PositioningSection {...positioningSectionProps} /> }\r\n                        { openedTab === 3 && <ListSection {...listSectionProps} />}\r\n                        { openedTab === 4 && <ReferencingSection {...referencingSectionProps} /> }\r\n                        { openedTab === 5 && <TypographySection {...typographySectionProps} /> }\r\n                        { openedTab === 6 && <DistancesSection {...distancesSectionProps} /> }\r\n                        { openedTab === 7 && <FramesSection {...framesSectionProps} /> }\r\n                        { openedTab === 8 && <FillingSection {...fillingSectionProps} /> }\r\n                        { openedTab === 9 && <TocSection {...tocSectionProps} /> }\r\n                        { openedTab === 10 && <ShortCutsSection {...shortCutsSectionProps} /> }\r\n                        { openedTab === 11 && <TestSection {...typographySectionProps} /> }\r\n                    </div>\r\n                </DialogContent>\r\n            </CustomDialog>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { formState: state };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(changeDecoratorForm(payload)),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewDecDialog);","export const CHANGE_DECORATOR_FORM = \"CHANGE_DECORATOR_FORM\";\r\nexport const CLEAR_DECORATOR_FORM = \"CLEAR_DECORATOR_FORM\";\r\n\r\nexport const changeDecoratorForm = payload => {\r\n    return {\r\n        type: CHANGE_DECORATOR_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\n\r\nexport const clearDecoratorForm = payload => {\r\n    return {\r\n        type: CLEAR_DECORATOR_FORM,\r\n        payload,\r\n    };\r\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport NewDecDialog from \"./components/NewDecDialog\";\nimport { clearDecoratorForm } from \"./components/NewDecDialog/actions\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n    state = {\n        isOpen: true,\n    };\n\n    handleClick = () => {\n        this.setState(({ isOpen }) => {\n            return {\n                isOpen: !isOpen\n            };\n        });\n    };\n\n    onClose = () => {\n      this.setState({ isOpen: false });\n      this.props.clearForm();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <button onClick={this.handleClick}>Open</button>\n                <NewDecDialog \n                    isOpen={this.state.isOpen}\n                    onClose={this.onClose}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        clearForm: () => dispatch(clearDecoratorForm()),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { sampleText } from \"../components/NewDecDialog/constants\";\r\n\r\nconst initialState = { \r\n    openedTab: 0,\r\n    previewText: sampleText,\r\n    decKey: \"\",\r\n    group: \"\",\r\n    groupToCreate: \"\",\r\n    active: false,\r\n    styleNameEn: \"\",\r\n    styleNameDe: \"\",\r\n    styleNameRu: \"\",\r\n    styleNameFr: \"\",\r\n    wordStyleName: \"\",\r\n    softReturn: false,\r\n    indentationalLevel: \"\",\r\n    backspaceActionWithContent: \"merge\",\r\n    backspaceActionWithoutContent: \"apply_other_pd\",\r\n    returnActionNextSection: \"default\",\r\n    returnActionEmptySection: \"default\",\r\n    tabAction: \"\",\r\n    shiftTabAction: \"\",\r\n    isList: false,\r\n    listName: \"\",\r\n    orderLevel: \"\",\r\n    prefix: \"\",\r\n    suffix: \"\",\r\n    suffixDistance: \"0.25\",\r\n    magicTabs: false,\r\n    listType: \"unordered\",\r\n    listItem: \"bulletpoint\",\r\n    unicodeNumber: \"\",\r\n    unicodeChar: \"\",\r\n    numberingStyle: \"decimal\",\r\n    continueNumbering: false,\r\n    allowRestartNumbering: false,\r\n    includePreviousFrom: \"\",\r\n    sideNumber: false,\r\n    sideNumberFont: \"Roboto\",\r\n    sideNumberAlignment: \"center\",\r\n    sideNumberFontSize: \"12\",\r\n    sideNumberFontColor: \"FFF\",\r\n    sideNumberFillingColor: \"1E88E5\",\r\n    sideNumberWidth: \"20\",\r\n    sideNumberRadius: \"10\",\r\n    referenceGroup: \"\",\r\n    referenceGroupToCreate: \"\",\r\n    font: \"Roboto\",\r\n    alignment: \"left\",\r\n    fontSize: \"12\",\r\n    fontColorName: \"Black\",\r\n    fontColor: \"000\",\r\n    bold: false,\r\n    italic: false,\r\n    underlined: false,\r\n    stroke: false,\r\n    textTransform: \"none\",\r\n    verticalAlign: \"baseline\",\r\n    marginTop: \"6\",\r\n    marginBottom: \"6\",\r\n    firstRowIndent: \"0\",\r\n    otherRowsIndent: \"0\",\r\n    lineSpacing: \"1.15\",\r\n    customLineSpacing: \"\",\r\n    wordSpacing: \"0\",   \r\n    leftBorder: false,\r\n    rightBorder: false,\r\n    topBorder: false,\r\n    bottomBorder: false,\r\n    borderColorName: \"Red\",\r\n    borderColor: \"f00\",\r\n    borderThickness: \"2\",\r\n    borderType: \"solid\",\r\n    fillingColorName: \"\",\r\n    fillingColor: \"\",\r\n    connectToPrevious: false,\r\n    tocIndentation: \"\",\r\n    shortCutWin: \"\",\r\n    shortCutWinView: \"\",\r\n    shortCutMac: \"\",\r\n    shortCutMacView: \"\",\r\n};\r\n\r\nexport default initialState;","import { CHANGE_DECORATOR_FORM, CLEAR_DECORATOR_FORM } from \"../components/NewDecDialog/actions\";\r\nimport initialState from \"./initialState\";\r\n\r\nconst decoratorFormReducer = (state = initialState, action) =>  {\r\n    switch (action.type) {\r\n        case CHANGE_DECORATOR_FORM:\r\n            return { ...state, ...action.payload };\r\n        case CLEAR_DECORATOR_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default decoratorFormReducer;","import { createStore } from \"redux\";\r\nimport decoratorFormReducer from \"./reducers/decoratorFormReducer\";\r\n\r\nexport default createStore(\r\n    decoratorFormReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}