{"version":3,"sources":["components/NewDecDialog/common/CustomInput.js","components/NewDecDialog/common/NewGroupDialog.js","components/NewDecDialog/hoc/withNewGroupControl.js","components/NewDecDialog/sections/NamesSection.js","components/NewDecDialog/sections/WordExportSection.js","components/NewDecDialog/common/CustomInputShort.js","components/NewDecDialog/constants.js","components/NewDecDialog/sections/PositioningSection/index.js","components/NewDecDialog/sections/PositioningSection/PositioningSection.js","components/NewDecDialog/common/Preview/ListPreview.js","components/NewDecDialog/utils/utils.js","components/NewDecDialog/common/ColorField/index.js","components/NewDecDialog/common/ColorField/ColorField.js","components/NewDecDialog/sections/ListSection.js","components/NewDecDialog/sections/ReferencingSection.js","components/NewDecDialog/common/ContentEditable.js","components/NewDecDialog/common/Preview/Preview.js","components/NewDecDialog/common/Preview/index.js","components/NewDecDialog/sections/TypographySection/index.js","components/NewDecDialog/sections/TypographySection/TypographySection.js","components/NewDecDialog/sections/DistancesSection.js","components/NewDecDialog/sections/FramesSection/FrameTypeInput.js","components/NewDecDialog/sections/FramesSection/index.js","components/NewDecDialog/sections/FramesSection/FramesSection.js","components/NewDecDialog/sections/FillingSection.js","components/NewDecDialog/sections/TocSection.js","components/NewDecDialog/sections/ShortCutsSection.js","components/NewDecDialog/sections/TestSection.js","components/NewDecDialog/utils/getShortCutUtils.js","components/NewDecDialog/Handlers.js","components/NewDecDialog/theme.js","components/NewDecDialog/common/CustomTab.js","components/NewDecDialog/common/CustomTabs.js","components/NewDecDialog/common/CustomDialog.js","components/NewDecDialog/index.js","components/NewDecDialog/actions/index.js","App.js","components/NewDecDialog/initialState.js","reducers/decoratorFormReducer.js","store.js","serviceWorker.js","index.js"],"names":["CustomInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","minWidth","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","NewGroupDialog","state","props","currentGroup","groupType","nameEn","nameDe","nameRu","nameFr","nameFrCa","nameEs","groupKey","onInputChange","inputName","e","setState","target","value","onClose","hideDialog","onGroupSave","onSave","changeGroupSelect","trim","length","groupToSave","this","isOpen","isEditMode","titleText","buttonText","Dialog","className","open","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","variant","margin","onChange","DialogActions","Button","onClick","color","React","Component","withNewGroupControl","ViewComponent","groupSelect","newGroup","handleClick","newValue","decKey","changeDecKey","group","changeGroup","active","changeActive","styleNameEn","changeStyleNameEn","styleNameDe","changeStyleNameDe","styleNameRu","changeStyleNameRu","styleNameFr","changeStyleNameFr","styleNameFrCa","changeStyleNameFrCa","styleNameEs","changeStyleNameEs","changeGroupToCreate","newGroupName","onGroupChange","args","NativeSelect","Checkbox","checked","WordExportSection","wordStyleName","changeWordStyleName","softReturn","changeSoftReturn","CustomInputShort","listStyleType","name","backSpaceActions","key","returnOnEmptySectionActions","decoratorsList","alignmentsMap","center","left","right","justify","numberingSets","decimal","bulletNamesMap","bulletpoint","dash","star","PositioningSection","indentationalLevel","changeIndentationalLevel","backspaceActionWithContent","changeBackspaceActionWithContent","backspaceActionWithContentStyle","changeBackspaceActionWithContentStyle","backspaceActionWithoutContent","changeBackspaceActionWithoutContent","returnActionNextSection","backspaceActionWithoutContentStyle","changeBackspaceActionWithoutContentStyle","changeReturnActionNextSection","returnActionEmptySection","changeReturnActionEmptySection","tabAction","changeTabAction","shiftTabAction","changeShiftTabAction","id","map","action","dec","ListPreview","listPreviewStyle","listChars","prefix","suffix","suffixDistance","sideNumberStyle","listItemsBeginnings","listChar","listItemBeginingStyle","marginRight","style","getCorrectColor","hex","correctColor","selectAllOnClick","defaultValue","focus","select","getOffset","alignType","parseFloat","slice","scrollToBottom","setTimeout","document","getElementsByClassName","scrollTo","top","Number","MAX_SAFE_INTEGER","behavior","getListChars","isOrderedList","numberingStyle","listItem","unicodeChar","newBullet","Array","fill","ColorField","hideColorPicker","showColorPicker","colorPickerHandler","changeColor","colorCode","changeColorCode","defaultColorCode","required","bottomAligned","colorError","inputError","pickerColor","colorSampleStyle","colorPickerClassName","InputProps","startAdornment","InputAdornment","error","onChangeComplete","disableAlpha","ListSection","listPreviewProps","isList","changeIsList","listName","changeListName","orderLevel","changeOrderLevel","changePrefix","changeSuffix","changeSuffixDistance","magicTabs","changeMagicTabs","listType","changeListType","changeListItem","unicodeNumber","changeUnicodeNumber","changeUnicodeChar","changeNumberingStyle","continueNumbering","changeContinueNumbering","allowRestartNumbering","changeAllowRestartNumbering","includePreviousFrom","changeIncludePreviousFrom","sideNumber","changeSideNumber","sideNumberFont","changeSideNumberFont","sideNumberAlignment","changeSideNumberAlignment","sideNumberFontSize","changeSideNumberFontSize","sideNumberFontColor","changeSideNumberFontColor","sideNumberFillingColor","changeSideNumberFillingColor","sideNumberWidth","changeSideNumberWidth","sideNumberRadius","changeSideNumberRadius","Object","entries","referenceGroup","changeReferenceGroup","changeReferenceGroupToCreate","onXrefChange","xref","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","q","propertyIsEnumerable","normalizeHtml","str","replace","replaceCaret","el","findLastTextNode","node","nodeType","Node","TEXT_NODE","children","childNodes","textNode","isTargetFocused","activeElement","nodeValue","sel","window","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","ContentEditable","arguments","lastHtml","html","innerRef","current","getEl","emitChange","originalEvt","innerHTML","evt","assign","_a","tagName","ref","onInput","onBlur","onKeyUp","onKeyDown","contentEditable","disabled","dangerouslySetInnerHTML","__html","nextProps","deepEqual","Preview","previewText","changePreviewText","previewStyle","verticalAlign","editableContentStyle","outline","marginBottom","selectAllChildren","TypographySection","previewProps","font","changeFont","alignment","changeAlignment","changeFontSize","fontColorName","changeFontColorName","fontColor","changeFontColor","bold","changeBold","italic","changeItalic","underlined","changeUnderlined","stroke","changeStroke","textTransform","changeTextTransform","changeVerticalAlign","FormControlLabel","control","label","labelPlacement","RadioGroup","row","Radio","DistancesSection","changeMarginTop","changeMarginBottom","firstRowIndent","changeFirstRowIndent","otherRowsIndent","changeOtherRowsIndent","lineSpacing","changeLineSpacing","customLineSpacing","changeCustomLineSpacing","wordSpacing","changeWordSpacing","FrameTypeInput","width","FramesSection","leftBorder","changeLeftBorder","rightBorder","changeRightBorder","topBorder","changeTopBorder","bottomBorder","changeBottomBorder","borderColorName","changeBorderColorName","changeBorderColor","borderThickness","changeBorderThickness","borderType","changeBorderType","previewBorderWidth","isNaN","borderLeft","marginLeft","borderRight","borderTop","borderBottom","Select","MenuItem","FillingSection","fillingColorName","changeFillingColorName","fillingColor","changeFillingColor","connectToPrevious","changeConnectToPrevious","TocSection","tocIndentation","changeTocIndentation","ShortCutSection","shortCutWinView","changeShortCutWin","shortCutMacView","changeShortCutMac","getShortCutUtils","systemName","keyCode","preventDefault","stopPropagation","ShortcutUtils","isDeadKey","prevent","deleteKey","shortCut","ctrlKey","shiftKey","altKey","metaKey","shortCutForView","convertShortcutToMeta","isCmdPressed","stringValue","keys","CMD_KEYS","forEach","keycode","removeDuplicateShortcuts","decorators","newPdShortcut","removed","decoratorKey","item","item_type","isEqual","keyboard_shortcut","childItems","child_items","itemKey","removeDuplicateShortcutsInInlineStyle","inlineStyles","styleKey","Handlers","update","formState","toggleStateProperty","propName","setStateProperty","secondArg","undefined","setBullet","setColor","filteredInput","match","setNumber","setShortCut","valuePropName","viewPropName","isMac","convertEventToShortCut","createMuiTheme","primary","blue","secondary","pink","CustomTab","overflow","opacity","selected","Tab","CustomTabs","indicator","zIndex","display","Tabs","CustomDialog","minHeight","height","container","scrollBody","paperFullWidth","maxHeight","flexDirection","paperScrollBody","connect","dispatch","updateForm","payload","type","changeDecoratorForm","openedTab","groupToCreate","referenceGroupToCreate","changeOpenedTab","previewFontColor","previewFillingColor","previewAdditionalFillingColor","indentsDifference","previewMarginLeft","previewTextIndent","alignItems","textAlign","fontWeight","fontStyle","textDecoration","fontVariant","backgroundImage","textIndent","lineHeight","styledText","unstyledText","getUnstyledText","previewSideNumberFontColor","previewSideNumberFillingColor","namesSectionProps","wordExportProps","positioningSectionProps","listSectionProps","newUnicodeNumber","newUnicodeChar","String","fromCharCode","parseInt","unicodeNumberToChar","charCodeAt","toString","unicodeCharToNumber","referencingSectionProps","typographySectionProps","distancesSectionProps","framesSectionProps","fillingSectionProps","tocSectionProps","shortCutsSectionProps","ThemeProvider","aria-labelledby","scroll","orientation","indicatorColor","ShortCutsSection","TestSection","App","clearForm","initialState","shortCutWin","shortCutMac","decoratorFormReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b46b95d.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInput = withStyles(theme => ({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      minWidth: \"183px\",\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInput;","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass NewGroupDialog extends React.Component {\r\n\r\n    state = this.props.currentGroup \r\n          ? this.props.currentGroup \r\n          : this.props.groupType !== \"xref\" \r\n          ? { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", }\r\n          : { nameEn: \"\", nameDe: \"\", nameRu: \"\", nameFr: \"\", nameFrCa: \"\", nameEs: \"\", groupKey: \"\", };\r\n    \r\n    onInputChange = inputName => e => {\r\n        this.setState({ \r\n            [inputName]: e.target.value \r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        const {currentGroup, hideDialog } = this.props;\r\n        this.setState({ ...currentGroup });\r\n        hideDialog()\r\n    };\r\n\r\n    onGroupSave = () => {\r\n        const { onSave, changeGroupSelect, hideDialog, groupType } = this.props;\r\n        if (this.state.nameEn.trim().length && (groupType !== \"xref\" || this.state.groupKey.trim().length)) {\r\n            const groupToSave = {\r\n                nameEn: this.state.nameEn.trim(),\r\n                nameDe: this.state.nameDe.trim(),\r\n                nameRu: this.state.nameRu.trim(),\r\n                nameFr: this.state.nameFr.trim(),\r\n                nameFrCa: this.state.nameFrCa.trim(),\r\n                nameEs: this.state.nameEs.trim(),\r\n            };\r\n            if (groupType === \"xref\") {\r\n                groupToSave.groupKey = this.state.groupKey.trim();\r\n            }\r\n            onSave(groupToSave);\r\n            changeGroupSelect(groupToSave)(null, this.state.nameEn.trim());\r\n            hideDialog();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isOpen, isEditMode } = this.props;\r\n        const { onInputChange, onGroupSave, onClose } = this;\r\n        const titleText = `${isEditMode ? \"Edit\" : \"Create\"} new ${this.props.groupType === \"xref\" ? \"reference \" : \"\"}group`\r\n        const buttonText = isEditMode ? \"Save\" : \"Create\";\r\n        return (\r\n            <Dialog\r\n                className=\"paragraphDecorators-dialog\"\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n            >\r\n                <DialogTitle>{titleText}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        {\r\n                            this.props.groupType === \"xref\" \r\n                            &&\r\n                            <>\r\n                                <span>Group Key</span>\r\n                                <TextField \r\n                                    variant=\"outlined\" \r\n                                    margin=\"dense\" \r\n                                    onChange={onInputChange(\"groupKey\")}\r\n                                    value={this.state.groupKey}\r\n                                />\r\n                            </>\r\n                        }\r\n                        <span>Name EN</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEn\")}\r\n                            value={this.state.nameEn}\r\n                        />\r\n                        <span>Name DE</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameDe\")} \r\n                            value={this.state.nameDe}\r\n                        />                        \r\n                        <span>Name RU</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameRu\")} \r\n                            value={this.state.nameRu}\r\n                        />                        \r\n                        <span>Name FR<br/><span className=\"span_smallText\">France</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFr\")} \r\n                            value={this.state.nameFr}\r\n                        />\r\n                        <span>Name FR<br/><span className=\"span_smallText\">Canada</span></span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameFrCa\")} \r\n                            value={this.state.nameFrCa}\r\n                        />\r\n                        <span>Name ES</span>\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            onChange={onInputChange(\"nameEs\")} \r\n                            value={this.state.nameEs}\r\n                        />                  \r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color=\"default\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={onGroupSave} color=\"primary\">\r\n                        {buttonText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n};\r\n\r\nexport default NewGroupDialog;","import React from \"react\";\r\n\r\nconst withNewGroupControl = (ViewComponent) => {\r\n    return class extends React.Component {\r\n        state = {\r\n            isOpen: false,\r\n            groupSelect: \"\",\r\n            newGroup: this.props.newGroup || \"\",\r\n        }\r\n        \r\n        handleClick = () => {\r\n            this.setState(({ isOpen }) => {\r\n                return {\r\n                    isOpen: !isOpen\r\n                };\r\n            });\r\n        }\r\n    \r\n        onSave = newGroup => {\r\n            this.setState({ newGroup });\r\n        }\r\n    \r\n        changeGroupSelect = (newValue) => {\r\n            this.setState({\r\n                groupSelect: newValue,\r\n            });\r\n        }\r\n\r\n        hideDialog = () => {\r\n            this.setState({ isOpen: false });\r\n        }\r\n        \r\n        render() {\r\n            const { handleClick, onSave, changeGroupSelect, hideDialog } = this; \r\n            return ( <ViewComponent {...this.props} {...this.state} {...{ handleClick, onSave, changeGroupSelect, hideDialog }} /> );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withNewGroupControl;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\n\r\nconst NamesSection = (props) => {\r\n    const { \r\n        newGroup, \r\n        isOpen, \r\n        hideDialog, \r\n        handleClick, \r\n        onSave, \r\n        decKey, changeDecKey,\r\n        group, changeGroup,\r\n        active, changeActive,\r\n        styleNameEn, changeStyleNameEn,\r\n        styleNameDe, changeStyleNameDe,\r\n        styleNameRu, changeStyleNameRu,\r\n        styleNameFr, changeStyleNameFr,\r\n        styleNameFrCa, changeStyleNameFrCa,\r\n        styleNameEs, changeStyleNameEs,\r\n        changeGroupToCreate,\r\n    } = props;\r\n    \r\n    const newGroupName = newGroup.nameEn;\r\n    const isEditMode = !!newGroupName;\r\n\r\n    const onGroupChange = group => (...args) => {\r\n        const value = args[0] ? args[0].target.value : args[1];\r\n        if (group.nameEn && value === group.nameEn) {\r\n            changeGroupToCreate(null, group);\r\n        } else {\r\n            changeGroupToCreate(null, \"\");\r\n        }\r\n        changeGroup(...args);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_rightAlignedLabels\">\r\n            <span>Key</span>\r\n            <TextField \r\n                value={decKey}\r\n                onChange={changeDecKey}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Group</span>\r\n            <div>\r\n                <NativeSelect \r\n                    value={group} \r\n                    onChange={onGroupChange(newGroup)}\r\n                    input={ <CustomInput /> }  \r\n                >\r\n                    <option value=\"\">...</option>\r\n                    { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                    <option value=\"0\">Text</option>\r\n                    <option value=\"1\">Heading</option>\r\n                    <option value=\"2\">Heading Heading Heading Heading</option>\r\n                </NativeSelect>\r\n                { !(isEditMode && group !== newGroupName) && (\r\n                    <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                        { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                    </Button>\r\n                ) }\r\n            </div>\r\n\r\n            <span>Active</span>\r\n            <div>\r\n                <Checkbox\r\n                    checked={active}\r\n                    onChange={changeActive} \r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n\r\n            <span>Name EN</span>\r\n            <TextField \r\n                value={styleNameEn}\r\n                onChange={changeStyleNameEn}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name DE</span>\r\n            <TextField \r\n                value={styleNameDe}\r\n                onChange={changeStyleNameDe}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name RU</span>\r\n            <TextField \r\n                value={styleNameRu}\r\n                onChange={changeStyleNameRu}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name FR<br/><span className=\"span_smallText\">France</span></span>\r\n            <TextField \r\n                value={styleNameFr}\r\n                onChange={changeStyleNameFr}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name FR<br/><span className=\"span_smallText\">Canada</span></span>\r\n            <TextField \r\n                value={styleNameFrCa}\r\n                onChange={changeStyleNameFrCa}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n            <span>Name ES</span>\r\n            <TextField \r\n                value={styleNameEs}\r\n                onChange={changeStyleNameEs}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n\r\n\r\n            <NewGroupDialog \r\n                isOpen={isOpen}\r\n                hideDialog={hideDialog}\r\n                onSave={onSave}\r\n                isEditMode={isEditMode}\r\n                currentGroup={newGroup}\r\n                changeGroupSelect={onGroupChange}\r\n                groupType=\"decorators\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withNewGroupControl(NamesSection);","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst WordExportSection = ({ wordStyleName, changeWordStyleName, softReturn, changeSoftReturn }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Style name in WORD</span>\r\n            <TextField \r\n                value={wordStyleName}\r\n                onChange={changeWordStyleName}\r\n                variant=\"outlined\" \r\n                margin=\"dense\" \r\n            />\r\n            \r\n            <span>Soft return</span>\r\n            <div>\r\n                <Checkbox \r\n                    checked={softReturn}\r\n                    onChange={changeSoftReturn}\r\n                    color=\"primary\" \r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WordExportSection;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst CustomInputShort = withStyles(theme => ({\r\n    root: {\r\n      minWidth: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Roboto\",\r\n        \"'Helvetica Neue'\",\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default CustomInputShort;","export const listStyleType = [\r\n  {\r\n    name: '1, 2, 3',\r\n    value: 'decimal',\r\n  },\r\n  {\r\n    name: 'A, B, C',\r\n    value: 'upper-alpha',\r\n  },\r\n  {\r\n    name: 'a, b, c',\r\n    value: 'lower-alpha',\r\n  },\r\n  {\r\n    name: 'I, II, III',\r\n    value: 'upper-roman',\r\n  },\r\n  {\r\n    name: 'i, ii, iii',\r\n    value: 'lower-roman',\r\n  },\r\n];\r\n\r\nexport const backSpaceActions = [\r\n  { key: 'merge', value: 'Merge' },\r\n  { key: 'apply_other_pd', value: 'Apply other PD' },\r\n  { key: 'remove_pd', value: 'Remove PD' },\r\n  { key: 'nothing', value: 'Nothing' }\r\n];\r\n\r\nexport const returnOnEmptySectionActions = [\r\n  { key: 'apply_other_pd', value: 'Apply other PD' },\r\n  { key: 'create_new_section', value: 'Create new section' },\r\n  { key: 'apply_default_pd', value: 'Apply default PD' },\r\n  { key: 'nothing', value: 'Nothing' }\r\n];\r\n\r\nexport const decoratorsList = [\r\n    { name: \"...\", value: \"\" },\r\n    { name: \"Text 0\", value: \"quick_text_0\" },\r\n    { name: \"Text 1\", value: \"quick_text_1\" },\r\n    { name: \"Text 2\", value: \"quick_text_2\" },\r\n    { name: \"Text 3\", value: \"quick_text_3\" },\r\n    { name: \"Text 4\", value: \"quick_text_4\" },\r\n    { name: \"Text 5\", value: \"quick_text_5\" },\r\n];\r\n\r\nexport const alignmentsMap = {\r\n  center: \"center\",\r\n  left: \"flex-start\",\r\n  right: \"flex-end\",\r\n  justify: \"flex-start\",\r\n};\r\n\r\nexport const numberingSets = {\r\n  decimal: [\"1\", \"2\", \"3\", \"4\"],\r\n  \"upper-alpha\": [\"A\", \"B\", \"C\", \"D\"],\r\n  \"lower-alpha\": [\"a\", \"b\", \"c\", \"d\"],\r\n  \"upper-roman\": [\"I\", \"II\", \"III\", \"IV\"],\r\n  \"lower-roman\": [\"i\", \"ii\", \"iii\", \"iv\"],\r\n};\r\n\r\nexport const bulletNamesMap = {\r\n  bulletpoint: \"•\",\r\n  dash: \"—\",\r\n  star: \"★\",\r\n};\r\n\r\nexport const sampleText = `<div>Sample Text. You can change it.</div><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ornare maximus vehicula. Duis nisi velit, dictum id mauris vitae, lobortis pretium quam.</div>`;","import PositioningSection from \"./PositioningSection\";\r\nexport default PositioningSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport CustomInputShort from \"../../common/CustomInputShort\";\r\nimport { backSpaceActions, returnOnEmptySectionActions, decoratorsList } from \"../../constants\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst PositioningSection = (props) => {\r\n    const {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithContentStyle, changeBackspaceActionWithContentStyle,\r\n        backspaceActionWithoutContent, changeBackspaceActionWithoutContent,\r\n        backspaceActionWithoutContentStyle, changeBackspaceActionWithoutContentStyle,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_positioning\">\r\n            <span id=\"r1c1\">Identational level</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={indentationalLevel}\r\n                    onChange={changeIndentationalLevel}\r\n                    id=\"r1c2\" \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>\r\n            \r\n            <div id=\"r2\" className=\"sectionTitle\">\r\n                <span>BACKSPACE</span>\r\n            </div>\r\n\r\n            <span id=\"r3c1\">At the beginning of a section with content</span>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <NativeSelect \r\n                    value={backspaceActionWithContent}\r\n                    onChange={changeBackspaceActionWithContent}\r\n                    id=\"r3c2\" \r\n                    input={ <CustomInput /> }\r\n                >\r\n                    {backSpaceActions.map(action => (\r\n                        <option value={action.key} key={`backSpace ${action.key}`}>{action.value}</option>\r\n                    ))}\r\n                </NativeSelect>\r\n                {   backspaceActionWithContent === \"apply_other_pd\" && (\r\n                    <NativeSelect\r\n                        value={backspaceActionWithContentStyle}\r\n                        onChange={changeBackspaceActionWithContentStyle}\r\n                        input={ <CustomInput /> }\r\n                    >\r\n                        <option value=\"default\">Global Fallback Style</option>\r\n                        { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n                    </NativeSelect>\r\n                ) }\r\n            </div>\r\n\r\n            <span id=\"r4c1\">At the beginning of a section WITHOUT content</span>\r\n            <NativeSelect\r\n                value={backspaceActionWithoutContent}\r\n                onChange={changeBackspaceActionWithoutContent}\r\n                id=\"r4c2\" \r\n                input={ <CustomInput /> }\r\n            >\r\n                {returnOnEmptySectionActions.map(action => (\r\n                    <option value={action.key} key={`backSpace ${action.key}`}>{action.value}</option>\r\n                ))}\r\n            </NativeSelect>\r\n\r\n            <div id=\"r5\" className=\"sectionTitle\">\r\n                <span>RETURN</span>\r\n            </div>\r\n\r\n            <span id=\"r6c1\">Style of next section</span>\r\n            <NativeSelect\r\n                value={returnActionNextSection}\r\n                onChange={changeReturnActionNextSection}\r\n                id=\"r6c2\" \r\n                input={ <CustomInput /> }\r\n            >\r\n                <option value=\"default\">Global Fallback Style</option>\r\n                { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n            </NativeSelect>\r\n\r\n            <span id=\"r7c1\">In empty section change current style to</span>\r\n            <NativeSelect \r\n                value={returnActionEmptySection}\r\n                onChange={changeReturnActionEmptySection}\r\n                id=\"r7c2\" \r\n                input={ <CustomInput /> }\r\n            >\r\n                <option value=\"default\">Global Fallback Style</option>\r\n                { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n            </NativeSelect>\r\n\r\n            <div id=\"r8\" className=\"sectionTitle\">\r\n                <span>TAB / SHIFT+TAB</span>\r\n            </div>\r\n\r\n            <span id=\"r9c1\">TAB – change current style to</span>\r\n            <NativeSelect\r\n                value={tabAction}\r\n                onChange={changeTabAction}\r\n                id=\"r9c2\" \r\n                input={ <CustomInput /> }\r\n            >\r\n                { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n            </NativeSelect>\r\n\r\n            <span id=\"r10c1\">SHIFT+TAB – change current style to</span>\r\n            <NativeSelect\r\n                value={shiftTabAction}\r\n                onChange={changeShiftTabAction} \r\n                id=\"r10c2\" \r\n                input={ <CustomInput /> }\r\n            >\r\n                { decoratorsList.map(dec => <option value={dec.value} key={dec.value}>{dec.name}</option>) }\r\n            </NativeSelect>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PositioningSection;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst ListPreview = (props) => {\r\n    const { \r\n        listPreviewStyle, \r\n        listChars, \r\n        prefix, \r\n        suffix, \r\n        suffixDistance, \r\n        sideNumberStyle,\r\n    } = props;\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n    const listItemsBeginnings = listChars.map(listChar => {\r\n        return (`${prefix}${listChar}${suffix}`);\r\n    });\r\n    const listItemBeginingStyle = {\r\n        marginRight: `${suffixDistance || 0}cm`,\r\n        ...sideNumberStyle,\r\n    };\r\n\r\n    return (\r\n        <div className=\"preview preview_list\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div className=\"preview-content\">\r\n                <div className={demonstrationElementClassName}>\r\n                    <div\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        style={listPreviewStyle}\r\n                    >\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[0]}`}</span><span>The first list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[1]}`}</span><span>The second list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[2]}`}</span><span>The third list item</span>\r\n                        </div>\r\n                        <div>\r\n                            <span \r\n                                className=\"listItemBeginning\"\r\n                                style={listItemBeginingStyle}\r\n                            >{`${listItemsBeginnings[3]}`}</span><span>The fourth list item</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListPreview;","import { numberingSets, bulletNamesMap } from \"../constants\";\r\n\r\nexport const getCorrectColor = (hex, backgroundColor = \"FFF\") => {\r\n    const correctColor = typeof hex === \"string\" && (hex.length === 6 || hex.length === 3) ? hex : backgroundColor;\r\n    return correctColor;\r\n};\r\n\r\nexport const selectAllOnClick = defaultValue => e => {\r\n    if (!defaultValue || e.target.value === defaultValue) {\r\n        e.target.focus();\r\n        e.target.select();\r\n    }\r\n};\r\n\r\nexport const getOffset = (alignType, fontSize) => {\r\n    if (alignType === \"baseline\") {\r\n        return 0;\r\n    }\r\n    return (parseFloat(fontSize.slice()) / 2) * (alignType === \"sub\" ? 1 : -1);\r\n};\r\n\r\nexport const getUnstyledText = styledText => {\r\n    const unstyledText = styledText.replace(/<\\/(.*?)>/gm, \"</div>\").replace(/(?!(?:<\\/(.*?)>|<br(.*?)>)$)<(.*?)>/gm, \"<div>\");\r\n    return unstyledText[0] !== \"<\" ? `<div>${unstyledText}</div>` : unstyledText;\r\n};\r\n\r\nexport const unicodeNumberToChar = unicodeNumber => {\r\n    return String.fromCharCode(parseInt(unicodeNumber, 16));\r\n};\r\n\r\nexport const unicodeCharToNumber = unicodeChar => {\r\n    return unicodeChar.charCodeAt(0).toString(16);\r\n};\r\n\r\nexport const scrollToBottom = className => {\r\n    setTimeout(() => { document.getElementsByClassName(className)[0].scrollTo({\r\n        top: Number.MAX_SAFE_INTEGER,\r\n        behavior: \"smooth\",\r\n    })}, 0);\r\n};\r\n\r\nexport const selectAllEditableContent = className => e => {\r\n    if (e.target.className === className) {\r\n        window.getSelection().selectAllChildren(e.target.children[0]);\r\n    }\r\n};\r\n\r\nexport const getListChars = ({ isOrderedList, numberingStyle, listItem, unicodeChar }) => {\r\n    if (isOrderedList) {\r\n        return numberingSets[numberingStyle];\r\n    }\r\n    const newBullet = bulletNamesMap[listItem] || unicodeChar;\r\n    return Array(4).fill(newBullet);\r\n};\r\n\r\nexport const detectOS = () => {\r\n    if (navigator && navigator.appVersion) {\r\n        if (navigator.appVersion.indexOf(\"Win\") !== -1) {\r\n            return \"Windows\";\r\n        } else if (navigator.appVersion.indexOf(\"Mac\") !== -1) {\r\n            return \"MacOS\";\r\n        }\r\n    }\r\n};","import ColorField from \"./ColorField\";\r\nexport default ColorField;","import React from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport { getCorrectColor, selectAllOnClick } from \"../../utils\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass ColorField extends React.Component {\r\n    state = {\r\n        isOpen: this.props.isOpen,\r\n    };\r\n\r\n    hideColorPicker = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    showColorPicker = () => {\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    colorPickerHandler = changeColor => ({ hex }) => {\r\n        changeColor(null, hex);\r\n    };\r\n\r\n    render() {\r\n        const { colorCode, changeColorCode, defaultColorCode, required, bottomAligned } = this.props;\r\n        const { showColorPicker, hideColorPicker, colorPickerHandler } = this;\r\n        const correctColor = getCorrectColor(colorCode);\r\n        const colorError = correctColor !== colorCode;\r\n        const inputError = colorError && (required || !!colorCode);\r\n        const pickerColor = colorError ? \"\" : `#${correctColor}`;\r\n        const colorSampleStyle = {\r\n            backgroundColor: `#${correctColor}`,\r\n        };\r\n        const colorPickerClassName = `colorPicker${ bottomAligned ? \" colorPicker_bottomAligned\" : \"\"}`;\r\n\r\n        return (\r\n            <div className=\"colorField\">\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    className=\"numberInput\" \r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                    }}\r\n                    value={colorCode}\r\n                    onChange={changeColorCode}\r\n                    onClick={e => { \r\n                        selectAllOnClick(defaultColorCode || \"000\")(e); \r\n                        // this.showColorPicker(); \r\n                    }}\r\n                    error={inputError}\r\n                />\r\n                <div\r\n                    onClick={showColorPicker}\r\n                    className=\"colorSample\" \r\n                    style={colorSampleStyle}\r\n                />\r\n                {this.state.isOpen && (\r\n                    <div className={colorPickerClassName}>\r\n                        <div className=\"colorPicker-chromeBox\">\r\n                            <ChromePicker\r\n                                onChangeComplete={colorPickerHandler(changeColorCode)}\r\n                                color={pickerColor}\r\n                                disableAlpha\r\n                            />\r\n                        </div>\r\n                        <div className=\"colorPicker-popOver\"  onClick={hideColorPicker}></div>\r\n                    </div>\r\n                ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorField;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport ListPreview from \"../common/Preview/ListPreview\";\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport ColorField from \"../common/ColorField\";\r\nimport { listStyleType, bulletNamesMap } from \"../constants\"\r\nimport { selectAllOnClick, scrollToBottom } from \"../utils\";\r\n\r\nconst ListSection = (props) => {\r\n    const {\r\n        listPreviewProps,\r\n        isList, changeIsList, \r\n        listName, changeListName,\r\n        orderLevel, changeOrderLevel,\r\n        prefix, changePrefix,\r\n        suffix, changeSuffix,\r\n        suffixDistance, changeSuffixDistance,\r\n        magicTabs, changeMagicTabs,\r\n        listType, changeListType, \r\n        listItem, changeListItem,\r\n        unicodeNumber, changeUnicodeNumber,\r\n        unicodeChar, changeUnicodeChar,\r\n        numberingStyle, changeNumberingStyle,\r\n        continueNumbering, changeContinueNumbering,\r\n        allowRestartNumbering, changeAllowRestartNumbering,\r\n        includePreviousFrom, changeIncludePreviousFrom,\r\n        sideNumber, changeSideNumber,\r\n        sideNumberFont, changeSideNumberFont,\r\n        sideNumberAlignment, changeSideNumberAlignment,\r\n        sideNumberFontSize, changeSideNumberFontSize,\r\n        sideNumberFontColor, changeSideNumberFontColor,\r\n        sideNumberFillingColor, changeSideNumberFillingColor,\r\n        sideNumberWidth, changeSideNumberWidth,\r\n        sideNumberRadius, changeSideNumberRadius,\r\n    } = props;\r\n\r\n    const onListTypeChange = (...args) => {\r\n        changeListType(...args);\r\n        scrollToBottom(\"content-rightSide\");\r\n    };\r\n\r\n    const onSideNumberChange = (...args) => {\r\n        changeSideNumber(...args);\r\n        scrollToBottom(\"content-rightSide\");\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <div>\r\n                    <div className=\"dialogGrid dialogGrid_2cols dialogGrid_mediumWidth\">\r\n                    <div className=\"listSection-firstSpan\">\r\n                        <span>Is it a list?</span>\r\n                    </div>\r\n                    <div>\r\n                        <Checkbox \r\n                            color=\"primary\" \r\n                            checked={isList} \r\n                            onChange={changeIsList} \r\n                        />\r\n                    </div>\r\n                    { isList && (\r\n                        <>\r\n                            <span>List name</span>\r\n                            <TextField\r\n                                value={listName}\r\n                                onChange={changeListName} \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                            />\r\n\r\n                            <span>Order level</span>\r\n                            <div>\r\n                                <NativeSelect\r\n                                    value={orderLevel}\r\n                                    onChange={changeOrderLevel}\r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    <option value=\"\">...</option>\r\n                                    <option value=\"0\">0</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n\r\n                            <span>Prefix</span>\r\n                            <TextField\r\n                                value={prefix}\r\n                                onChange={changePrefix} \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                            />\r\n\r\n                            <span>Suffix</span>\r\n                            <TextField\r\n                                value={suffix}\r\n                                onChange={changeSuffix} \r\n                                variant=\"outlined\" \r\n                                margin=\"dense\" \r\n                                onClick={selectAllOnClick(\".\")}\r\n                            />\r\n\r\n                            <span>Suffix distance</span>\r\n                            <div className=\"inputWithAdornment\">\r\n                                <NativeSelect\r\n                                    value={suffixDistance}\r\n                                    onChange={changeSuffixDistance} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    <option value=\"0.25\">0.25</option>\r\n                                    <option value=\"0.5\">0.5</option>\r\n                                    <option value=\"0.75\">0.75</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"1.25\">1.25</option>\r\n                                    <option value=\"1.5\">1.5</option>\r\n                                    <option value=\"1.75\">1.75</option>\r\n                                    <option value=\"2\">2</option>\r\n                                </NativeSelect>\r\n                                <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                            </div>\r\n\r\n                            <span>Magic Tabs</span>\r\n                            <div>\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={magicTabs} \r\n                                    onChange={changeMagicTabs} \r\n                                />\r\n                            </div>\r\n\r\n                            <span>Type of list</span>\r\n                            <div>\r\n                                <NativeSelect \r\n                                    value={listType} \r\n                                    onChange={onListTypeChange} \r\n                                    input={ <CustomInput /> }\r\n                                >\r\n                                    <option value={\"unordered\"}>Unordered</option>\r\n                                    <option value={\"ordered\"}>Ordered</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </>\r\n                    ) }\r\n                </div>\r\n                    { isList && listType === \"ordered\" && (\r\n                        <div className=\"listSection-typeSettings\">\r\n                            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                                <span>Numbering style</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={numberingStyle}\r\n                                        onChange={changeNumberingStyle}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        {listStyleType.map(style => (\r\n                                          <option value={style.value} key={style.value}>{style.name}</option>\r\n                                        ))}                                    \r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Continue numbering after interruption</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={continueNumbering}\r\n                                        onChange={changeContinueNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Allow restart numbering</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={allowRestartNumbering} \r\n                                        onChange={changeAllowRestartNumbering}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                                        \r\n                                <span>Include previous levels from</span>\r\n                                <div>\r\n                                    <NativeSelect\r\n                                        value={includePreviousFrom} \r\n                                        onChange={changeIncludePreviousFrom}\r\n                                        input={ <CustomInputShort /> }\r\n                                    >\r\n                                        <option value=\"\">...</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </NativeSelect>\r\n                                </div>\r\n                                        \r\n                                <span>Side number</span>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={sideNumber}\r\n                                        onChange={onSideNumberChange}\r\n                                        color=\"primary\" \r\n                                    />\r\n                                </div>\r\n                            </div> \r\n\r\n                            { sideNumber && (\r\n                                <div className=\"dialogGrid dialogGrid_2minCols listSection-typeSettings\">\r\n                                    <span>Font</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberFont}\r\n                                        onChange={changeSideNumberFont}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"Roboto, slab-serif\"}>Roboto</option>\r\n                                        <option value={\"'Source Serif Pro', serif\"}>Source Serif</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Alignment</span>\r\n                                    <NativeSelect \r\n                                        value={sideNumberAlignment}\r\n                                        onChange={changeSideNumberAlignment}\r\n                                        input={ <CustomInput /> }\r\n                                    >\r\n                                        <option value={\"left\"}>Left</option>\r\n                                        <option value={\"center\"}>Center</option>\r\n                                        <option value={\"right\"}>Right</option>\r\n                                    </NativeSelect>\r\n                            \r\n                                    <span>Font size</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberFontSize}\r\n                                            onChange={changeSideNumberFontSize}\r\n                                            onClick={selectAllOnClick(\"12\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>      \r\n                            \r\n                                    <span>Font color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFontColor} \r\n                                        changeColorCode={changeSideNumberFontColor}\r\n                                        defaultColorCode={\"FFF\"}\r\n                                        bottomAligned\r\n                                    />\r\n                                        \r\n                                    <span>Filling color</span>\r\n                                    <ColorField \r\n                                        colorCode={sideNumberFillingColor} \r\n                                        changeColorCode={changeSideNumberFillingColor}\r\n                                        defaultColorCode={\"1E88E5\"}\r\n                                        bottomAligned\r\n                                    />\r\n\r\n                                    <span>Width</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberWidth}\r\n                                            onChange={changeSideNumberWidth}\r\n                                            onClick={selectAllOnClick(\"20\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                        \r\n                                    <span>Radius</span>\r\n                                    <div className=\"inputWithAdornment\">\r\n                                        <TextField \r\n                                            value={sideNumberRadius}\r\n                                            onChange={changeSideNumberRadius}\r\n                                            onClick={selectAllOnClick(\"10\")}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"numberInput\"\r\n                                        />                                            \r\n                                        <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                                    </div>    \r\n                                </div> \r\n                            ) }\r\n                        </div>\r\n                    ) }\r\n                </div>\r\n                { isList && <div className=\"listPreviewBox\"><ListPreview {...listPreviewProps} /></div> }\r\n            </div>\r\n            { isList && listType === \"unordered\" && (\r\n                <div className=\"listSection-typeSettings\">\r\n                    <div className=\"dialogGrid dialogGrid_2cols\">\r\n                        <div className=\"dialogGrid dialogGrid_2cols\">\r\n                            <span className=\"listSection-firstSpan\">List item</span>\r\n                            <div className=\"listItemSelect\">\r\n                                <NativeSelect \r\n                                    value={listItem} \r\n                                    onChange={changeListItem} \r\n                                    input={ <CustomInputShort /> }\r\n                                >\r\n                                    { \r\n                                        Object.entries(bulletNamesMap).map(([key, value]) => {\r\n                                            return (<option key={key} value={key}>{value}</option>) \r\n                                        })\r\n                                    }\r\n                                    <option value={\"individual\"}>Custom</option>\r\n                                </NativeSelect>\r\n                            </div>\r\n                        </div>\r\n                        {   listItem === \"individual\" && (\r\n                            <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Unicode number</span>\r\n                                    <div>\r\n                                        <TextField \r\n                                            value={unicodeNumber}\r\n                                            onChange={changeUnicodeNumber}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"unicodeInput\" \r\n                                            InputProps={{\r\n                                                startAdornment: <InputAdornment position=\"start\">u+</InputAdornment>\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"dialogGrid dialogGrid_2cols dialogGrid_leftIndented\">\r\n                                    <span>Char</span>\r\n                                    <div>\r\n                                        <TextField \r\n                                            value={unicodeChar}\r\n                                            onChange={changeUnicodeChar}\r\n                                            onClick={selectAllOnClick()}\r\n                                            variant=\"outlined\" \r\n                                            margin=\"dense\" \r\n                                            className=\"bulletInput\" \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                        ) }\r\n                    </div> \r\n                </div> \r\n            ) }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport CustomInput from \"../common/CustomInput\";\r\nimport NewGroupDialog from \"../common/NewGroupDialog\";\r\nimport withNewGroupControl from \"../hoc/withNewGroupControl\";\r\n\r\nconst ReferencingSection = (props) => {\r\n    const { \r\n        newGroup, \r\n        isOpen, \r\n        hideDialog, \r\n        handleClick, \r\n        onSave,\r\n        referenceGroup, changeReferenceGroup,\r\n        changeReferenceGroupToCreate,\r\n    } = props;\r\n    \r\n    const newGroupName = newGroup.nameEn;\r\n    const isEditMode = !!newGroupName;\r\n\r\n    const onXrefChange = xref => (...args) => {\r\n        const value = args[0] ? args[0].target.value : args[1];\r\n        if (xref.groupKey && xref.nameEn && value === xref.nameEn) {\r\n            changeReferenceGroupToCreate(null, xref);\r\n        } else {\r\n            changeReferenceGroupToCreate(null, \"\");\r\n        }\r\n        changeReferenceGroup(...args);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Reference group</span>\r\n            <div>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> } \r\n                    value={referenceGroup} \r\n                    onChange={onXrefChange(newGroup)} \r\n                >\r\n                    { isEditMode && <option className=\"highlightedOption\" value={newGroupName}>{newGroupName}</option> }\r\n                    <option value=\"\">none</option>\r\n                    <option value=\"0\">Reference group 1</option>\r\n                    <option value=\"1\">Reference group 2</option>\r\n                </NativeSelect>\r\n                {\r\n                    !(isEditMode && referenceGroup !== newGroupName) &&\r\n                    <Button color=\"primary\" className=\"textButton\" onClick={handleClick}>\r\n                        { isEditMode ? \"Edit new group\" : \"+New\" }\r\n                    </Button>\r\n                 }\r\n            </div>\r\n            <NewGroupDialog \r\n                isOpen={isOpen}\r\n                hideDialog={hideDialog}\r\n                onSave={onSave}\r\n                isEditMode={isEditMode}\r\n                currentGroup={newGroup}\r\n                changeGroupSelect={onXrefChange}\r\n                groupType=\"xref\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withNewGroupControl(ReferencingSection);","import * as React from \"react\";\r\nimport deepEqual from \"fast-deep-equal\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, q = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(q[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, q[i]))\r\n              t[q[i]] = s[q[i]];\r\n      }\r\n  return t;\r\n};\r\n\r\nfunction normalizeHtml(str) {\r\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, \" \");\r\n}\r\nfunction findLastTextNode(node) {\r\n  if (node.nodeType === Node.TEXT_NODE)\r\n      return node;\r\n  let children = node.childNodes;\r\n  for (let i = children.length - 1; i >= 0; i--) {\r\n      let textNode = findLastTextNode(children[i]);\r\n      if (textNode !== null)\r\n          return textNode;\r\n  }\r\n  return null;\r\n}\r\nfunction replaceCaret(el) {\r\n  // Place the caret at the end of the element\r\n  const target = findLastTextNode(el);\r\n  // do not move caret if element was not focused\r\n  const isTargetFocused = document.activeElement === el;\r\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\r\n      var sel = window.getSelection();\r\n      if (sel !== null) {\r\n          var range = document.createRange();\r\n          range.setStart(target, target.nodeValue.length);\r\n          range.collapse(true);\r\n          sel.removeAllRanges();\r\n          sel.addRange(range);\r\n      }\r\n      if (el instanceof HTMLElement)\r\n          el.focus();\r\n  }\r\n}\r\n/**\r\n* A simple component for an html element with editable contents.\r\n*/\r\nexport default class ContentEditable extends React.Component {\r\n  constructor() {\r\n      super(...arguments);\r\n      this.lastHtml = this.props.html;\r\n      this.el = typeof this.props.innerRef === \"function\" ? { current: null } : React.createRef();\r\n      this.getEl = () => (this.props.innerRef && typeof this.props.innerRef !== \"function\" ? this.props.innerRef : this.el).current;\r\n      this.emitChange = (originalEvt) => {\r\n          const el = this.getEl();\r\n          if (!el)\r\n              return;\r\n          const html = el.innerHTML;\r\n          if (this.props.onChange && html !== this.lastHtml) {\r\n              // Clone event with Object.assign to avoid\r\n              // \"Cannot assign to read only property 'target' of object\"\r\n              const evt = Object.assign({}, originalEvt, {\r\n                  target: {\r\n                      value: html\r\n                  }\r\n              });\r\n              this.props.onChange(evt);\r\n          }\r\n          this.lastHtml = html;\r\n      };\r\n  }\r\n  render() {\r\n      const _a = this.props, { tagName, html, innerRef } = _a, props = __rest(_a, [\"tagName\", \"html\", \"innerRef\"]);\r\n      return React.createElement(tagName || \"div\", Object.assign({}, props, { ref: typeof innerRef === \"function\" ? (current) => {\r\n              innerRef(current);\r\n              this.el.current = current;\r\n          } : innerRef || this.el, onInput: this.emitChange, onBlur: this.props.onBlur || this.emitChange, onKeyUp: this.props.onKeyUp || this.emitChange, onKeyDown: this.props.onKeyDown || this.emitChange, contentEditable: !this.props.disabled, dangerouslySetInnerHTML: { __html: html } }), this.props.children);\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n      const { props } = this;\r\n      const el = this.getEl();\r\n      // We need not rerender if the change of props simply reflects the user's edits.\r\n      // Rerendering in this case would make the cursor/caret jump\r\n      // Rerender if there is no element yet... (somehow?)\r\n      if (!el)\r\n          return true;\r\n      // ...or if html really changed... (programmatically, not by user edit)\r\n      if (normalizeHtml(nextProps.html) !== normalizeHtml(el.innerHTML)) {\r\n          return true;\r\n      }\r\n      // Handle additional properties\r\n      return props.disabled !== nextProps.disabled ||\r\n          props.tagName !== nextProps.tagName ||\r\n          props.className !== nextProps.className ||\r\n          props.innerRef !== nextProps.innerRef ||\r\n          !deepEqual(props.style, nextProps.style);\r\n  }\r\n  componentDidUpdate() {\r\n      const el = this.getEl();\r\n      if (!el)\r\n          return;\r\n      // Perhaps React (whose VDOM gets outdated because we often prevent\r\n      // rerendering) did not update the DOM. So we update it manually now.(?!(?:<br \\/>|<br>|<br\\/>)$)<(.*?)>\r\n      if (this.props.html !== el.innerHTML) {\r\n          el.innerHTML = this.lastHtml = this.props.html;\r\n      }\r\n      replaceCaret(el);\r\n  }\r\n}\r\nContentEditable.propTypes = {\r\n  html: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  tagName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n  ])\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport ContentEditable from \"../ContentEditable\";\r\nimport { getOffset, selectAllEditableContent } from \"../../utils\"\r\n\r\nconst Preview = ({previewText, changePreviewText, previewStyle}) => {\r\n    const { verticalAlign, fontSize } = previewStyle;\r\n\r\n    const editableContentStyle = {\r\n        ...previewStyle, \r\n        outline: \"none\",\r\n        marginTop: `${parseFloat(previewStyle.marginTop) + getOffset(verticalAlign, fontSize)}pt`,\r\n        marginBottom: `${parseFloat(previewStyle.marginBottom) - getOffset(verticalAlign, fontSize)}pt`,\r\n    };\r\n\r\n    const demonstrationElementClassName = \"demonstrationElement\";\r\n\r\n    return (\r\n        <div className=\"preview\">\r\n            <span className=\"preview-title\">Preview</span>\r\n            <div \r\n                className=\"preview-content preview-content_withPointer\" \r\n                onClick={selectAllEditableContent(demonstrationElementClassName)}\r\n            >\r\n                <div className={demonstrationElementClassName}>\r\n                    <ContentEditable\r\n                        className={`${demonstrationElementClassName}-text`}\r\n                        onChange={changePreviewText} \r\n                        html={previewText}\r\n                        style={editableContentStyle}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preview;","import Preview from \"./Preview.js\";\r\nexport default Preview;","import TypographySection from \"./TypographySection\";\r\nexport default TypographySection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport Preview from \"../../common/Preview\";\r\nimport CustomInput from \"../../common/CustomInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport { selectAllOnClick } from \"../../utils\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst TypographySection = (props) => {\r\n    const { \r\n        previewProps,\r\n        font, changeFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Font</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={font}\r\n                    onChange={changeFont}\r\n                >\r\n                    <option value={\"Roboto, slab-serif\"}>Roboto</option>\r\n                    <option value={\"'Source Serif Pro', serif\"}>Source Serif</option>\r\n                </NativeSelect>\r\n\r\n                <span>Alignment</span>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> }\r\n                    value={alignment}\r\n                    onChange={changeAlignment}\r\n                >\r\n                    <option value={\"left\"}>Left</option>\r\n                    <option value={\"center\"}>Center</option>\r\n                    <option value={\"right\"}>Right</option>\r\n                    <option value={\"justify\"}>Justified</option>\r\n                </NativeSelect>\r\n\r\n                <span>Font size</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={fontSize}\r\n                        onChange={changeFontSize}\r\n                        onClick={selectAllOnClick(\"12\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>      \r\n\r\n                <span>Font color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                    value={fontColorName}\r\n                    onChange={changeFontColorName}\r\n                    onClick={selectAllOnClick(\"Black\")}\r\n                />\r\n\r\n                <span>Font color HEX</span>\r\n                <ColorField \r\n                    colorCode={fontColor} \r\n                    changeColorCode={changeFontColor}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_indented\">\r\n            <span>Stylings</span>\r\n            <div className=\"checkBoxesSet\">\r\n                <div className=\"labeledCheckbox labeledCheckbox_bold\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Bold\"\r\n                        labelPlacement=\"end\"\r\n                        checked={bold}\r\n                        onChange={changeBold}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_italic\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Italic\"\r\n                        labelPlacement=\"end\"\r\n                        checked={italic}\r\n                        onChange={changeItalic}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_underlined\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Underlined\"\r\n                        labelPlacement=\"end\"\r\n                        checked={underlined}\r\n                        onChange={changeUnderlined}\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_stroke\">\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"Stroke\"\r\n                        labelPlacement=\"end\"\r\n                        checked={stroke}\r\n                        onChange={changeStroke}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <span>Text transform</span>\r\n            <RadioGroup \r\n                value={textTransform} \r\n                onChange={changeTextTransform} \r\n                row\r\n            >\r\n                <div className=\"labeledCheckbox labeledCheckbox_topIndented\">\r\n                    <FormControlLabel\r\n                        value=\"none\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"None\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_uppercase\">\r\n                    <FormControlLabel\r\n                        value=\"uppercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Uppercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_lowercase\">\r\n                    <FormControlLabel\r\n                        value=\"lowercase\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Lowercase\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n                <div className=\"labeledCheckbox labeledCheckbox_smallCaps\">\r\n                    <FormControlLabel\r\n                        value=\"small-caps\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Small caps\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </div>\r\n            </RadioGroup>\r\n\r\n            <span>Sub/Superscript</span>\r\n            <div>\r\n                <NativeSelect \r\n                    input={ <CustomInput /> } \r\n                    value={verticalAlign} \r\n                    onChange={changeVerticalAlign} \r\n                >\r\n                    <option value=\"baseline\">None</option>\r\n                    <option value=\"sub\">Subscript</option>\r\n                    <option value=\"super\">Superscript</option>\r\n                </NativeSelect>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\nimport Preview from \"../common/Preview\";\r\nimport { selectAllOnClick } from \"../utils\";\r\n\r\nconst DistancesSection = (props) => {\r\n    const {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    } = props;\r\n    \r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Margin top</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginTop}\r\n                        onChange={changeMarginTop}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>Margin bottom</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={marginBottom}\r\n                        onChange={changeMarginBottom}\r\n                        onClick={selectAllOnClick(\"6\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n\r\n                <span>1st row indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={firstRowIndent}\r\n                        onChange={changeFirstRowIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Other rows indent</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={otherRowsIndent}\r\n                        onChange={changeOtherRowsIndent}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">cm</InputAdornment>\r\n                </div>\r\n\r\n                <span>Line spacing</span>\r\n                <div>\r\n                    <NativeSelect \r\n                        input={ <CustomInputShort /> } \r\n                        value={lineSpacing} \r\n                        onChange={changeLineSpacing} \r\n                    >\r\n                        <option value=\"1.0\">1.0</option>\r\n                        <option className=\"highlightedOption\" value=\"1.15\">1.15</option>\r\n                        <option value=\"1.5\">1.5</option>\r\n                        <option value=\"2.0\">2.0</option>\r\n                        <option value=\"2.5\">2.5</option>\r\n                        <option value=\"3.0\">3.0</option>\r\n                        <option value=\"custom\">Custom</option>\r\n                    </NativeSelect> \r\n                    {\r\n                    lineSpacing === \"custom\" && \r\n                    (\r\n                        <TextField \r\n                            variant=\"outlined\" \r\n                            margin=\"dense\" \r\n                            className=\"numberInput\"\r\n                            value={customLineSpacing}\r\n                            onChange={changeCustomLineSpacing}\r\n                        />                                            \r\n                    )\r\n                }\r\n                </div>\r\n                   \r\n                    \r\n                <span>Word spacing</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={wordSpacing}\r\n                        onChange={changeWordSpacing}\r\n                        onClick={selectAllOnClick(\"0\")}\r\n                    />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div> \r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistancesSection;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst FrameTypeInput = withStyles(theme => ({\r\n    root: {\r\n      width: \"110px\",\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #ced4da\",\r\n      fontSize: 16,\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      fontFamily: [\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n      ].join(\",\"),\r\n      \"&:hover\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#212121\",\r\n      },\r\n      \"&:focus\": {\r\n        borderRadius: 4,\r\n        borderColor: \"#2f9aef\",\r\n        boxShadow: \"0 0 0 0.5px #2f9aef\",\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  export default FrameTypeInput;","import FramesSection from \"./FramesSection\";\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport FrameTypeInput from \"../../sections/FramesSection/FrameTypeInput\";\r\nimport ColorField from \"../../common/ColorField\";\r\nimport { getCorrectColor, selectAllOnClick } from \"../../utils\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst FramesSection = (props) => {\r\n    const { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n     } = props;\r\n\r\n     const correctColor = getCorrectColor(borderColor);\r\n     const previewBorderWidth = borderThickness && !isNaN(parseFloat(borderThickness))\r\n                                ? `${borderThickness <= 15 ? borderThickness : 15}pt`\r\n                                : \"0\";\r\n\r\n     const previewStyle = {\r\n         borderLeft: leftBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginLeft: leftBorder ? \"0\" : previewBorderWidth, \r\n         borderRight: rightBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginRight: rightBorder ? \"0\" : previewBorderWidth, \r\n         borderTop: topBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginTop: topBorder ? \"0\" : previewBorderWidth, \r\n         borderBottom: bottomBorder ? `${previewBorderWidth} ${borderType} #${correctColor}` : \"none\",\r\n         marginBottom: bottomBorder ? \"0\" : previewBorderWidth, \r\n     };\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <div className=\"directionControlsContainer\">\r\n                <div className=\"directionsControls\" style={previewStyle}>\r\n                    <span className=\"directionLabel\">Left</span>\r\n                    <div className=\"centralColumn\">\r\n                        <span className=\"directionLabel\">Top</span>\r\n                        <div className=\"checkboxesKit crossGrid\">\r\n                            <div id=\"r1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={topBorder}  \r\n                                    onChange={changeTopBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c1\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={leftBorder}  \r\n                                    onChange={changeLeftBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r2c2\" className=\"gridCell\">\r\n                            </div>\r\n                            <div id=\"r2c3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\" \r\n                                    checked={rightBorder}  \r\n                                    onChange={changeRightBorder}\r\n                                />\r\n                            </div>\r\n                            <div id=\"r3\" className=\"gridCell\">\r\n                                <Checkbox \r\n                                    color=\"primary\"\r\n                                    checked={bottomBorder}  \r\n                                    onChange={changeBottomBorder}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"directionLabel\">Bottom</span>\r\n                    </div>\r\n                    <span className=\"directionLabel\">Right</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"dialogGrid dialogGrid_2cols\">\r\n                <span>Frame color name</span>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                    value={borderColorName}\r\n                    onChange={changeBorderColorName}\r\n                    onClick={selectAllOnClick(\"Red\")}\r\n                />\r\n\r\n                <span>Frame color HEX</span>\r\n                <ColorField \r\n                    colorCode={borderColor} \r\n                    changeColorCode={changeBorderColor}\r\n                    required\r\n                />\r\n\r\n                <span>Frame thickness</span>\r\n                <div className=\"inputWithAdornment\">\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\" \r\n                        className=\"numberInput\"\r\n                        value={borderThickness}\r\n                        onChange={changeBorderThickness}\r\n                        onClick={selectAllOnClick(\"2\")}\r\n                     />                                            \r\n                    <InputAdornment variant=\"filled\" position=\"end\">pt</InputAdornment>\r\n                </div>                        \r\n\r\n                <span>Type of frame</span>\r\n                <div >\r\n                    <Select\r\n                      input={<FrameTypeInput />}\r\n                      value={borderType}\r\n                      onChange={changeBorderType}\r\n                    >\r\n                        <MenuItem value=\"solid\"><b>━━━━</b></MenuItem>\r\n                        <MenuItem value=\"dotted\">• • • • • • •</MenuItem>\r\n                        <MenuItem value=\"dashed\"><b>– – – – –</b></MenuItem>\r\n                        <MenuItem value=\"double\">══════</MenuItem>              \r\n                    </Select>\r\n                </div>\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox color=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FramesSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport Preview from \"../common/Preview\";\r\nimport ColorField from \"../common/ColorField\";\r\n\r\nconst  FillingSection = (props) => {\r\n    const { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n     } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols dialogGrid_flexStartAligned\">\r\n            <div className=\"dialogGrid dialogGrid_2minCols\">\r\n                <span>Filling color name</span>\r\n                <div>\r\n                    <TextField \r\n                        variant=\"outlined\" \r\n                        margin=\"dense\"\r\n                        className=\"mediumTextField\" \r\n                        value={fillingColorName}\r\n                        onChange={changeFillingColorName}\r\n                    />\r\n                </div>\r\n\r\n                <span>Filling color HEX</span>\r\n                <ColorField \r\n                    colorCode={fillingColor} \r\n                    changeColorCode={changeFillingColor}\r\n                />\r\n\r\n                <span>Connect to previous</span>\r\n                <div>\r\n                    <Checkbox \r\n                        color=\"primary\" \r\n                        checked={connectToPrevious} \r\n                        onChange={changeConnectToPrevious} \r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"previewSide\">\r\n                <Preview {...previewProps} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FillingSection;","import React from \"react\";\r\n\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\n\r\nimport CustomInputShort from \"../common/CustomInputShort\";\r\n\r\nconst TocSection = ({ tocIndentation, changeTocIndentation }) => {\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>ToC indentation</span>\r\n            <div>\r\n                <NativeSelect\r\n                    value={tocIndentation}\r\n                    onChange={changeTocIndentation} \r\n                    input={ <CustomInputShort /> }\r\n                >\r\n                    <option value=\"\">...</option>\r\n                    <option value=\"0\">0</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </NativeSelect>\r\n            </div>                    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TocSection;","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst ShortCutSection = (props) => {\r\n    const {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n            <span>Windows</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutWinView}\r\n                    onKeyDown={changeShortCutWin} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\"\r\n                />\r\n            </div>\r\n\r\n            <span>Mac</span>\r\n            <div className=\"largeTextField\">\r\n                <TextField \r\n                    value={shortCutMacView}\r\n                    onKeyDown={changeShortCutMac} \r\n                    variant=\"outlined\" \r\n                    margin=\"dense\" \r\n                />     \r\n            </div>          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShortCutSection;","import React from \"react\";\r\n\r\nconst TypographySection = () => {\r\n\r\n    return (\r\n        <div className=\"dialogGrid dialogGrid_2cols\">\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypographySection;","import keycode from \"keycode\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nconst getShortCutUtils = systemName => {\r\n  return class ShortcutUtils {  \r\n    static CMD_KEYS = {\r\n      altKey: systemName === \"MacOS\" ? \"Option\" : \"Alt\",\r\n      ctrlKey: systemName === \"MacOS\" ? \"Control\" : \"Ctrl\",\r\n      shiftKey: \"Shift\",\r\n      metaKey: \"Command\",\r\n    };\r\n  \r\n    static isDeadKey(e) {\r\n      return e.keyCode === 229;\r\n    }\r\n  \r\n    static prevent(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  \r\n    static convertEventToShortCut(e) {\r\n      if (ShortcutUtils.isDeadKey(e)) {\r\n        ShortcutUtils.prevent(e);\r\n        return { deleteKey: true };\r\n      }\r\n      ShortcutUtils.prevent(e);\r\n      const shortCut = {\r\n        keyCode: e.keyCode,\r\n        ctrlKey: e.ctrlKey,\r\n        shiftKey: e.shiftKey,\r\n        altKey: e.altKey,\r\n        metaKey: false,\r\n      };\r\n      if (systemName === \"MacOS\") {\r\n        shortCut.metaKey = e.metaKey;\r\n      }\r\n      const deleteKeys = [8, 46];\r\n      const cmdKeysCodes = [16, 91, 18, 17];\r\n      const shortCutForView = ShortcutUtils.convertShortcutToMeta(shortCut);\r\n      if (deleteKeys.indexOf(e.keyCode) > -1) {\r\n        return { deleteKey: true };\r\n      } else if (shortCutForView.isCmdPressed && cmdKeysCodes.indexOf(e.keyCode) === -1) {\r\n        return {\r\n          value: shortCut,\r\n          stringValue: shortCutForView.stringValue,\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n  \r\n    static convertShortcutToString(shortCut = {}) {\r\n      return ShortcutUtils.convertShortcutToMeta(shortCut).stringValue;\r\n    }\r\n  \r\n    static convertShortcutToMeta(shortCut = {}) {\r\n      let shortCutForView = \"\";\r\n      let isCmdPressed = false;\r\n      Object.keys(ShortcutUtils.CMD_KEYS).forEach((key) => {\r\n        if (shortCut && shortCut[key]) {\r\n          isCmdPressed = true;\r\n          shortCutForView += `${ShortcutUtils.CMD_KEYS[key]} + `;\r\n        }\r\n      });\r\n      if (shortCut && shortCut.keyCode) {\r\n        shortCutForView += keycode(shortCut.keyCode);\r\n      }\r\n      return { stringValue: shortCutForView, isCmdPressed };\r\n    }\r\n  \r\n    static removeDuplicateShortcuts = function (decorators, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(decorators).forEach((decoratorKey) => {\r\n        const item = decorators[decoratorKey];\r\n        const itemType = item.item_type;\r\n        if (itemType === \"style\") {\r\n          if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n            decorators[decoratorKey].keyboard_shortcut = null;\r\n            removed = true;\r\n          }\r\n        } else {\r\n          const childItems = item.child_items;\r\n          Object.keys(childItems).forEach((itemKey) => {\r\n            const style = childItems[itemKey];\r\n            if (isEqual(style.keyboard_shortcut, newPdShortcut)) {\r\n              style.keyboard_shortcut = null;\r\n              removed = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  \r\n    static removeDuplicateShortcutsInInlineStyle = function (inlineStyles, newPdShortcut) {\r\n      let removed = false;\r\n      Object.keys(inlineStyles).forEach((styleKey) => {\r\n        const item = inlineStyles[styleKey];\r\n        if (isEqual(item.keyboard_shortcut, newPdShortcut)) {\r\n          inlineStyles[styleKey].keyboard_shortcut = null;\r\n          removed = true;\r\n        }\r\n      });\r\n      return removed;\r\n    };\r\n  }\r\n};\r\n\r\nexport default getShortCutUtils;\r\n\r\n","import getShortCutUtils from \"./utils/getShortCutUtils\";\r\n\r\nconst Handlers = (update, formState) => class {    \r\n    static toggleStateProperty = propName => e => {\r\n        update({\r\n            [propName]: e.target.checked\r\n        });\r\n    };\r\n\r\n    static setStateProperty = propName => (e, secondArg = \"\") => {\r\n        const newValue = (e && e.target.value !== \"\" && e.target.value !== undefined) ? e.target.value : secondArg;\r\n        update({\r\n            [propName]: newValue,\r\n        });\r\n    };\r\n\r\n    static setBullet = propName => e => {\r\n        const newBullet = e.target.value.length > 1 ? e.target.value[e.target.value.length - 1] : e.target.value;\r\n        update({\r\n            [propName]: newBullet,\r\n        });\r\n        return newBullet;\r\n    };\r\n\r\n    static setColor = propName => (e, secondArg) => {\r\n        let input = e ? (e.target.value || \"\") : secondArg;\r\n        \r\n        const filteredInput = input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i) \r\n                              ? input.replace(\"#\", \"\").trim().match(/[0-9a-f]+/i)[0].slice(0, 6)\r\n                              : \"\" ;\r\n        \r\n        if (filteredInput !== formState[propName]) {\r\n            update({\r\n                [propName]: filteredInput,\r\n            });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setNumber = propName => e => {\r\n        let input = e.target.value || \"\";\r\n\r\n        const filteredInput = input.replace(\",\", \".\").trim().match(/[0-9]+/i) \r\n                              ? input.replace(\",\", \".\").trim().match(/\\d+[.,]?\\d*/)[0]\r\n                              : \"\" ;\r\n\r\n        if (filteredInput !== formState[propName]) {\r\n          update({\r\n              [propName]: filteredInput,\r\n          });\r\n        }\r\n        return filteredInput;\r\n    };\r\n\r\n    static setShortCut = (valuePropName, viewPropName, isMac) => e => {\r\n        const systemName = isMac ? \"MacOS\" : \"Windows\";\r\n        const shortCut = getShortCutUtils(systemName).convertEventToShortCut(e);\r\n        if (shortCut && shortCut.deleteKey) {\r\n          setTimeout(() => {\r\n            update({ [valuePropName]: \"\" });\r\n            update({ [viewPropName]: \"\" });\r\n          }, 100);\r\n        } else if (shortCut) {\r\n          update({ [valuePropName]: shortCut.value });\r\n          update({ [viewPropName]: shortCut.stringValue });\r\n        }\r\n    };\r\n};\r\n\r\nexport default Handlers;","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: pink,\r\n    },\r\n});\r\n\r\nexport default theme;","import React from \"react\";\r\n\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTab = withStyles(theme => ({\r\n    root: {\r\n      overflow: \"initial\",\r\n      backgroundColor: \"white\",\r\n      transition: \"0.2s\",\r\n\r\n      \"&:before\": {\r\n        transition: \"0.2s\",\r\n      },\r\n\r\n      \"&:hover\": {\r\n        color: \"#000\",\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: \"#2196f3\",\r\n        color: \"white\",\r\n        opacity: 1,\r\n      },\r\n      \"&:hover:active\": {\r\n        backgroundColor: \"white\",\r\n        transition: \"0.2s\",\r\n      },\r\n      \"&$selected:hover:active\": {\r\n        backgroundColor: \"#2ca4ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n    \r\n  }))(props => <Tab {...props} />);\r\n\r\n  export default CustomTab;","import Tabs from \"@material-ui/core/Tabs\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTabs = withStyles(theme => ({\r\n    indicator: {\r\n        backgroundColor: \"#1890ff\",\r\n        opacity: 0.5,\r\n        width: \"190px\",\r\n        zIndex: 5,\r\n        display: \"none\",\r\n      }\r\n  }))(Tabs);\r\n\r\n  export default CustomTabs;","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst CustomDialog = withStyles(theme => ({\r\n    root: {\r\n        minWidth: \"1250px\",\r\n        minHeight: \"1100px !important\",\r\n        height: \"100%\",\r\n    },\r\n    container: {\r\n        height: \"100vh\",\r\n        display: \"block\",\r\n    },\r\n    scrollBody: {\r\n        \"&:after\": {\r\n            height: \"100%\",\r\n        }\r\n    },\r\n    paperFullWidth: {\r\n        maxWidth: \"1280px\",\r\n        maxHeight: \"850px\",\r\n        minHeight: \"550px\",\r\n        width: \"calc(100% - 96px)\",\r\n        height: \"calc(100% - 96px)\",\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        border: \"none\",\r\n    },\r\n    paperScrollBody: {\r\n        verticalAlign: \"middle\",\r\n    },\r\n  }))(Dialog);\r\n  \r\n  export default CustomDialog;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport NamesSection from \"./sections/NamesSection\";\r\nimport WordExportSection from \"./sections/WordExportSection\";\r\nimport PositioningSection from \"./sections/PositioningSection\";\r\nimport ListSection from \"./sections/ListSection\";\r\nimport ReferencingSection from \"./sections/ReferencingSection\";\r\nimport TypographySection from \"./sections/TypographySection\";\r\nimport DistancesSection from \"./sections/DistancesSection\";\r\nimport FramesSection from \"./sections/FramesSection\";\r\nimport FillingSection from \"./sections/FillingSection\";\r\nimport TocSection from \"./sections/TocSection\";\r\nimport ShortCutsSection from \"./sections/ShortCutsSection\";\r\nimport TestSection from \"./sections/TestSection\";\r\n\r\nimport { changeDecoratorForm } from \"./actions\";\r\nimport Handlers from \"./Handlers\";\r\nimport theme from \"./theme\";\r\nimport CustomTab from \"./common/CustomTab\";\r\nimport CustomTabs from \"./common/CustomTabs\";\r\nimport CustomDialog from \"./common/CustomDialog\";\r\nimport { alignmentsMap } from \"./constants\";\r\nimport { \r\n    getCorrectColor, \r\n    getUnstyledText, \r\n    unicodeNumberToChar, \r\n    unicodeCharToNumber, \r\n    getListChars, \r\n} from \"./utils\";\r\n\r\n\r\nimport \"./style.css\";\r\n\r\nconst NewDecDialog = (props) => {\r\n    const { isOpen, onClose, updateForm, formState } = props;\r\n\r\n    const { \r\n        setStateProperty, \r\n        toggleStateProperty, \r\n        setNumber, \r\n        setColor, \r\n        setBullet, \r\n        setShortCut \r\n    } = Handlers(updateForm, formState);\r\n\r\n    const { \r\n        openedTab,\r\n        previewText,\r\n        decKey,\r\n        group,\r\n        groupToCreate,\r\n        active,\r\n        styleNameEn,\r\n        styleNameDe,\r\n        styleNameRu,\r\n        styleNameFr,\r\n        styleNameFrCa,\r\n        styleNameEs,\r\n        wordStyleName,\r\n        softReturn,\r\n        indentationalLevel,\r\n        backspaceActionWithContent,\r\n        backspaceActionWithContentStyle,\r\n        backspaceActionWithoutContent,\r\n        backspaceActionWithoutContentStyle,\r\n        returnActionNextSection,\r\n        returnActionEmptySection,\r\n        tabAction,\r\n        shiftTabAction,\r\n        isList,\r\n        listName,\r\n        orderLevel,\r\n        prefix,\r\n        suffix,\r\n        suffixDistance,\r\n        magicTabs,\r\n        listType,\r\n        listItem,\r\n        unicodeNumber,\r\n        unicodeChar,\r\n        numberingStyle,\r\n        continueNumbering,\r\n        allowRestartNumbering,\r\n        includePreviousFrom,\r\n        sideNumber,\r\n        sideNumberFont,\r\n        sideNumberAlignment,\r\n        sideNumberFontSize,\r\n        sideNumberFontColor,\r\n        sideNumberFillingColor,\r\n        sideNumberWidth,\r\n        sideNumberRadius,\r\n        referenceGroup,\r\n        referenceGroupToCreate,\r\n        font,\r\n        alignment,\r\n        fontSize,\r\n        fontColorName,\r\n        fontColor,\r\n        bold,\r\n        italic,\r\n        underlined,\r\n        stroke,\r\n        textTransform,\r\n        verticalAlign,\r\n        marginTop,\r\n        marginBottom,\r\n        firstRowIndent,\r\n        otherRowsIndent,\r\n        lineSpacing,\r\n        customLineSpacing,\r\n        wordSpacing,   \r\n        leftBorder,\r\n        rightBorder,\r\n        topBorder,\r\n        bottomBorder,\r\n        borderColorName,\r\n        borderColor,\r\n        borderThickness,\r\n        borderType,\r\n        fillingColorName,\r\n        fillingColor,\r\n        connectToPrevious,\r\n        tocIndentation,\r\n        shortCutWinView,\r\n        shortCutMacView,\r\n    } = formState;\r\n\r\n    const changeOpenedTab = setStateProperty(\"openedTab\");\r\n    const changeDecKey = setStateProperty(\"decKey\");\r\n    const changeGroup = setStateProperty(\"group\");\r\n    const changeGroupToCreate = setStateProperty(\"groupToCreate\");\r\n    const changeActive = toggleStateProperty(\"active\");\r\n    const changeStyleNameEn = setStateProperty(\"styleNameEn\");\r\n    const changeStyleNameDe = setStateProperty(\"styleNameDe\");\r\n    const changeStyleNameRu = setStateProperty(\"styleNameRu\");\r\n    const changeStyleNameFr = setStateProperty(\"styleNameFr\");\r\n    const changeStyleNameFrCa = setStateProperty(\"styleNameFrCa\");\r\n    const changeStyleNameEs = setStateProperty(\"styleNameEs\");\r\n    const changeWordStyleName = setStateProperty(\"wordStyleName\");\r\n    const changeSoftReturn = toggleStateProperty(\"softReturn\");\r\n    const changeIndentationalLevel = setStateProperty(\"indentationalLevel\")\r\n    const changeBackspaceActionWithContent = setStateProperty(\"backspaceActionWithContent\");\r\n    const changeBackspaceActionWithContentStyle = setStateProperty(\"backspaceActionWithContentStyle\");\r\n    const changeBackspaceActionWithoutContent = setStateProperty(\"backspaceActionWithoutContent\");\r\n    const changeBackspaceActionWithoutContentStyle = setStateProperty(\"backspaceActionWithoutContentStyle\");\r\n    const changeReturnActionNextSection = setStateProperty(\"returnActionNextSection\");\r\n    const changeReturnActionEmptySection = setStateProperty(\"returnActionEmptySectionStyle\")\r\n    const changeTabAction = setStateProperty(\"tabAction\");\r\n    const changeShiftTabAction = setStateProperty(\"shiftTabAction\");\r\n    const changeIsList = toggleStateProperty(\"isList\");\r\n    const changeListName = setStateProperty(\"listName\");\r\n    const changeOrderLevel = setStateProperty(\"orderLevel\");\r\n    const changePrefix = setStateProperty(\"prefix\");\r\n    const changeSuffix = setStateProperty(\"suffix\");\r\n    const changeSuffixDistance = setStateProperty(\"suffixDistance\");\r\n    const changeMagicTabs = toggleStateProperty(\"magicTabs\");\r\n    const changeListItem = setStateProperty(\"listItem\");\r\n    const changeNumberingStyle = setStateProperty(\"numberingStyle\");\r\n    const changeContinueNumbering = toggleStateProperty(\"continueNumbering\");\r\n    const changeAllowRestartNumbering = toggleStateProperty(\"allowRestartNumbering\");\r\n    const changeIncludePreviousFrom = setStateProperty(\"includePreviousFrom\");\r\n    const changeSideNumberFont = setStateProperty(\"sideNumberFont\");\r\n    const changeSideNumberAlignment = setStateProperty(\"sideNumberAlignment\");\r\n    const changeSideNumberFontSize = setNumber(\"sideNumberFontSize\");\r\n    const changeSideNumberFontColor = setColor(\"sideNumberFontColor\");\r\n    const changeSideNumberFillingColor = setColor(\"sideNumberFillingColor\");\r\n    const changeSideNumberWidth = setNumber(\"sideNumberWidth\");\r\n    const changeSideNumberRadius = setNumber(\"sideNumberRadius\");\r\n    const changeReferenceGroup = setStateProperty(\"referenceGroup\");\r\n    const changeReferenceGroupToCreate = setStateProperty(\"referenceGroupToCreate\");\r\n    const changeFont = setStateProperty(\"font\");\r\n    const changeAlignment = setStateProperty(\"alignment\");\r\n    const changeFontSize = setNumber(\"fontSize\");\r\n    const changeFontColorName = setStateProperty(\"fontColorName\");\r\n    const changeFontColor = setColor(\"fontColor\");\r\n    const changeBold = toggleStateProperty(\"bold\");\r\n    const changeItalic = toggleStateProperty(\"italic\");\r\n    const changeUnderlined = toggleStateProperty(\"underlined\");\r\n    const changeStroke = toggleStateProperty(\"stroke\");\r\n    const changeTextTransform = setStateProperty(\"textTransform\");\r\n    const changeVerticalAlign = setStateProperty(\"verticalAlign\");\r\n    const changeMarginTop = setNumber(\"marginTop\");\r\n    const changeMarginBottom = setNumber(\"marginBottom\");\r\n    const changeFirstRowIndent = setNumber(\"firstRowIndent\");\r\n    const changeOtherRowsIndent = setNumber(\"otherRowsIndent\");\r\n    const changeLineSpacing = setStateProperty(\"lineSpacing\");\r\n    const changeCustomLineSpacing = setNumber(\"customLineSpacing\");\r\n    const changeWordSpacing = setNumber(\"wordSpacing\");\r\n    const changeLeftBorder = toggleStateProperty(\"leftBorder\");\r\n    const changeRightBorder = toggleStateProperty(\"rightBorder\");\r\n    const changeTopBorder = toggleStateProperty(\"topBorder\");\r\n    const changeBottomBorder = toggleStateProperty(\"bottomBorder\");\r\n    const changeBorderColorName = setStateProperty(\"borderColorName\");\r\n    const changeBorderColor = setColor(\"borderColor\");\r\n    const changeBorderThickness = setNumber(\"borderThickness\");\r\n    const changeFillingColorName = setStateProperty(\"fillingColorName\");\r\n    const changeFillingColor = setColor(\"fillingColor\");\r\n    const changeConnectToPrevious = toggleStateProperty(\"connectToPrevious\");\r\n    const changeTocIndentation = setStateProperty(\"tocIndentation\");\r\n    const changeShortCutWin = setShortCut(\"shortCutWin\", \"shortCutWinView\");\r\n    const changeShortCutMac = setShortCut(\"shortCutMac\", \"shortCutMacView\", true);\r\n\r\n    const changePreviewText = e => {\r\n        const { value } = e.target;\r\n        if (value && value !== \"<div></div>\" && value !== \"<br>\") {\r\n            setStateProperty(\"previewText\")(null, getUnstyledText(value));\r\n        } else {\r\n            setStateProperty(\"previewText\")(null, `<div><br></div>`);\r\n        }\r\n    };\r\n\r\n    const changeListType = e => {\r\n        const { value } = e.target;\r\n        setStateProperty(\"listType\")(null, value);\r\n        if (value === \"ordered\" && suffix === \"\") {\r\n            setStateProperty(\"suffix\")(null, \".\");\r\n        } else if (value === \"unordered\" && suffix === \".\") {\r\n            setStateProperty(\"suffix\")(null, \"\");\r\n        }\r\n    };\r\n\r\n    const changeUnicodeNumber = e => {\r\n        const newUnicodeNumber = setColor(\"unicodeNumber\")(e);\r\n        const newUnicodeChar = newUnicodeNumber !== \"\" ? unicodeNumberToChar(newUnicodeNumber) : \"\";\r\n        setStateProperty(\"unicodeChar\")(null, newUnicodeChar);\r\n    };\r\n    \r\n    const changeUnicodeChar = e => {\r\n        const newUnicodeChar = setBullet(\"unicodeChar\")(e);\r\n        const newUnicodeNumber = newUnicodeChar !== \"\" ? unicodeCharToNumber(newUnicodeChar) : \"\";\r\n        setStateProperty(\"unicodeNumber\")(null, newUnicodeNumber);\r\n    };\r\n\r\n    const changeSideNumber = e => {\r\n        toggleStateProperty(\"sideNumber\")(e);\r\n        if (e.target.checked && suffix === \".\") {\r\n            setStateProperty(\"suffix\")(null, \"\");\r\n        } else if (!e.target.checked && suffix === \"\") {\r\n            setStateProperty(\"suffix\")(null, \".\");\r\n        }\r\n    };\r\n\r\n    const changeBorderType = e => {\r\n        setStateProperty(\"borderType\")(e);\r\n        if (e.target.value === \"double\" && borderThickness === \"2\") {\r\n            setStateProperty(\"borderThickness\")(null, \"3\");\r\n        }\r\n        if (e.target.value !== \"double\" && borderThickness === \"3\") {\r\n            setStateProperty(\"borderThickness\")(null, \"2\");\r\n        }\r\n        };\r\n\r\n    const previewFontColor = getCorrectColor(fontColor, \"f5f5f5\");\r\n    const previewFillingColor = getCorrectColor(fillingColor, \"f5f5f5\");\r\n    const previewAdditionalFillingColor = connectToPrevious ? previewFillingColor : \"f5f5f5\";\r\n    const indentsDifference = (firstRowIndent || 0) - (otherRowsIndent || 0);\r\n    const previewMarginLeft = otherRowsIndent ? `${otherRowsIndent >= 12 ? 12 : otherRowsIndent}cm` : 0;\r\n    const previewTextIndent = indentsDifference ? `${indentsDifference >= 12 ? 12 : indentsDifference}cm` : 0;\r\n\r\n    const previewStyle = {\r\n        fontSize: !fontSize ? \"0\" : `${fontSize <= 120 ? fontSize : 120}pt`,\r\n        color: `#${previewFontColor}`,\r\n        fontFamily: font,\r\n        alignItems: alignmentsMap[alignment],\r\n        textAlign: alignment,\r\n        fontWeight: bold ? \"bold\" : \"normal\",\r\n        fontStyle: italic ? \"italic\" : \"normal\",\r\n        textDecoration: `${underlined ? \"underline\" : \"\"}${stroke ? \" line-through\" : \"\"}`.trim() || \"none\",\r\n        verticalAlign,\r\n        textTransform: textTransform !== \"small-caps\" ? textTransform : \"none\",\r\n        fontVariant: textTransform === \"small-caps\" ? textTransform : \"normal\",\r\n        backgroundColor: `#${previewFillingColor}`,\r\n        backgroundImage:  `linear-gradient(#${previewAdditionalFillingColor}, #${previewAdditionalFillingColor})`,\r\n        marginLeft: previewMarginLeft,\r\n        textIndent: previewTextIndent,\r\n        wordSpacing: `${wordSpacing || 0}pt`,\r\n        lineHeight: (lineSpacing !== \"custom\" ? lineSpacing : (!customLineSpacing ? \"1.15\" : `${customLineSpacing || 0}`)),\r\n        marginBottom: `${marginBottom || 0}pt`,\r\n        marginTop: `${marginTop || 0}pt`,\r\n    };\r\n\r\n    const previewProps = { previewText, changePreviewText, previewStyle };\r\n\r\n    const previewSideNumberFontColor = getCorrectColor(sideNumberFontColor, \"f5f5f5\");\r\n    const previewSideNumberFillingColor = getCorrectColor(sideNumberFillingColor, \"f5f5f5\");\r\n\r\n    const sideNumberStyle = (!sideNumber || listType === \"unordered\") ? {} : {\r\n        fontFamily: sideNumberFont,\r\n        textAlign: sideNumberAlignment,\r\n        fontSize: !sideNumberFontSize ? \"0\" : `${sideNumberFontSize <= 120 ? sideNumberFontSize : 120}pt`,\r\n        color: `#${previewSideNumberFontColor}`,\r\n        backgroundColor: `#${previewSideNumberFillingColor}`,\r\n        minWidth: `${sideNumberWidth || 0}pt`,\r\n        borderRadius: `${sideNumberRadius || 0}pt`,\r\n    };\r\n\r\n    const listPreviewProps = { \r\n        listChars: getListChars({\r\n                isOrderedList: listType === \"ordered\", \r\n                numberingStyle, \r\n                listItem,\r\n                unicodeChar,\r\n            }),\r\n        listPreviewStyle: previewStyle,\r\n        prefix, \r\n        suffix, \r\n        suffixDistance,\r\n        sideNumberStyle,\r\n    };\r\n\r\n    const namesSectionProps = {\r\n        decKey, changeDecKey,\r\n        group, changeGroup,\r\n        newGroup: groupToCreate, changeGroupToCreate,\r\n        active, changeActive,\r\n        styleNameEn, changeStyleNameEn,\r\n        styleNameDe, changeStyleNameDe,\r\n        styleNameRu, changeStyleNameRu,\r\n        styleNameFr, changeStyleNameFr,\r\n        styleNameFrCa, changeStyleNameFrCa,\r\n        styleNameEs, changeStyleNameEs,\r\n    }; \r\n\r\n    const wordExportProps = {\r\n        wordStyleName, changeWordStyleName,\r\n        softReturn, changeSoftReturn,\r\n    };\r\n\r\n    const positioningSectionProps = {\r\n        indentationalLevel, changeIndentationalLevel,\r\n        backspaceActionWithContent, changeBackspaceActionWithContent,\r\n        backspaceActionWithContentStyle, changeBackspaceActionWithContentStyle,\r\n        backspaceActionWithoutContent, changeBackspaceActionWithoutContent,\r\n        backspaceActionWithoutContentStyle, changeBackspaceActionWithoutContentStyle,\r\n        returnActionNextSection, changeReturnActionNextSection,\r\n        returnActionEmptySection, changeReturnActionEmptySection,\r\n        tabAction, changeTabAction,\r\n        shiftTabAction, changeShiftTabAction,\r\n    };\r\n\r\n    const listSectionProps = { \r\n        listPreviewProps,\r\n        isList, changeIsList, \r\n        listName, changeListName,\r\n        orderLevel, changeOrderLevel,\r\n        prefix, changePrefix,\r\n        suffix, changeSuffix,\r\n        suffixDistance, changeSuffixDistance,\r\n        magicTabs, changeMagicTabs,\r\n        listType, changeListType, \r\n        listItem, changeListItem,\r\n        unicodeNumber, changeUnicodeNumber,\r\n        unicodeChar, changeUnicodeChar,\r\n        numberingStyle, changeNumberingStyle,\r\n        continueNumbering, changeContinueNumbering,\r\n        allowRestartNumbering, changeAllowRestartNumbering,\r\n        includePreviousFrom, changeIncludePreviousFrom,\r\n        sideNumber, changeSideNumber,\r\n        sideNumberFont, changeSideNumberFont,\r\n        sideNumberAlignment, changeSideNumberAlignment,\r\n        sideNumberFontSize, changeSideNumberFontSize,\r\n        sideNumberFontColor, changeSideNumberFontColor,\r\n        sideNumberFillingColor, changeSideNumberFillingColor,\r\n        sideNumberWidth, changeSideNumberWidth,\r\n        sideNumberRadius, changeSideNumberRadius,\r\n    };\r\n\r\n    const referencingSectionProps = {\r\n        referenceGroup, changeReferenceGroup,\r\n        newGroup: referenceGroupToCreate, changeReferenceGroupToCreate,\r\n    };\r\n\r\n    const typographySectionProps = { \r\n        previewProps,\r\n        font, changeFont,\r\n        alignment, changeAlignment,\r\n        fontSize, changeFontSize,\r\n        fontColorName, changeFontColorName,\r\n        fontColor, changeFontColor,\r\n        bold, changeBold,\r\n        italic, changeItalic,\r\n        underlined, changeUnderlined,         \r\n        stroke, changeStroke,\r\n        textTransform, changeTextTransform,\r\n        verticalAlign, changeVerticalAlign, \r\n    };\r\n\r\n    const distancesSectionProps = {\r\n        previewProps,\r\n        marginTop, changeMarginTop,\r\n        marginBottom, changeMarginBottom,\r\n        firstRowIndent, changeFirstRowIndent,\r\n        otherRowsIndent, changeOtherRowsIndent,\r\n        lineSpacing, changeLineSpacing,\r\n        customLineSpacing, changeCustomLineSpacing,\r\n        wordSpacing, changeWordSpacing,\r\n    };\r\n\r\n    const framesSectionProps = { \r\n        leftBorder, changeLeftBorder, \r\n        rightBorder, changeRightBorder,\r\n        topBorder, changeTopBorder, \r\n        bottomBorder, changeBottomBorder, \r\n        borderColorName, changeBorderColorName,\r\n        borderColor, changeBorderColor,\r\n        borderThickness, changeBorderThickness,\r\n        borderType, changeBorderType,\r\n    };\r\n\r\n    const fillingSectionProps = { \r\n        previewProps,\r\n        fillingColorName, changeFillingColorName,\r\n        fillingColor, changeFillingColor,\r\n        connectToPrevious, changeConnectToPrevious,\r\n    };\r\n\r\n    const tocSectionProps = {\r\n        tocIndentation, changeTocIndentation,\r\n    };\r\n\r\n    const shortCutsSectionProps = {\r\n        shortCutWinView, changeShortCutWin, \r\n        shortCutMacView, changeShortCutMac,\r\n    };\r\n    \r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CustomDialog\r\n                open={isOpen}\r\n                onClose={onClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                scroll=\"body\"\r\n                className=\"paragraphDecorators-dialog\"\r\n                fullWidth={true}\r\n                maxWidth={false}\r\n                id=\"dialog\"\r\n            >\r\n                <div className=\"header\">\r\n                    <DialogTitle className=\"header-title\">\r\n                        <p>Create new paragraph decorator</p>\r\n                    </DialogTitle>\r\n                    <div className=\"header-buttons\">\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            onClick={onClose}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {}}\r\n                            className=\"topNavButton\"\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <DialogContent className=\"content\">\r\n                    <div className=\"content-leftSide\">\r\n                        <CustomTabs \r\n                            className=\"dialogTabs\"\r\n                            value={openedTab} \r\n                            onChange={changeOpenedTab} \r\n                            orientation=\"vertical\"\r\n                            color=\"primary\"\r\n                            indicatorColor=\"primary\"\r\n                        >\r\n                            <CustomTab className=\"dialogTab\" label=\"Names\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"WORD export\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Positioning\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"List\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Referencing\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Typography\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Distances\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Frames\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Filling\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"ToC\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Short cuts\" />\r\n                            <CustomTab className=\"dialogTab\" label=\"Test\" />\r\n                        </CustomTabs>\r\n                    </div>\r\n                    <div className=\"content-rightSide\">\r\n                        { openedTab === 0 && <NamesSection {...namesSectionProps} /> }\r\n                        { openedTab === 1 && <WordExportSection {...wordExportProps} /> }\r\n                        { openedTab === 2 && <PositioningSection {...positioningSectionProps} /> }\r\n                        { openedTab === 3 && <ListSection {...listSectionProps} />}\r\n                        { openedTab === 4 && <ReferencingSection {...referencingSectionProps} /> }\r\n                        { openedTab === 5 && <TypographySection {...typographySectionProps} /> }\r\n                        { openedTab === 6 && <DistancesSection {...distancesSectionProps} /> }\r\n                        { openedTab === 7 && <FramesSection {...framesSectionProps} /> }\r\n                        { openedTab === 8 && <FillingSection {...fillingSectionProps} /> }\r\n                        { openedTab === 9 && <TocSection {...tocSectionProps} /> }\r\n                        { openedTab === 10 && <ShortCutsSection {...shortCutsSectionProps} /> }\r\n                        { openedTab === 11 && <TestSection {...typographySectionProps} /> }\r\n                    </div>\r\n                </DialogContent>\r\n            </CustomDialog>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { formState: state };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateForm: payload => dispatch(changeDecoratorForm(payload)),\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewDecDialog);","export const CHANGE_DECORATOR_FORM = \"CHANGE_DECORATOR_FORM\";\r\nexport const CLEAR_DECORATOR_FORM = \"CLEAR_DECORATOR_FORM\";\r\n\r\nexport const changeDecoratorForm = payload => {\r\n    return {\r\n        type: CHANGE_DECORATOR_FORM,\r\n        payload,\r\n    };\r\n};\r\n\r\n\r\nexport const clearDecoratorForm = payload => {\r\n    return {\r\n        type: CLEAR_DECORATOR_FORM,\r\n        payload,\r\n    };\r\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport NewDecDialog from \"./components/NewDecDialog\";\nimport { clearDecoratorForm } from \"./components/NewDecDialog/actions\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n    state = {\n        isOpen: true,\n    };\n\n    handleClick = () => {\n        this.setState(({ isOpen }) => {\n            return {\n                isOpen: !isOpen\n            };\n        });\n    };\n\n    onClose = () => {\n      this.setState({ isOpen: false });\n      this.props.clearForm();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <button onClick={this.handleClick}>Open</button>\n                <NewDecDialog \n                    isOpen={this.state.isOpen}\n                    onClose={this.onClose}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        clearForm: () => dispatch(clearDecoratorForm()),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { sampleText } from \"./constants\";\r\n\r\nconst initialState = { \r\n    openedTab: 0,\r\n    previewText: sampleText,\r\n    decKey: \"\",\r\n    group: \"\",\r\n    groupToCreate: \"\",\r\n    active: false,\r\n    styleNameEn: \"\",\r\n    styleNameDe: \"\",\r\n    styleNameRu: \"\",\r\n    styleNameFr: \"\",\r\n    styleNameFrCa: \"\",\r\n    styleNameEs: \"\",\r\n    wordStyleName: \"\",\r\n    softReturn: false,\r\n    indentationalLevel: \"\",\r\n    backspaceActionWithContent: \"merge\",\r\n    backspaceActionWithContentStyle: \"default\",\r\n    backspaceActionWithoutContent: \"apply_other_pd\",\r\n    backspaceActionWithoutContentStyle: \"default\",\r\n    returnActionNextSection: \"default\",\r\n    returnActionEmptySection: \"default\",\r\n    tabAction: \"\",\r\n    shiftTabAction: \"\",\r\n    isList: false,\r\n    listName: \"\",\r\n    orderLevel: \"\",\r\n    prefix: \"\",\r\n    suffix: \"\",\r\n    suffixDistance: \"0.25\",\r\n    magicTabs: false,\r\n    listType: \"unordered\",\r\n    listItem: \"bulletpoint\",\r\n    unicodeNumber: \"\",\r\n    unicodeChar: \"\",\r\n    numberingStyle: \"decimal\",\r\n    continueNumbering: false,\r\n    allowRestartNumbering: false,\r\n    includePreviousFrom: \"\",\r\n    sideNumber: false,\r\n    sideNumberFont: \"Roboto\",\r\n    sideNumberAlignment: \"center\",\r\n    sideNumberFontSize: \"12\",\r\n    sideNumberFontColor: \"FFF\",\r\n    sideNumberFillingColor: \"1E88E5\",\r\n    sideNumberWidth: \"20\",\r\n    sideNumberRadius: \"10\",\r\n    referenceGroup: \"\",\r\n    referenceGroupToCreate: \"\",\r\n    font: \"Roboto\",\r\n    alignment: \"left\",\r\n    fontSize: \"12\",\r\n    fontColorName: \"Black\",\r\n    fontColor: \"000\",\r\n    bold: false,\r\n    italic: false,\r\n    underlined: false,\r\n    stroke: false,\r\n    textTransform: \"none\",\r\n    verticalAlign: \"baseline\",\r\n    marginTop: \"6\",\r\n    marginBottom: \"6\",\r\n    firstRowIndent: \"0\",\r\n    otherRowsIndent: \"0\",\r\n    lineSpacing: \"1.15\",\r\n    customLineSpacing: \"\",\r\n    wordSpacing: \"0\",   \r\n    leftBorder: false,\r\n    rightBorder: false,\r\n    topBorder: false,\r\n    bottomBorder: false,\r\n    borderColorName: \"Red\",\r\n    borderColor: \"f00\",\r\n    borderThickness: \"2\",\r\n    borderType: \"solid\",\r\n    fillingColorName: \"\",\r\n    fillingColor: \"\",\r\n    connectToPrevious: false,\r\n    tocIndentation: \"\",\r\n    shortCutWin: \"\",\r\n    shortCutWinView: \"\",\r\n    shortCutMac: \"\",\r\n    shortCutMacView: \"\",\r\n};\r\n\r\nexport default initialState;","import { CHANGE_DECORATOR_FORM, CLEAR_DECORATOR_FORM } from \"../components/NewDecDialog/actions\";\r\nimport initialState from \"../components/NewDecDialog/initialState\";\r\n\r\nconst decoratorFormReducer = (state = initialState, action) =>  {\r\n    switch (action.type) {\r\n        case CHANGE_DECORATOR_FORM:\r\n            return { ...state, ...action.payload };\r\n        case CLEAR_DECORATOR_FORM:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default decoratorFormReducer;","import { createStore } from \"redux\";\r\nimport decoratorFormReducer from \"./reducers/decoratorFormReducer\";\r\n\r\nexport default createStore(\r\n    decoratorFormReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}